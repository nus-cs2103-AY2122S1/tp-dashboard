[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103-W14-4/tp/actions)","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"* tApp is a desktop app for managing contacts, optimized for use via a Command Line Interface (CLI).\u003cbr\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"  * for busy and forgetful TAs to help keep track of their tasks","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"  * keep track of student participation and attendance","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"* The project simulates an ongoing software project for a desktop application (called _tApp_) used for managing TA tasks and student progress.","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"  * It is **written in OOP fashion**.","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"* It is named `tApp` because it is created to be an app for TAs to use.","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"wanninglim"},"content":"* For the detailed documentation of this project, see the **[tApp Product Website](https://ay2122s1-cs2103-w14-4.github.io/tp/)**.","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"wanninglim":1,"-":5,"tzejit":8}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    archiveName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2018-04-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"wanninglim"},"content":"run {","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"wanninglim"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"wanninglim"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"wanninglim":4,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"### Tze Jit","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"\u003cimg src\u003d\"images/tzejit.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"[[github](https://github.com/tzejit)]","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"* Role: Team lead","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"* Responsibilities: UI","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"wanninglim"},"content":"### Lim Wan Ning","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"wanninglim"},"content":"\u003cimg src\u003d\"images/wanninglim.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"wanninglim"},"content":"[[github](http://github.com/wanninglim)]","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"wanninglim"},"content":"[[portfolio](team/wanninglim.md)]","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"wanninglim"},"content":"* Role: Documentation","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"weenleen"},"content":"### Ngai Win Lynn","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"weenleen"},"content":"\u003cimg src\u003d\"images/weenleen.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"weenleen"},"content":"[[github](http://github.com/weenleen)] [[portfolio](team/johndoe.md)]","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"weenleen"},"content":"* Role: Testing","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"weenleen"},"content":"* Responsibilities: Ensures the testing of the project is done properly and on time.","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"itsraveen"},"content":"### Raveen Prabhu","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"itsraveen"},"content":"\u003cimg src\u003d\"images/itsraveen.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"itsraveen"},"content":"[[github](http://github.com/itsraveen)]","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"itsraveen"},"content":"* Role: Code quality","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"itsraveen"},"content":"* Responsibilities: Looks after code quality, ensures adherence to coding standards, etc.","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"somekoreanboi"},"content":"### Yim Jaewon","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"somekoreanboi"},"content":"\u003cimg src\u003d\"images/somekoreanboi.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"somekoreanboi"},"content":"[[github](http://github.com/somekoreanboi)]","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"somekoreanboi"},"content":"* Role: Deliverables and deadlines","lastModifiedDate":"2021-09-20"},{"lineNumber":60,"author":{"gitId":"somekoreanboi"},"content":"* Responsibilities: Ensure project deliverables are done on time and in the right format.","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"weenleen":5,"itsraveen":5,"wanninglim":5,"somekoreanboi":5,"-":35,"tzejit":5}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"* Format of this DG is based on [AB3 DG](https://se-education.org/addressbook-level3/DeveloperGuide.html)","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"weenleen"},"content":"This product is for CS2103/T TAs who are:","lastModifiedDate":"2021-09-27"},{"lineNumber":261,"author":{"gitId":"weenleen"},"content":"* Familiar with command line and code","lastModifiedDate":"2021-09-27"},{"lineNumber":262,"author":{"gitId":"weenleen"},"content":"* Worried about using too many applications to manage his students\u0027 projects and grades.","lastModifiedDate":"2021-09-27"},{"lineNumber":263,"author":{"gitId":"weenleen"},"content":"* Able to tolerate a steep learning curve","lastModifiedDate":"2021-09-27"},{"lineNumber":264,"author":{"gitId":"weenleen"},"content":"* Disorganized, forgetful","lastModifiedDate":"2021-09-27"},{"lineNumber":265,"author":{"gitId":"weenleen"},"content":"* Busy with other school projects and modules","lastModifiedDate":"2021-09-27"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":268,"author":{"gitId":"weenleen"},"content":"**Value proposition**:","lastModifiedDate":"2021-09-27"},{"lineNumber":269,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":270,"author":{"gitId":"weenleen"},"content":"TAs are required to access different platforms (LumiNUS, GitHub \u0026 CS2103/T website) and manage multiple groups and students.","lastModifiedDate":"2021-09-27"},{"lineNumber":271,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":272,"author":{"gitId":"weenleen"},"content":"This application aims to integrate different tools into a centralised platform that can improve a TA’s efficiency. It helps to ensure instructors complete all tasks on the relevant platforms by stipulated deadlines.","lastModifiedDate":"2021-09-27"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"| Priority | As a …​          | I want to …​                                      | So that I can…​                                                     |","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"wanninglim"},"content":"| -------- | ------------------- | ---------------------------------------------------- | ---------------------------------------------------------------------- |","lastModifiedDate":"2021-09-26"},{"lineNumber":281,"author":{"gitId":"wanninglim"},"content":"| `* * *`  | user                | add a task with time                                 | be reminded of when certain tasks are due                              |","lastModifiedDate":"2021-09-26"},{"lineNumber":282,"author":{"gitId":"wanninglim"},"content":"| `* * *`  | user                | delete tasks                                         | not be cluttered with completed/wrong tasks                            |","lastModifiedDate":"2021-09-26"},{"lineNumber":283,"author":{"gitId":"wanninglim"},"content":"| `* * *`  | user                | mark students\u0027 attendance                            | keep track of who is present                                           |","lastModifiedDate":"2021-09-26"},{"lineNumber":284,"author":{"gitId":"wanninglim"},"content":"| `* * *`  | user                | mark tasks as complete                               | know which tasks have already been done                                |","lastModifiedDate":"2021-09-26"},{"lineNumber":285,"author":{"gitId":"wanninglim"},"content":"| `* * *`  | user                | view my todo list                                    | know what tasks I have to do                                           |","lastModifiedDate":"2021-09-26"},{"lineNumber":286,"author":{"gitId":"wanninglim"},"content":"| `* * *`  | user                | view my student list                                 | know what students I have                                              |","lastModifiedDate":"2021-09-26"},{"lineNumber":287,"author":{"gitId":"wanninglim"},"content":"| `* * *`  | user                | add a student contact                                | add my student into the list                                           |","lastModifiedDate":"2021-09-26"},{"lineNumber":288,"author":{"gitId":"wanninglim"},"content":"| `* * *`  | user                | delete a student contact                             | remove my student if he quits the course                               |","lastModifiedDate":"2021-09-26"},{"lineNumber":289,"author":{"gitId":"wanninglim"},"content":"| `* * *`  | user                | store my data in a file                              | easily export data from the application                                |","lastModifiedDate":"2021-09-26"},{"lineNumber":290,"author":{"gitId":"wanninglim"},"content":"| `* * *`  | user                | add different links for each student/group contact   | easily access their Github, email etc                                  |","lastModifiedDate":"2021-09-26"},{"lineNumber":291,"author":{"gitId":"wanninglim"},"content":"| `* * *`  | user                | record participation during tutorials                | accurately award participation marks to students                       |","lastModifiedDate":"2021-09-26"},{"lineNumber":292,"author":{"gitId":"wanninglim"},"content":"| `* * *`  | user                | add descriptions to the tasks                        | see the extra detail pertaining to the task                            |","lastModifiedDate":"2021-09-26"},{"lineNumber":293,"author":{"gitId":"wanninglim"},"content":"| `* *`    | user                | set my current directory to either students or tasks | add students/tasks more easily                                         |","lastModifiedDate":"2021-09-26"},{"lineNumber":294,"author":{"gitId":"wanninglim"},"content":"| `* *`    | user                | access the ‘help’ page with all available commands   | refer to instructions when I forget how to use tApp                    |","lastModifiedDate":"2021-09-26"},{"lineNumber":295,"author":{"gitId":"wanninglim"},"content":"| `* *`    | user                | allocate students to different groups                | track their progress based on their groups                             |","lastModifiedDate":"2021-09-26"},{"lineNumber":296,"author":{"gitId":"wanninglim"},"content":"| `* *`    | user                | import data from CSV files                           | get started with the app quickly                                       |","lastModifiedDate":"2021-09-26"},{"lineNumber":297,"author":{"gitId":"wanninglim"},"content":"| `* *`    | user                | edit tasks                                           | correct any errors I made without deleting and creating a new task     |","lastModifiedDate":"2021-09-26"},{"lineNumber":298,"author":{"gitId":"wanninglim"},"content":"| `* *`    | new user            | search for a student                                 | quickly access all information related to the student                  |","lastModifiedDate":"2021-09-26"},{"lineNumber":299,"author":{"gitId":"itsraveen"},"content":"| `* *`    | user                | purge all current data                               | get rid of sample data I used for exploring the app                    |","lastModifiedDate":"2021-09-28"},{"lineNumber":300,"author":{"gitId":"itsraveen"},"content":"| `* *`    | user                | sort groups \u0026 students by their tP / iP progress     | see who needs help                                                     |","lastModifiedDate":"2021-09-28"},{"lineNumber":301,"author":{"gitId":"itsraveen"},"content":"| `* *`    | expert user         | sort tasks by earliest taskDate                      | know what tasks need to be completed urgently                          |","lastModifiedDate":"2021-10-19"},{"lineNumber":302,"author":{"gitId":"itsraveen"},"content":"| `* *`    | user                | specify default tasks to add when adding students    | I do not need to manually add the same tasks                           |","lastModifiedDate":"2021-09-28"},{"lineNumber":303,"author":{"gitId":"itsraveen"},"content":"| `* *`    | user                | create tags to be added to tasks                     | easily access the links related to the task                            |","lastModifiedDate":"2021-09-28"},{"lineNumber":304,"author":{"gitId":"itsraveen"},"content":"| `* *`    | user                | tag students to specific tasks                       | keep track of students related to a task                               |","lastModifiedDate":"2021-09-28"},{"lineNumber":305,"author":{"gitId":"itsraveen"},"content":"| `* *`    | user                | create events as a type of task                      | keep track of tasks that occur at a specified time                     |","lastModifiedDate":"2021-09-28"},{"lineNumber":306,"author":{"gitId":"itsraveen"},"content":"| `* *`    | expert user         | view the changes I made to my todo list              | recover tasks that are accidentally deleted                            |","lastModifiedDate":"2021-09-28"},{"lineNumber":307,"author":{"gitId":"itsraveen"},"content":"| `* *`    | user                | set automated reminders upon startup                 | not forget any task                                                    |","lastModifiedDate":"2021-09-28"},{"lineNumber":308,"author":{"gitId":"itsraveen"},"content":"| `*`      | expert user         | create command line shortcuts to access tasks        | easily access data and save time                                       |","lastModifiedDate":"2021-09-28"},{"lineNumber":309,"author":{"gitId":"itsraveen"},"content":"| `*`      | user                | set recurring tasks                                  | not create tasks that I have to complete regularly                     |","lastModifiedDate":"2021-09-28"},{"lineNumber":310,"author":{"gitId":"itsraveen"},"content":"| `*`      | user                | customise the order of the menu                      | easily access the features I use most                                  |","lastModifiedDate":"2021-09-28"},{"lineNumber":311,"author":{"gitId":"itsraveen"},"content":"| `*`      | user                | broadcasts task to a certain group                   | efficiently add new module wide tasks                                  |","lastModifiedDate":"2021-09-28"},{"lineNumber":312,"author":{"gitId":"itsraveen"},"content":"| `*`      | user                | assign priority levels for tasks                     | what tasks require my earliest attention                               |","lastModifiedDate":"2021-09-28"},{"lineNumber":313,"author":{"gitId":"itsraveen"},"content":"| `*`      | user                | string multiple commands into a single line          | manage my tasks more efficiently                                       |","lastModifiedDate":"2021-09-28"},{"lineNumber":314,"author":{"gitId":"itsraveen"},"content":"| `*`      | user                | view both my students’ tasks and my own tasks        | be informed of the week’s progress                                     |","lastModifiedDate":"2021-09-28"},{"lineNumber":315,"author":{"gitId":"itsraveen"},"content":"| `*`      | expert user         | create custom commands                               | make managing tasks more convenient, and more tailored to my needs     |","lastModifiedDate":"2021-09-28"},{"lineNumber":316,"author":{"gitId":"itsraveen"},"content":"| `*`      | user                | filter the CS2103/T textbook                         | refresh my memory on concepts I forgot                                 |","lastModifiedDate":"2021-09-28"},{"lineNumber":317,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"tzejit"},"content":"(For all use cases below, the **System** is `tApp` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-09-26"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"tzejit"},"content":"**Use case: UC1 - Set current directory**","lastModifiedDate":"2021-09-26"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"tzejit"},"content":"1.  User requests to go back to the welcome page to choose either students or tasks directory again.","lastModifiedDate":"2021-09-26"},{"lineNumber":330,"author":{"gitId":"tzejit"},"content":"2.  tApp navigates into the welcome page and displays the exit confirm message.","lastModifiedDate":"2021-09-26"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"tzejit"},"content":"* 1a.  The user hasn’t entered either the student or task management directory.","lastModifiedDate":"2021-09-26"},{"lineNumber":337,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":338,"author":{"gitId":"tzejit"},"content":"  Use case ends.","lastModifiedDate":"2021-09-26"},{"lineNumber":339,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":340,"author":{"gitId":"itsraveen"},"content":"**Use case: UC2 - View student list**","lastModifiedDate":"2021-10-25"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":342,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-09-26"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":344,"author":{"gitId":"tzejit"},"content":"1.  User requests to navigate to the student directory (UC1)","lastModifiedDate":"2021-09-26"},{"lineNumber":345,"author":{"gitId":"tzejit"},"content":"2.  tApp navigates into the student directory","lastModifiedDate":"2021-09-26"},{"lineNumber":346,"author":{"gitId":"tzejit"},"content":"3.  tApp displays the list of student contacts","lastModifiedDate":"2021-09-26"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2021-09-26"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":350,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-09-26"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":352,"author":{"gitId":"tzejit"},"content":"* 1a. User is already in the student directory.","lastModifiedDate":"2021-09-26"},{"lineNumber":353,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":354,"author":{"gitId":"tzejit"},"content":"  Use case resumes at step 3.","lastModifiedDate":"2021-09-26"},{"lineNumber":355,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":356,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"tzejit"},"content":"**Use case: UC3 - Add a student contact**","lastModifiedDate":"2021-09-26"},{"lineNumber":361,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":362,"author":{"gitId":"tzejit"},"content":"**MSS**","lastModifiedDate":"2021-09-26"},{"lineNumber":363,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":364,"author":{"gitId":"tzejit"},"content":"1.  User requests to enter student directory (UC1)","lastModifiedDate":"2021-09-26"},{"lineNumber":365,"author":{"gitId":"tzejit"},"content":"2.  tApp navigates to student directory","lastModifiedDate":"2021-09-26"},{"lineNumber":366,"author":{"gitId":"tzejit"},"content":"3.  User requests to add a student contact","lastModifiedDate":"2021-09-26"},{"lineNumber":367,"author":{"gitId":"tzejit"},"content":"4.  tApp adds the student","lastModifiedDate":"2021-09-26"},{"lineNumber":368,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":369,"author":{"gitId":"tzejit"},"content":"    Use case ends.","lastModifiedDate":"2021-09-26"},{"lineNumber":370,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":371,"author":{"gitId":"tzejit"},"content":"**Extensions**","lastModifiedDate":"2021-09-26"},{"lineNumber":372,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":373,"author":{"gitId":"tzejit"},"content":"* 3a. No name is specified.","lastModifiedDate":"2021-09-26"},{"lineNumber":374,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":375,"author":{"gitId":"tzejit"},"content":"    * 3a1. tApp shows an error message.","lastModifiedDate":"2021-09-26"},{"lineNumber":376,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":377,"author":{"gitId":"tzejit"},"content":"      Use case ends.","lastModifiedDate":"2021-09-26"},{"lineNumber":378,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":379,"author":{"gitId":"tzejit"},"content":"**Use case: UC4 - Mark student as present**","lastModifiedDate":"2021-09-26"},{"lineNumber":380,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":381,"author":{"gitId":"tzejit"},"content":"**MSS**","lastModifiedDate":"2021-09-26"},{"lineNumber":382,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":383,"author":{"gitId":"tzejit"},"content":"1.  User requests to view students (UC2)","lastModifiedDate":"2021-09-26"},{"lineNumber":384,"author":{"gitId":"tzejit"},"content":"2.  tApp shows a list of persons","lastModifiedDate":"2021-09-26"},{"lineNumber":385,"author":{"gitId":"tzejit"},"content":"3.  User requests to mark a specific person as present in the list","lastModifiedDate":"2021-09-26"},{"lineNumber":386,"author":{"gitId":"tzejit"},"content":"4.  tApp marks the person as present","lastModifiedDate":"2021-09-26"},{"lineNumber":387,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":388,"author":{"gitId":"tzejit"},"content":"    Use case ends.","lastModifiedDate":"2021-09-26"},{"lineNumber":389,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":390,"author":{"gitId":"tzejit"},"content":"**Extensions**","lastModifiedDate":"2021-09-26"},{"lineNumber":391,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":392,"author":{"gitId":"tzejit"},"content":"* 2a. The student list is empty.","lastModifiedDate":"2021-09-26"},{"lineNumber":393,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":394,"author":{"gitId":"tzejit"},"content":"  Use case ends.","lastModifiedDate":"2021-09-26"},{"lineNumber":395,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":396,"author":{"gitId":"tzejit"},"content":"* 2b. User requests to mark a specific person as absent in the list.","lastModifiedDate":"2021-09-26"},{"lineNumber":397,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":398,"author":{"gitId":"tzejit"},"content":"    * 2b1. tApp marks the person as absent.","lastModifiedDate":"2021-09-26"},{"lineNumber":399,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":400,"author":{"gitId":"tzejit"},"content":"      Use case ends.","lastModifiedDate":"2021-09-26"},{"lineNumber":401,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":402,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"tzejit"},"content":"    * 3a1. tApp shows an error message.","lastModifiedDate":"2021-09-26"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"tzejit"},"content":"**Use case: UC5 - Delete a student contact**","lastModifiedDate":"2021-09-26"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":410,"author":{"gitId":"tzejit"},"content":"**MSS**","lastModifiedDate":"2021-09-26"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":412,"author":{"gitId":"tzejit"},"content":"1.  User requests to view students (UC2)","lastModifiedDate":"2021-09-26"},{"lineNumber":413,"author":{"gitId":"tzejit"},"content":"2.  tApp shows a list of persons","lastModifiedDate":"2021-09-26"},{"lineNumber":414,"author":{"gitId":"tzejit"},"content":"3.  User requests to delete a specific student in the list","lastModifiedDate":"2021-09-26"},{"lineNumber":415,"author":{"gitId":"tzejit"},"content":"4.  tApp deletes the person","lastModifiedDate":"2021-09-26"},{"lineNumber":416,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":417,"author":{"gitId":"tzejit"},"content":"    Use case ends.","lastModifiedDate":"2021-09-26"},{"lineNumber":418,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":419,"author":{"gitId":"tzejit"},"content":"**Extensions**","lastModifiedDate":"2021-09-26"},{"lineNumber":420,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":421,"author":{"gitId":"tzejit"},"content":"* 2a. The student list is empty.","lastModifiedDate":"2021-09-26"},{"lineNumber":422,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":423,"author":{"gitId":"tzejit"},"content":"  Use case ends.","lastModifiedDate":"2021-09-26"},{"lineNumber":424,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":425,"author":{"gitId":"tzejit"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-09-26"},{"lineNumber":426,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":427,"author":{"gitId":"tzejit"},"content":"    * 3a1. tApp shows an error message.","lastModifiedDate":"2021-09-26"},{"lineNumber":428,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":429,"author":{"gitId":"tzejit"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-26"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":432,"author":{"gitId":"somekoreanboi"},"content":"**Use case: UC6 - View task list**","lastModifiedDate":"2021-09-29"},{"lineNumber":433,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":434,"author":{"gitId":"somekoreanboi"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":435,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":436,"author":{"gitId":"somekoreanboi"},"content":"1.  User requests to view the list of tasks","lastModifiedDate":"2021-09-29"},{"lineNumber":437,"author":{"gitId":"somekoreanboi"},"content":"2.  tApp displays all the tasks currently in the list","lastModifiedDate":"2021-09-29"},{"lineNumber":438,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":439,"author":{"gitId":"somekoreanboi"},"content":"    Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":440,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":441,"author":{"gitId":"somekoreanboi"},"content":"**Extensions**","lastModifiedDate":"2021-09-29"},{"lineNumber":442,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":443,"author":{"gitId":"somekoreanboi"},"content":"* 2a. The task list is empty.","lastModifiedDate":"2021-09-29"},{"lineNumber":444,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":445,"author":{"gitId":"somekoreanboi"},"content":"    * 2a1. tApp displays message that there are no tasks","lastModifiedDate":"2021-09-29"},{"lineNumber":446,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":447,"author":{"gitId":"somekoreanboi"},"content":"      Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":448,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":449,"author":{"gitId":"weenleen"},"content":"**Use case: UC7 - Add a todo task**","lastModifiedDate":"2021-10-22"},{"lineNumber":450,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":451,"author":{"gitId":"somekoreanboi"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":452,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":453,"author":{"gitId":"weenleen"},"content":"1.  User requests to create a todo task","lastModifiedDate":"2021-10-22"},{"lineNumber":454,"author":{"gitId":"weenleen"},"content":"2.  tApp creates the todo and stores it in the task list","lastModifiedDate":"2021-10-22"},{"lineNumber":455,"author":{"gitId":"somekoreanboi"},"content":"3.  tApp displays the task that was just created","lastModifiedDate":"2021-09-29"},{"lineNumber":456,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":457,"author":{"gitId":"somekoreanboi"},"content":"    Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":458,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":459,"author":{"gitId":"somekoreanboi"},"content":"**Extensions**","lastModifiedDate":"2021-09-29"},{"lineNumber":460,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":461,"author":{"gitId":"itsraveen"},"content":"* 1a. The task name is empty.","lastModifiedDate":"2021-10-22"},{"lineNumber":462,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":463,"author":{"gitId":"somekoreanboi"},"content":"    * 1a1. tApp displays an error message stating that the task name is invalid","lastModifiedDate":"2021-09-29"},{"lineNumber":464,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":465,"author":{"gitId":"somekoreanboi"},"content":"      Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":466,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":467,"author":{"gitId":"itsraveen"},"content":"* 1b. The command format is incorrect.","lastModifiedDate":"2021-10-22"},{"lineNumber":468,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":469,"author":{"gitId":"somekoreanboi"},"content":"    * 1b1. tApp displays an error message requesting the user to follow the correct format","lastModifiedDate":"2021-09-29"},{"lineNumber":470,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":471,"author":{"gitId":"somekoreanboi"},"content":"      Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":472,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":473,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":474,"author":{"gitId":"itsraveen"},"content":"**Use case: UC8 - Add a task with a specified deadliine**","lastModifiedDate":"2021-10-25"},{"lineNumber":475,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":476,"author":{"gitId":"weenleen"},"content":"**MSS**","lastModifiedDate":"2021-10-22"},{"lineNumber":477,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":478,"author":{"gitId":"weenleen"},"content":"1.  User requests to create a deadline or event task with the specified taskDate","lastModifiedDate":"2021-10-22"},{"lineNumber":479,"author":{"gitId":"weenleen"},"content":"2.  tApp creates the task and stores it in the task list","lastModifiedDate":"2021-10-22"},{"lineNumber":480,"author":{"gitId":"weenleen"},"content":"3.  tApp displays the task that was just created","lastModifiedDate":"2021-10-22"},{"lineNumber":481,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":482,"author":{"gitId":"weenleen"},"content":"    Use case ends.","lastModifiedDate":"2021-10-22"},{"lineNumber":483,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":484,"author":{"gitId":"weenleen"},"content":"**Extensions**","lastModifiedDate":"2021-10-22"},{"lineNumber":485,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":486,"author":{"gitId":"weenleen"},"content":"* 1a. The task name is empty.","lastModifiedDate":"2021-10-22"},{"lineNumber":487,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":488,"author":{"gitId":"weenleen"},"content":"    * 1a1. tApp displays an error message stating that the task name is invalid","lastModifiedDate":"2021-10-22"},{"lineNumber":489,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":490,"author":{"gitId":"weenleen"},"content":"      Use case ends.","lastModifiedDate":"2021-10-22"},{"lineNumber":491,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":492,"author":{"gitId":"weenleen"},"content":"* 1b. The format of the taskDate is incorrect.","lastModifiedDate":"2021-10-22"},{"lineNumber":493,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":494,"author":{"gitId":"weenleen"},"content":"    * 1b1. tApp displays an error message requesting the user to follow the correct taskDate format","lastModifiedDate":"2021-10-22"},{"lineNumber":495,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":496,"author":{"gitId":"weenleen"},"content":"      Use case ends.","lastModifiedDate":"2021-10-22"},{"lineNumber":497,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":498,"author":{"gitId":"itsraveen"},"content":"**Use case: UC9 - Add a task with a specified taskDate**","lastModifiedDate":"2021-10-25"},{"lineNumber":499,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":500,"author":{"gitId":"itsraveen"},"content":"**MSS**","lastModifiedDate":"2021-10-25"},{"lineNumber":501,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":502,"author":{"gitId":"itsraveen"},"content":"1.  User requests to create an event with the specified taskDate","lastModifiedDate":"2021-10-25"},{"lineNumber":503,"author":{"gitId":"itsraveen"},"content":"2.  tApp creates the task and stores it in the task list","lastModifiedDate":"2021-10-25"},{"lineNumber":504,"author":{"gitId":"itsraveen"},"content":"3.  tApp displays the task that was just created","lastModifiedDate":"2021-10-25"},{"lineNumber":505,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":506,"author":{"gitId":"itsraveen"},"content":"    Use case ends.","lastModifiedDate":"2021-10-25"},{"lineNumber":507,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":508,"author":{"gitId":"itsraveen"},"content":"**Extensions**","lastModifiedDate":"2021-10-25"},{"lineNumber":509,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":510,"author":{"gitId":"itsraveen"},"content":"* 1a. The task name is empty.","lastModifiedDate":"2021-10-25"},{"lineNumber":511,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":512,"author":{"gitId":"itsraveen"},"content":"    * 1a1. tApp displays an error message stating that the task name is invalid","lastModifiedDate":"2021-10-25"},{"lineNumber":513,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":514,"author":{"gitId":"itsraveen"},"content":"      Use case ends.","lastModifiedDate":"2021-10-25"},{"lineNumber":515,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":516,"author":{"gitId":"itsraveen"},"content":"* 1b. The format of the taskDate is incorrect.","lastModifiedDate":"2021-10-25"},{"lineNumber":517,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":518,"author":{"gitId":"itsraveen"},"content":"    * 1b1. tApp displays an error message requesting the user to follow the correct taskDate format","lastModifiedDate":"2021-10-25"},{"lineNumber":519,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":520,"author":{"gitId":"itsraveen"},"content":"      Use case ends.","lastModifiedDate":"2021-10-25"},{"lineNumber":521,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":522,"author":{"gitId":"itsraveen"},"content":"**Use case: UC10 - Delete a task**","lastModifiedDate":"2021-10-25"},{"lineNumber":523,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":524,"author":{"gitId":"somekoreanboi"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":525,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":526,"author":{"gitId":"somekoreanboi"},"content":"1.  User requests to view their list of tasks","lastModifiedDate":"2021-09-29"},{"lineNumber":527,"author":{"gitId":"somekoreanboi"},"content":"2.  tApp displays all the tasks currently in the list","lastModifiedDate":"2021-09-29"},{"lineNumber":528,"author":{"gitId":"somekoreanboi"},"content":"3.  User requests to delete a specific task from the list of tasks","lastModifiedDate":"2021-09-29"},{"lineNumber":529,"author":{"gitId":"somekoreanboi"},"content":"4.  tApp deletes the task","lastModifiedDate":"2021-09-29"},{"lineNumber":530,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":531,"author":{"gitId":"somekoreanboi"},"content":"    Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":532,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":533,"author":{"gitId":"somekoreanboi"},"content":"**Extensions**","lastModifiedDate":"2021-09-29"},{"lineNumber":534,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":535,"author":{"gitId":"somekoreanboi"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-29"},{"lineNumber":536,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":537,"author":{"gitId":"somekoreanboi"},"content":"  Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":538,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":539,"author":{"gitId":"somekoreanboi"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-09-29"},{"lineNumber":540,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":541,"author":{"gitId":"somekoreanboi"},"content":"    * 2a1. tApp shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":542,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":543,"author":{"gitId":"somekoreanboi"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-29"},{"lineNumber":544,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":545,"author":{"gitId":"itsraveen"},"content":"**Use case: UC11 - Mark a task as done**","lastModifiedDate":"2021-10-25"},{"lineNumber":546,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":547,"author":{"gitId":"somekoreanboi"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":548,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":549,"author":{"gitId":"somekoreanboi"},"content":"1.  User requests to view their list of tasks","lastModifiedDate":"2021-09-29"},{"lineNumber":550,"author":{"gitId":"somekoreanboi"},"content":"2.  tApp displays all the tasks currently in the list","lastModifiedDate":"2021-09-29"},{"lineNumber":551,"author":{"gitId":"somekoreanboi"},"content":"3.  User requests to mark a specific task as done","lastModifiedDate":"2021-09-29"},{"lineNumber":552,"author":{"gitId":"somekoreanboi"},"content":"4.  tApp marks the task as done","lastModifiedDate":"2021-09-29"},{"lineNumber":553,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":554,"author":{"gitId":"somekoreanboi"},"content":"    Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":555,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":556,"author":{"gitId":"somekoreanboi"},"content":"**Extensions**","lastModifiedDate":"2021-09-29"},{"lineNumber":557,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":558,"author":{"gitId":"somekoreanboi"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-29"},{"lineNumber":559,"author":{"gitId":"somekoreanboi"},"content":"      Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":560,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":561,"author":{"gitId":"somekoreanboi"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-09-29"},{"lineNumber":562,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":563,"author":{"gitId":"somekoreanboi"},"content":"    * 3a1.  tApp shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":564,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":565,"author":{"gitId":"somekoreanboi"},"content":"      Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":566,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":567,"author":{"gitId":"itsraveen"},"content":"**Use case: UC12 - Mark student as participated**","lastModifiedDate":"2021-10-25"},{"lineNumber":568,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":569,"author":{"gitId":"wanninglim"},"content":"**MSS**","lastModifiedDate":"2021-10-18"},{"lineNumber":570,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":571,"author":{"gitId":"wanninglim"},"content":"1.  User requests to view students (UC2)","lastModifiedDate":"2021-10-18"},{"lineNumber":572,"author":{"gitId":"wanninglim"},"content":"2.  tApp shows a list of students","lastModifiedDate":"2021-10-18"},{"lineNumber":573,"author":{"gitId":"wanninglim"},"content":"3.  User requests to mark a specific student as participated in the list","lastModifiedDate":"2021-10-18"},{"lineNumber":574,"author":{"gitId":"wanninglim"},"content":"4.  tApp marks the person as participated","lastModifiedDate":"2021-10-18"},{"lineNumber":575,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":576,"author":{"gitId":"wanninglim"},"content":"    Use case ends.","lastModifiedDate":"2021-10-18"},{"lineNumber":577,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":578,"author":{"gitId":"wanninglim"},"content":"**Extensions**","lastModifiedDate":"2021-10-18"},{"lineNumber":579,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":580,"author":{"gitId":"wanninglim"},"content":"* 2a. The student list is empty.","lastModifiedDate":"2021-10-18"},{"lineNumber":581,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":582,"author":{"gitId":"wanninglim"},"content":"  Use case ends.","lastModifiedDate":"2021-10-18"},{"lineNumber":583,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":584,"author":{"gitId":"wanninglim"},"content":"* 2b. User requests to mark a specific person as not participated in the list.","lastModifiedDate":"2021-10-18"},{"lineNumber":585,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":586,"author":{"gitId":"wanninglim"},"content":"    * 2b1. tApp marks the person as not participated.","lastModifiedDate":"2021-10-18"},{"lineNumber":587,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":588,"author":{"gitId":"wanninglim"},"content":"      Use case ends.","lastModifiedDate":"2021-10-18"},{"lineNumber":589,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":590,"author":{"gitId":"wanninglim"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-10-18"},{"lineNumber":591,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":592,"author":{"gitId":"wanninglim"},"content":"    * 3a1. tApp shows an error message.","lastModifiedDate":"2021-10-18"},{"lineNumber":593,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":594,"author":{"gitId":"wanninglim"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-10-18"},{"lineNumber":595,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":596,"author":{"gitId":"itsraveen"},"content":"**Use case: UC13 - Clear student list**","lastModifiedDate":"2021-10-25"},{"lineNumber":597,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":598,"author":{"gitId":"wanninglim"},"content":"**MSS**","lastModifiedDate":"2021-10-19"},{"lineNumber":599,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":600,"author":{"gitId":"wanninglim"},"content":"1.  User requests to view students (UC2)","lastModifiedDate":"2021-10-19"},{"lineNumber":601,"author":{"gitId":"wanninglim"},"content":"2.  tApp shows a list of students","lastModifiedDate":"2021-10-19"},{"lineNumber":602,"author":{"gitId":"wanninglim"},"content":"3.  User requests clear the student list","lastModifiedDate":"2021-10-19"},{"lineNumber":603,"author":{"gitId":"wanninglim"},"content":"4.  tApp clears the student list","lastModifiedDate":"2021-10-19"},{"lineNumber":604,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":605,"author":{"gitId":"wanninglim"},"content":"    Use case ends.","lastModifiedDate":"2021-10-19"},{"lineNumber":606,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":607,"author":{"gitId":"wanninglim"},"content":"**Extensions**","lastModifiedDate":"2021-10-19"},{"lineNumber":608,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":609,"author":{"gitId":"wanninglim"},"content":"* 2a. The student list is empty.","lastModifiedDate":"2021-10-19"},{"lineNumber":610,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":611,"author":{"gitId":"wanninglim"},"content":"  Use case ends.","lastModifiedDate":"2021-10-19"},{"lineNumber":612,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":613,"author":{"gitId":"weenleen"},"content":"**Use case: UC13 - View group list**","lastModifiedDate":"2021-10-22"},{"lineNumber":614,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":615,"author":{"gitId":"tzejit"},"content":"**MSS**","lastModifiedDate":"2021-10-20"},{"lineNumber":616,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":617,"author":{"gitId":"tzejit"},"content":"1.  User requests to view the list of groups","lastModifiedDate":"2021-10-20"},{"lineNumber":618,"author":{"gitId":"tzejit"},"content":"2.  tApp displays all the groups currently in the list","lastModifiedDate":"2021-10-20"},{"lineNumber":619,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":620,"author":{"gitId":"tzejit"},"content":"    Use case ends.","lastModifiedDate":"2021-10-20"},{"lineNumber":621,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":622,"author":{"gitId":"tzejit"},"content":"**Extensions**","lastModifiedDate":"2021-10-20"},{"lineNumber":623,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":624,"author":{"gitId":"tzejit"},"content":"* 2a. The group list is empty.","lastModifiedDate":"2021-10-20"},{"lineNumber":625,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":626,"author":{"gitId":"tzejit"},"content":"    * 2a1. tApp displays an empty list","lastModifiedDate":"2021-10-20"},{"lineNumber":627,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":628,"author":{"gitId":"tzejit"},"content":"      Use case ends.","lastModifiedDate":"2021-10-20"},{"lineNumber":629,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":630,"author":{"gitId":"weenleen"},"content":"**Use case: UC14 - Add a group**","lastModifiedDate":"2021-10-22"},{"lineNumber":631,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":632,"author":{"gitId":"tzejit"},"content":"**MSS**","lastModifiedDate":"2021-10-20"},{"lineNumber":633,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":634,"author":{"gitId":"tzejit"},"content":"1.  User requests to create a group with the specified name","lastModifiedDate":"2021-10-20"},{"lineNumber":635,"author":{"gitId":"tzejit"},"content":"2.  tApp creates the group and stores it in the group list","lastModifiedDate":"2021-10-20"},{"lineNumber":636,"author":{"gitId":"tzejit"},"content":"3.  tApp displays the group that was just created","lastModifiedDate":"2021-10-20"},{"lineNumber":637,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":638,"author":{"gitId":"tzejit"},"content":"    Use case ends.","lastModifiedDate":"2021-10-20"},{"lineNumber":639,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":640,"author":{"gitId":"tzejit"},"content":"**Extensions**","lastModifiedDate":"2021-10-20"},{"lineNumber":641,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":642,"author":{"gitId":"tzejit"},"content":"* 1a. The group name is empty.","lastModifiedDate":"2021-10-20"},{"lineNumber":643,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":644,"author":{"gitId":"tzejit"},"content":"    * 1a1. tApp displays an error message stating that the group name is invalid and to follow the correct format","lastModifiedDate":"2021-10-20"},{"lineNumber":645,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":646,"author":{"gitId":"tzejit"},"content":"      Use case ends.","lastModifiedDate":"2021-10-20"},{"lineNumber":647,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":648,"author":{"gitId":"tzejit"},"content":"* 1b. The group name is invalid.","lastModifiedDate":"2021-10-20"},{"lineNumber":649,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":650,"author":{"gitId":"tzejit"},"content":"    * 1b1. tApp displays an error message stating that the group name is invalid and to follow the correct format","lastModifiedDate":"2021-10-20"},{"lineNumber":651,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":652,"author":{"gitId":"tzejit"},"content":"      Use case ends.","lastModifiedDate":"2021-10-20"},{"lineNumber":653,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":654,"author":{"gitId":"weenleen"},"content":"**Use case: UC15 - Delete a group**","lastModifiedDate":"2021-10-22"},{"lineNumber":655,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":656,"author":{"gitId":"tzejit"},"content":"**MSS**","lastModifiedDate":"2021-10-20"},{"lineNumber":657,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":658,"author":{"gitId":"tzejit"},"content":"1.  User requests to view their list of groups","lastModifiedDate":"2021-10-20"},{"lineNumber":659,"author":{"gitId":"tzejit"},"content":"2.  tApp displays all the groups currently in the list","lastModifiedDate":"2021-10-20"},{"lineNumber":660,"author":{"gitId":"tzejit"},"content":"3.  User requests to delete a specific group from the list of groups","lastModifiedDate":"2021-10-20"},{"lineNumber":661,"author":{"gitId":"tzejit"},"content":"4.  tApp deletes the group","lastModifiedDate":"2021-10-20"},{"lineNumber":662,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":663,"author":{"gitId":"tzejit"},"content":"    Use case ends.","lastModifiedDate":"2021-10-20"},{"lineNumber":664,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":665,"author":{"gitId":"tzejit"},"content":"**Extensions**","lastModifiedDate":"2021-10-20"},{"lineNumber":666,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":667,"author":{"gitId":"tzejit"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-10-20"},{"lineNumber":668,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":669,"author":{"gitId":"tzejit"},"content":"  Use case ends.","lastModifiedDate":"2021-10-20"},{"lineNumber":670,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":671,"author":{"gitId":"tzejit"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-10-20"},{"lineNumber":672,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":673,"author":{"gitId":"tzejit"},"content":"    * 3a1. tApp shows an error message.","lastModifiedDate":"2021-10-20"},{"lineNumber":674,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":675,"author":{"gitId":"tzejit"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-10-20"},{"lineNumber":676,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":677,"author":{"gitId":"weenleen"},"content":"**Use case: UC16 - Add a student to a group**","lastModifiedDate":"2021-10-22"},{"lineNumber":678,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":679,"author":{"gitId":"tzejit"},"content":"**MSS**","lastModifiedDate":"2021-10-20"},{"lineNumber":680,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":681,"author":{"gitId":"tzejit"},"content":"1.  User requests to view their list of students","lastModifiedDate":"2021-10-20"},{"lineNumber":682,"author":{"gitId":"tzejit"},"content":"2.  tApp displays all the students currently in the list","lastModifiedDate":"2021-10-20"},{"lineNumber":683,"author":{"gitId":"tzejit"},"content":"3.  User requests to add a specific student from the list of students to a specific group from the list of groups","lastModifiedDate":"2021-10-20"},{"lineNumber":684,"author":{"gitId":"tzejit"},"content":"4.  tApp adds the student to the group","lastModifiedDate":"2021-10-20"},{"lineNumber":685,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":686,"author":{"gitId":"tzejit"},"content":"    Use case ends.","lastModifiedDate":"2021-10-20"},{"lineNumber":687,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":688,"author":{"gitId":"tzejit"},"content":"**Extensions**","lastModifiedDate":"2021-10-20"},{"lineNumber":689,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":690,"author":{"gitId":"tzejit"},"content":"* 3a. The group name is empty or invalid.","lastModifiedDate":"2021-10-20"},{"lineNumber":691,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":692,"author":{"gitId":"tzejit"},"content":"    * 3a1. tApp displays an error message stating that the group name is invalid and to follow the correct format","lastModifiedDate":"2021-10-20"},{"lineNumber":693,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":694,"author":{"gitId":"tzejit"},"content":"      Use case ends.","lastModifiedDate":"2021-10-20"},{"lineNumber":695,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":696,"author":{"gitId":"tzejit"},"content":"* 3b. The student index is empty or invalid.","lastModifiedDate":"2021-10-20"},{"lineNumber":697,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":698,"author":{"gitId":"tzejit"},"content":"    * 3b1. tApp displays an error message stating that the command format is invalid and to follow the correct format","lastModifiedDate":"2021-10-20"},{"lineNumber":699,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":700,"author":{"gitId":"tzejit"},"content":"      Use case ends.","lastModifiedDate":"2021-10-20"},{"lineNumber":701,"author":{"gitId":"tzejit"},"content":"    ","lastModifiedDate":"2021-10-20"},{"lineNumber":702,"author":{"gitId":"tzejit"},"content":"* 3c. The group name is valid but the group does not exist.","lastModifiedDate":"2021-10-20"},{"lineNumber":703,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":704,"author":{"gitId":"tzejit"},"content":"    * 3c1. tApp displays an error message stating that the group does not exist","lastModifiedDate":"2021-10-20"},{"lineNumber":705,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":706,"author":{"gitId":"tzejit"},"content":"    Use case ends.","lastModifiedDate":"2021-10-20"},{"lineNumber":707,"author":{"gitId":"tzejit"},"content":"  ","lastModifiedDate":"2021-10-20"},{"lineNumber":708,"author":{"gitId":"tzejit"},"content":"* 3d. The student index is valid but the student does not exist.","lastModifiedDate":"2021-10-20"},{"lineNumber":709,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":710,"author":{"gitId":"tzejit"},"content":"    * 3d1. tApp displays an error message stating that the student already has a group","lastModifiedDate":"2021-10-20"},{"lineNumber":711,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":712,"author":{"gitId":"tzejit"},"content":"    Use case ends.","lastModifiedDate":"2021-10-20"},{"lineNumber":713,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":714,"author":{"gitId":"weenleen"},"content":"**Use case: UC17 - Add a Github link to a group**","lastModifiedDate":"2021-10-22"},{"lineNumber":715,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":716,"author":{"gitId":"tzejit"},"content":"**MSS**","lastModifiedDate":"2021-10-20"},{"lineNumber":717,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":718,"author":{"gitId":"tzejit"},"content":"1.  User requests to view their list of groups","lastModifiedDate":"2021-10-20"},{"lineNumber":719,"author":{"gitId":"tzejit"},"content":"2.  tApp displays all the groups currently in the list","lastModifiedDate":"2021-10-20"},{"lineNumber":720,"author":{"gitId":"tzejit"},"content":"3.  User requests to add a Github link to a specific group from the list of groups","lastModifiedDate":"2021-10-20"},{"lineNumber":721,"author":{"gitId":"tzejit"},"content":"4.  tApp adds the link to the group","lastModifiedDate":"2021-10-20"},{"lineNumber":722,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":723,"author":{"gitId":"tzejit"},"content":"    Use case ends.","lastModifiedDate":"2021-10-20"},{"lineNumber":724,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":725,"author":{"gitId":"tzejit"},"content":"**Extensions**","lastModifiedDate":"2021-10-20"},{"lineNumber":726,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":727,"author":{"gitId":"tzejit"},"content":"* 3a. The link fields are invalid.","lastModifiedDate":"2021-10-20"},{"lineNumber":728,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":729,"author":{"gitId":"tzejit"},"content":"    * 3a1. tApp displays an error message stating that the link fields are invalid and to follow the correct format.","lastModifiedDate":"2021-10-20"},{"lineNumber":730,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":731,"author":{"gitId":"tzejit"},"content":"      Use case ends.","lastModifiedDate":"2021-10-20"},{"lineNumber":732,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":733,"author":{"gitId":"tzejit"},"content":"* 3b. The group index is invalid or missing.","lastModifiedDate":"2021-10-20"},{"lineNumber":734,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":735,"author":{"gitId":"tzejit"},"content":"    * 3b1. tApp displays an error message stating that the command format is invalid and to follow the correct format","lastModifiedDate":"2021-10-20"},{"lineNumber":736,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":737,"author":{"gitId":"tzejit"},"content":"      Use case ends.","lastModifiedDate":"2021-10-20"},{"lineNumber":738,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":739,"author":{"gitId":"tzejit"},"content":"* 3c. The group specified already has an existing Github link.","lastModifiedDate":"2021-10-20"},{"lineNumber":740,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":741,"author":{"gitId":"tzejit"},"content":"    * 3c1. tApp overwrites the link in the group with the one provided","lastModifiedDate":"2021-10-20"},{"lineNumber":742,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":743,"author":{"gitId":"tzejit"},"content":"  Use case ends.","lastModifiedDate":"2021-10-20"},{"lineNumber":744,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":745,"author":{"gitId":"wanninglim"},"content":"**Use case: UC17 - Find student by name**","lastModifiedDate":"2021-10-23"},{"lineNumber":746,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":747,"author":{"gitId":"wanninglim"},"content":"**MSS**","lastModifiedDate":"2021-10-21"},{"lineNumber":748,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":749,"author":{"gitId":"wanninglim"},"content":"1.  User requests to find student whose name is John","lastModifiedDate":"2021-10-21"},{"lineNumber":750,"author":{"gitId":"wanninglim"},"content":"2.  tApp displays all names containing \u0027john\u0027","lastModifiedDate":"2021-10-21"},{"lineNumber":751,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":752,"author":{"gitId":"wanninglim"},"content":"    Use case ends.","lastModifiedDate":"2021-10-21"},{"lineNumber":753,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":754,"author":{"gitId":"wanninglim"},"content":"**Extensions**","lastModifiedDate":"2021-10-21"},{"lineNumber":755,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":756,"author":{"gitId":"wanninglim"},"content":"* 2a. The student list is empty.","lastModifiedDate":"2021-10-21"},{"lineNumber":757,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":758,"author":{"gitId":"wanninglim"},"content":"    * 2a1. tApp displays an empty list","lastModifiedDate":"2021-10-21"},{"lineNumber":759,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":760,"author":{"gitId":"wanninglim"},"content":"      Use case ends.","lastModifiedDate":"2021-10-21"},{"lineNumber":761,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":762,"author":{"gitId":"wanninglim"},"content":"**Use case: UC18 - Find groups by name**","lastModifiedDate":"2021-10-23"},{"lineNumber":763,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":764,"author":{"gitId":"wanninglim"},"content":"Similar to UC17 (Find student by name), except we are finding groups.","lastModifiedDate":"2021-10-23"},{"lineNumber":765,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":766,"author":{"gitId":"wanninglim"},"content":"**Use case: UC19 - Clear group list**","lastModifiedDate":"2021-10-25"},{"lineNumber":767,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":768,"author":{"gitId":"wanninglim"},"content":"Similar to UC12 (Clear student list), except we are clearing the group list.","lastModifiedDate":"2021-10-25"},{"lineNumber":769,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":770,"author":{"gitId":"wanninglim"},"content":"**Use case: UC20 - Clear task list**","lastModifiedDate":"2021-10-25"},{"lineNumber":771,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":772,"author":{"gitId":"wanninglim"},"content":"Similar to UC12 (Clear student list), except we are clearing the task list.","lastModifiedDate":"2021-10-25"},{"lineNumber":773,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":774,"author":{"gitId":"wanninglim"},"content":"**Use case: UC21 - Clear all entries in tApp**","lastModifiedDate":"2021-10-25"},{"lineNumber":775,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":776,"author":{"gitId":"wanninglim"},"content":"Similar to UC12 (Clear student list), except we are clearing the whole address book.","lastModifiedDate":"2021-10-25"},{"lineNumber":777,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":778,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":779,"author":{"gitId":"weenleen"},"content":"* Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2021-10-01"},{"lineNumber":780,"author":{"gitId":"weenleen"},"content":"* Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-10-01"},{"lineNumber":781,"author":{"gitId":"weenleen"},"content":"* A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-10-01"},{"lineNumber":782,"author":{"gitId":"weenleen"},"content":"* Commands used should be intuitive, and should not exceed 80 characters.","lastModifiedDate":"2021-10-01"},{"lineNumber":783,"author":{"gitId":"weenleen"},"content":"* System should respond almost immediately upon entering a command.","lastModifiedDate":"2021-10-01"},{"lineNumber":784,"author":{"gitId":"weenleen"},"content":"* Error messages shown should inform the user of what is wrong and what the correct command syntax should be.","lastModifiedDate":"2021-10-01"},{"lineNumber":785,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":786,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":787,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":788,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":789,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":790,"author":{"gitId":"weenleen"},"content":"* **Student contact**: A student entry with the corresponding student’s name, tutorial attendance, and tutorial participation.","lastModifiedDate":"2021-09-27"},{"lineNumber":791,"author":{"gitId":"weenleen"},"content":"* **Task**: An entry with a textual description of a piece of work to do, and a time that specifies the date that piece of work should be completed by","lastModifiedDate":"2021-09-27"},{"lineNumber":792,"author":{"gitId":"weenleen"},"content":"* **Directory**: The list commands entered will be applied to (either student or task)","lastModifiedDate":"2021-09-27"},{"lineNumber":793,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":794,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":795,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":796,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":797,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":798,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":799,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":800,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":801,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":802,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":803,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":804,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":805,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":806,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":807,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":808,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":809,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":810,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":811,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":812,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":813,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":814,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":815,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":816,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":817,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":818,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":819,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":820,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":821,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":822,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":823,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":824,"author":{"gitId":"wanninglim"},"content":"1. Deleting a student while all students are being shown","lastModifiedDate":"2021-10-18"},{"lineNumber":825,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":826,"author":{"gitId":"wanninglim"},"content":"   1. Prerequisites: List all students using the `students` command. Multiple students in the list.","lastModifiedDate":"2021-10-18"},{"lineNumber":827,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":828,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":829,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":830,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":831,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":832,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":833,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":834,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":835,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":836,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":837,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":838,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":839,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":840,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":841,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":842,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":843,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":844,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":845,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"weenleen":54,"itsraveen":51,"wanninglim":98,"somekoreanboi":79,"-":357,"tzejit":206}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"somekoreanboi"},"content":"tApp is a **desktop app for managing contacts, optimized for use via a Command Line Interface** (CLI). If you are a TA that is looking for an app that integrates different tools into a centralised platform and tracks your TA tasks, tApp is the app for you.","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"somekoreanboi"},"content":"1. Download the latest `tApp.jar` from [here](https://github.com/AY2122S1-CS2103-W14-4/tp/releases).","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"somekoreanboi"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your tApp.","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"somekoreanboi"},"content":"   * **`students`** : Lists all students.","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"somekoreanboi"},"content":"   * **`add`**`Tom Lim` : Adds a student named `Tom Lim` to the student list.","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * **`delete`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   * **`clear`** : Deletes all contacts.","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2021-10-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"somekoreanboi"},"content":"  e.g. in `add NAME`, `NAME` is a parameter which can be used as `add John Doe`.","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2021-10-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2021-10-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":57,"author":{"gitId":"wanninglim"},"content":"  e.g. if the command specifies `n/NAME s/STUDENT_NUMBER`, `s/STUDENT_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2021-10-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-10-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-10-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":67,"author":{"gitId":"somekoreanboi"},"content":"### Lists all students: `students`","lastModifiedDate":"2021-10-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":69,"author":{"gitId":"somekoreanboi"},"content":"Shows a list of all students inputted into tApp together with their attendance and participation scores for tutorials.","lastModifiedDate":"2021-10-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":71,"author":{"gitId":"somekoreanboi"},"content":"Format: `students`","lastModifiedDate":"2021-10-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":73,"author":{"gitId":"somekoreanboi"},"content":"Examples:","lastModifiedDate":"2021-10-02"},{"lineNumber":74,"author":{"gitId":"somekoreanboi"},"content":"* `students` returns a list of all students with their information and attendance scores","lastModifiedDate":"2021-10-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"### Add a student : `addStudent`","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":78,"author":{"gitId":"somekoreanboi"},"content":"Adds a student to the student list. ","lastModifiedDate":"2021-10-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":80,"author":{"gitId":"tzejit"},"content":"Format: `addStudent n/NAME e/EMAIL s/STUDENTNUMBER [u/GITHUB USERNAME] [r/REPO NAME] [t/TAG]...`","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"tzejit"},"content":"* Github link will only be shown if both `GITHUB USERNAME` and `REPO NAME` are specified.","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"tzejit"},"content":"* `STUDENTNUMBER` must consist of a character, followed by 7 digits, followed by another character. ","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"tzejit"},"content":"  Case of character does not matter.","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"tzejit"},"content":"* If only either `GITHUB USERNAME` or `REPO NAME` are specified, the data will still be saved but not shown.","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"tzejit"},"content":"* If the same person is edited and the remaining empty data field is entered, a proper Github link will be shown.","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"tzejit"},"content":"Examples:","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"tzejit"},"content":"* `addStudent n/John Doe e/johnd@example.com s/A0123456B u/user r/ip t/friends t/owesMoney` adds John Doe to the list ","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"tzejit"},"content":"  and displays a confirmation output with a proper Github link","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"tzejit"},"content":"* `addStudent n/John Doe e/johnd@example.com s/A0123456B u/user` adds John Doe to the list and displays a confirmation","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"tzejit"},"content":"  output without a proper Github link, but storing the `GITHUB USERNAME` in memory nonetheless.","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"tzejit"},"content":"  ","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"itsraveen"},"content":"### Marking a student as present: `marka`","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"itsraveen"},"content":"Marks the specified student in the student list as present or absent.","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"itsraveen"},"content":"Format: `marka INDEX /wWEEK NUMBER`","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"itsraveen"},"content":"* Marks the person as present in the specified `INDEX`.","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"itsraveen"},"content":"* The index must refer to the index number shown in the displayed students list.","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"itsraveen"},"content":"* The index and week number must be a positive number: 1, 2, 3…","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"itsraveen"},"content":"* If the student at the specified `INDEX` is marked as present, the command toggles the attendance to absent.","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"itsraveen"},"content":"* `students` followed by `marka 1 /w1` marks the 1st person in the students list as present in week 1.","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"itsraveen"},"content":"* Another `marka 1 /w1` instance will mark the 1st person in the student list as absent in week 1.","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"itsraveen"},"content":"Sample Usage:","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"itsraveen"},"content":"`\u003e marka 1 /w1`","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"itsraveen"},"content":"    \u003e Kho Tze Jit is marked as present for week 1!","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"itsraveen"},"content":"`\u003e marka 1 /w1`","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"itsraveen"},"content":"    \u003e Kho Tze Jit is marked as absent for week 1!","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"itsraveen"},"content":"### Marking a student\u0027s participation: `markp`","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"itsraveen"},"content":"Marks the specified student in the student list as participated or not participated.","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"itsraveen"},"content":"Format: `markp INDEX /wWEEK NUMBER`","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"itsraveen"},"content":"* Marks the person as present in the specified `INDEX`.","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"itsraveen"},"content":"* The index must refer to the index number shown in the displayed students list.","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"itsraveen"},"content":"* The index and week number must be a positive number: 1, 2, 3…","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"itsraveen"},"content":"* If the student at the specified `INDEX` is marked as present, the command toggles the attendance to absent.","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"itsraveen"},"content":"* `students` followed by `markp 1 /w1` marks the 1st person in the students list as participated in week 1.","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"itsraveen"},"content":"* Another `mark 1 /w1` instance will mark the 1st person in the student list as not participated in week 1.","lastModifiedDate":"2021-10-25"},{"lineNumber":136,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":137,"author":{"gitId":"itsraveen"},"content":"Sample Usage:","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":139,"author":{"gitId":"itsraveen"},"content":"`\u003e markp 1 /w1`","lastModifiedDate":"2021-10-25"},{"lineNumber":140,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":141,"author":{"gitId":"itsraveen"},"content":"    \u003e Kho Tze Jit is marked as participated for week 1!","lastModifiedDate":"2021-10-25"},{"lineNumber":142,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":143,"author":{"gitId":"itsraveen"},"content":"`\u003e markp 1 /w1`","lastModifiedDate":"2021-10-25"},{"lineNumber":144,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":145,"author":{"gitId":"itsraveen"},"content":"    \u003e Kho Tze Jit is marked as not participated for week 1!","lastModifiedDate":"2021-10-25"},{"lineNumber":146,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":147,"author":{"gitId":"itsraveen"},"content":"### Deleting a student contact: `delete INDEX`","lastModifiedDate":"2021-10-25"},{"lineNumber":148,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":149,"author":{"gitId":"itsraveen"},"content":"Deletes the specified student from the student list.","lastModifiedDate":"2021-10-25"},{"lineNumber":150,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":151,"author":{"gitId":"itsraveen"},"content":"Format: `delete INDEX`","lastModifiedDate":"2021-10-25"},{"lineNumber":152,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":153,"author":{"gitId":"itsraveen"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"itsraveen"},"content":"* The index must refer to the index number shown in the displayed students list.","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"itsraveen"},"content":"* The index and week number must be a positive number: 1, 2, 3…","lastModifiedDate":"2021-10-25"},{"lineNumber":156,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":157,"author":{"gitId":"itsraveen"},"content":"Examples:","lastModifiedDate":"2021-10-25"},{"lineNumber":158,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":159,"author":{"gitId":"itsraveen"},"content":"* `students` followed by `delete 1` removes the 1st person in the students list.","lastModifiedDate":"2021-10-25"},{"lineNumber":160,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":161,"author":{"gitId":"itsraveen"},"content":"Sample Usage:","lastModifiedDate":"2021-10-25"},{"lineNumber":162,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":163,"author":{"gitId":"itsraveen"},"content":"`\u003e delete 1`","lastModifiedDate":"2021-10-25"},{"lineNumber":164,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":165,"author":{"gitId":"itsraveen"},"content":"    \u003e Kho Tze Jit is removed from the student list!","lastModifiedDate":"2021-10-25"},{"lineNumber":166,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":167,"author":{"gitId":"itsraveen"},"content":"### Locating student by name: `findStudent`","lastModifiedDate":"2021-10-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2021-10-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":171,"author":{"gitId":"itsraveen"},"content":"Format: `findStudent KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-10-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2021-10-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2021-10-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2021-10-25"},{"lineNumber":176,"author":{"gitId":"itsraveen"},"content":"* Special characters will be ignored e.g. `Alice!` will match `Alice`","lastModifiedDate":"2021-10-25"},{"lineNumber":177,"author":{"gitId":"itsraveen"},"content":"* Partial names will be matched e.g. `Han` will match `Hans`","lastModifiedDate":"2021-10-25"},{"lineNumber":178,"author":{"gitId":"itsraveen"},"content":"* Students matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2021-10-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2021-10-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-25"},{"lineNumber":182,"author":{"gitId":"itsraveen"},"content":"* `findStudent Joh@` returns `john` and `John Doe`","lastModifiedDate":"2021-10-25"},{"lineNumber":183,"author":{"gitId":"itsraveen"},"content":"* `findStudent alex! davi` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2021-10-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":186,"author":{"gitId":"itsraveen"},"content":"-----","lastModifiedDate":"2021-10-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":188,"author":{"gitId":"tzejit"},"content":"### Lists all groups: `groups`","lastModifiedDate":"2021-10-20"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":190,"author":{"gitId":"tzejit"},"content":"Shows a list of all groups inputted into tApp together with its group members and group Github link if any are added.","lastModifiedDate":"2021-10-20"},{"lineNumber":191,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":192,"author":{"gitId":"tzejit"},"content":"Format: `groups`","lastModifiedDate":"2021-10-20"},{"lineNumber":193,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":194,"author":{"gitId":"tzejit"},"content":"Examples:","lastModifiedDate":"2021-10-20"},{"lineNumber":195,"author":{"gitId":"tzejit"},"content":"* `groups` returns a list of all groups with their information.","lastModifiedDate":"2021-10-20"},{"lineNumber":196,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":197,"author":{"gitId":"tzejit"},"content":"### Add a group: `addGroup`","lastModifiedDate":"2021-10-20"},{"lineNumber":198,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":199,"author":{"gitId":"tzejit"},"content":"Adds a group to the group list. The group will only be initialized with a `GROUP NAME` and `TAG` if any.","lastModifiedDate":"2021-10-20"},{"lineNumber":200,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":201,"author":{"gitId":"tzejit"},"content":"Format: `addGroup g/GROUP NAME [t/TAG]...`","lastModifiedDate":"2021-10-20"},{"lineNumber":202,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":203,"author":{"gitId":"tzejit"},"content":"* `GROUP NAME` must be contain a character, followed by 2 digits, a dash (-), followed by another digit.","lastModifiedDate":"2021-10-20"},{"lineNumber":204,"author":{"gitId":"tzejit"},"content":"  The case of the character does not matter.","lastModifiedDate":"2021-10-20"},{"lineNumber":205,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":206,"author":{"gitId":"tzejit"},"content":"Examples:","lastModifiedDate":"2021-10-20"},{"lineNumber":207,"author":{"gitId":"tzejit"},"content":"* `addGroup g/W14-4 t/tApp` adds group W14-4 to the list and displays a confirmation output with no Github link and","lastModifiedDate":"2021-10-20"},{"lineNumber":208,"author":{"gitId":"tzejit"},"content":"  group members","lastModifiedDate":"2021-10-20"},{"lineNumber":209,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":210,"author":{"gitId":"tzejit"},"content":"### Delete a group: `deleteGroup`","lastModifiedDate":"2021-10-20"},{"lineNumber":211,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":212,"author":{"gitId":"tzejit"},"content":"Deletes the specified group from the group list.","lastModifiedDate":"2021-10-20"},{"lineNumber":213,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":214,"author":{"gitId":"tzejit"},"content":"Format: `deleteGroup INDEX`","lastModifiedDate":"2021-10-20"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":216,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2021-10-20"},{"lineNumber":217,"author":{"gitId":"tzejit"},"content":"* The index refers to the index number shown in the displayed group list.","lastModifiedDate":"2021-10-20"},{"lineNumber":218,"author":{"gitId":"tzejit"},"content":"* The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2021-10-20"},{"lineNumber":219,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":220,"author":{"gitId":"tzejit"},"content":"Examples:","lastModifiedDate":"2021-10-20"},{"lineNumber":221,"author":{"gitId":"tzejit"},"content":"* `deleteGroup 1` deletes the group with index 1 in group list and displays a confirmation output with the group members and Github","lastModifiedDate":"2021-10-20"},{"lineNumber":222,"author":{"gitId":"tzejit"},"content":"  link of the group deleted","lastModifiedDate":"2021-10-20"},{"lineNumber":223,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":224,"author":{"gitId":"tzejit"},"content":"### Add a student to a group: `addSG`","lastModifiedDate":"2021-10-20"},{"lineNumber":225,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":226,"author":{"gitId":"tzejit"},"content":"Adds a student in student list to an existing group in the group list.","lastModifiedDate":"2021-10-20"},{"lineNumber":227,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":228,"author":{"gitId":"tzejit"},"content":"Format: `addSG INDEX g/GROUP`","lastModifiedDate":"2021-10-20"},{"lineNumber":229,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":230,"author":{"gitId":"tzejit"},"content":"* Adds the student specified at `INDEX` to the group with name specified by `GROUP`.","lastModifiedDate":"2021-10-20"},{"lineNumber":231,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2021-10-20"},{"lineNumber":232,"author":{"gitId":"tzejit"},"content":"* The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2021-10-20"},{"lineNumber":233,"author":{"gitId":"tzejit"},"content":"* `GROUP` must be an existing group in the displayed group list.","lastModifiedDate":"2021-10-20"},{"lineNumber":234,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":235,"author":{"gitId":"tzejit"},"content":"Examples:","lastModifiedDate":"2021-10-20"},{"lineNumber":236,"author":{"gitId":"tzejit"},"content":"* `addSG 1 g/W14-4` adds the student with index 1 in the student list to group W14-4 and displays a confirmation output","lastModifiedDate":"2021-10-20"},{"lineNumber":237,"author":{"gitId":"tzejit"},"content":"  that the student has been added to the group","lastModifiedDate":"2021-10-20"},{"lineNumber":238,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":239,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":240,"author":{"gitId":"tzejit"},"content":"### Add a Github link to a group: `addGG`","lastModifiedDate":"2021-10-20"},{"lineNumber":241,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":242,"author":{"gitId":"tzejit"},"content":"Adds a Github link to a specified group.","lastModifiedDate":"2021-10-20"},{"lineNumber":243,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":244,"author":{"gitId":"tzejit"},"content":"Format: `addGG INDEX y/YEAR r/REPO NAME`","lastModifiedDate":"2021-10-20"},{"lineNumber":245,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":246,"author":{"gitId":"tzejit"},"content":"* Add a Github link to the group specified at `INDEX`.","lastModifiedDate":"2021-10-20"},{"lineNumber":247,"author":{"gitId":"tzejit"},"content":"* The index refers to the index number shown in the displayed group list.","lastModifiedDate":"2021-10-20"},{"lineNumber":248,"author":{"gitId":"tzejit"},"content":"* The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2021-10-20"},{"lineNumber":249,"author":{"gitId":"tzejit"},"content":"* The formatted Github link is of the form https://github.com/ `YEAR`-CS2103-`GROUP NAME`/`REPO NAME`","lastModifiedDate":"2021-10-20"},{"lineNumber":250,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":251,"author":{"gitId":"somekoreanboi"},"content":"Examples:","lastModifiedDate":"2021-10-02"},{"lineNumber":252,"author":{"gitId":"tzejit"},"content":"* `addGG 1 y/AY20212022 r/tp` adds a Github link in the above format to the group with index 1 in the group list and","lastModifiedDate":"2021-10-20"},{"lineNumber":253,"author":{"gitId":"tzejit"},"content":"  displays a confirmation output the link has been added to the group.","lastModifiedDate":"2021-10-20"},{"lineNumber":254,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":255,"author":{"gitId":"itsraveen"},"content":"### Locating group by name: `findGroup`","lastModifiedDate":"2021-10-25"},{"lineNumber":256,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":257,"author":{"gitId":"itsraveen"},"content":"Find groups whose names contain any of the given keywords.","lastModifiedDate":"2021-10-25"},{"lineNumber":258,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":259,"author":{"gitId":"itsraveen"},"content":"Format: `findGroup KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-10-25"},{"lineNumber":260,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":261,"author":{"gitId":"itsraveen"},"content":"* The search is case-insensitive. e.g `w14-4` will match `W14-4`","lastModifiedDate":"2021-10-25"},{"lineNumber":262,"author":{"gitId":"itsraveen"},"content":"* The order of the keywords does not matter. e.g. `w14 w15` will match `w15 w14`","lastModifiedDate":"2021-10-25"},{"lineNumber":263,"author":{"gitId":"itsraveen"},"content":"* Only the group name is searched.","lastModifiedDate":"2021-10-25"},{"lineNumber":264,"author":{"gitId":"itsraveen"},"content":"* Most special characters will be ignored e.g. `w14!` will match `w14` except dashes: `-`","lastModifiedDate":"2021-10-25"},{"lineNumber":265,"author":{"gitId":"itsraveen"},"content":"* Partial group names will be matched e.g. `w14` will match `w14-4`","lastModifiedDate":"2021-10-25"},{"lineNumber":266,"author":{"gitId":"itsraveen"},"content":"* Groups matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2021-10-25"},{"lineNumber":267,"author":{"gitId":"itsraveen"},"content":"  e.g. `w14 w15` will return `w14-4`, `w14-3`, `w15-1`","lastModifiedDate":"2021-10-25"},{"lineNumber":268,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":269,"author":{"gitId":"itsraveen"},"content":"Examples:","lastModifiedDate":"2021-10-25"},{"lineNumber":270,"author":{"gitId":"itsraveen"},"content":"* `findGroup w14` returns `W14-3` and `W14-4`","lastModifiedDate":"2021-10-25"},{"lineNumber":271,"author":{"gitId":"itsraveen"},"content":"* `findGroup w14 w15` returns `W14-3`, `W14-4`, `W15-2`\u003cbr\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":272,"author":{"gitId":"itsraveen"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2021-10-25"},{"lineNumber":273,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":274,"author":{"gitId":"itsraveen"},"content":"---------------------------","lastModifiedDate":"2021-10-25"},{"lineNumber":275,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":276,"author":{"gitId":"somekoreanboi"},"content":"### Listing the task list : `tasks`","lastModifiedDate":"2021-10-02"},{"lineNumber":277,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":278,"author":{"gitId":"itsraveen"},"content":"Displays all the tasks currently in the task list.","lastModifiedDate":"2021-10-25"},{"lineNumber":279,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":280,"author":{"gitId":"somekoreanboi"},"content":"Format: `tasks`","lastModifiedDate":"2021-10-02"},{"lineNumber":281,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":282,"author":{"gitId":"itsraveen"},"content":"### Adding a todo task: `todo`","lastModifiedDate":"2021-10-25"},{"lineNumber":283,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":284,"author":{"gitId":"itsraveen"},"content":"Adds a TODO task with the given TASK_NAME.","lastModifiedDate":"2021-10-25"},{"lineNumber":285,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":286,"author":{"gitId":"itsraveen"},"content":"Format: `todo n/TASK_NAME [d/DESCRIPTION] [p/TASK_PRIORITY] [t/TAG]…​`","lastModifiedDate":"2021-10-25"},{"lineNumber":287,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":288,"author":{"gitId":"itsraveen"},"content":"* Adds a todo task with the specified `TASK_NAME`","lastModifiedDate":"2021-10-25"},{"lineNumber":289,"author":{"gitId":"itsraveen"},"content":"* The possible priorities are High, Medium and Low.","lastModifiedDate":"2021-10-22"},{"lineNumber":290,"author":{"gitId":"itsraveen"},"content":"* `p/H` marks a task as High Priority, `p/M` marks a task as Medium Priority, `p/L` marks a task as Low Priority.","lastModifiedDate":"2021-10-25"},{"lineNumber":291,"author":{"gitId":"itsraveen"},"content":"* The priority parameter accepts partial words and is case-insensitive.","lastModifiedDate":"2021-10-25"},{"lineNumber":292,"author":{"gitId":"itsraveen"},"content":"* Tasks that are not specified a priority level will be by default Low Priority.","lastModifiedDate":"2021-10-25"},{"lineNumber":293,"author":{"gitId":"itsraveen"},"content":"* `DESCRIPTION` should only contain alphanumerical characters.","lastModifiedDate":"2021-10-25"},{"lineNumber":294,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":295,"author":{"gitId":"somekoreanboi"},"content":"Examples:","lastModifiedDate":"2021-10-21"},{"lineNumber":296,"author":{"gitId":"itsraveen"},"content":"* `todo n/play` creates the todo task \"play\" with the default LOW Priority.","lastModifiedDate":"2021-10-25"},{"lineNumber":297,"author":{"gitId":"itsraveen"},"content":"* `todo n/study p/H` creates the todo task \"study\" and marks it as HIGH Priority.","lastModifiedDate":"2021-10-25"},{"lineNumber":298,"author":{"gitId":"itsraveen"},"content":"* `todo n/CS2103 d/Prepare for Tutorial p/M` creates the todo task \"CS2103\" with the description ","lastModifiedDate":"2021-10-25"},{"lineNumber":299,"author":{"gitId":"itsraveen"},"content":"\"Prepare for tutorial\" and with MEDIUM Priority.","lastModifiedDate":"2021-10-25"},{"lineNumber":300,"author":{"gitId":"itsraveen"},"content":"* `todo n/Complete tP d/Last chance to add features t/CS2103 t/work p/H` creates a todo task \u0027Complete tP\u0027","lastModifiedDate":"2021-10-25"},{"lineNumber":301,"author":{"gitId":"itsraveen"},"content":"with the description \"Last chance to add features\" and tags \"CS2103\" \u0026 \"work\" with High Priority.  ","lastModifiedDate":"2021-10-25"},{"lineNumber":302,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":303,"author":{"gitId":"itsraveen"},"content":"### Adding an event task: `event`","lastModifiedDate":"2021-10-25"},{"lineNumber":304,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":305,"author":{"gitId":"itsraveen"},"content":"Adds an event task with the given TASK_NAME for a specified DATE.","lastModifiedDate":"2021-10-25"},{"lineNumber":306,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":307,"author":{"gitId":"itsraveen"},"content":"Format: `event n/TASK_NAME on/EVENT_DATE [d/DESCRIPTION] [p/TASK_PRIORITY] [t/TAG]…​`","lastModifiedDate":"2021-10-25"},{"lineNumber":308,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":309,"author":{"gitId":"somekoreanboi"},"content":"* Adds an event task with the specified `TASK_NAME`","lastModifiedDate":"2021-10-21"},{"lineNumber":310,"author":{"gitId":"somekoreanboi"},"content":"* The event task has the taskDate `DATE`","lastModifiedDate":"2021-10-21"},{"lineNumber":311,"author":{"gitId":"somekoreanboi"},"content":"* The taskDate must be in the format `YYYY-MM-dd`","lastModifiedDate":"2021-10-21"},{"lineNumber":312,"author":{"gitId":"itsraveen"},"content":"* Priority, description and tags are similar to Todo Tasks.","lastModifiedDate":"2021-10-25"},{"lineNumber":313,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":314,"author":{"gitId":"somekoreanboi"},"content":"Examples:","lastModifiedDate":"2021-10-21"},{"lineNumber":315,"author":{"gitId":"itsraveen"},"content":"* `event n/Party on/2021-09-23 p/M` creates the event task \"party\", on \"2021-09-23\" with ","lastModifiedDate":"2021-10-25"},{"lineNumber":316,"author":{"gitId":"itsraveen"},"content":"  Medium Priority.","lastModifiedDate":"2021-10-22"},{"lineNumber":317,"author":{"gitId":"itsraveen"},"content":"* `event n/Exam on/2021-10-04` creates the event task \"exam\", on \"2021-10-04\", with Low Priority.","lastModifiedDate":"2021-10-25"},{"lineNumber":318,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":319,"author":{"gitId":"itsraveen"},"content":"### Adding an deadline task: `deadline`","lastModifiedDate":"2021-10-25"},{"lineNumber":320,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":321,"author":{"gitId":"somekoreanboi"},"content":"Adds an deadline task with the given name and a specified taskDate.","lastModifiedDate":"2021-10-21"},{"lineNumber":322,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":323,"author":{"gitId":"itsraveen"},"content":"Format: `event n/TASK_NAME by/DEADLINE [d/DESCRIPTION] [p/TASK_PRIORITY] [t/TAG]…​`","lastModifiedDate":"2021-10-25"},{"lineNumber":324,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":325,"author":{"gitId":"itsraveen"},"content":"* Adds a deadline task with the specified `TASK_NAME`","lastModifiedDate":"2021-10-22"},{"lineNumber":326,"author":{"gitId":"itsraveen"},"content":"* The deadline task has the task date `DATE`","lastModifiedDate":"2021-10-25"},{"lineNumber":327,"author":{"gitId":"itsraveen"},"content":"* The taskDate must be in the format `YYYY-MM-dd`","lastModifiedDate":"2021-10-19"},{"lineNumber":328,"author":{"gitId":"itsraveen"},"content":"* Priority, description and tags are similar to Todo Tasks.","lastModifiedDate":"2021-10-25"},{"lineNumber":329,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":330,"author":{"gitId":"somekoreanboi"},"content":"Examples:","lastModifiedDate":"2021-10-02"},{"lineNumber":331,"author":{"gitId":"itsraveen"},"content":"* `deadline n/tutorial participation on/2021-09-23 p/H` creates the deadline task \"tutorial participation\", ","lastModifiedDate":"2021-10-22"},{"lineNumber":332,"author":{"gitId":"itsraveen"},"content":"  with deadline \"2021-09-23\" with High Priority.","lastModifiedDate":"2021-10-25"},{"lineNumber":333,"author":{"gitId":"itsraveen"},"content":"* `deadline n/assignment submission on/2021-10-04` creates the deadline task \"assignment submission\", ","lastModifiedDate":"2021-10-22"},{"lineNumber":334,"author":{"gitId":"itsraveen"},"content":"  with the deadline \"2021-10-04\" with LOW Priority.","lastModifiedDate":"2021-10-25"},{"lineNumber":335,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":336,"author":{"gitId":"itsraveen"},"content":"  which is to be completed by the given date with LOW Priority.","lastModifiedDate":"2021-10-22"},{"lineNumber":337,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":338,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":339,"author":{"gitId":"wanninglim"},"content":"### Marking a student\u0027s attendance: `marka`","lastModifiedDate":"2021-10-24"},{"lineNumber":340,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":341,"author":{"gitId":"wanninglim"},"content":"Marks the specified student(s) in the student list as present or absent.","lastModifiedDate":"2021-10-24"},{"lineNumber":342,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":343,"author":{"gitId":"wanninglim"},"content":"Format: `marka INDEX [MORE_INDEXES] /wWEEK NUMBER`","lastModifiedDate":"2021-10-24"},{"lineNumber":344,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":345,"author":{"gitId":"wanninglim"},"content":"* Marks the person(s) as present in the specified `INDEX(ES)`.","lastModifiedDate":"2021-10-24"},{"lineNumber":346,"author":{"gitId":"somekoreanboi"},"content":"* The index must refer to the index number shown in the displayed students list.","lastModifiedDate":"2021-10-02"},{"lineNumber":347,"author":{"gitId":"somekoreanboi"},"content":"* The index and week number must be a positive number: 1, 2, 3…","lastModifiedDate":"2021-10-02"},{"lineNumber":348,"author":{"gitId":"somekoreanboi"},"content":"* If the student at the specified `INDEX` is marked as present, the command toggles the attendance to absent.","lastModifiedDate":"2021-10-02"},{"lineNumber":349,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":350,"author":{"gitId":"somekoreanboi"},"content":"Examples:","lastModifiedDate":"2021-10-02"},{"lineNumber":351,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":352,"author":{"gitId":"wanninglim"},"content":"* `students` followed by `marka 1 2 3 /w1` marks the 1st, 2nd and 3rd person in the students list as present in week 1.","lastModifiedDate":"2021-10-24"},{"lineNumber":353,"author":{"gitId":"wanninglim"},"content":"* Another `marka 1 /w1` instance will mark the 1st person in the student list as absent in week 1.","lastModifiedDate":"2021-10-18"},{"lineNumber":354,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":355,"author":{"gitId":"somekoreanboi"},"content":"Sample Usage:","lastModifiedDate":"2021-10-02"},{"lineNumber":356,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":357,"author":{"gitId":"wanninglim"},"content":"`\u003e marka 1 /w1`","lastModifiedDate":"2021-10-18"},{"lineNumber":358,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":359,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":360,"author":{"gitId":"wanninglim"},"content":"### Marking a student\u0027s participation: `markp`","lastModifiedDate":"2021-10-18"},{"lineNumber":361,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":362,"author":{"gitId":"wanninglim"},"content":"Marks the specified student(s) in the student list as participated or not participated.","lastModifiedDate":"2021-10-24"},{"lineNumber":363,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":364,"author":{"gitId":"wanninglim"},"content":"Format: `markp INDEX [MORE_INDEXES] /wWEEK NUMBER`","lastModifiedDate":"2021-10-24"},{"lineNumber":365,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":366,"author":{"gitId":"wanninglim"},"content":"* Marks the person(s) as present in the specified `INDEX`.","lastModifiedDate":"2021-10-24"},{"lineNumber":367,"author":{"gitId":"wanninglim"},"content":"* The index must refer to the index number shown in the displayed students list.","lastModifiedDate":"2021-10-18"},{"lineNumber":368,"author":{"gitId":"wanninglim"},"content":"* The index and week number must be a positive number: 1, 2, 3…","lastModifiedDate":"2021-10-18"},{"lineNumber":369,"author":{"gitId":"wanninglim"},"content":"* If the student at the specified `INDEX` is marked as present, the command toggles the attendance to absent.","lastModifiedDate":"2021-10-18"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":371,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-18"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":373,"author":{"gitId":"wanninglim"},"content":"* `students` followed by `markp 1 2 3 /w1` marks the 1st, 2nd and 3rd person in the students list as participated in week 1.","lastModifiedDate":"2021-10-24"},{"lineNumber":374,"author":{"gitId":"wanninglim"},"content":"* Another `mark 1 /w1` instance will mark the 1st person in the student list as not participated in week 1.","lastModifiedDate":"2021-10-18"},{"lineNumber":375,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":376,"author":{"gitId":"wanninglim"},"content":"Sample Usage:","lastModifiedDate":"2021-10-18"},{"lineNumber":377,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":378,"author":{"gitId":"wanninglim"},"content":"`\u003e markp 1 /w1`","lastModifiedDate":"2021-10-18"},{"lineNumber":379,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":380,"author":{"gitId":"wanninglim"},"content":"    \u003e Kho Tze Jit is marked as participated for week 1!","lastModifiedDate":"2021-10-18"},{"lineNumber":381,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":382,"author":{"gitId":"wanninglim"},"content":"`\u003e markp 1 /w1`","lastModifiedDate":"2021-10-18"},{"lineNumber":383,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":384,"author":{"gitId":"wanninglim"},"content":"    \u003e Kho Tze Jit is marked as not participated for week 1!","lastModifiedDate":"2021-10-18"},{"lineNumber":385,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":386,"author":{"gitId":"somekoreanboi"},"content":"### Deleting a student contact: `delete INDEX`","lastModifiedDate":"2021-10-02"},{"lineNumber":387,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":388,"author":{"gitId":"somekoreanboi"},"content":"Deletes the specified student from the student list.","lastModifiedDate":"2021-10-02"},{"lineNumber":389,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":390,"author":{"gitId":"somekoreanboi"},"content":"Format: `delete INDEX`","lastModifiedDate":"2021-10-02"},{"lineNumber":391,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":392,"author":{"gitId":"somekoreanboi"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2021-10-02"},{"lineNumber":393,"author":{"gitId":"somekoreanboi"},"content":"* The index must refer to the index number shown in the displayed students list.","lastModifiedDate":"2021-10-02"},{"lineNumber":394,"author":{"gitId":"somekoreanboi"},"content":"* The index and week number must be a positive number: 1, 2, 3…","lastModifiedDate":"2021-10-02"},{"lineNumber":395,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":396,"author":{"gitId":"somekoreanboi"},"content":"Examples:","lastModifiedDate":"2021-10-02"},{"lineNumber":397,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":398,"author":{"gitId":"somekoreanboi"},"content":"* `students` followed by `delete 1` removes the 1st person in the students list.","lastModifiedDate":"2021-10-02"},{"lineNumber":399,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":400,"author":{"gitId":"somekoreanboi"},"content":"Sample Usage:","lastModifiedDate":"2021-10-02"},{"lineNumber":401,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":402,"author":{"gitId":"somekoreanboi"},"content":"`\u003e delete 1`","lastModifiedDate":"2021-10-02"},{"lineNumber":403,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":404,"author":{"gitId":"somekoreanboi"},"content":"    \u003e Kho Tze Jit is removed from the student list!","lastModifiedDate":"2021-10-02"},{"lineNumber":405,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":406,"author":{"gitId":"wanninglim"},"content":"### Locating student by name: `findStudent`","lastModifiedDate":"2021-10-21"},{"lineNumber":407,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":408,"author":{"gitId":"wanninglim"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2021-10-21"},{"lineNumber":409,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":410,"author":{"gitId":"wanninglim"},"content":"Format: `findStudent KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-10-21"},{"lineNumber":411,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":412,"author":{"gitId":"wanninglim"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2021-10-21"},{"lineNumber":413,"author":{"gitId":"wanninglim"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2021-10-21"},{"lineNumber":414,"author":{"gitId":"wanninglim"},"content":"* Only the name is searched.","lastModifiedDate":"2021-10-21"},{"lineNumber":415,"author":{"gitId":"wanninglim"},"content":"* Special characters will be ignored e.g. `Alice!` will match `Alice`","lastModifiedDate":"2021-10-22"},{"lineNumber":416,"author":{"gitId":"wanninglim"},"content":"* Partial names will be matched e.g. `Han` will match `Hans`","lastModifiedDate":"2021-10-21"},{"lineNumber":417,"author":{"gitId":"wanninglim"},"content":"* Students matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2021-10-21"},{"lineNumber":418,"author":{"gitId":"wanninglim"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2021-10-21"},{"lineNumber":419,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":420,"author":{"gitId":"wanninglim"},"content":"Examples:","lastModifiedDate":"2021-10-21"},{"lineNumber":421,"author":{"gitId":"wanninglim"},"content":"* `findStudent Joh@` returns `john` and `John Doe`","lastModifiedDate":"2021-10-23"},{"lineNumber":422,"author":{"gitId":"wanninglim"},"content":"* `findStudent alex! davi` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":423,"author":{"gitId":"wanninglim"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2021-10-21"},{"lineNumber":424,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":425,"author":{"gitId":"somekoreanboi"},"content":"### Deleting a task: `deleteTask INDEX`","lastModifiedDate":"2021-10-11"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":427,"author":{"gitId":"somekoreanboi"},"content":"Deletes the specified task from the task list.","lastModifiedDate":"2021-10-11"},{"lineNumber":428,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":429,"author":{"gitId":"somekoreanboi"},"content":"Format: `deleteTask INDEX`","lastModifiedDate":"2021-10-11"},{"lineNumber":430,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":431,"author":{"gitId":"somekoreanboi"},"content":"* Deletes the task at the specified `INDEX`.","lastModifiedDate":"2021-10-11"},{"lineNumber":432,"author":{"gitId":"somekoreanboi"},"content":"* The index must refer to the index number shown in the displayed task list.","lastModifiedDate":"2021-10-11"},{"lineNumber":433,"author":{"gitId":"somekoreanboi"},"content":"* The index and week number must be a positive number: 1, 2, 3…","lastModifiedDate":"2021-10-11"},{"lineNumber":434,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":435,"author":{"gitId":"somekoreanboi"},"content":"Examples:","lastModifiedDate":"2021-10-11"},{"lineNumber":436,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":437,"author":{"gitId":"somekoreanboi"},"content":"* `deleteTask 1` removes the 1st task in the task list.","lastModifiedDate":"2021-10-11"},{"lineNumber":438,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":439,"author":{"gitId":"somekoreanboi"},"content":"Sample Usage:","lastModifiedDate":"2021-10-11"},{"lineNumber":440,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":441,"author":{"gitId":"itsraveen"},"content":"`\u003e deleteTask 1` removes the first Task from the task list.","lastModifiedDate":"2021-10-25"},{"lineNumber":442,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":443,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":444,"author":{"gitId":"somekoreanboi"},"content":"### Marking a task as done: : `doneTask`","lastModifiedDate":"2021-10-11"},{"lineNumber":445,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":446,"author":{"gitId":"somekoreanboi"},"content":"Mark the specified task from the list as done.","lastModifiedDate":"2021-10-02"},{"lineNumber":447,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":448,"author":{"gitId":"somekoreanboi"},"content":"Format: `doneTask INDEX`","lastModifiedDate":"2021-10-11"},{"lineNumber":449,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":450,"author":{"gitId":"somekoreanboi"},"content":"* Mark the task as done at the specified `INDEX`.","lastModifiedDate":"2021-10-02"},{"lineNumber":451,"author":{"gitId":"somekoreanboi"},"content":"* The index refers to the index number shown in the task list.","lastModifiedDate":"2021-10-02"},{"lineNumber":452,"author":{"gitId":"somekoreanboi"},"content":"* The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2021-10-02"},{"lineNumber":453,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":454,"author":{"gitId":"somekoreanboi"},"content":"Examples:","lastModifiedDate":"2021-10-02"},{"lineNumber":455,"author":{"gitId":"somekoreanboi"},"content":"* `doneTask 2` marks the 2nd task in the task list as completed.","lastModifiedDate":"2021-10-11"},{"lineNumber":456,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":457,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":458,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":459,"author":{"gitId":"wanninglim"},"content":"### Clearing all entries from student list: `clearStudents`","lastModifiedDate":"2021-10-19"},{"lineNumber":460,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":461,"author":{"gitId":"wanninglim"},"content":"Clears all entries from the student list.","lastModifiedDate":"2021-10-19"},{"lineNumber":462,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":463,"author":{"gitId":"wanninglim"},"content":"Format: `clearStudents`","lastModifiedDate":"2021-10-19"},{"lineNumber":464,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":465,"author":{"gitId":"wanninglim"},"content":"### Clearing all entries from task list: `clearGroups`","lastModifiedDate":"2021-10-25"},{"lineNumber":466,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":467,"author":{"gitId":"wanninglim"},"content":"Clears all entries from the group list.","lastModifiedDate":"2021-10-25"},{"lineNumber":468,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":469,"author":{"gitId":"wanninglim"},"content":"Format: `clearGroups`","lastModifiedDate":"2021-10-25"},{"lineNumber":470,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":471,"author":{"gitId":"wanninglim"},"content":"### Clearing all entries from task list: `clearTasks`","lastModifiedDate":"2021-10-19"},{"lineNumber":472,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":473,"author":{"gitId":"wanninglim"},"content":"Clears all entries from the task list.","lastModifiedDate":"2021-10-19"},{"lineNumber":474,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":475,"author":{"gitId":"wanninglim"},"content":"Format: `clearTasks`","lastModifiedDate":"2021-10-25"},{"lineNumber":476,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":477,"author":{"gitId":"wanninglim"},"content":"### Clearing all entries from tApp: `clear`","lastModifiedDate":"2021-10-25"},{"lineNumber":478,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":479,"author":{"gitId":"wanninglim"},"content":"Clears all entries from tApp.","lastModifiedDate":"2021-10-25"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":481,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2021-10-19"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":483,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2021-10-02"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":485,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2021-10-02"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":487,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2021-10-02"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":489,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2021-10-02"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":491,"author":{"gitId":"somekoreanboi"},"content":"tApp data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-10-02"},{"lineNumber":492,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":493,"author":{"gitId":"wanninglim"},"content":"[comment]: \u003c\u003e (TODO)","lastModifiedDate":"2021-10-02"},{"lineNumber":494,"author":{"gitId":"wanninglim"},"content":"### Viewing help : `help` `[coming in v1.3]`","lastModifiedDate":"2021-10-02"},{"lineNumber":495,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":496,"author":{"gitId":"wanninglim"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2021-10-02"},{"lineNumber":497,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":498,"author":{"gitId":"wanninglim"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2021-10-02"},{"lineNumber":499,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":500,"author":{"gitId":"wanninglim"},"content":"Format: `help`","lastModifiedDate":"2021-10-02"},{"lineNumber":501,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":502,"author":{"gitId":"somekoreanboi"},"content":"[comment]: \u003c\u003e (TODO)","lastModifiedDate":"2021-10-02"},{"lineNumber":503,"author":{"gitId":"somekoreanboi"},"content":"### Editing a person : `edit` `[coming in v1.3]`","lastModifiedDate":"2021-10-02"},{"lineNumber":504,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":505,"author":{"gitId":"wanninglim"},"content":"Edits an existing person in the students list.","lastModifiedDate":"2021-10-02"},{"lineNumber":506,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":507,"author":{"gitId":"wanninglim"},"content":"Format: `edit INDEX [n/NAME] [s/STUDENT_NUMBER] [e/EMAIL] [g/GITHUB_LINK] [t/TAG]…​`","lastModifiedDate":"2021-10-02"},{"lineNumber":508,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":509,"author":{"gitId":"somekoreanboi"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-02"},{"lineNumber":510,"author":{"gitId":"somekoreanboi"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2021-10-02"},{"lineNumber":511,"author":{"gitId":"somekoreanboi"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2021-10-02"},{"lineNumber":512,"author":{"gitId":"somekoreanboi"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2021-10-02"},{"lineNumber":513,"author":{"gitId":"somekoreanboi"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2021-10-02"},{"lineNumber":514,"author":{"gitId":"somekoreanboi"},"content":"  specifying any tags after it.","lastModifiedDate":"2021-10-02"},{"lineNumber":515,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":516,"author":{"gitId":"somekoreanboi"},"content":"Examples:","lastModifiedDate":"2021-10-02"},{"lineNumber":517,"author":{"gitId":"wanninglim"},"content":"*  `edit 1 s/A0221111L e/johndoe@example.com` Edits the student number and email address of the 1st person to be `A0221111L` and `johndoe@example.com` respectively.","lastModifiedDate":"2021-10-02"},{"lineNumber":518,"author":{"gitId":"somekoreanboi"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2021-10-02"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":520,"author":{"gitId":"somekoreanboi"},"content":"### Editing the data file `[coming in v1.3]`","lastModifiedDate":"2021-10-02"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":522,"author":{"gitId":"wanninglim"},"content":"tApp data are saved as a JSON file `[JAR file location]/data/tApp.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-10-02"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":524,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-10-02"},{"lineNumber":525,"author":{"gitId":"somekoreanboi"},"content":"If your changes to the data file makes its format invalid, tApp will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-10-02"},{"lineNumber":526,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":528,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2021-10-02"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":530,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-10-02"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":532,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-02"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":534,"author":{"gitId":"somekoreanboi"},"content":"[comment]: \u003c\u003e (TODO)","lastModifiedDate":"2021-10-02"},{"lineNumber":535,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2021-10-02"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":537,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":538,"author":{"gitId":"wanninglim"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous tApp home folder.","lastModifiedDate":"2021-10-02"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":540,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-02"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":542,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2021-10-02"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":544,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2021-10-02"},{"lineNumber":545,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2021-10-02"},{"lineNumber":546,"author":{"gitId":"wanninglim"},"content":"**List Students** | `students`","lastModifiedDate":"2021-10-02"},{"lineNumber":547,"author":{"gitId":"wanninglim"},"content":"**List Tasks** | `tasks`","lastModifiedDate":"2021-10-02"},{"lineNumber":548,"author":{"gitId":"wanninglim"},"content":"**List Groups** | `groups`","lastModifiedDate":"2021-10-21"},{"lineNumber":549,"author":{"gitId":"wanninglim"},"content":"**Add Student** | `addStudent n/NAME s/STUDENT_NUMBER e/EMAIL g/GITHUB_LINK [t/TAG]…​` \u003cbr\u003e e.g., `addStudent n/James Ho s/A0221111L e/jamesho@example.com g/https://github.com/james t/W14-4`","lastModifiedDate":"2021-10-21"},{"lineNumber":550,"author":{"gitId":"wanninglim"},"content":"**Edit Student** | `editStudent INDEX n/NAME s/STUDENT_NUMBER e/EMAIL g/GITHUB_LINK [t/TAG]…​`\u003cbr\u003e e.g., `editStudent 1 n/James Ho s/A0221111L e/jamesho@example.com g/https://github.com/james t/W14-4`","lastModifiedDate":"2021-10-21"},{"lineNumber":551,"author":{"gitId":"wanninglim"},"content":"**Delete Student** | `deleteStudent INDEX`\u003cbr\u003e e.g., `deleteStudent 3`","lastModifiedDate":"2021-10-21"},{"lineNumber":552,"author":{"gitId":"wanninglim"},"content":"**Mark Student Attendance** | `marka INDEX w/WEEK` \u003cbr\u003e e.g., `marka 1 w/1`","lastModifiedDate":"2021-10-21"},{"lineNumber":553,"author":{"gitId":"wanninglim"},"content":"**Mark Student Participation** | `markp INDEX w/WEEK` \u003cbr\u003e e.g., `marka 1 w/1`","lastModifiedDate":"2021-10-21"},{"lineNumber":554,"author":{"gitId":"wanninglim"},"content":"**Find Student** | `findStudent KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James`","lastModifiedDate":"2021-10-21"},{"lineNumber":555,"author":{"gitId":"wanninglim"},"content":"**Clear Students** | `clearStudents`","lastModifiedDate":"2021-10-21"},{"lineNumber":556,"author":{"gitId":"wanninglim"},"content":"**Add (Student) Group** | `addGroup g/NAME` \u003cbr\u003e e.g., `addGroup g/W14-4 t/tApp`","lastModifiedDate":"2021-10-21"},{"lineNumber":557,"author":{"gitId":"wanninglim"},"content":"**Delete (Student) Group** | `deleteGroup INDEX`\u003cbr\u003e e.g., `deleteGroup 1`","lastModifiedDate":"2021-10-21"},{"lineNumber":558,"author":{"gitId":"wanninglim"},"content":"**Add Student to Group** | `addSG INDEX g/GROUP`\u003cbr\u003e e.g., `addSG 1 g/W14-4`","lastModifiedDate":"2021-10-21"},{"lineNumber":559,"author":{"gitId":"wanninglim"},"content":"**Add Github Link to Group** | `addGG INDEX y/YEAR r/REPO NAME`\u003cbr\u003e e.g., `addGG 1 y/AY20212022 r/tp`","lastModifiedDate":"2021-10-21"},{"lineNumber":560,"author":{"gitId":"somekoreanboi"},"content":"**Add Todo Task** | `todo n/TASK_NAME [t/TAG]…​` \u003cbr\u003e e.g., `todo n/study t/W14-4`","lastModifiedDate":"2021-10-21"},{"lineNumber":561,"author":{"gitId":"somekoreanboi"},"content":"**Add Event Task** | `event n/TASK_NAME by/DATE [t/TAG]…​` \u003cbr\u003e e.g., `event n/study on/2021-10-31 t/W14-4`","lastModifiedDate":"2021-10-21"},{"lineNumber":562,"author":{"gitId":"somekoreanboi"},"content":"**Add Deadline Task** | `deadline n/TASK_NAME by/DEADLINE [t/TAG]…​` \u003cbr\u003e e.g., `deadline n/study by/2021-10-31 t/W14-4`","lastModifiedDate":"2021-10-21"},{"lineNumber":563,"author":{"gitId":"wanninglim"},"content":"**Mark Done Task** | `doneTask INDEX` \u003cbr\u003e e.g., `doneTask 1`","lastModifiedDate":"2021-10-21"},{"lineNumber":564,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2021-10-02"},{"lineNumber":565,"author":{"gitId":"somekoreanboi"},"content":"**Delete Task** | `deleteTask INDEX`\u003cbr\u003e e.g., `deleteTask 3`","lastModifiedDate":"2021-10-11"},{"lineNumber":566,"author":{"gitId":"somekoreanboi"},"content":"**Edit Task** | `editTask INDEX [n/TASK_NAME] [by/DATE] [t/TAG]…​`\u003cbr\u003e e.g.,`editTask 2 n/study by/2012-10-31 t/W14-4`","lastModifiedDate":"2021-10-21"},{"lineNumber":567,"author":{"gitId":"wanninglim"},"content":"**Clear Tasks** | `clearTasks`","lastModifiedDate":"2021-10-21"},{"lineNumber":568,"author":{"gitId":"wanninglim"},"content":"**Clear Address Book** | `clearAll`","lastModifiedDate":"2021-10-21"},{"lineNumber":569,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"itsraveen":123,"wanninglim":106,"somekoreanboi":131,"-":135,"tzejit":74}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"wanninglim"},"content":"    content: \"tApp\";","lastModifiedDate":"2021-09-20"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"wanninglim":1,"-":294}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"wanninglim"},"content":"title: tApp","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103-W14-4/tp/branch/master/graph/badge.svg?token\u003d4CJCMBYU5I)](https://codecov.io/gh/AY2122S1-CS2103-W14-4/tp)","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"wanninglim"},"content":"**tApp is a desktop application for tutors to manage your students.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"wanninglim"},"content":"* If you are interested in using tApp, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"wanninglim"},"content":"* If you are interested about developing tApp, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"wanninglim":4,"-":15}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"wanninglim"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command :-(\";","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"wanninglim"},"content":"    public static final String MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX \u003d \"The student index provided is invalid!\";","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"    public static final String MESSAGE_STUDENTS_LISTED_OVERVIEW \u003d \"%1$d students listed!\";","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"wanninglim"},"content":"    public static final String MESSAGE_GROUPS_LISTED_OVERVIEW \u003d \"%1$d groups listed!\";","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"wanninglim"},"content":"    public static final String MESSAGE_INVALID_TASK_DISPLAYED_INDEX \u003d \"The task index provided is invalid!\";","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"wanninglim"},"content":"    public static final String MESSAGE_INVALID_GROUP_DISPLAYED_INDEX \u003d \"The group index provided is invalid!\";","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"wanninglim"},"content":"    public static final String MESSAGE_INVALID_GROUP_DISPLAYED_NAME \u003d \"The group name provided does not exist!\";","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"wanninglim"},"content":"    public static final String MESSAGE_DUPLICATE_GROUP_MEMBER_INDEX \u003d \"This student is already in the group!\";","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"wanninglim"},"content":"    public static final String MESSAGE_INVALID_GROUP_MEMBER_INDEX \u003d \"This student already has a group!\";","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"wanninglim"},"content":"    public static final String MESSAGE_INVALID_GROUP_MEMBER_REMOVAL_INDEX \u003d \"The member index provided is invalid!\";","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"    public static final String MESSAGE_WRONG_NUMBER_OF_INDEX \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"            \"Only %1$d indices separated by white spaces can be provided. Currently %2$d are provided.\";","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wanninglim":9,"-":10,"tzejit":3}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"wanninglim"},"content":"     * Returns true if the {@code sentence} contains a substring of the {@code word}.","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"wanninglim"},"content":"     *   Ignores case, and a full word match is NOT required.","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"wanninglim"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"wanninglim"},"content":"     *       containsSubstringIgnoreCase(\"ABc def\", \"ab\") \u003d\u003d true","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"wanninglim"},"content":"     *       containsSubstringIgnoreCase(\"ABc def\", \"DE\") \u003d\u003d true","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"wanninglim"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"wanninglim"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"wanninglim"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"wanninglim"},"content":"    public static boolean containsSubstringIgnoreCase(String sentence, String word) {","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"wanninglim"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"wanninglim"},"content":"        requireNonNull(word);","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"wanninglim"},"content":"        String preppedWord \u003d word.trim().toLowerCase();","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"wanninglim"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"wanninglim"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"wanninglim"},"content":"        String preppedSentence \u003d sentence.toLowerCase();","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"wanninglim"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"wanninglim"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"wanninglim"},"content":"                .anyMatch(w -\u003e w.contains(preppedWord));","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wanninglim":25,"-":68}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.Model.DisplayType;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"    /** Returns an unmodifiable view of the filtered list of students */","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"    ObservableList\u003cStudent\u003e getFilteredStudentList();","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"    /** Returns an unmodifiable view of the filtered list of groups */","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"    ObservableList\u003cGroup\u003e getFilteredGroupList();","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"weenleen"},"content":"    /** Returns an unmodifiable view of the filtered list of tasks */","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"weenleen"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"wanninglim"},"content":"    DisplayType getDisplayType();","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"weenleen":3,"wanninglim":2,"-":48,"tzejit":8}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.Model.DisplayType;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"wanninglim"},"content":"    public DisplayType getDisplayType() {","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"        return model.getDisplayType();","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"    public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"        return model.getFilteredStudentList();","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"    public ObservableList\u003cGroup\u003e getFilteredGroupList() {","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"        return model.getFilteredGroupList();","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"weenleen"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"weenleen"},"content":"        return model.getFilteredTaskList();","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"weenleen":4,"wanninglim":2,"-":80,"tzejit":12}},{"path":"src/main/java/seedu/address/logic/commands/AddDeadlineTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weenleen"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"itsraveen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"itsraveen"},"content":"public class AddDeadlineTaskCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"itsraveen"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"itsraveen"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a deadline task to the address book. \"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"weenleen"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"weenleen"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"weenleen"},"content":"            + PREFIX_DEADLINE + \"DEADLINE \"","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"somekoreanboi"},"content":"            + PREFIX_DESCRIPTION + \"DESCRIPTION \"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"weenleen"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"weenleen"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"weenleen"},"content":"            + PREFIX_NAME + \"Tutorial Prep \"","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"weenleen"},"content":"            + PREFIX_DEADLINE + \"2021-09-12 \"","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"somekoreanboi"},"content":"            + PREFIX_DESCRIPTION + \"Prof Aaron\u0027s mod \"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"itsraveen"},"content":"            + PREFIX_TAG + \"W1404\";","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"itsraveen"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New deadline task added: %1$s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"weenleen"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the tApp\";","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"weenleen"},"content":"    public final Task toAdd;","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"     * Creates an AddCommand to add the specified {@code Student}","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"itsraveen"},"content":"    public AddDeadlineTaskCommand(Task task) {","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"weenleen"},"content":"        requireNonNull(task);","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"weenleen"},"content":"        toAdd \u003d task;","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"weenleen"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"weenleen"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"weenleen"},"content":"        if (model.hasTask(toAdd)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"weenleen"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"weenleen"},"content":"        model.addTask(toAdd);","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"weenleen"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"weenleen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"weenleen"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"itsraveen"},"content":"                || (other instanceof AddDeadlineTaskCommand // instanceof handles nulls","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"itsraveen"},"content":"                \u0026\u0026 toAdd.equals(((AddDeadlineTaskCommand) other).toAdd));","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"weenleen"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"weenleen":41,"itsraveen":13,"somekoreanboi":3,"tzejit":1}},{"path":"src/main/java/seedu/address/logic/commands/AddEventTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weenleen"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"itsraveen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"itsraveen"},"content":"public class AddEventTaskCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"itsraveen"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"itsraveen"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a event to the address book. \"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"weenleen"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"weenleen"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"itsraveen"},"content":"            + PREFIX_EVENT + \"EVENT \"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"somekoreanboi"},"content":"            + PREFIX_DESCRIPTION + \"DESCRIPTION \"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"weenleen"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"weenleen"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"weenleen"},"content":"            + PREFIX_NAME + \"Tutorial Prep \"","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"itsraveen"},"content":"            + PREFIX_EVENT + \"2021-09-12 \"","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"somekoreanboi"},"content":"            + PREFIX_DESCRIPTION + \"Prof Aaron\u0027s mod \"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"itsraveen"},"content":"            + PREFIX_TAG + \"W1404\";","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"itsraveen"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New event task added: %1$s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"weenleen"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the tApp\";","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"weenleen"},"content":"    public final Task toAdd;","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"     * Creates an AddCommand to add the specified {@code Student}","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"itsraveen"},"content":"    public AddEventTaskCommand(Task task) {","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"weenleen"},"content":"        requireNonNull(task);","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"weenleen"},"content":"        toAdd \u003d task;","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"weenleen"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"weenleen"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"weenleen"},"content":"        if (model.hasTask(toAdd)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"weenleen"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"weenleen"},"content":"        model.addTask(toAdd);","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"weenleen"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"weenleen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"weenleen"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"itsraveen"},"content":"                || (other instanceof AddEventTaskCommand // instanceof handles nulls","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"itsraveen"},"content":"                \u0026\u0026 toAdd.equals(((AddEventTaskCommand) other).toAdd));","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"weenleen"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"weenleen":39,"itsraveen":15,"somekoreanboi":3,"tzejit":1}},{"path":"src/main/java/seedu/address/logic/commands/AddGithubGroupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REPO;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_YEAR;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_GROUPS;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import java.util.List;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.commons.RepoName;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.LinkYear;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":" * Adds an existing student in the student list to an existing group in the group list.","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"public class AddGithubGroupCommand extends Command {","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"    public static final String COMMAND_WORD \u003d \"addGG\";","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a Github link to an existing group \"","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"            + \"by the index number used in the displayed group list.\\n\"","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"            + \"Parameters: INDEX (must be a positive integer)\"","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"            + PREFIX_YEAR + \"YEAR \"","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"            + PREFIX_REPO + \"REPO NAME\\n\"","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"            + PREFIX_YEAR + \"AY20212022 \"","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"            + PREFIX_REPO + \"tp\";","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"    public static final String MESSAGE_ADD_LINK_SUCCESS \u003d \"Link: %1$s has been added to group %2$s!\";","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"    private final Index index;","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"    private final LinkYear year;","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"    private final RepoName repoName;","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"     * @param index of the student in the filtered student list to add to the group","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"    public AddGithubGroupCommand(Index index, LinkYear year, RepoName repoName) {","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"        requireAllNonNull(index, year, repoName);","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"        this.year \u003d year;","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"        this.repoName \u003d repoName;","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"        List\u003cGroup\u003e lastShownList \u003d model.getFilteredGroupList();","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_GROUP_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"        Group groupToUpdate \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"        model.addGithubGroup(year, repoName, groupToUpdate);","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"        model.updateFilteredGroupList(PREDICATE_SHOW_ALL_GROUPS);","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"tzejit"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_LINK_SUCCESS,","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"                groupToUpdate.getGroupGithubLink(year, repoName), groupToUpdate.getName().name));","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"            return true;","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"        if (!(other instanceof AddGithubGroupCommand)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"tzejit"},"content":"            return false;","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"        // state check","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"tzejit"},"content":"        AddGithubGroupCommand e \u003d (AddGithubGroupCommand) other;","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"tzejit"},"content":"        return index.equals(e.index);","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"tzejit":85}},{"path":"src/main/java/seedu/address/logic/commands/AddGroupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":" * Adds a group to the group list in tApp.","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"public class AddGroupCommand extends Command {","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"    public static final String COMMAND_WORD \u003d \"addGroup\";","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a group to tApp. \"","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"            + PREFIX_GROUP + \"NAME \"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"            + PREFIX_GROUP + \"W14-4 \"","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"            + PREFIX_TAG + \"tApp\";","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New group added: %1$s\";","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"    public static final String MESSAGE_DUPLICATE_GROUP \u003d \"This group already exists in the tApp\";","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"    public final Group toAdd;","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"     * Creates an AddCommand to add the specified {@code Student}","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"    public AddGroupCommand(Group group) {","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"        requireNonNull(group);","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"        toAdd \u003d group;","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"        if (model.hasGroup(toAdd)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_GROUP);","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"        model.addGroup(toAdd);","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"                || (other instanceof AddGroupCommand // instanceof handles nulls","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"                \u0026\u0026 toAdd.equals(((AddGroupCommand) other).toAdd));","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"tzejit":55}},{"path":"src/main/java/seedu/address/logic/commands/AddStudentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REPO;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENTNUMBER;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_USERNAME;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":" * Adds a student to the student list in tApp.","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"public class AddStudentCommand extends Command {","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"    public static final String COMMAND_WORD \u003d \"addStudent\";","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a student to the tApp student list. \"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"            + PREFIX_STUDENTNUMBER + \"STUDENTNUMBER \"","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"            + \"[\" + PREFIX_USERNAME + \"GITHUB USERNAME] \"","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"            + \"[\" + PREFIX_REPO + \"REPO NAME] \"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"            + PREFIX_STUDENTNUMBER + \"A0123456B \"","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"            + PREFIX_USERNAME + \"user \"","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"            + PREFIX_REPO + \"ip \"","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New student added: %1$s\";","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"This student already exists in the tApp student list\";","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"    public final Student toAdd;","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"     * Creates an AddStudentCommand to add the specified {@code Student}","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"    public AddStudentCommand(Student student) {","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"        requireNonNull(student);","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"        toAdd \u003d student;","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"        if (model.hasStudent(toAdd)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"        model.addStudent(toAdd);","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"                || (other instanceof AddStudentCommand // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"                \u0026\u0026 toAdd.equals(((AddStudentCommand) other).toAdd));","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":41,"tzejit":29}},{"path":"src/main/java/seedu/address/logic/commands/AddStudentGroupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_GROUPS;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import java.util.List;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":" * Adds an existing student in the student list to an existing group in the group list.","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"public class AddStudentGroupCommand extends Command {","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"    public static final String COMMAND_WORD \u003d \"addSG\";","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an existing student to an existing group \"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"            + \"by the index number used in the displayed group list.\\n\"","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"            + \"Parameters: INDEX (must be a positive integer)\"","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"            + PREFIX_GROUP + \"GROUP\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"            + PREFIX_GROUP + \"W14-4\";","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"    public static final String MESSAGE_ADD_STUDENT_SUCCESS \u003d \"Student: %1$s has been added to group %2$s!\";","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"    private final Index index;","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"    private final GroupName group;","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"     * @param index of the student in the filtered student list to add to the group","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"    public AddStudentGroupCommand(Index index, GroupName group) {","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"        requireAllNonNull(index, group);","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"        this.group \u003d group;","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"        List\u003cStudent\u003e lastShownStudentList \u003d model.getFilteredStudentList();","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"        List\u003cGroup\u003e lastShownGroupList \u003d model.getFilteredGroupList();","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownStudentList.size()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"        Student studentToAdd \u003d lastShownStudentList.get(index.getZeroBased());","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"        if (!(studentToAdd.getGroupName().isNull())) {","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_GROUP_MEMBER_INDEX);","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"        Group groupToUpdate \u003d lastShownGroupList.stream()","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"                                                .filter(g -\u003e group.equals(g.getName()))","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"tzejit"},"content":"                                                .findAny()","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"                                                .orElse(null);","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"        if (groupToUpdate \u003d\u003d null) {","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_GROUP_DISPLAYED_NAME);","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"        Student existingStudent \u003d groupToUpdate.getMembers().studentList.stream()","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"                                                                        .filter(s -\u003e s.isSameStudent(studentToAdd))","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"                                                                        .findAny()","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"                                                                        .orElse(null);","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"        if (existingStudent !\u003d null) {","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"            throw new CommandException(Messages.MESSAGE_DUPLICATE_GROUP_MEMBER_INDEX);","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"tzejit"},"content":"        model.addStudentGroup(studentToAdd, groupToUpdate);","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"tzejit"},"content":"        model.updateFilteredGroupList(PREDICATE_SHOW_ALL_GROUPS);","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"tzejit"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_STUDENT_SUCCESS,","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"                studentToAdd.getName().fullName, groupToUpdate.getName().name));","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"tzejit"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"tzejit"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"tzejit"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"tzejit"},"content":"            return true;","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"tzejit"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"tzejit"},"content":"        if (!(other instanceof AddStudentGroupCommand)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"tzejit"},"content":"            return false;","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"tzejit"},"content":"        // state check","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"tzejit"},"content":"        AddStudentGroupCommand e \u003d (AddStudentGroupCommand) other;","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"tzejit"},"content":"        return index.equals(e.index);","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"tzejit":100}},{"path":"src/main/java/seedu/address/logic/commands/AddTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weenleen"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"weenleen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"weenleen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"weenleen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"weenleen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"weenleen"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"weenleen"},"content":"    public static final String COMMAND_WORD \u003d \"addTask\";","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"weenleen"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a task to the address book. \"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"weenleen"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"weenleen"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"weenleen"},"content":"            + PREFIX_DEADLINE + \"DEADLINE \"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"somekoreanboi"},"content":"            + PREFIX_DESCRIPTION + \"DESCRIPTION \"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"weenleen"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"weenleen"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"weenleen"},"content":"            + PREFIX_NAME + \"Tutorial Prep \"","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"weenleen"},"content":"            + PREFIX_DEADLINE + \"2021-09-12\"","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"somekoreanboi"},"content":"            + PREFIX_DESCRIPTION + \"Prof Aaron\u0027s mod \"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"weenleen"},"content":"            + PREFIX_TAG + \"W14-04\";","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"weenleen"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New task added: %1$s\";","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"weenleen"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the tApp\";","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"weenleen"},"content":"    public final Task toAdd;","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"     * Creates an AddCommand to add the specified {@code Student}","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"weenleen"},"content":"    public AddTaskCommand(Task task) {","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"weenleen"},"content":"        requireNonNull(task);","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"weenleen"},"content":"        toAdd \u003d task;","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"weenleen"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"weenleen"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"weenleen"},"content":"        if (model.hasTask(toAdd)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"weenleen"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"weenleen"},"content":"        model.addTask(toAdd);","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"weenleen"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"weenleen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"weenleen"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"weenleen"},"content":"                || (other instanceof AddTaskCommand // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"weenleen"},"content":"                \u0026\u0026 toAdd.equals(((AddTaskCommand) other).toAdd));","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"weenleen"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"weenleen":55,"somekoreanboi":3,"tzejit":1}},{"path":"src/main/java/seedu/address/logic/commands/AddTodoTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weenleen"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"weenleen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"weenleen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"weenleen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"itsraveen"},"content":"public class AddTodoTaskCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"itsraveen"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"itsraveen"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a todo task to the address book. \"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"weenleen"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"weenleen"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"somekoreanboi"},"content":"            + PREFIX_DESCRIPTION + \"DESCRIPTION \"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"weenleen"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"weenleen"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"weenleen"},"content":"            + PREFIX_NAME + \"Tutorial Prep \"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"somekoreanboi"},"content":"            + PREFIX_DESCRIPTION + \"Prof Aaron\u0027s mod \"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"itsraveen"},"content":"            + PREFIX_TAG + \"W1404\";","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"somekoreanboi"},"content":"    //TODO todo task description","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"itsraveen"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New todo task added: %1$s + \\nDescription: \";","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"weenleen"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the tApp\";","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"weenleen"},"content":"    public final Task toAdd;","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"     * Creates an AddCommand to add the specified {@code Student}","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"itsraveen"},"content":"    public AddTodoTaskCommand(Task task) {","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"weenleen"},"content":"        requireNonNull(task);","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"weenleen"},"content":"        toAdd \u003d task;","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"weenleen"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"weenleen"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"weenleen"},"content":"        if (model.hasTask(toAdd)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"weenleen"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"weenleen"},"content":"        model.addTask(toAdd);","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"weenleen"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"weenleen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"weenleen"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"itsraveen"},"content":"                || (other instanceof AddTodoTaskCommand // instanceof handles nulls","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"itsraveen"},"content":"                \u0026\u0026 toAdd.equals(((AddTodoTaskCommand) other).toAdd));","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"weenleen"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"weenleen":44,"itsraveen":8,"somekoreanboi":5,"tzejit":1}},{"path":"src/main/java/seedu/address/logic/commands/BackCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"somekoreanboi"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"somekoreanboi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"somekoreanboi"},"content":"public class BackCommand extends Command {","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"somekoreanboi"},"content":"    public static final String COMMAND_WORD \u003d \"/back\";","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"somekoreanboi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"You exited the current directory! \"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"somekoreanboi"},"content":"            + \"Please enter either \u0027students\u0027 or \u0027tasks\u0027 to enter a directory.\";","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"somekoreanboi"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"somekoreanboi"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"somekoreanboi"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"somekoreanboi"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"somekoreanboi"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"somekoreanboi":20}},{"path":"src/main/java/seedu/address/logic/commands/ClearAllCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"itsraveen"},"content":"public class ClearAllCommand extends Command {","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"itsraveen"},"content":"    public static final String COMMAND_WORD \u003d \"clearAll\";","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"itsraveen":2,"-":21}},{"path":"src/main/java/seedu/address/logic/commands/ClearGroupsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wanninglim"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"wanninglim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"wanninglim"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"wanninglim"},"content":" * Clears the address book.","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"wanninglim"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"wanninglim"},"content":"public class ClearGroupsCommand extends Command {","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"wanninglim"},"content":"    public static final String COMMAND_WORD \u003d \"clearGroups\";","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"wanninglim"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Group list has been cleared!\";","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"wanninglim"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"wanninglim"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"wanninglim"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"wanninglim"},"content":"        AddressBook newAddressBook \u003d new AddressBook();","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"wanninglim"},"content":"        newAddressBook.setTasks(model.getFilteredTaskList());","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"wanninglim"},"content":"        newAddressBook.setStudents(model.getFilteredStudentList());","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"wanninglim"},"content":"        newAddressBook.clearGroupFromStudents(model.getFilteredStudentList());","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"wanninglim"},"content":"        model.setAddressBook(newAddressBook);","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"wanninglim"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"wanninglim"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"wanninglim":28}},{"path":"src/main/java/seedu/address/logic/commands/ClearStudentsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"wanninglim"},"content":"public class ClearStudentsCommand extends Command {","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"wanninglim"},"content":"    public static final String COMMAND_WORD \u003d \"clearStudents\";","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"wanninglim"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Student list has been cleared!\";","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":19,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"wanninglim"},"content":"        AddressBook newAddressBook \u003d new AddressBook();","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"wanninglim"},"content":"        newAddressBook.setTasks(model.getFilteredTaskList());","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"wanninglim"},"content":"        newAddressBook.clearStudentsInGroups(model.getFilteredGroupList());","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"wanninglim"},"content":"        model.setAddressBook(newAddressBook);","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wanninglim":9,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/ClearTasksCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"itsraveen"},"content":"public class ClearTasksCommand extends Command {","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"itsraveen"},"content":"    public static final String COMMAND_WORD \u003d \"clearTasks\";","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"itsraveen"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Task list has been cleared!\";","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":19,"author":{"gitId":"itsraveen"},"content":"        model.clearTasks();","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"itsraveen":4,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"somekoreanboi":1,"-":71}},{"path":"src/main/java/seedu/address/logic/commands/DeleteGroupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":" * Deletes a student identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"public class DeleteGroupCommand extends Command {","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"    public static final String COMMAND_WORD \u003d \"deleteGroup\";","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"            + \": Deletes the group identified by the index number used in the displayed group list.\\n\"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"    public static final String MESSAGE_DELETE_GROUP_SUCCESS \u003d \"Deleted Group: %1$s\";","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"    public DeleteGroupCommand(Index targetIndex) {","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"        List\u003cGroup\u003e lastShownList \u003d model.getFilteredGroupList();","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_GROUP_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"        Group groupToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"        model.deleteGroup(groupToDelete);","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_GROUP_SUCCESS, groupToDelete));","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"                || (other instanceof DeleteGroupCommand // instanceof handles nulls","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteGroupCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"-":39,"tzejit":14}},{"path":"src/main/java/seedu/address/logic/commands/DeleteStudentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":" * Deletes a student identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"wanninglim"},"content":"public class DeleteStudentCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"wanninglim"},"content":"    public static final String COMMAND_WORD \u003d \"removeStudent\";","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"            + \": Deletes the student identified by the index number used in the displayed student list.\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"    public static final String MESSAGE_DELETE_STUDENT_SUCCESS \u003d \"Deleted Student: %1$s\";","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"wanninglim"},"content":"    public DeleteStudentCommand(Index targetIndex) {","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"        Student studentToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"wanninglim"},"content":"        model.removeStudent(studentToDelete);","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_STUDENT_SUCCESS, studentToDelete));","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"wanninglim"},"content":"                || (other instanceof DeleteStudentCommand // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"wanninglim"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteStudentCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wanninglim":6,"-":39,"tzejit":8}},{"path":"src/main/java/seedu/address/logic/commands/DeleteStudentGroupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_GROUPS;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import java.util.List;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":" * Adds an existing student in the student list to an existing group in the group list.","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"public class DeleteStudentGroupCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"    public static final String COMMAND_WORD \u003d \"deleteSG\";","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Deletes a member from a group \"","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"            + \"by the index number used in the displayed group list and member list.\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"            + \"Parameters: GROUP INDEX \u0026 MEMBER INDEX (must be a positive integers)\"","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"            + \"1 \";","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"    public static final String MESSAGE_DELETE_MEMBER_SUCCESS \u003d \"Member: %1$s has been removed from group %2$s!\";","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"    private final Index groupIndex;","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"    private final Index memberIndex;","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"     * @param groupIndex of the group in the filtered group list to add to the group","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"    public DeleteStudentGroupCommand(Index groupIndex, Index memberIndex) {","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"        requireAllNonNull(groupIndex, memberIndex);","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"        this.groupIndex \u003d groupIndex;","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"        this.memberIndex \u003d memberIndex;","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"        List\u003cGroup\u003e lastShownGroupList \u003d model.getFilteredGroupList();","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"        if (groupIndex.getZeroBased() \u003e\u003d lastShownGroupList.size()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_GROUP_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"        Group groupToUpdate \u003d lastShownGroupList.get(groupIndex.getZeroBased());","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"        List\u003cStudent\u003e lastShownMemberList \u003d groupToUpdate.getMembersList();","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"        if (memberIndex.getZeroBased() \u003e\u003d lastShownMemberList.size()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_GROUP_MEMBER_REMOVAL_INDEX);","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"        Student memberToRemove \u003d lastShownMemberList.get(memberIndex.getZeroBased());","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"        model.deleteStudentGroup(memberToRemove, groupToUpdate);","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"        model.updateFilteredGroupList(PREDICATE_SHOW_ALL_GROUPS);","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"tzejit"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_MEMBER_SUCCESS,","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"                memberToRemove.getName().fullName, groupToUpdate.getName().name));","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"            return true;","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"        if (!(other instanceof DeleteStudentGroupCommand)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"tzejit"},"content":"            return false;","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"        // state check","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"tzejit"},"content":"        DeleteStudentGroupCommand e \u003d (DeleteStudentGroupCommand) other;","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"tzejit"},"content":"        return groupIndex.equals(e.groupIndex)","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"tzejit"},"content":"                \u0026\u0026 memberIndex.equals(e.memberIndex);","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"tzejit":86}},{"path":"src/main/java/seedu/address/logic/commands/DeleteTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"itsraveen"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"itsraveen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"itsraveen"},"content":"import java.util.List;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"itsraveen"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"itsraveen"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"itsraveen"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"itsraveen"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"itsraveen"},"content":"    public static final String COMMAND_WORD \u003d \"deleteTask\";","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"itsraveen"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"itsraveen"},"content":"            + \": Deletes the task identified by the index number used in the displayed task list.\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"itsraveen"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"itsraveen"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"weenleen"},"content":"    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"Deleted Task: %1$s\";","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"itsraveen"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"itsraveen"},"content":"    public DeleteTaskCommand(Index targetIndex) {","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"itsraveen"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"itsraveen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"itsraveen"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"itsraveen"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"itsraveen"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"itsraveen"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"itsraveen"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"itsraveen"},"content":"        Task taskToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"itsraveen"},"content":"        model.deleteTask(taskToDelete);","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"itsraveen"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TASK_SUCCESS, taskToDelete));","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"itsraveen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"itsraveen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"itsraveen"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"itsraveen"},"content":"                || (other instanceof DeleteTaskCommand // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"itsraveen"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteTaskCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"itsraveen"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"itsraveen":50,"weenleen":1}},{"path":"src/main/java/seedu/address/logic/commands/EditStudentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENTNUMBER;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.commons.RepoName;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.StudentNumber;","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.UserName;","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":" * Edits the details of an existing student in the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"weenleen"},"content":"public class EditStudentCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"weenleen"},"content":"    public static final String COMMAND_WORD \u003d \"editStudent\";","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the student identified \"","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"            + \"by the index number used in the displayed student list. \"","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\"","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"            + PREFIX_STUDENTNUMBER + \"A0000000B\";","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"    public static final String MESSAGE_EDIT_STUDENT_SUCCESS \u003d \"Edited Student: %1$s\";","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"This student already exists in the address book.\";","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"    private final EditStudentDescriptor editStudentDescriptor;","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"     * @param index of the student in the filtered student list to edit","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"     * @param editStudentDescriptor details to edit the student with","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"weenleen"},"content":"    public EditStudentCommand(Index index, EditStudentDescriptor editStudentDescriptor) {","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"        requireNonNull(editStudentDescriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"        this.editStudentDescriptor \u003d new EditStudentDescriptor(editStudentDescriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"        Student studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"        Student editedStudent \u003d createEditedStudent(studentToEdit, editStudentDescriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"        if (!studentToEdit.isSameStudent(editedStudent) \u0026\u0026 model.hasStudent(editedStudent)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"tzejit"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"        model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"tzejit"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"tzejit"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent));","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"tzejit"},"content":"     * Creates and returns a {@code Student} with the details of {@code studentToEdit}","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"tzejit"},"content":"     * edited with {@code editStudentDescriptor}.","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"tzejit"},"content":"    private static Student createEditedStudent(Student studentToEdit, EditStudentDescriptor editStudentDescriptor) {","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"tzejit"},"content":"        assert studentToEdit !\u003d null;","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"tzejit"},"content":"        Name updatedName \u003d editStudentDescriptor.getName().orElse(studentToEdit.getName());","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"tzejit"},"content":"        Email updatedEmail \u003d editStudentDescriptor.getEmail().orElse(studentToEdit.getEmail());","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"tzejit"},"content":"        StudentNumber updatedStudentNumber \u003d editStudentDescriptor.getStudentNumber()","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"tzejit"},"content":"                .orElse(studentToEdit.getStudentNumber());","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"tzejit"},"content":"        UserName updatedUserName \u003d editStudentDescriptor.getUserName().orElse(studentToEdit.getUserName());","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"tzejit"},"content":"        RepoName updatedRepoName \u003d editStudentDescriptor.getRepoName().orElse(studentToEdit.getRepoName());","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"tzejit"},"content":"        Set\u003cTag\u003e updatedTags \u003d editStudentDescriptor.getTags().orElse(studentToEdit.getTags());","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"tzejit"},"content":"        return new Student(updatedName, updatedEmail, updatedStudentNumber, updatedUserName, updatedRepoName,","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"wanninglim"},"content":"                updatedTags, studentToEdit.getAttendance(), studentToEdit.getParticipation(),","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"wanninglim"},"content":"                studentToEdit.getGroupName());","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"weenleen"},"content":"        if (!(other instanceof EditStudentCommand)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"weenleen"},"content":"        EditStudentCommand e \u003d (EditStudentCommand) other;","lastModifiedDate":"2021-10-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":122,"author":{"gitId":"tzejit"},"content":"                \u0026\u0026 editStudentDescriptor.equals(e.editStudentDescriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"tzejit"},"content":"     * Stores the details to edit the student with. Each non-empty field value will replace the","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"tzejit"},"content":"     * corresponding field value of the student.","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"tzejit"},"content":"    public static class EditStudentDescriptor {","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"tzejit"},"content":"        private StudentNumber studentNumber;","lastModifiedDate":"2021-10-13"},{"lineNumber":133,"author":{"gitId":"tzejit"},"content":"        private UserName userName;","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"tzejit"},"content":"        private RepoName repoName;","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"tzejit"},"content":"        public EditStudentDescriptor() {}","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":143,"author":{"gitId":"tzejit"},"content":"        public EditStudentDescriptor(EditStudentDescriptor toCopy) {","lastModifiedDate":"2021-10-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":146,"author":{"gitId":"tzejit"},"content":"            setStudentNumber(toCopy.studentNumber);","lastModifiedDate":"2021-10-13"},{"lineNumber":147,"author":{"gitId":"tzejit"},"content":"            setUserName(toCopy.userName);","lastModifiedDate":"2021-10-18"},{"lineNumber":148,"author":{"gitId":"tzejit"},"content":"            setRepoName(toCopy.repoName);","lastModifiedDate":"2021-10-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"tzejit"},"content":"            return CollectionUtil.isAnyNonNull(name, email, studentNumber, userName, repoName, tags);","lastModifiedDate":"2021-10-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"tzejit"},"content":"        public void setStudentNumber(StudentNumber studentNumber) {","lastModifiedDate":"2021-10-13"},{"lineNumber":176,"author":{"gitId":"tzejit"},"content":"            this.studentNumber \u003d studentNumber;","lastModifiedDate":"2021-10-13"},{"lineNumber":177,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":178,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":179,"author":{"gitId":"tzejit"},"content":"        public Optional\u003cStudentNumber\u003e getStudentNumber() {","lastModifiedDate":"2021-10-13"},{"lineNumber":180,"author":{"gitId":"tzejit"},"content":"            return Optional.ofNullable(studentNumber);","lastModifiedDate":"2021-10-13"},{"lineNumber":181,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":182,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":183,"author":{"gitId":"tzejit"},"content":"        public void setUserName(UserName userName) {","lastModifiedDate":"2021-10-18"},{"lineNumber":184,"author":{"gitId":"tzejit"},"content":"            this.userName \u003d userName;","lastModifiedDate":"2021-10-18"},{"lineNumber":185,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":186,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":187,"author":{"gitId":"tzejit"},"content":"        public Optional\u003cUserName\u003e getUserName() {","lastModifiedDate":"2021-10-18"},{"lineNumber":188,"author":{"gitId":"tzejit"},"content":"            return Optional.ofNullable(userName);","lastModifiedDate":"2021-10-18"},{"lineNumber":189,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":190,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":191,"author":{"gitId":"tzejit"},"content":"        public void setRepoName(RepoName repoName) {","lastModifiedDate":"2021-10-18"},{"lineNumber":192,"author":{"gitId":"tzejit"},"content":"            this.repoName \u003d repoName;","lastModifiedDate":"2021-10-18"},{"lineNumber":193,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":194,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":195,"author":{"gitId":"tzejit"},"content":"        public Optional\u003cRepoName\u003e getRepoName() {","lastModifiedDate":"2021-10-18"},{"lineNumber":196,"author":{"gitId":"tzejit"},"content":"            return Optional.ofNullable(repoName);","lastModifiedDate":"2021-10-18"},{"lineNumber":197,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"tzejit"},"content":"            if (!(other instanceof EditStudentDescriptor)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"tzejit"},"content":"            EditStudentDescriptor e \u003d (EditStudentDescriptor) other;","lastModifiedDate":"2021-10-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":233,"author":{"gitId":"tzejit"},"content":"                    \u0026\u0026 getStudentNumber().equals(e.getStudentNumber())","lastModifiedDate":"2021-10-13"},{"lineNumber":234,"author":{"gitId":"tzejit"},"content":"                    \u0026\u0026 getUserName().equals(e.getUserName())","lastModifiedDate":"2021-10-18"},{"lineNumber":235,"author":{"gitId":"tzejit"},"content":"                    \u0026\u0026 getRepoName().equals(e.getRepoName())","lastModifiedDate":"2021-10-18"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"weenleen":5,"wanninglim":2,"somekoreanboi":1,"-":144,"tzejit":87}},{"path":"src/main/java/seedu/address/logic/commands/EditTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"somekoreanboi"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"somekoreanboi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"somekoreanboi"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"somekoreanboi"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"somekoreanboi"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"somekoreanboi"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"somekoreanboi"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.model.task.DeadlineTask;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.model.task.EventTask;","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.model.task.TaskDate;","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.model.task.TodoTask;","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"somekoreanboi"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"somekoreanboi"},"content":" * Edits the details of tasks stored in the list.","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"somekoreanboi"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"somekoreanboi"},"content":"public class EditTaskCommand extends Command {","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"somekoreanboi"},"content":"    public static final String COMMAND_WORD \u003d \"editTask\";","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"somekoreanboi"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the task identified \"","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"somekoreanboi"},"content":"            + \"by the index number used in the displayed task list. \"","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"somekoreanboi"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"somekoreanboi"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"somekoreanboi"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"somekoreanboi"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"somekoreanboi"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"somekoreanboi"},"content":"            + PREFIX_DEADLINE + \"2012-10-31\";","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"somekoreanboi"},"content":"    public static final String MESSAGE_EDIT_TASK_SUCCESS \u003d \"Edited Task: %1$s\";","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"somekoreanboi"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"somekoreanboi"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the address book.\";","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"somekoreanboi"},"content":"    private final Index index;","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"somekoreanboi"},"content":"    private final EditTaskDescriptor editTaskDescriptor;","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"somekoreanboi"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"somekoreanboi"},"content":"     * @param index of the task in the filtered task list to edit","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"somekoreanboi"},"content":"     * @param editTaskDescriptor details to edit the task with","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"somekoreanboi"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"somekoreanboi"},"content":"    public EditTaskCommand(Index index, EditTaskDescriptor editTaskDescriptor) {","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"somekoreanboi"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"somekoreanboi"},"content":"        requireNonNull(editTaskDescriptor);","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"somekoreanboi"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"somekoreanboi"},"content":"        this.editTaskDescriptor \u003d new EditTaskDescriptor(editTaskDescriptor);","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"somekoreanboi"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"somekoreanboi"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"somekoreanboi"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"somekoreanboi"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"somekoreanboi"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"somekoreanboi"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"somekoreanboi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"somekoreanboi"},"content":"        Task taskToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"somekoreanboi"},"content":"        Task editedTask \u003d createEditedTask(taskToEdit, editTaskDescriptor);","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"somekoreanboi"},"content":"        if (!taskToEdit.isSameTask(editedTask) \u0026\u0026 model.hasTask(editedTask)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"somekoreanboi"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"somekoreanboi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"somekoreanboi"},"content":"        model.setTask(taskToEdit, editedTask);","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"somekoreanboi"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"somekoreanboi"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_TASK_SUCCESS, editedTask));","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"somekoreanboi"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"somekoreanboi"},"content":"     * Creates and returns a {@code Student} with the details of {@code taskToEdit}","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"somekoreanboi"},"content":"     * edited with {@code editTaskDescriptor}.","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"somekoreanboi"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"somekoreanboi"},"content":"    private static Task createEditedTask(Task taskToEdit, EditTaskDescriptor editTaskDescriptor) {","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"somekoreanboi"},"content":"        assert taskToEdit !\u003d null;","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"somekoreanboi"},"content":"        TaskName updatedTaskName \u003d editTaskDescriptor.getTaskName().orElse(taskToEdit.getName());","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"somekoreanboi"},"content":"        Set\u003cTag\u003e updatedTags \u003d editTaskDescriptor.getTags().orElse(taskToEdit.getTags());","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"somekoreanboi"},"content":"        Description description \u003d editTaskDescriptor.getDescription()","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"somekoreanboi"},"content":"                .orElse(new Description(taskToEdit.getDescription()));","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"itsraveen"},"content":"        Task.Priority updatedPriority \u003d editTaskDescriptor.getPriority().orElse(taskToEdit.getPriority());","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"somekoreanboi"},"content":"        if (taskToEdit instanceof TodoTask) {","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"somekoreanboi"},"content":"            return new TodoTask(updatedTaskName, updatedTags, taskToEdit.checkIsDone(),","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"itsraveen"},"content":"                    description, updatedPriority);","lastModifiedDate":"2021-10-22"},{"lineNumber":101,"author":{"gitId":"somekoreanboi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"somekoreanboi"},"content":"        if (taskToEdit instanceof DeadlineTask) {","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"somekoreanboi"},"content":"            TaskDate updatedTaskDate \u003d ((DeadlineTask) taskToEdit).getDeadline();","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"somekoreanboi"},"content":"            return new DeadlineTask(updatedTaskName, updatedTags, taskToEdit.checkIsDone(), updatedTaskDate,","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"itsraveen"},"content":"                    description, updatedPriority);","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"somekoreanboi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"somekoreanboi"},"content":"        if (taskToEdit instanceof EventTask) {","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"somekoreanboi"},"content":"            TaskDate updatedTaskDate \u003d ((EventTask) taskToEdit).getTaskDate();","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"somekoreanboi"},"content":"            return new EventTask(updatedTaskName, updatedTags,","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"itsraveen"},"content":"                    taskToEdit.checkIsDone(), updatedTaskDate, description, updatedPriority);","lastModifiedDate":"2021-10-22"},{"lineNumber":114,"author":{"gitId":"somekoreanboi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"itsraveen"},"content":"        return new Task(updatedTaskName, updatedTags, taskToEdit.checkIsDone(), description, updatedPriority);","lastModifiedDate":"2021-10-22"},{"lineNumber":117,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"somekoreanboi"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"somekoreanboi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"somekoreanboi"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"somekoreanboi"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"somekoreanboi"},"content":"            return true;","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"somekoreanboi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"somekoreanboi"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"somekoreanboi"},"content":"        if (!(other instanceof EditTaskCommand)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"somekoreanboi"},"content":"            return false;","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"somekoreanboi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"somekoreanboi"},"content":"        // state check","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"somekoreanboi"},"content":"        EditTaskCommand e \u003d (EditTaskCommand) other;","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"somekoreanboi"},"content":"        return index.equals(e.index)","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"somekoreanboi"},"content":"                \u0026\u0026 editTaskDescriptor.equals(e.editTaskDescriptor);","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":136,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"somekoreanboi"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":138,"author":{"gitId":"somekoreanboi"},"content":"     * Stores the details to edit the student with. Each non-empty field value will replace the","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"somekoreanboi"},"content":"     * corresponding field value of the student.","lastModifiedDate":"2021-10-21"},{"lineNumber":140,"author":{"gitId":"somekoreanboi"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"somekoreanboi"},"content":"    public static class EditTaskDescriptor {","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"somekoreanboi"},"content":"        private TaskName taskName;","lastModifiedDate":"2021-10-21"},{"lineNumber":143,"author":{"gitId":"somekoreanboi"},"content":"        private Description description;","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"somekoreanboi"},"content":"        private TaskDate taskDate;","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"somekoreanboi"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-10-21"},{"lineNumber":146,"author":{"gitId":"itsraveen"},"content":"        private Task.Priority priority;","lastModifiedDate":"2021-10-22"},{"lineNumber":147,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"somekoreanboi"},"content":"        public EditTaskDescriptor() {}","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"somekoreanboi"},"content":"        /**","lastModifiedDate":"2021-10-21"},{"lineNumber":151,"author":{"gitId":"somekoreanboi"},"content":"         * Copy constructor.","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"somekoreanboi"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-10-21"},{"lineNumber":153,"author":{"gitId":"somekoreanboi"},"content":"         */","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"somekoreanboi"},"content":"        public EditTaskDescriptor(EditTaskDescriptor toCopy) {","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"somekoreanboi"},"content":"            setTaskName(toCopy.taskName);","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"somekoreanboi"},"content":"            setDeadline(toCopy.taskDate);","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"somekoreanboi"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"somekoreanboi"},"content":"            setDescription(toCopy.description);","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"somekoreanboi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"somekoreanboi"},"content":"        /**","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"somekoreanboi"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"somekoreanboi"},"content":"         */","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"somekoreanboi"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"somekoreanboi"},"content":"            return CollectionUtil.isAnyNonNull(taskName, taskDate, tags, description);","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"somekoreanboi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":168,"author":{"gitId":"somekoreanboi"},"content":"        public void setTaskName(TaskName taskName) {","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"somekoreanboi"},"content":"            this.taskName \u003d taskName;","lastModifiedDate":"2021-10-21"},{"lineNumber":170,"author":{"gitId":"somekoreanboi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":171,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"itsraveen"},"content":"        public void setTaskPriority(Task.Priority priority) {","lastModifiedDate":"2021-10-22"},{"lineNumber":173,"author":{"gitId":"itsraveen"},"content":"            this.priority \u003d priority;","lastModifiedDate":"2021-10-22"},{"lineNumber":174,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":175,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":176,"author":{"gitId":"somekoreanboi"},"content":"        public Optional\u003cTaskName\u003e getTaskName() {","lastModifiedDate":"2021-10-21"},{"lineNumber":177,"author":{"gitId":"somekoreanboi"},"content":"            return Optional.ofNullable(taskName);","lastModifiedDate":"2021-10-21"},{"lineNumber":178,"author":{"gitId":"somekoreanboi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":179,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":180,"author":{"gitId":"somekoreanboi"},"content":"        public void setDeadline(TaskDate taskDate) {","lastModifiedDate":"2021-10-21"},{"lineNumber":181,"author":{"gitId":"somekoreanboi"},"content":"            this.taskDate \u003d taskDate;","lastModifiedDate":"2021-10-21"},{"lineNumber":182,"author":{"gitId":"somekoreanboi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":183,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":184,"author":{"gitId":"somekoreanboi"},"content":"        public void setDescription(Description description) {","lastModifiedDate":"2021-10-21"},{"lineNumber":185,"author":{"gitId":"somekoreanboi"},"content":"            this.description \u003d description;","lastModifiedDate":"2021-10-21"},{"lineNumber":186,"author":{"gitId":"somekoreanboi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":187,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":188,"author":{"gitId":"somekoreanboi"},"content":"        public Optional\u003cDescription\u003e getDescription() {","lastModifiedDate":"2021-10-21"},{"lineNumber":189,"author":{"gitId":"somekoreanboi"},"content":"            return Optional.ofNullable(description);","lastModifiedDate":"2021-10-21"},{"lineNumber":190,"author":{"gitId":"somekoreanboi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":191,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":192,"author":{"gitId":"somekoreanboi"},"content":"        public Optional\u003cTaskDate\u003e getDeadline() {","lastModifiedDate":"2021-10-21"},{"lineNumber":193,"author":{"gitId":"somekoreanboi"},"content":"            return Optional.ofNullable(taskDate);","lastModifiedDate":"2021-10-21"},{"lineNumber":194,"author":{"gitId":"somekoreanboi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":195,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":196,"author":{"gitId":"itsraveen"},"content":"        public Optional\u003cTask.Priority\u003e getPriority() {","lastModifiedDate":"2021-10-22"},{"lineNumber":197,"author":{"gitId":"itsraveen"},"content":"            return Optional.ofNullable(priority);","lastModifiedDate":"2021-10-22"},{"lineNumber":198,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":199,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":200,"author":{"gitId":"somekoreanboi"},"content":"        /**","lastModifiedDate":"2021-10-21"},{"lineNumber":201,"author":{"gitId":"somekoreanboi"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2021-10-21"},{"lineNumber":202,"author":{"gitId":"somekoreanboi"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-10-21"},{"lineNumber":203,"author":{"gitId":"somekoreanboi"},"content":"         */","lastModifiedDate":"2021-10-21"},{"lineNumber":204,"author":{"gitId":"somekoreanboi"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-21"},{"lineNumber":205,"author":{"gitId":"somekoreanboi"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2021-10-21"},{"lineNumber":206,"author":{"gitId":"somekoreanboi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":207,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":208,"author":{"gitId":"somekoreanboi"},"content":"        /**","lastModifiedDate":"2021-10-21"},{"lineNumber":209,"author":{"gitId":"somekoreanboi"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-21"},{"lineNumber":210,"author":{"gitId":"somekoreanboi"},"content":"         * if modification is attempted.","lastModifiedDate":"2021-10-21"},{"lineNumber":211,"author":{"gitId":"somekoreanboi"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2021-10-21"},{"lineNumber":212,"author":{"gitId":"somekoreanboi"},"content":"         */","lastModifiedDate":"2021-10-21"},{"lineNumber":213,"author":{"gitId":"somekoreanboi"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2021-10-21"},{"lineNumber":214,"author":{"gitId":"somekoreanboi"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2021-10-21"},{"lineNumber":215,"author":{"gitId":"somekoreanboi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":216,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":217,"author":{"gitId":"somekoreanboi"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":218,"author":{"gitId":"somekoreanboi"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-10-21"},{"lineNumber":219,"author":{"gitId":"somekoreanboi"},"content":"            // short circuit if same object","lastModifiedDate":"2021-10-21"},{"lineNumber":220,"author":{"gitId":"somekoreanboi"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-21"},{"lineNumber":221,"author":{"gitId":"somekoreanboi"},"content":"                return true;","lastModifiedDate":"2021-10-21"},{"lineNumber":222,"author":{"gitId":"somekoreanboi"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":223,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":224,"author":{"gitId":"somekoreanboi"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-10-21"},{"lineNumber":225,"author":{"gitId":"somekoreanboi"},"content":"            if (!(other instanceof EditTaskDescriptor)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":226,"author":{"gitId":"somekoreanboi"},"content":"                return false;","lastModifiedDate":"2021-10-21"},{"lineNumber":227,"author":{"gitId":"somekoreanboi"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":228,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":229,"author":{"gitId":"somekoreanboi"},"content":"            // state check","lastModifiedDate":"2021-10-21"},{"lineNumber":230,"author":{"gitId":"somekoreanboi"},"content":"            EditTaskDescriptor e \u003d (EditTaskDescriptor) other;","lastModifiedDate":"2021-10-21"},{"lineNumber":231,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":232,"author":{"gitId":"somekoreanboi"},"content":"            return getTaskName().equals(e.getTaskName())","lastModifiedDate":"2021-10-21"},{"lineNumber":233,"author":{"gitId":"somekoreanboi"},"content":"                    \u0026\u0026 getDeadline().equals(e.getDeadline())","lastModifiedDate":"2021-10-21"},{"lineNumber":234,"author":{"gitId":"somekoreanboi"},"content":"                    \u0026\u0026 getDescription().equals(e.getDescription())","lastModifiedDate":"2021-10-21"},{"lineNumber":235,"author":{"gitId":"somekoreanboi"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2021-10-21"},{"lineNumber":236,"author":{"gitId":"somekoreanboi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":237,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":238,"author":{"gitId":"somekoreanboi"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"itsraveen":14,"somekoreanboi":224}},{"path":"src/main/java/seedu/address/logic/commands/FindGroupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wanninglim"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"wanninglim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"wanninglim"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.group.GroupContainsKeywordsPredicate;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"wanninglim"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"wanninglim"},"content":" * Finds and lists all groups in address book whose name contains any of the argument keywords.","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"wanninglim"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"wanninglim"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"wanninglim"},"content":"public class FindGroupCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"wanninglim"},"content":"    public static final String COMMAND_WORD \u003d \"findGroup\";","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"wanninglim"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all groups whose names contain any of \"","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"wanninglim"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"wanninglim"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"wanninglim"},"content":"            + \"Example: \" + COMMAND_WORD + \" W14-4\";","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"wanninglim"},"content":"    private final GroupContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"wanninglim"},"content":"    public FindGroupCommand(GroupContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"wanninglim"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"wanninglim"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"wanninglim"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"wanninglim"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"wanninglim"},"content":"        model.updateFilteredGroupList(predicate);","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"wanninglim"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"wanninglim"},"content":"                String.format(Messages.MESSAGE_GROUPS_LISTED_OVERVIEW, model.getFilteredGroupList().size()));","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"wanninglim"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"wanninglim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"wanninglim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"wanninglim"},"content":"                || (other instanceof FindGroupCommand // instanceof handles nulls","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"wanninglim"},"content":"                \u0026\u0026 predicate.equals(((FindGroupCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"wanninglim"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"wanninglim":42}},{"path":"src/main/java/seedu/address/logic/commands/FindStudentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":" * Finds and lists all students in address book whose name contains any of the argument keywords.","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"wanninglim"},"content":"public class FindStudentCommand extends Command {","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"wanninglim"},"content":"    public static final String COMMAND_WORD \u003d \"findStudent\";","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all students whose names contain any of \"","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"wanninglim"},"content":"    public FindStudentCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"        model.updateFilteredStudentList(predicate);","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"                String.format(Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW, model.getFilteredStudentList().size()));","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"wanninglim"},"content":"                || (other instanceof FindStudentCommand // instanceof handles nulls","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"wanninglim"},"content":"                \u0026\u0026 predicate.equals(((FindStudentCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"wanninglim":5,"-":32,"tzejit":5}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":" * Lists all students in the address book to the user.","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all students\";","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":20,"tzejit":4}},{"path":"src/main/java/seedu/address/logic/commands/ListGroupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_GROUPS;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"public class ListGroupCommand extends Command {","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"    public static final String COMMAND_WORD \u003d \"groups\";","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"wanninglim"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all groups.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"        model.updateFilteredGroupList(PREDICATE_SHOW_ALL_GROUPS);","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"wanninglim":1,"tzejit":19}},{"path":"src/main/java/seedu/address/logic/commands/ListStudentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"public class ListStudentCommand extends Command {","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"    public static final String COMMAND_WORD \u003d \"students\";","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"wanninglim"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all students.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"wanninglim":1,"tzejit":21}},{"path":"src/main/java/seedu/address/logic/commands/ListTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weenleen"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"weenleen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"weenleen"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"weenleen"},"content":"public class ListTaskCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"weenleen"},"content":"    public static final String COMMAND_WORD \u003d \"tasks\";","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"wanninglim"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all tasks.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"weenleen"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"weenleen"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"weenleen"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"weenleen"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"weenleen"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"weenleen":19,"wanninglim":1}},{"path":"src/main/java/seedu/address/logic/commands/MarkStudentAttCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wanninglim"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"wanninglim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEEK;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"wanninglim"},"content":"import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"wanninglim"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"wanninglim"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"wanninglim"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"wanninglim"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"wanninglim"},"content":" * Marks the attendance (present/absent) of an existing student in the student list.","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"wanninglim"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"wanninglim"},"content":"public class MarkStudentAttCommand extends Command {","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"wanninglim"},"content":"    public static final String COMMAND_WORD \u003d \"marka\";","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"wanninglim"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Marks the attendance of the student(s) identified \"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"wanninglim"},"content":"            + \"by the index number used in the displayed student list.\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"wanninglim"},"content":"            + \"Marking a student who is absent will change his attendance to present.\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"wanninglim"},"content":"            + \"Marking a student who is present will change his attendance to absent.\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"wanninglim"},"content":"            + \"Parameters: INDEX [MORE_INDEXES] (must be positive integers)\"","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"wanninglim"},"content":"            + \" [\" + PREFIX_WEEK + \"WEEK]\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"wanninglim"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 2 3 \"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"wanninglim"},"content":"            + PREFIX_WEEK + \"1\";","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"wanninglim"},"content":"    public static final String MESSAGE_MARK_STUDENT_SUCCESS \u003d \"Student: %1$s is marked as %2$s for week %3$s!\\n\";","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"wanninglim"},"content":"    private final List\u003cIndex\u003e targetIndexList;","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"wanninglim"},"content":"    private final int week;","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"wanninglim"},"content":"     * Marks student(s) attendance (present/absent)","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"wanninglim"},"content":"     * @param targetIndexList The list of indexes of students\u0027 attendances to be marked.","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"wanninglim"},"content":"    public MarkStudentAttCommand(List\u003cIndex\u003e targetIndexList, int week) {","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"wanninglim"},"content":"        requireNonNull(targetIndexList);","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"wanninglim"},"content":"        requireNonNull(week);","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"wanninglim"},"content":"        this.targetIndexList \u003d targetIndexList;","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"wanninglim"},"content":"        this.week \u003d week;","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"wanninglim"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"wanninglim"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"wanninglim"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"wanninglim"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"wanninglim"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"wanninglim"},"content":"        for (Index targetIndex : targetIndexList) {","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"wanninglim"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"wanninglim"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"wanninglim"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"wanninglim"},"content":"            Student studentToUpdate \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"wanninglim"},"content":"            model.markStudentAttendance(studentToUpdate, week);","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"wanninglim"},"content":"            String type \u003d model.getStudentAttendance(studentToUpdate, week);","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"wanninglim"},"content":"            model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"wanninglim"},"content":"            result.append(String.format(MESSAGE_MARK_STUDENT_SUCCESS,","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"wanninglim"},"content":"                    studentToUpdate.getName(), type, week + 1));","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"wanninglim"},"content":"        return new CommandResult(result.toString());","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"wanninglim"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"wanninglim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"wanninglim"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"wanninglim"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"wanninglim"},"content":"            return true;","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"wanninglim"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"wanninglim"},"content":"        if (!(other instanceof MarkStudentAttCommand)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"wanninglim"},"content":"            return false;","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"wanninglim"},"content":"        // state check","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"wanninglim"},"content":"        MarkStudentAttCommand e \u003d (MarkStudentAttCommand) other;","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"wanninglim"},"content":"        return targetIndexList.equals(e.targetIndexList);","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"wanninglim"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"wanninglim":85}},{"path":"src/main/java/seedu/address/logic/commands/MarkStudentPartCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wanninglim"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"wanninglim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEEK;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"wanninglim"},"content":"import java.util.List;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"wanninglim"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"wanninglim"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"wanninglim"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"wanninglim"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"wanninglim"},"content":" * Marks the participation (present/absent) of an existing student in the student list.","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"wanninglim"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"wanninglim"},"content":"public class MarkStudentPartCommand extends Command {","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"wanninglim"},"content":"    public static final String COMMAND_WORD \u003d \"markp\";","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"wanninglim"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Marks the participation of the student(s) identified \"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"wanninglim"},"content":"            + \"by the index number used in the displayed student list.\\n\"","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"wanninglim"},"content":"            + \"Marking a student will change his participation status to 1.\\n\"","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"wanninglim"},"content":"            + \"Marking a student again will change his participation status to 0.\\n\"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"wanninglim"},"content":"            + \"Parameters: INDEX [MORE_INDEXES] (must be positive integers)\"","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"wanninglim"},"content":"            + \" [\" + PREFIX_WEEK + \"WEEK]\\n\"","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"wanninglim"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 2 3 \"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"wanninglim"},"content":"            + PREFIX_WEEK + \"1\";","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"wanninglim"},"content":"    public static final String MESSAGE_MARK_STUDENT_SUCCESS \u003d \"Student: %1$s is marked as %2$s for week %3$s!\\n\";","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"wanninglim"},"content":"    private final List\u003cIndex\u003e targetIndexList;","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"wanninglim"},"content":"    private final int week;","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"wanninglim"},"content":"     * Marks student(s) participation (participated/not participated)","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"wanninglim"},"content":"     * @param targetIndexList of the student in the filtered student list to mark participation","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"wanninglim"},"content":"    public MarkStudentPartCommand(List\u003cIndex\u003e targetIndexList, int week) {","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"wanninglim"},"content":"        requireNonNull(targetIndexList);","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"wanninglim"},"content":"        requireNonNull(week);","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"wanninglim"},"content":"        this.targetIndexList \u003d targetIndexList;","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"wanninglim"},"content":"        this.week \u003d week;","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"wanninglim"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"wanninglim"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"wanninglim"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"wanninglim"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"wanninglim"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"wanninglim"},"content":"        for (Index targetIndex : targetIndexList) {","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"wanninglim"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"wanninglim"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"wanninglim"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"wanninglim"},"content":"            Student studentToUpdate \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"wanninglim"},"content":"            model.markStudentParticipation(studentToUpdate, week);","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"wanninglim"},"content":"            String type \u003d model.getStudentParticipation(studentToUpdate, week);","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"wanninglim"},"content":"            model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"wanninglim"},"content":"            result.append(String.format(MESSAGE_MARK_STUDENT_SUCCESS,","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"wanninglim"},"content":"                    studentToUpdate.getName(), type, week + 1));","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"wanninglim"},"content":"        return new CommandResult(result.toString());","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"wanninglim"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"wanninglim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"wanninglim"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"wanninglim"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"wanninglim"},"content":"            return true;","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"wanninglim"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"wanninglim"},"content":"        if (!(other instanceof MarkStudentPartCommand)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"wanninglim"},"content":"            return false;","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"wanninglim"},"content":"        // state check","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"wanninglim"},"content":"        MarkStudentPartCommand e \u003d (MarkStudentPartCommand) other;","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"wanninglim"},"content":"        return targetIndexList.equals(e.targetIndexList);","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"wanninglim"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"wanninglim":85}},{"path":"src/main/java/seedu/address/logic/commands/MarkTaskDoneCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"itsraveen"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"itsraveen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"weenleen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"itsraveen"},"content":"import java.util.List;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"itsraveen"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"itsraveen"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"itsraveen"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"itsraveen"},"content":"public class MarkTaskDoneCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"itsraveen"},"content":"    public static final String COMMAND_WORD \u003d \"doneTask\";","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"itsraveen"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"itsraveen"},"content":"            + \": Mark the task identified by the index number used in the displayed task list as done.\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"itsraveen"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"itsraveen"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"itsraveen"},"content":"    public static final String MESSAGE_MARK_TASK_DONE_SUCCESS \u003d \"Task Completed: %1$s\\n\";","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"weenleen"},"content":"    private final List\u003cIndex\u003e targetIndexList;","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"weenleen"},"content":"     * Marks a list of tasks with the given indexes as complete.","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"weenleen"},"content":"     * @param targetIndexList The list of indexes of tasks to be marked complete.","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"weenleen"},"content":"    public MarkTaskDoneCommand(List\u003cIndex\u003e targetIndexList) {","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"weenleen"},"content":"        requireNonNull(targetIndexList);","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"weenleen"},"content":"        this.targetIndexList \u003d targetIndexList;","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"itsraveen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"itsraveen"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"itsraveen"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"weenleen"},"content":"        List\u003cTask\u003e savedStateList \u003d new ArrayList\u003c\u003e(model.getFilteredTaskList());","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"weenleen"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"weenleen"},"content":"        for (Index targetIndex : targetIndexList) {","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"weenleen"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d savedStateList.size()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"itsraveen"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"itsraveen"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"weenleen"},"content":"            Task taskToMarkCompleted \u003d savedStateList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"itsraveen"},"content":"            model.completeTask(taskToMarkCompleted);","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"itsraveen"},"content":"            result.append(String.format(MESSAGE_MARK_TASK_DONE_SUCCESS, taskToMarkCompleted));","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"weenleen"},"content":"        return new CommandResult(result.toString());","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"itsraveen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"itsraveen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"itsraveen"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"itsraveen"},"content":"                || (other instanceof MarkTaskDoneCommand // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"weenleen"},"content":"                \u0026\u0026 targetIndexList.equals(((MarkTaskDoneCommand) other).targetIndexList)); // state check","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"itsraveen"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"itsraveen":46,"weenleen":16}},{"path":"src/main/java/seedu/address/logic/parser/AddDeadlineTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weenleen"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"itsraveen"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"itsraveen"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"itsraveen"},"content":"import seedu.address.logic.commands.AddDeadlineTaskCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.DeadlineTask;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.TaskDate;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"itsraveen"},"content":"public class AddDeadlineTaskCommandParser implements Parser\u003cAddDeadlineTaskCommand\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"weenleen"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTaskCommand","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"weenleen"},"content":"     * and returns an AddTaskCommand object for execution.","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"weenleen"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"itsraveen"},"content":"    public AddDeadlineTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"weenleen"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"itsraveen"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_DEADLINE, PREFIX_TAG,","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"itsraveen"},"content":"                        PREFIX_DESCRIPTION, PREFIX_PRIORITY);","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"weenleen"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_DEADLINE)","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"weenleen"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"itsraveen"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"itsraveen"},"content":"                    AddDeadlineTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"weenleen"},"content":"        TaskName name \u003d ParserUtil.parseTaskName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"somekoreanboi"},"content":"        TaskDate taskDate \u003d ParserUtil.parseTaskDate(argMultimap.getValue(PREFIX_DEADLINE).get());","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"weenleen"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"itsraveen"},"content":"        Task.Priority priority \u003d ParserUtil.parsePriority(argMultimap.getPriorityUsingPrefix(PREFIX_PRIORITY).get());","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"somekoreanboi"},"content":"        Description description;","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"somekoreanboi"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_DESCRIPTION)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"somekoreanboi"},"content":"            description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"somekoreanboi"},"content":"        } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"somekoreanboi"},"content":"            description \u003d Description.NO_DESCRIPTION;","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"somekoreanboi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"itsraveen"},"content":"        Task task \u003d new DeadlineTask(name, tagList, false, taskDate, description, priority);","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"itsraveen"},"content":"        return new AddDeadlineTaskCommand(task);","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"weenleen"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"weenleen"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"weenleen"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"weenleen"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"weenleen"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"weenleen":30,"itsraveen":22,"somekoreanboi":11}},{"path":"src/main/java/seedu/address/logic/parser/AddEventTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weenleen"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"weenleen"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"weenleen"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"itsraveen"},"content":"import seedu.address.logic.commands.AddEventTaskCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"itsraveen"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.EventTask;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.TaskDate;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"itsraveen"},"content":"public class AddEventTaskCommandParser implements Parser\u003cAddEventTaskCommand\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"weenleen"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTaskCommand","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"weenleen"},"content":"     * and returns an AddTaskCommand object for execution.","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"weenleen"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"itsraveen"},"content":"    public AddEventTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"weenleen"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"itsraveen"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_EVENT, PREFIX_TAG,","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"itsraveen"},"content":"                        PREFIX_DESCRIPTION, PREFIX_PRIORITY);","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"itsraveen"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_EVENT)","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"weenleen"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"itsraveen"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddEventTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"weenleen"},"content":"        TaskName name \u003d ParserUtil.parseTaskName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"somekoreanboi"},"content":"        TaskDate taskDate \u003d ParserUtil.parseTaskDate(argMultimap.getValue(PREFIX_EVENT).get());","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"weenleen"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"itsraveen"},"content":"        Task.Priority priority \u003d ParserUtil.parsePriority(argMultimap.getPriorityUsingPrefix(PREFIX_PRIORITY).get());","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"somekoreanboi"},"content":"        Description description;","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"somekoreanboi"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_DESCRIPTION)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"somekoreanboi"},"content":"            description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"somekoreanboi"},"content":"        } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"somekoreanboi"},"content":"            description \u003d Description.NO_DESCRIPTION;","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"somekoreanboi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"itsraveen"},"content":"        Task task \u003d new EventTask(name, tagList, false, taskDate, description, priority);","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"itsraveen"},"content":"        return new AddEventTaskCommand(task);","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"weenleen"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"weenleen"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"weenleen"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"weenleen"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"weenleen"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"weenleen":30,"itsraveen":21,"somekoreanboi":11}},{"path":"src/main/java/seedu/address/logic/parser/AddGithubGroupCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REPO;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_YEAR;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import seedu.address.logic.commands.AddGithubGroupCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.commons.RepoName;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.LinkYear;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":" * Parses input arguments and creates a new MarkStudentAttCommand object","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"public class AddGithubGroupCommandParser implements Parser\u003cAddGithubGroupCommand\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"     * Parses the given {@code String} of arguments in the context of the AddStudentGroupCommand","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"     * and returns a AddStudentGroupCommand object for execution.","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"    public AddGithubGroupCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_YEAR, PREFIX_REPO);","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"        Index index;","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"                    AddGithubGroupCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_YEAR, PREFIX_REPO)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"                    AddGithubGroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"        LinkYear year \u003d ParserUtil.parseYear(argMultimap.getValue(PREFIX_YEAR).get());","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"        RepoName repoName \u003d ParserUtil.parseRepo(argMultimap.getValue(PREFIX_REPO).get());","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"        return new AddGithubGroupCommand(index, year, repoName);","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"tzejit":60}},{"path":"src/main/java/seedu/address/logic/parser/AddGroupCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import seedu.address.logic.commands.AddGroupCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"public class AddGroupCommandParser implements Parser\u003cAddGroupCommand\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"     * Parses the given {@code String} of arguments in the context of the AddGroupCommand","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"     * and returns an AddGroupCommand object for execution.","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"    public AddGroupCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_GROUP, PREFIX_TAG);","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_GROUP)","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddGroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"        GroupName name \u003d ParserUtil.parseGroupName(argMultimap.getValue(PREFIX_GROUP).get());","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"        Group group \u003d new Group(name, tagList);","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"        return new AddGroupCommand(group);","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"tzejit":47}},{"path":"src/main/java/seedu/address/logic/parser/AddStudentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REPO;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENTNUMBER;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_USERNAME;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"import seedu.address.logic.commands.AddStudentCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.commons.RepoName;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.StudentNumber;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.UserName;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":" * Parses input arguments and creates a new AddStudentCommand object","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"public class AddStudentCommandParser implements Parser\u003cAddStudentCommand\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"     * Parses the given {@code String} of arguments in the context of the AddStudentCommand","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"     * and returns an AddStudentCommand object for execution.","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"    public AddStudentCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_EMAIL, PREFIX_STUDENTNUMBER, PREFIX_USERNAME,","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"                        PREFIX_REPO, PREFIX_TAG);","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_EMAIL, PREFIX_STUDENTNUMBER)","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddStudentCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"        StudentNumber studentNumber \u003d ParserUtil.parseStudentNumber(argMultimap.getValue(PREFIX_STUDENTNUMBER).get());","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"        UserName userName \u003d null;","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"        RepoName repoName \u003d null;","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"        if (argMultimap.getValue(PREFIX_USERNAME).isPresent()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"            userName \u003d ParserUtil.parseUserName(argMultimap.getValue(PREFIX_USERNAME).get());","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"        if (argMultimap.getValue(PREFIX_REPO).isPresent()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"            repoName \u003d ParserUtil.parseRepo(argMultimap.getValue(PREFIX_REPO).get());","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"        Student student \u003d new Student(name, email, studentNumber, userName, repoName, tagList);","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"        return new AddStudentCommand(student);","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"-":35,"tzejit":37}},{"path":"src/main/java/seedu/address/logic/parser/AddStudentGroupCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import seedu.address.logic.commands.AddStudentGroupCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":" * Parses input arguments and creates a new MarkStudentAttCommand object","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"public class AddStudentGroupCommandParser implements Parser\u003cAddStudentGroupCommand\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"     * Parses the given {@code String} of arguments in the context of the AddStudentGroupCommand","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"     * and returns a AddStudentGroupCommand object for execution.","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"    public AddStudentGroupCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_GROUP);","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"        Index index;","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"                    AddStudentGroupCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"        if (argMultimap.getValue(PREFIX_GROUP).isPresent()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"            GroupName group \u003d ParserUtil.parseGroupName(argMultimap.getValue(PREFIX_GROUP).get());","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"            return new AddStudentGroupCommand(index, group);","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"                AddStudentGroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"tzejit":44}},{"path":"src/main/java/seedu/address/logic/parser/AddTodoTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weenleen"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"weenleen"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"weenleen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"weenleen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"weenleen"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"weenleen"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"itsraveen"},"content":"import seedu.address.logic.commands.AddTodoTaskCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"itsraveen"},"content":"public class AddTodoTaskCommandParser implements Parser\u003cAddTodoTaskCommand\u003e {","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"weenleen"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTaskCommand","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"weenleen"},"content":"     * and returns an AddTaskCommand object for execution.","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"weenleen"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"itsraveen"},"content":"    public AddTodoTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"weenleen"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"itsraveen"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_TAG, PREFIX_DESCRIPTION, PREFIX_PRIORITY);","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"itsraveen"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME)","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"weenleen"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"itsraveen"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTodoTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"somekoreanboi"},"content":"        Description description;","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"somekoreanboi"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_DESCRIPTION)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"somekoreanboi"},"content":"            description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"somekoreanboi"},"content":"        } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"somekoreanboi"},"content":"            description \u003d Description.NO_DESCRIPTION;","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"somekoreanboi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"weenleen"},"content":"        TaskName name \u003d ParserUtil.parseTaskName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"weenleen"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"itsraveen"},"content":"        Task.Priority priority \u003d ParserUtil.parsePriority(argMultimap.getPriorityUsingPrefix(PREFIX_PRIORITY).get());","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"itsraveen"},"content":"        Task task \u003d new Task(name, tagList, false, description, priority);","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"itsraveen"},"content":"        return new AddTodoTaskCommand(task);","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"weenleen"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"weenleen"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"weenleen"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"weenleen"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"weenleen"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"weenleen":36,"itsraveen":10,"somekoreanboi":10}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"itsraveen"},"content":"import seedu.address.logic.commands.AddDeadlineTaskCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"itsraveen"},"content":"import seedu.address.logic.commands.AddEventTaskCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import seedu.address.logic.commands.AddGithubGroupCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import seedu.address.logic.commands.AddGroupCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.logic.commands.AddStudentCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"import seedu.address.logic.commands.AddStudentGroupCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"itsraveen"},"content":"import seedu.address.logic.commands.AddTodoTaskCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.logic.commands.BackCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"itsraveen"},"content":"import seedu.address.logic.commands.ClearAllCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"wanninglim"},"content":"import seedu.address.logic.commands.ClearGroupsCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"wanninglim"},"content":"import seedu.address.logic.commands.ClearStudentsCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"itsraveen"},"content":"import seedu.address.logic.commands.ClearTasksCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"import seedu.address.logic.commands.DeleteGroupCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.logic.commands.DeleteStudentCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"import seedu.address.logic.commands.DeleteStudentGroupCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.EditStudentCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.logic.commands.EditTaskCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"wanninglim"},"content":"import seedu.address.logic.commands.FindGroupCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"wanninglim"},"content":"import seedu.address.logic.commands.FindStudentCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"import seedu.address.logic.commands.ListGroupCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.logic.commands.ListStudentCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.ListTaskCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"wanninglim"},"content":"import seedu.address.logic.commands.MarkStudentAttCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"wanninglim"},"content":"import seedu.address.logic.commands.MarkStudentPartCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.logic.commands.MarkTaskDoneCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"somekoreanboi"},"content":"        case BackCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"somekoreanboi"},"content":"            return new BackCommand();","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"        case AddStudentCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"            return new AddStudentCommandParser().parse(arguments);","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"weenleen"},"content":"        case EditStudentCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"weenleen"},"content":"            return new EditStudentCommandParser().parse(arguments);","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"wanninglim"},"content":"        case DeleteStudentCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"wanninglim"},"content":"            return new DeleteStudentCommandParser().parse(arguments);","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"wanninglim"},"content":"        case MarkStudentAttCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"wanninglim"},"content":"            return new MarkStudentAttCommandParser().parse(arguments);","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"wanninglim"},"content":"        case MarkStudentPartCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"wanninglim"},"content":"            return new MarkStudentPartCommandParser().parse(arguments);","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"itsraveen"},"content":"        case ClearAllCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"itsraveen"},"content":"            return new ClearAllCommand();","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"itsraveen"},"content":"        case ClearTasksCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"itsraveen"},"content":"            return new ClearTasksCommand();","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"wanninglim"},"content":"        case ClearStudentsCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"wanninglim"},"content":"            return new ClearStudentsCommand();","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"wanninglim"},"content":"        case ClearGroupsCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"wanninglim"},"content":"            return new ClearGroupsCommand();","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"wanninglim"},"content":"        case FindStudentCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"wanninglim"},"content":"            return new FindStudentCommandParser().parse(arguments);","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"wanninglim"},"content":"        case FindGroupCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"wanninglim"},"content":"            return new FindGroupCommandParser().parse(arguments);","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"tzejit"},"content":"        case ListStudentCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"tzejit"},"content":"            return new ListStudentCommand();","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":116,"author":{"gitId":"itsraveen"},"content":"        case AddTodoTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"itsraveen"},"content":"            return new AddTodoTaskCommandParser().parse(arguments);","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"itsraveen"},"content":"        case AddDeadlineTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"itsraveen"},"content":"            return new AddDeadlineTaskCommandParser().parse(arguments);","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"itsraveen"},"content":"        case AddEventTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"itsraveen"},"content":"            return new AddEventTaskCommandParser().parse(arguments);","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"itsraveen"},"content":"        case MarkTaskDoneCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"itsraveen"},"content":"            return new MarkTaskDoneCommandParser().parse(arguments);","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"itsraveen"},"content":"        case DeleteTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"itsraveen"},"content":"            return new DeleteTaskCommandParser().parse(arguments);","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"weenleen"},"content":"        case ListTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"weenleen"},"content":"            return new ListTaskCommand();","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"tzejit"},"content":"        case AddGroupCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"tzejit"},"content":"            return new AddGroupCommandParser().parse(arguments);","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"tzejit"},"content":"        case DeleteGroupCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"tzejit"},"content":"            return new DeleteGroupCommandParser().parse(arguments);","lastModifiedDate":"2021-10-18"},{"lineNumber":139,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"tzejit"},"content":"        case ListGroupCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"tzejit"},"content":"            return new ListGroupCommand();","lastModifiedDate":"2021-10-18"},{"lineNumber":142,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":143,"author":{"gitId":"tzejit"},"content":"        case AddStudentGroupCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"tzejit"},"content":"            return new AddStudentGroupCommandParser().parse(arguments);","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"tzejit"},"content":"        case DeleteStudentGroupCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-23"},{"lineNumber":147,"author":{"gitId":"tzejit"},"content":"            return new DeleteStudentGroupCommandParser().parse(arguments);","lastModifiedDate":"2021-10-23"},{"lineNumber":148,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":149,"author":{"gitId":"tzejit"},"content":"        case AddGithubGroupCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-18"},{"lineNumber":150,"author":{"gitId":"tzejit"},"content":"            return new AddGithubGroupCommandParser().parse(arguments);","lastModifiedDate":"2021-10-18"},{"lineNumber":151,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":152,"author":{"gitId":"somekoreanboi"},"content":"        case EditTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-21"},{"lineNumber":153,"author":{"gitId":"somekoreanboi"},"content":"            return new EditTaskCommandParser().parse(arguments);","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"itsraveen":23,"weenleen":8,"wanninglim":21,"somekoreanboi":12,"-":66,"tzejit":29}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"itsraveen"},"content":"    public Optional\u003cString\u003e getPriorityUsingPrefix(Prefix prefix) {","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"itsraveen"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"itsraveen"},"content":"            return Optional.of(\"LOW\");","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"itsraveen"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"itsraveen"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"itsraveen":8,"-":60}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"    public static final Prefix PREFIX_STUDENTNUMBER \u003d new Prefix(\"s/\");","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"    public static final Prefix PREFIX_USERNAME \u003d new Prefix(\"u/\");","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"weenleen"},"content":"    public static final Prefix PREFIX_DEADLINE \u003d new Prefix(\"by/\");","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"somekoreanboi"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"itsraveen"},"content":"    public static final Prefix PREFIX_EVENT \u003d new Prefix(\"on/\");","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"wanninglim"},"content":"    public static final Prefix PREFIX_WEEK \u003d new Prefix(\"w/\");","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"    public static final Prefix PREFIX_GROUP \u003d new Prefix(\"g/\");","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"    public static final Prefix PREFIX_YEAR \u003d new Prefix(\"y/\");","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"    public static final Prefix PREFIX_REPO \u003d new Prefix(\"r/\");","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"itsraveen"},"content":"    public static final Prefix PREFIX_PRIORITY \u003d new Prefix(\"p/\");","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"weenleen":1,"itsraveen":2,"wanninglim":1,"somekoreanboi":1,"-":13,"tzejit":5}},{"path":"src/main/java/seedu/address/logic/parser/DeleteGroupCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import seedu.address.logic.commands.DeleteGroupCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":" * Parses input arguments and creates a new DeleteStudentCommand object","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"public class DeleteGroupCommandParser implements Parser\u003cDeleteGroupCommand\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteStudentCommand","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"     * and returns a DeleteStudentCommand object for execution.","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"    public DeleteGroupCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"            return new DeleteGroupCommand(index);","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteGroupCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"tzejit":29}},{"path":"src/main/java/seedu/address/logic/parser/DeleteStudentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"wanninglim"},"content":"import seedu.address.logic.commands.DeleteStudentCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"wanninglim"},"content":" * Parses input arguments and creates a new DeleteStudentCommand object","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"wanninglim"},"content":"public class DeleteStudentCommandParser implements Parser\u003cDeleteStudentCommand\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"wanninglim"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteStudentCommand","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"wanninglim"},"content":"     * and returns a DeleteStudentCommand object for execution.","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"wanninglim"},"content":"    public DeleteStudentCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"wanninglim"},"content":"            return new DeleteStudentCommand(index);","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"wanninglim"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteStudentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"wanninglim":8,"-":21}},{"path":"src/main/java/seedu/address/logic/parser/DeleteStudentGroupCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_WRONG_NUMBER_OF_INDEX;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import seedu.address.logic.commands.DeleteStudentGroupCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":" * Parses input arguments and creates a new DeleteStudentCommand object","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"public class DeleteStudentGroupCommandParser implements Parser\u003cDeleteStudentGroupCommand\u003e {","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteStudentGroupCommand","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"     * and returns a DeleteStudentGroupCommand object for execution.","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"    public DeleteStudentGroupCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"        ArrayList\u003cIndex\u003e index;","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"            index \u003d ParserUtil.parseMultipleIndex(args);","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteStudentGroupCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"        if (index.size() !\u003d 2) {","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"                    String.format(MESSAGE_WRONG_NUMBER_OF_INDEX, 2, index.size()));","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"        return new DeleteStudentGroupCommand(index.get(0), index.get(1));","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"tzejit":39}},{"path":"src/main/java/seedu/address/logic/parser/DeleteTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"itsraveen"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"itsraveen"},"content":"public class DeleteTaskCommandParser implements Parser\u003cDeleteTaskCommand\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"itsraveen"},"content":"    public DeleteTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"itsraveen"},"content":"            return new DeleteTaskCommand(index);","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"itsraveen"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"itsraveen":5,"-":20}},{"path":"src/main/java/seedu/address/logic/parser/EditStudentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REPO;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENTNUMBER;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_USERNAME;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.EditStudentCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.EditStudentCommand.EditStudentDescriptor;","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"weenleen"},"content":"public class EditStudentCommandParser implements Parser\u003cEditStudentCommand\u003e {","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"weenleen"},"content":"    public EditStudentCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_EMAIL, PREFIX_STUDENTNUMBER, PREFIX_REPO,","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"                        PREFIX_USERNAME, PREFIX_TAG);","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"weenleen"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"weenleen"},"content":"                    EditStudentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"        EditStudentDescriptor editStudentDescriptor \u003d new EditStudentDescriptor();","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"            editStudentDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"            editStudentDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"        if (argMultimap.getValue(PREFIX_USERNAME).isPresent()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"            editStudentDescriptor.setUserName(ParserUtil.parseUserName(argMultimap.getValue(PREFIX_USERNAME).get()));","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"        if (argMultimap.getValue(PREFIX_REPO).isPresent()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"            editStudentDescriptor.setRepoName(ParserUtil.parseRepo(argMultimap.getValue(PREFIX_REPO).get()));","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"        if (argMultimap.getValue(PREFIX_STUDENTNUMBER).isPresent()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"            editStudentDescriptor.setStudentNumber(ParserUtil.parseStudentNumber(argMultimap","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"                    .getValue(PREFIX_STUDENTNUMBER).get()));","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"tzejit"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editStudentDescriptor::setTags);","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"        if (!editStudentDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"weenleen"},"content":"            throw new ParseException(EditStudentCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"weenleen"},"content":"        return new EditStudentCommand(index, editStudentDescriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"weenleen":8,"-":61,"tzejit":20}},{"path":"src/main/java/seedu/address/logic/parser/EditTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.logic.commands.EditTaskCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"somekoreanboi"},"content":"public class EditTaskCommandParser implements Parser\u003cEditTaskCommand\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"somekoreanboi"},"content":"     * and returns an EditTaskCommand object for execution.","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"somekoreanboi"},"content":"    public EditTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"somekoreanboi"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_DEADLINE,","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"somekoreanboi"},"content":"                        PREFIX_TAG, PREFIX_EVENT, PREFIX_DESCRIPTION);","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"somekoreanboi"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"somekoreanboi"},"content":"        EditTaskCommand.EditTaskDescriptor editTaskDescriptor \u003d new EditTaskCommand.EditTaskDescriptor();","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"somekoreanboi"},"content":"            editTaskDescriptor.setTaskName(ParserUtil.parseTaskName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"somekoreanboi"},"content":"        if (argMultimap.getValue(PREFIX_DEADLINE).isPresent()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"somekoreanboi"},"content":"            editTaskDescriptor.setDeadline(ParserUtil.parseTaskDate(argMultimap.getValue(PREFIX_DEADLINE).get()));","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"somekoreanboi"},"content":"        if (argMultimap.getValue(PREFIX_EVENT).isPresent()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"somekoreanboi"},"content":"            editTaskDescriptor.setDeadline(ParserUtil.parseTaskDate(argMultimap.getValue(PREFIX_EVENT).get()));","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"somekoreanboi"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isPresent()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"somekoreanboi"},"content":"            editTaskDescriptor","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"somekoreanboi"},"content":"                    .setDescription(ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get()));","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"somekoreanboi"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editTaskDescriptor::setTags);","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"somekoreanboi"},"content":"        if (!editTaskDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"somekoreanboi"},"content":"            throw new ParseException(EditTaskCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"somekoreanboi"},"content":"        return new EditTaskCommand(index, editTaskDescriptor);","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"somekoreanboi":24,"-":60}},{"path":"src/main/java/seedu/address/logic/parser/FindGroupCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"wanninglim"},"content":"import seedu.address.logic.commands.FindGroupCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.group.GroupContainsKeywordsPredicate;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"wanninglim"},"content":" * Parses input arguments and creates a new FindGroupCommand object","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"wanninglim"},"content":"public class FindGroupCommandParser implements Parser\u003cFindGroupCommand\u003e {","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"wanninglim"},"content":"     * Parses the given {@code String} of arguments in the context of the FindGroupCommand","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"wanninglim"},"content":"     * and returns a FindGroupCommand object for execution.","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"wanninglim"},"content":"    public FindGroupCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"wanninglim"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindGroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"wanninglim"},"content":"        return new FindGroupCommand(new GroupContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"wanninglim":9,"-":24}},{"path":"src/main/java/seedu/address/logic/parser/FindStudentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"wanninglim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"wanninglim"},"content":"import seedu.address.logic.commands.FindStudentCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"wanninglim"},"content":" * Parses input arguments and creates a new FindStudentCommand object","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"wanninglim"},"content":"public class FindStudentCommandParser implements Parser\u003cFindStudentCommand\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"wanninglim"},"content":"     * Parses the given {@code String} of arguments in the context of the FindStudentCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"wanninglim"},"content":"     * and returns a FindStudentCommand object for execution.","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"wanninglim"},"content":"    public FindStudentCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"wanninglim"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"wanninglim"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindStudentCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"wanninglim"},"content":"        return new FindStudentCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"wanninglim":10,"-":24,"tzejit":1}},{"path":"src/main/java/seedu/address/logic/parser/MarkStudentAttCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wanninglim"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"wanninglim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEEK;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"wanninglim"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"wanninglim"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"wanninglim"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"wanninglim"},"content":"import seedu.address.logic.commands.MarkStudentAttCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"wanninglim"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"wanninglim"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"wanninglim"},"content":" * Parses input arguments and creates a new MarkStudentAttCommand object","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"wanninglim"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"wanninglim"},"content":"public class MarkStudentAttCommandParser implements Parser\u003cMarkStudentAttCommand\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"wanninglim"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkStudentAttCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"wanninglim"},"content":"     * and returns a MarkStudentAttCommand object for execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"wanninglim"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"wanninglim"},"content":"    public MarkStudentAttCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"wanninglim"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"wanninglim"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"wanninglim"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_WEEK);","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"wanninglim"},"content":"        String trimmedArgs \u003d argMultimap.getPreamble().trim();","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"wanninglim"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"wanninglim"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"wanninglim"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkStudentAttCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"wanninglim"},"content":"        List\u003cString\u003e students \u003d List.of(trimmedArgs.split(\"\\\\s+\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"wanninglim"},"content":"        List\u003cIndex\u003e studentsToMark \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"wanninglim"},"content":"        try {","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"wanninglim"},"content":"            for (String str : students) {","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"wanninglim"},"content":"                Index index \u003d ParserUtil.parseIndex(str);","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"wanninglim"},"content":"                studentsToMark.add(index);","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"wanninglim"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"wanninglim"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"wanninglim"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"wanninglim"},"content":"                    MarkStudentAttCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"wanninglim"},"content":"        if (argMultimap.getValue(PREFIX_WEEK).isPresent()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"wanninglim"},"content":"            int week \u003d ParserUtil.parseWeek(argMultimap.getValue(PREFIX_WEEK).get());","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"wanninglim"},"content":"            return new MarkStudentAttCommand(studentsToMark, week);","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"wanninglim"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"wanninglim"},"content":"                MarkStudentAttCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"wanninglim"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"wanninglim":57}},{"path":"src/main/java/seedu/address/logic/parser/MarkStudentPartCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wanninglim"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"wanninglim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEEK;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"wanninglim"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"wanninglim"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"wanninglim"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"wanninglim"},"content":"import seedu.address.logic.commands.MarkStudentPartCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"wanninglim"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"wanninglim"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"wanninglim"},"content":" * Parses input arguments and creates a new MarkStudentPartCommand object","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"wanninglim"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"wanninglim"},"content":"public class MarkStudentPartCommandParser implements Parser\u003cMarkStudentPartCommand\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"wanninglim"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkStudentPartCommand","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"wanninglim"},"content":"     * and returns a MarkStudentPartCommand object for execution.","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"wanninglim"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"wanninglim"},"content":"    public MarkStudentPartCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"wanninglim"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"wanninglim"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"wanninglim"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_WEEK);","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"wanninglim"},"content":"        String trimmedArgs \u003d argMultimap.getPreamble().trim();","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"wanninglim"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"wanninglim"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"wanninglim"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkStudentPartCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"wanninglim"},"content":"        List\u003cString\u003e students \u003d List.of(trimmedArgs.split(\"\\\\s+\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"wanninglim"},"content":"        List\u003cIndex\u003e studentsToMark \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"wanninglim"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"wanninglim"},"content":"            for (String str : students) {","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"wanninglim"},"content":"                Index index \u003d ParserUtil.parseIndex(str);","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"wanninglim"},"content":"                studentsToMark.add(index);","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"wanninglim"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"wanninglim"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"wanninglim"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"wanninglim"},"content":"                    MarkStudentPartCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"wanninglim"},"content":"        if (argMultimap.getValue(PREFIX_WEEK).isPresent()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"wanninglim"},"content":"            int week \u003d ParserUtil.parseWeek(argMultimap.getValue(PREFIX_WEEK).get());","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"wanninglim"},"content":"            return new MarkStudentPartCommand(studentsToMark, week);","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"wanninglim"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"wanninglim"},"content":"                MarkStudentPartCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"wanninglim"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"wanninglim":57}},{"path":"src/main/java/seedu/address/logic/parser/MarkTaskDoneCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"itsraveen"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"itsraveen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"weenleen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"weenleen"},"content":"import java.util.List;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"itsraveen"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"itsraveen"},"content":"import seedu.address.logic.commands.MarkTaskDoneCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"itsraveen"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"weenleen"},"content":"public class MarkTaskDoneCommandParser implements Parser\u003cMarkTaskDoneCommand\u003e {","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"itsraveen"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"itsraveen"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"itsraveen"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"itsraveen"},"content":"    public MarkTaskDoneCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"itsraveen"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"weenleen"},"content":"        List\u003cString\u003e lst \u003d List.of(args.trim().split(\" \"));","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"weenleen"},"content":"        List\u003cIndex\u003e taskIndexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"itsraveen"},"content":"        try {","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"weenleen"},"content":"            for (String str : lst) {","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"weenleen"},"content":"                Index index \u003d ParserUtil.parseIndex(str);","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"weenleen"},"content":"                taskIndexes.add(index);","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"weenleen"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"weenleen"},"content":"            return new MarkTaskDoneCommand(taskIndexes);","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"itsraveen"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"itsraveen"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"itsraveen"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkTaskDoneCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"itsraveen"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"itsraveen":25,"weenleen":11}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.commons.RepoName;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.LinkYear;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.student.Attendance;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.StudentNumber;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.UserName;","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.Task.Priority;","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.TaskDate;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"     * Parses {@code oneBasedIndex} separated by any number of spaces into an array of {@code Index} and returns it.","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"    public static ArrayList\u003cIndex\u003e parseMultipleIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"        String[] indexStrArray \u003d trimmedIndex.split(\"\\\\s+\");","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"        ArrayList\u003cIndex\u003e indexArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"        for (String s : indexStrArray) {","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"            if (!StringUtil.isNonZeroUnsignedInteger(s)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"                throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"            indexArray.add(Index.fromOneBased(Integer.parseInt(s)));","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"        return indexArray;","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"wanninglim"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"wanninglim"},"content":"     * trimmed.","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"wanninglim"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"wanninglim"},"content":"    public static int parseWeek(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"wanninglim"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"wanninglim"},"content":"        if (!Attendance.isValidWeek(Integer.parseInt(oneBasedIndex))) {","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"wanninglim"},"content":"            throw new ParseException(String.format(Attendance.MESSAGE_CONSTRAINTS, Attendance.NUMBER_OF_WEEKS));","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"wanninglim"},"content":"        return Integer.parseInt(trimmedIndex) - 1;","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"somekoreanboi"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"somekoreanboi"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"somekoreanboi"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"somekoreanboi"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"somekoreanboi"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"somekoreanboi"},"content":"    public static Description parseDescription(String description) throws ParseException {","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"somekoreanboi"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"somekoreanboi"},"content":"        if (!Description.isValidDescription(trimmedDescription)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"itsraveen"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"somekoreanboi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"somekoreanboi"},"content":"        return new Description(trimmedDescription);","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":108,"author":{"gitId":"itsraveen"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2021-10-22"},{"lineNumber":109,"author":{"gitId":"itsraveen"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-22"},{"lineNumber":110,"author":{"gitId":"itsraveen"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":111,"author":{"gitId":"itsraveen"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2021-10-22"},{"lineNumber":112,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":113,"author":{"gitId":"itsraveen"},"content":"    public static Priority parsePriority(String description) throws ParseException {","lastModifiedDate":"2021-10-22"},{"lineNumber":114,"author":{"gitId":"itsraveen"},"content":"        String trimmedPriorityInCamps \u003d description.trim().toUpperCase();","lastModifiedDate":"2021-10-22"},{"lineNumber":115,"author":{"gitId":"itsraveen"},"content":"        Priority priority;","lastModifiedDate":"2021-10-22"},{"lineNumber":116,"author":{"gitId":"itsraveen"},"content":"        if (!Description.isValidDescription(trimmedPriorityInCamps)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":117,"author":{"gitId":"itsraveen"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":118,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":119,"author":{"gitId":"itsraveen"},"content":"        if (trimmedPriorityInCamps.contains(\"H\")) {","lastModifiedDate":"2021-10-22"},{"lineNumber":120,"author":{"gitId":"itsraveen"},"content":"            priority \u003d Priority.HIGH;","lastModifiedDate":"2021-10-22"},{"lineNumber":121,"author":{"gitId":"itsraveen"},"content":"        } else if (trimmedPriorityInCamps.contains(\"M\")) {","lastModifiedDate":"2021-10-22"},{"lineNumber":122,"author":{"gitId":"itsraveen"},"content":"            priority \u003d Priority.MEDIUM;","lastModifiedDate":"2021-10-22"},{"lineNumber":123,"author":{"gitId":"itsraveen"},"content":"        } else {","lastModifiedDate":"2021-10-22"},{"lineNumber":124,"author":{"gitId":"itsraveen"},"content":"            priority \u003d Priority.LOW;","lastModifiedDate":"2021-10-22"},{"lineNumber":125,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":126,"author":{"gitId":"itsraveen"},"content":"        return priority;","lastModifiedDate":"2021-10-22"},{"lineNumber":127,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":128,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":129,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":130,"author":{"gitId":"tzejit"},"content":"     * Parses a {@code String name} into a {@code GroupName}.","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":133,"author":{"gitId":"tzejit"},"content":"     * @throws ParseException if the given {@code gorupName} is invalid.","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"tzejit"},"content":"    public static GroupName parseGroupName(String groupName) throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"tzejit"},"content":"        requireNonNull(groupName);","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"tzejit"},"content":"        String trimmedName \u003d groupName.trim();","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"tzejit"},"content":"        if (!GroupName.isValidName(trimmedName)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":139,"author":{"gitId":"tzejit"},"content":"            throw new ParseException(GroupName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"tzejit"},"content":"        return new GroupName(trimmedName);","lastModifiedDate":"2021-10-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"tzejit"},"content":"     * Parses a {@code String year} into an {@code LinkYear}.","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":148,"author":{"gitId":"tzejit"},"content":"     * @throws ParseException if the given {@code year} is invalid.","lastModifiedDate":"2021-10-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":150,"author":{"gitId":"tzejit"},"content":"    public static LinkYear parseYear(String year) throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":151,"author":{"gitId":"tzejit"},"content":"        requireNonNull(year);","lastModifiedDate":"2021-10-18"},{"lineNumber":152,"author":{"gitId":"tzejit"},"content":"        String trimmedYear \u003d year.trim();","lastModifiedDate":"2021-10-18"},{"lineNumber":153,"author":{"gitId":"tzejit"},"content":"        if (!LinkYear.isValidYear(trimmedYear)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":154,"author":{"gitId":"tzejit"},"content":"            throw new ParseException(LinkYear.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":156,"author":{"gitId":"tzejit"},"content":"        return new LinkYear(trimmedYear);","lastModifiedDate":"2021-10-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":159,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":160,"author":{"gitId":"tzejit"},"content":"     * Parses a {@code String repoName} into an {@code RepoName}.","lastModifiedDate":"2021-10-18"},{"lineNumber":161,"author":{"gitId":"tzejit"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-18"},{"lineNumber":162,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":163,"author":{"gitId":"tzejit"},"content":"     * @throws ParseException if the given {@code repoName} is invalid.","lastModifiedDate":"2021-10-18"},{"lineNumber":164,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":165,"author":{"gitId":"tzejit"},"content":"    public static RepoName parseRepo(String repoName) throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":166,"author":{"gitId":"tzejit"},"content":"        requireNonNull(repoName);","lastModifiedDate":"2021-10-18"},{"lineNumber":167,"author":{"gitId":"tzejit"},"content":"        String trimmedRepoName \u003d repoName.trim();","lastModifiedDate":"2021-10-18"},{"lineNumber":168,"author":{"gitId":"tzejit"},"content":"        if (!RepoName.isValidRepoName(trimmedRepoName)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":169,"author":{"gitId":"tzejit"},"content":"            throw new ParseException(RepoName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":170,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":171,"author":{"gitId":"tzejit"},"content":"        return new RepoName(trimmedRepoName);","lastModifiedDate":"2021-10-18"},{"lineNumber":172,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":173,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":174,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":175,"author":{"gitId":"tzejit"},"content":"     * Parses a {@code String userName} into an {@code UserName}.","lastModifiedDate":"2021-10-18"},{"lineNumber":176,"author":{"gitId":"tzejit"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-18"},{"lineNumber":177,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":178,"author":{"gitId":"tzejit"},"content":"     * @throws ParseException if the given {@code userName} is invalid.","lastModifiedDate":"2021-10-18"},{"lineNumber":179,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":180,"author":{"gitId":"tzejit"},"content":"    public static UserName parseUserName(String userName) throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":181,"author":{"gitId":"tzejit"},"content":"        requireNonNull(userName);","lastModifiedDate":"2021-10-18"},{"lineNumber":182,"author":{"gitId":"tzejit"},"content":"        String trimmedUserName \u003d userName.trim();","lastModifiedDate":"2021-10-18"},{"lineNumber":183,"author":{"gitId":"tzejit"},"content":"        if (!UserName.isValidUserName(trimmedUserName)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":184,"author":{"gitId":"tzejit"},"content":"            throw new ParseException(UserName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":185,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":186,"author":{"gitId":"tzejit"},"content":"        return new UserName(trimmedUserName);","lastModifiedDate":"2021-10-18"},{"lineNumber":187,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":188,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":189,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":190,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":191,"author":{"gitId":"weenleen"},"content":"     * Parses a {@code String name} into a {@code TaskName}.","lastModifiedDate":"2021-10-07"},{"lineNumber":192,"author":{"gitId":"weenleen"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-07"},{"lineNumber":193,"author":{"gitId":"weenleen"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":194,"author":{"gitId":"weenleen"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2021-10-07"},{"lineNumber":195,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":196,"author":{"gitId":"weenleen"},"content":"    public static TaskName parseTaskName(String name) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":197,"author":{"gitId":"weenleen"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-10-07"},{"lineNumber":198,"author":{"gitId":"weenleen"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2021-10-07"},{"lineNumber":199,"author":{"gitId":"wanninglim"},"content":"        if (!TaskName.isValidName(trimmedName)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":200,"author":{"gitId":"weenleen"},"content":"            throw new ParseException(TaskName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":201,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":202,"author":{"gitId":"weenleen"},"content":"        return new TaskName(trimmedName);","lastModifiedDate":"2021-10-07"},{"lineNumber":203,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":204,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":206,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":207,"author":{"gitId":"somekoreanboi"},"content":"     * Parses a {@code String taskDate} into a {@code TaskDate}.","lastModifiedDate":"2021-10-21"},{"lineNumber":208,"author":{"gitId":"weenleen"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-07"},{"lineNumber":209,"author":{"gitId":"weenleen"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":210,"author":{"gitId":"somekoreanboi"},"content":"     * @throws ParseException if the given {@code taskDate} is invalid.","lastModifiedDate":"2021-10-21"},{"lineNumber":211,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":212,"author":{"gitId":"somekoreanboi"},"content":"    public static TaskDate parseTaskDate(String taskDate) throws ParseException {","lastModifiedDate":"2021-10-21"},{"lineNumber":213,"author":{"gitId":"somekoreanboi"},"content":"        requireNonNull(taskDate);","lastModifiedDate":"2021-10-21"},{"lineNumber":214,"author":{"gitId":"somekoreanboi"},"content":"        String trimmedTaskDate \u003d taskDate.trim();","lastModifiedDate":"2021-10-21"},{"lineNumber":215,"author":{"gitId":"somekoreanboi"},"content":"        if (!TaskDate.isValidDeadline(trimmedTaskDate)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":216,"author":{"gitId":"itsraveen"},"content":"            throw new ParseException(TaskDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":217,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":218,"author":{"gitId":"somekoreanboi"},"content":"        return new TaskDate(trimmedTaskDate);","lastModifiedDate":"2021-10-21"},{"lineNumber":219,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":220,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":221,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":223,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":225,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":226,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":227,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":237,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":238,"author":{"gitId":"tzejit"},"content":"     * Parses a {@code String studentNumber} into an {@code StudentNumber}.","lastModifiedDate":"2021-10-13"},{"lineNumber":239,"author":{"gitId":"tzejit"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-13"},{"lineNumber":240,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":241,"author":{"gitId":"tzejit"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2021-10-13"},{"lineNumber":242,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":243,"author":{"gitId":"tzejit"},"content":"    public static StudentNumber parseStudentNumber(String studentNumber) throws ParseException {","lastModifiedDate":"2021-10-13"},{"lineNumber":244,"author":{"gitId":"tzejit"},"content":"        requireNonNull(studentNumber);","lastModifiedDate":"2021-10-13"},{"lineNumber":245,"author":{"gitId":"tzejit"},"content":"        String trimmedStudentNumber \u003d studentNumber.trim();","lastModifiedDate":"2021-10-13"},{"lineNumber":246,"author":{"gitId":"tzejit"},"content":"        if (!StudentNumber.isValidNumber(trimmedStudentNumber)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":247,"author":{"gitId":"tzejit"},"content":"            throw new ParseException(StudentNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-13"},{"lineNumber":248,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":249,"author":{"gitId":"tzejit"},"content":"        return new StudentNumber(trimmedStudentNumber);","lastModifiedDate":"2021-10-13"},{"lineNumber":250,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":251,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":253,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":254,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":255,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":256,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":257,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":262,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":268,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":269,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"itsraveen":26,"weenleen":22,"wanninglim":15,"somekoreanboi":21,"-":105,"tzejit":89}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"weenleen"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.UniqueGroupList;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.UniqueStudentList;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.task.UniqueTaskList;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":" * Duplicates are not allowed (by .isSameStudent comparison)","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"    private final UniqueStudentList students;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"weenleen"},"content":"    private final UniqueTaskList tasks;","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"    private final UniqueGroupList groups;","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"        students \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"weenleen"},"content":"        tasks \u003d new UniqueTaskList();","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"        groups \u003d new UniqueGroupList();","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"     * Creates an AddressBook using the Students in the {@code toBeCopied}","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"     * Replaces the contents of the student list with {@code students}.","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"     * {@code students} must not contain duplicate students.","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"    public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"        this.students.setStudents(students);","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"     * Replaces the contents of the student list with {@code tasks}.","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"weenleen"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"weenleen"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"weenleen"},"content":"        this.tasks.setTasks(tasks);","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"     * Replaces the contents of the group list with {@code groups}.","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"     * {@code groups} must not contain duplicate groups.","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"    public void setGroups(List\u003cGroup\u003e groups) {","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"        this.groups.setGroups(groups);","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"wanninglim"},"content":"     * Clears all student data from {@code groups}.","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"wanninglim"},"content":"     * {@code groups} must not contain duplicate groups.","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"wanninglim"},"content":"    public void clearStudentsInGroups(List\u003cGroup\u003e groups) {","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"wanninglim"},"content":"        this.groups.clearStudentsInGroups(groups);","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":90,"author":{"gitId":"tzejit"},"content":"        setStudents(newData.getStudentList());","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"weenleen"},"content":"        setTasks(newData.getTaskList());","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"tzejit"},"content":"        setGroups(newData.getGroupList());","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"weenleen"},"content":"    //// task-level operations","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"weenleen"},"content":"     * Returns true if a task {@code task} exists in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"weenleen"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"weenleen"},"content":"        requireNonNull(task);","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"weenleen"},"content":"        return tasks.contains(task);","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"weenleen"},"content":"     * Adds a task to the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"weenleen"},"content":"     * The task must not already exist in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"weenleen"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"weenleen"},"content":"        tasks.add(t);","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"weenleen"},"content":"     * Replaces the given task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"weenleen"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"weenleen"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"weenleen"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"weenleen"},"content":"        requireNonNull(editedTask);","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"weenleen"},"content":"        tasks.setTask(target, editedTask);","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"itsraveen"},"content":"    public void markTaskComplete(Task target) {","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"itsraveen"},"content":"        target.markTaskComplete();","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"weenleen"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"weenleen"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"weenleen"},"content":"    public void removeTask(Task key) {","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"weenleen"},"content":"        tasks.remove(key);","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":135,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":136,"author":{"gitId":"itsraveen"},"content":"    public void clearAllTask() {","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"itsraveen"},"content":"        tasks.removeAllTasks();","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":139,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":141,"author":{"gitId":"tzejit"},"content":"    //// student-level operations","lastModifiedDate":"2021-10-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"tzejit"},"content":"     * Returns true if a student with the same identity as {@code student} exists in the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"tzejit"},"content":"    public boolean hasStudent(Student student) {","lastModifiedDate":"2021-10-08"},{"lineNumber":147,"author":{"gitId":"tzejit"},"content":"        requireNonNull(student);","lastModifiedDate":"2021-10-08"},{"lineNumber":148,"author":{"gitId":"tzejit"},"content":"        return students.contains(student);","lastModifiedDate":"2021-10-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"tzejit"},"content":"     * Adds a student to the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"tzejit"},"content":"     * The student must not already exist in the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"tzejit"},"content":"     * @param s","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"tzejit"},"content":"    public void addStudent(Student s) {","lastModifiedDate":"2021-10-08"},{"lineNumber":157,"author":{"gitId":"tzejit"},"content":"        students.add(s);","lastModifiedDate":"2021-10-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":161,"author":{"gitId":"tzejit"},"content":"     * Replaces the given student {@code target} in the list with {@code editedStudent}.","lastModifiedDate":"2021-10-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":163,"author":{"gitId":"tzejit"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student in the","lastModifiedDate":"2021-10-08"},{"lineNumber":164,"author":{"gitId":"tzejit"},"content":"     * address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":166,"author":{"gitId":"tzejit"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2021-10-08"},{"lineNumber":167,"author":{"gitId":"tzejit"},"content":"        requireNonNull(editedStudent);","lastModifiedDate":"2021-10-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":169,"author":{"gitId":"tzejit"},"content":"        students.setStudent(target, editedStudent);","lastModifiedDate":"2021-10-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":176,"author":{"gitId":"tzejit"},"content":"    public void removeStudent(Student key) {","lastModifiedDate":"2021-10-08"},{"lineNumber":177,"author":{"gitId":"wanninglim"},"content":"        requireNonNull(key);","lastModifiedDate":"2021-10-25"},{"lineNumber":178,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":179,"author":{"gitId":"tzejit"},"content":"        students.remove(key);","lastModifiedDate":"2021-10-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":183,"author":{"gitId":"wanninglim"},"content":"     * Removes {@code key} from the {@code group} in the {@code AddressBook}.","lastModifiedDate":"2021-10-25"},{"lineNumber":184,"author":{"gitId":"wanninglim"},"content":"     * {@code key} and {@code group} must exist in the address book.","lastModifiedDate":"2021-10-25"},{"lineNumber":185,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":186,"author":{"gitId":"wanninglim"},"content":"    public void removeStudentFromGroup(Student key, Group group) {","lastModifiedDate":"2021-10-25"},{"lineNumber":187,"author":{"gitId":"wanninglim"},"content":"        requireAllNonNull(key, group);","lastModifiedDate":"2021-10-25"},{"lineNumber":188,"author":{"gitId":"wanninglim"},"content":"        groups.removeStudentFromGroup(key, group);","lastModifiedDate":"2021-10-25"},{"lineNumber":189,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":190,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":191,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":192,"author":{"gitId":"wanninglim"},"content":"     * Removes the current group to {@code key} from this {@code AddressBook}.","lastModifiedDate":"2021-10-25"},{"lineNumber":193,"author":{"gitId":"wanninglim"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2021-10-25"},{"lineNumber":194,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":195,"author":{"gitId":"wanninglim"},"content":"    public void removeGroupFromStudent(Student key) {","lastModifiedDate":"2021-10-25"},{"lineNumber":196,"author":{"gitId":"wanninglim"},"content":"        requireNonNull(key);","lastModifiedDate":"2021-10-25"},{"lineNumber":197,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":198,"author":{"gitId":"wanninglim"},"content":"        students.removeGroupFromStudent(key);","lastModifiedDate":"2021-10-25"},{"lineNumber":199,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":200,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":201,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":202,"author":{"gitId":"wanninglim"},"content":"     * Removes all groupNames from list of students.","lastModifiedDate":"2021-10-25"},{"lineNumber":203,"author":{"gitId":"wanninglim"},"content":"     * {@code groups} must not contain duplicate groups.","lastModifiedDate":"2021-10-25"},{"lineNumber":204,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":205,"author":{"gitId":"wanninglim"},"content":"    public void clearGroupFromStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2021-10-25"},{"lineNumber":206,"author":{"gitId":"wanninglim"},"content":"        requireNonNull(students);","lastModifiedDate":"2021-10-25"},{"lineNumber":207,"author":{"gitId":"wanninglim"},"content":"        this.students.clearGroupFromStudents(students);","lastModifiedDate":"2021-10-25"},{"lineNumber":208,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":209,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":210,"author":{"gitId":"tzejit"},"content":"    //// group-level operations","lastModifiedDate":"2021-10-18"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":213,"author":{"gitId":"tzejit"},"content":"     * Returns true if a group with the same identity as {@code group} exists in the address book.","lastModifiedDate":"2021-10-18"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":215,"author":{"gitId":"tzejit"},"content":"    public boolean hasGroup(Group group) {","lastModifiedDate":"2021-10-18"},{"lineNumber":216,"author":{"gitId":"tzejit"},"content":"        requireNonNull(group);","lastModifiedDate":"2021-10-18"},{"lineNumber":217,"author":{"gitId":"tzejit"},"content":"        return groups.contains(group);","lastModifiedDate":"2021-10-18"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":221,"author":{"gitId":"tzejit"},"content":"     * Adds a group to the address book.","lastModifiedDate":"2021-10-18"},{"lineNumber":222,"author":{"gitId":"tzejit"},"content":"     * The group must not already exist in the address book.","lastModifiedDate":"2021-10-18"},{"lineNumber":223,"author":{"gitId":"tzejit"},"content":"     * @param g","lastModifiedDate":"2021-10-18"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":225,"author":{"gitId":"tzejit"},"content":"    public void addGroup(Group g) {","lastModifiedDate":"2021-10-18"},{"lineNumber":226,"author":{"gitId":"tzejit"},"content":"        groups.add(g);","lastModifiedDate":"2021-10-18"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":230,"author":{"gitId":"tzejit"},"content":"     * Replaces the given group {@code target} in the list with {@code editedGroup}.","lastModifiedDate":"2021-10-18"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-10-18"},{"lineNumber":232,"author":{"gitId":"tzejit"},"content":"     * The group identity of {@code editedGroup} must not be the same as another existing group in the","lastModifiedDate":"2021-10-18"},{"lineNumber":233,"author":{"gitId":"tzejit"},"content":"     * address book.","lastModifiedDate":"2021-10-18"},{"lineNumber":234,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":235,"author":{"gitId":"tzejit"},"content":"    public void setGroup(Group target, Group editedGroup) {","lastModifiedDate":"2021-10-18"},{"lineNumber":236,"author":{"gitId":"tzejit"},"content":"        requireNonNull(editedGroup);","lastModifiedDate":"2021-10-18"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":238,"author":{"gitId":"tzejit"},"content":"        groups.setGroup(target, editedGroup);","lastModifiedDate":"2021-10-18"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":242,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2021-10-18"},{"lineNumber":243,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2021-10-18"},{"lineNumber":244,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":245,"author":{"gitId":"tzejit"},"content":"    public void removeGroup(Group key) {","lastModifiedDate":"2021-10-18"},{"lineNumber":246,"author":{"gitId":"tzejit"},"content":"        groups.remove(key);","lastModifiedDate":"2021-10-18"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"tzejit"},"content":"        return students.asUnmodifiableObservableList().size() + \" students\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":254,"author":{"gitId":"weenleen"},"content":"               + tasks.asUnmodifiableObservableList().size() + \" tasks\";","lastModifiedDate":"2021-10-07"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"tzejit"},"content":"    public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":260,"author":{"gitId":"tzejit"},"content":"        return students.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":263,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":264,"author":{"gitId":"weenleen"},"content":"    public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":265,"author":{"gitId":"weenleen"},"content":"        return tasks.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-07"},{"lineNumber":266,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":267,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":268,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":269,"author":{"gitId":"tzejit"},"content":"    public ObservableList\u003cGroup\u003e getGroupList() {","lastModifiedDate":"2021-10-18"},{"lineNumber":270,"author":{"gitId":"tzejit"},"content":"        return groups.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-18"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":276,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":277,"author":{"gitId":"tzejit"},"content":"                \u0026\u0026 students.equals(((AddressBook) other).students)","lastModifiedDate":"2021-10-08"},{"lineNumber":278,"author":{"gitId":"tzejit"},"content":"                \u0026\u0026 groups.equals(((AddressBook) other).groups)","lastModifiedDate":"2021-10-18"},{"lineNumber":279,"author":{"gitId":"weenleen"},"content":"                \u0026\u0026 tasks.equals(((AddressBook) other).tasks));","lastModifiedDate":"2021-10-07"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":284,"author":{"gitId":"tzejit"},"content":"        return Objects.hash(students, tasks);","lastModifiedDate":"2021-10-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"weenleen":58,"itsraveen":8,"wanninglim":37,"-":113,"tzejit":70}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.commons.RepoName;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.LinkYear;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"    Predicate\u003cStudent\u003e PREDICATE_SHOW_ALL_STUDENTS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"weenleen"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"weenleen"},"content":"    Predicate\u003cTask\u003e PREDICATE_SHOW_ALL_TASKS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"    Predicate\u003cGroup\u003e PREDICATE_SHOW_ALL_GROUPS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"wanninglim"},"content":"    enum DisplayType {","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"somekoreanboi"},"content":"        STUDENTS, TASKS, GROUPS, TASK_HISTORY","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"    };","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"wanninglim"},"content":"    DisplayType getDisplayType();","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"     * Returns true if a student with the same identity as {@code student} exists in the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"    boolean hasStudent(Student student);","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"     * Deletes the given student.","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"tzejit"},"content":"     * The student must exist in the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"wanninglim"},"content":"    void removeStudent(Student target);","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"tzejit"},"content":"     * Adds the given student.","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"tzejit"},"content":"     * {@code student} must not already exist in the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"tzejit"},"content":"    void addStudent(Student student);","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"tzejit"},"content":"     * Replaces the given student {@code target} with {@code editedStudent}.","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"tzejit"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student in the","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"tzejit"},"content":"     * address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":94,"author":{"gitId":"tzejit"},"content":"    void setStudent(Student target, Student editedStudent);","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":96,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"wanninglim"},"content":"     * Retrieve the attendance of the given person {@code target} for {@code week}.","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"wanninglim"},"content":"     * {@code target} must exist in the student list.","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"wanninglim"},"content":"    String getStudentAttendance(Student target, int week);","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"wanninglim"},"content":"     * Marks the attendance of the given person {@code target} for {@code week}.","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"wanninglim"},"content":"     * {@code target} must exist in the student list.","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"wanninglim"},"content":"    void markStudentAttendance(Student target, int week);","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"wanninglim"},"content":"     * Retrieve the attendance of the given person {@code target} for {@code week}.","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"wanninglim"},"content":"     * {@code target} must exist in the student list.","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"wanninglim"},"content":"    String getStudentParticipation(Student target, int week);","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"wanninglim"},"content":"     * Marks the attendance of the given person {@code target} for {@code week}.","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"wanninglim"},"content":"     * {@code target} must exist in the student list.","lastModifiedDate":"2021-10-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"wanninglim"},"content":"    void markStudentParticipation(Student target, int week);","lastModifiedDate":"2021-10-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":120,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":121,"author":{"gitId":"tzejit"},"content":"     * Adds the given student {@code target} to a group of {@code group}.","lastModifiedDate":"2021-10-23"},{"lineNumber":122,"author":{"gitId":"tzejit"},"content":"     * {@code target} must exist in the student list.","lastModifiedDate":"2021-10-18"},{"lineNumber":123,"author":{"gitId":"tzejit"},"content":"     * A group of {@code group} must exist in the group list.","lastModifiedDate":"2021-10-23"},{"lineNumber":124,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":125,"author":{"gitId":"tzejit"},"content":"    void addStudentGroup(Student target, Group group);","lastModifiedDate":"2021-10-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":128,"author":{"gitId":"tzejit"},"content":"     * Removes the given member {@code target} from a group of {@code group}.","lastModifiedDate":"2021-10-23"},{"lineNumber":129,"author":{"gitId":"tzejit"},"content":"     * A group of {@code group} must exist in the group list.","lastModifiedDate":"2021-10-23"},{"lineNumber":130,"author":{"gitId":"tzejit"},"content":"     * {@code targe} must exist in the list of members of the group of  {@code group}.","lastModifiedDate":"2021-10-23"},{"lineNumber":131,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":132,"author":{"gitId":"tzejit"},"content":"    void deleteStudentGroup(Student target, Group group);","lastModifiedDate":"2021-10-23"},{"lineNumber":133,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":134,"author":{"gitId":"tzejit"},"content":"    /** Returns an unmodifiable view of the filtered student list */","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"tzejit"},"content":"    ObservableList\u003cStudent\u003e getFilteredStudentList();","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":138,"author":{"gitId":"tzejit"},"content":"     * Updates the filter of the filtered student list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":141,"author":{"gitId":"tzejit"},"content":"    void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate);","lastModifiedDate":"2021-10-08"},{"lineNumber":142,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":143,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"tzejit"},"content":"     * Returns true if a group with the same identity as {@code group} exists in tApp.","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"tzejit"},"content":"    boolean hasGroup(Group group);","lastModifiedDate":"2021-10-18"},{"lineNumber":147,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":148,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":149,"author":{"gitId":"tzejit"},"content":"     * Deletes the given group.","lastModifiedDate":"2021-10-18"},{"lineNumber":150,"author":{"gitId":"tzejit"},"content":"     * The group must exist in tApp.","lastModifiedDate":"2021-10-18"},{"lineNumber":151,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":152,"author":{"gitId":"tzejit"},"content":"    void deleteGroup(Group target);","lastModifiedDate":"2021-10-18"},{"lineNumber":153,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":154,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":155,"author":{"gitId":"tzejit"},"content":"     * Adds the given group.","lastModifiedDate":"2021-10-18"},{"lineNumber":156,"author":{"gitId":"tzejit"},"content":"     * {@code group} must not already exist in tApp.","lastModifiedDate":"2021-10-18"},{"lineNumber":157,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":158,"author":{"gitId":"tzejit"},"content":"    void addGroup(Group group);","lastModifiedDate":"2021-10-18"},{"lineNumber":159,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":160,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":161,"author":{"gitId":"tzejit"},"content":"     * Replaces the given group {@code target} with {@code editedGroup}.","lastModifiedDate":"2021-10-18"},{"lineNumber":162,"author":{"gitId":"tzejit"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-10-18"},{"lineNumber":163,"author":{"gitId":"tzejit"},"content":"     * The group identity of {@code editedGroup} must not be the same as another existing group in the address book.","lastModifiedDate":"2021-10-18"},{"lineNumber":164,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":165,"author":{"gitId":"tzejit"},"content":"    void setGroup(Group target, Group editedGroup);","lastModifiedDate":"2021-10-18"},{"lineNumber":166,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":167,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":168,"author":{"gitId":"tzejit"},"content":"     * Adds the given github link {@code target} to a group of {@code name}.","lastModifiedDate":"2021-10-18"},{"lineNumber":169,"author":{"gitId":"tzejit"},"content":"     * A group of {@code name} must exist in the group list.","lastModifiedDate":"2021-10-18"},{"lineNumber":170,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":171,"author":{"gitId":"tzejit"},"content":"    void addGithubGroup(LinkYear year, RepoName repoName, Group group);","lastModifiedDate":"2021-10-18"},{"lineNumber":172,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":173,"author":{"gitId":"tzejit"},"content":"    /** Returns an unmodifiable view of the filtered group list */","lastModifiedDate":"2021-10-18"},{"lineNumber":174,"author":{"gitId":"tzejit"},"content":"    ObservableList\u003cGroup\u003e getFilteredGroupList();","lastModifiedDate":"2021-10-18"},{"lineNumber":175,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":176,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":177,"author":{"gitId":"tzejit"},"content":"     * Updates the filter of the filtered group list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-18"},{"lineNumber":178,"author":{"gitId":"tzejit"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-10-18"},{"lineNumber":179,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":180,"author":{"gitId":"tzejit"},"content":"    void updateFilteredGroupList(Predicate\u003cGroup\u003e predicate);","lastModifiedDate":"2021-10-18"},{"lineNumber":181,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":182,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":183,"author":{"gitId":"weenleen"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":184,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":185,"author":{"gitId":"weenleen"},"content":"    boolean hasTask(Task task);","lastModifiedDate":"2021-10-07"},{"lineNumber":186,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":187,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":188,"author":{"gitId":"weenleen"},"content":"     * Deletes the given task.","lastModifiedDate":"2021-10-07"},{"lineNumber":189,"author":{"gitId":"weenleen"},"content":"     * The task must exist in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":190,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":191,"author":{"gitId":"weenleen"},"content":"    void deleteTask(Task target);","lastModifiedDate":"2021-10-07"},{"lineNumber":192,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":193,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":194,"author":{"gitId":"itsraveen"},"content":"     * Marks the given task as completed.","lastModifiedDate":"2021-10-07"},{"lineNumber":195,"author":{"gitId":"itsraveen"},"content":"     * The task must exist in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":196,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":197,"author":{"gitId":"itsraveen"},"content":"    void completeTask(Task target);","lastModifiedDate":"2021-10-07"},{"lineNumber":198,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":199,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":200,"author":{"gitId":"weenleen"},"content":"     * Adds the given task.","lastModifiedDate":"2021-10-07"},{"lineNumber":201,"author":{"gitId":"weenleen"},"content":"     * {@code task} must not already exist in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":202,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":203,"author":{"gitId":"weenleen"},"content":"    void addTask(Task task);","lastModifiedDate":"2021-10-07"},{"lineNumber":204,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":205,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":206,"author":{"gitId":"tzejit"},"content":"     * Replaces the given student {@code target} with {@code editedTask}.","lastModifiedDate":"2021-10-08"},{"lineNumber":207,"author":{"gitId":"weenleen"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":208,"author":{"gitId":"weenleen"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":209,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":210,"author":{"gitId":"weenleen"},"content":"    void setTask(Task target, Task editedTask);","lastModifiedDate":"2021-10-07"},{"lineNumber":211,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":212,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":213,"author":{"gitId":"wanninglim"},"content":"     * Clears all tasks in tApp.","lastModifiedDate":"2021-10-25"},{"lineNumber":214,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":215,"author":{"gitId":"wanninglim"},"content":"    void clearTasks();","lastModifiedDate":"2021-10-25"},{"lineNumber":216,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":217,"author":{"gitId":"tzejit"},"content":"    /** Returns an unmodifiable view of the filtered student list */","lastModifiedDate":"2021-10-08"},{"lineNumber":218,"author":{"gitId":"weenleen"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2021-10-07"},{"lineNumber":219,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":220,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":221,"author":{"gitId":"weenleen"},"content":"     * Updates the filter of the filtered task list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-07"},{"lineNumber":222,"author":{"gitId":"weenleen"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-10-07"},{"lineNumber":223,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":224,"author":{"gitId":"weenleen"},"content":"    void updateFilteredTaskList(Predicate\u003cTask\u003e predicate);","lastModifiedDate":"2021-10-07"},{"lineNumber":225,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":226,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"weenleen":35,"itsraveen":6,"wanninglim":30,"somekoreanboi":3,"-":75,"tzejit":78}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import static seedu.address.model.Model.DisplayType.GROUPS;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.model.Model.DisplayType.STUDENTS;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.model.Model.DisplayType.TASKS;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.commons.RepoName;","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.LinkYear;","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"    private final FilteredList\u003cStudent\u003e filteredStudents;","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"weenleen"},"content":"    private final FilteredList\u003cTask\u003e filteredTasks;","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"    private final FilteredList\u003cGroup\u003e filteredGroups;","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"wanninglim"},"content":"    private DisplayType displayType;","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"        displayType \u003d STUDENTS;","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"        filteredStudents \u003d new FilteredList\u003c\u003e(this.addressBook.getStudentList());","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"weenleen"},"content":"        filteredTasks \u003d new FilteredList\u003c\u003e(this.addressBook.getTaskList());","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"        filteredGroups \u003d new FilteredList\u003c\u003e(this.addressBook.getGroupList());","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"wanninglim"},"content":"    public DisplayType getDisplayType() {","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"tzejit"},"content":"        return displayType;","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"itsraveen"},"content":"    public void clearTasks() {","lastModifiedDate":"2021-10-18"},{"lineNumber":105,"author":{"gitId":"itsraveen"},"content":"        this.addressBook.clearAllTask();","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":107,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":114,"author":{"gitId":"tzejit"},"content":"    public boolean hasStudent(Student student) {","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"tzejit"},"content":"        requireNonNull(student);","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"tzejit"},"content":"        return addressBook.hasStudent(student);","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":120,"author":{"gitId":"wanninglim"},"content":"    public void removeStudent(Student target) {","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"wanninglim"},"content":"        requireNonNull(target);","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"tzejit"},"content":"        addressBook.removeStudent(target);","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"wanninglim"},"content":"        if (target.hasGroupName()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"tzejit"},"content":"            List\u003cGroup\u003e groupList \u003d getFilteredGroupList();","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"tzejit"},"content":"            Group group \u003d groupList.stream()","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"tzejit"},"content":"                                          .filter(g -\u003e g.getName().equals(target.getGroupName()))","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"tzejit"},"content":"                                          .findAny()","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"tzejit"},"content":"                                          .orElse(null);","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"wanninglim"},"content":"            addressBook.removeStudentFromGroup(target, group);","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":134,"author":{"gitId":"tzejit"},"content":"    public void addStudent(Student student) {","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"tzejit"},"content":"        addressBook.addStudent(student);","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"tzejit"},"content":"        updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":140,"author":{"gitId":"tzejit"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2021-10-08"},{"lineNumber":141,"author":{"gitId":"tzejit"},"content":"        requireAllNonNull(target, editedStudent);","lastModifiedDate":"2021-10-08"},{"lineNumber":142,"author":{"gitId":"wanninglim"},"content":"        if (target.hasGroupName()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":143,"author":{"gitId":"tzejit"},"content":"            List\u003cGroup\u003e groupList \u003d getFilteredGroupList();","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"tzejit"},"content":"            Group updatedGroup \u003d groupList.stream()","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"tzejit"},"content":"                    .filter(g -\u003e g.getName().equals(target.getGroupName()))","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"tzejit"},"content":"                    .findAny()","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"tzejit"},"content":"                    .orElse(null);","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"wanninglim"},"content":"            updatedGroup.updateMember(target, editedStudent);","lastModifiedDate":"2021-10-25"},{"lineNumber":149,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":151,"author":{"gitId":"tzejit"},"content":"        addressBook.setStudent(target, editedStudent);","lastModifiedDate":"2021-10-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":154,"author":{"gitId":"wanninglim"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"wanninglim"},"content":"    public void markStudentAttendance(Student target, int week) {","lastModifiedDate":"2021-10-08"},{"lineNumber":156,"author":{"gitId":"wanninglim"},"content":"        requireAllNonNull(target, week);","lastModifiedDate":"2021-10-26"},{"lineNumber":157,"author":{"gitId":"wanninglim"},"content":"        Student newStudent \u003d target;","lastModifiedDate":"2021-10-26"},{"lineNumber":158,"author":{"gitId":"wanninglim"},"content":"        newStudent.toggleAttendance(week);","lastModifiedDate":"2021-10-26"},{"lineNumber":159,"author":{"gitId":"wanninglim"},"content":"        setStudent(target, newStudent);","lastModifiedDate":"2021-10-26"},{"lineNumber":160,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":162,"author":{"gitId":"wanninglim"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":163,"author":{"gitId":"wanninglim"},"content":"    public String getStudentAttendance(Student target, int week) {","lastModifiedDate":"2021-10-08"},{"lineNumber":164,"author":{"gitId":"wanninglim"},"content":"        requireAllNonNull(target, week);","lastModifiedDate":"2021-10-26"},{"lineNumber":165,"author":{"gitId":"wanninglim"},"content":"        return target.checkPresent(week) \u003d\u003d 1 ? \"present\" : \"absent\";","lastModifiedDate":"2021-10-26"},{"lineNumber":166,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":167,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":168,"author":{"gitId":"wanninglim"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":169,"author":{"gitId":"wanninglim"},"content":"    public void markStudentParticipation(Student target, int week) {","lastModifiedDate":"2021-10-18"},{"lineNumber":170,"author":{"gitId":"wanninglim"},"content":"        requireAllNonNull(target, week);","lastModifiedDate":"2021-10-26"},{"lineNumber":171,"author":{"gitId":"wanninglim"},"content":"        Student newStudent \u003d target;","lastModifiedDate":"2021-10-26"},{"lineNumber":172,"author":{"gitId":"wanninglim"},"content":"        newStudent.getParticipation().toggleParticipation(week);","lastModifiedDate":"2021-10-26"},{"lineNumber":173,"author":{"gitId":"wanninglim"},"content":"        setStudent(target, newStudent);","lastModifiedDate":"2021-10-26"},{"lineNumber":174,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":175,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":176,"author":{"gitId":"wanninglim"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":177,"author":{"gitId":"wanninglim"},"content":"    public String getStudentParticipation(Student target, int week) {","lastModifiedDate":"2021-10-18"},{"lineNumber":178,"author":{"gitId":"wanninglim"},"content":"        requireAllNonNull(target, week);","lastModifiedDate":"2021-10-26"},{"lineNumber":179,"author":{"gitId":"wanninglim"},"content":"        return target.checkParticipated(week) \u003d\u003d 1 ? \"participated\" : \"not participated\";","lastModifiedDate":"2021-10-26"},{"lineNumber":180,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":181,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":182,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":183,"author":{"gitId":"tzejit"},"content":"    public void addStudentGroup(Student student, Group group) {","lastModifiedDate":"2021-10-18"},{"lineNumber":184,"author":{"gitId":"tzejit"},"content":"        requireAllNonNull(student, group);","lastModifiedDate":"2021-10-18"},{"lineNumber":185,"author":{"gitId":"tzejit"},"content":"        Group newGroup \u003d group;","lastModifiedDate":"2021-10-18"},{"lineNumber":186,"author":{"gitId":"tzejit"},"content":"        Student updatedStudent \u003d new Student(student.getName(), student.getEmail(), student.getStudentNumber(),","lastModifiedDate":"2021-10-19"},{"lineNumber":187,"author":{"gitId":"tzejit"},"content":"                student.getUserName(), student.getRepoName(), student.getTags(), student.getAttendance(),","lastModifiedDate":"2021-10-19"},{"lineNumber":188,"author":{"gitId":"wanninglim"},"content":"                student.getParticipation(), group.getName());","lastModifiedDate":"2021-10-19"},{"lineNumber":189,"author":{"gitId":"tzejit"},"content":"        newGroup.getMembers().addMember(updatedStudent);","lastModifiedDate":"2021-10-19"},{"lineNumber":190,"author":{"gitId":"tzejit"},"content":"        addressBook.setStudent(student, updatedStudent);","lastModifiedDate":"2021-10-19"},{"lineNumber":191,"author":{"gitId":"tzejit"},"content":"        addressBook.setGroup(group, newGroup);","lastModifiedDate":"2021-10-18"},{"lineNumber":192,"author":{"gitId":"tzejit"},"content":"        updateFilteredGroupList(PREDICATE_SHOW_ALL_GROUPS);","lastModifiedDate":"2021-10-18"},{"lineNumber":193,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":194,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":195,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":196,"author":{"gitId":"tzejit"},"content":"    public void deleteStudentGroup(Student student, Group group) {","lastModifiedDate":"2021-10-23"},{"lineNumber":197,"author":{"gitId":"tzejit"},"content":"        requireAllNonNull(student, group);","lastModifiedDate":"2021-10-23"},{"lineNumber":198,"author":{"gitId":"wanninglim"},"content":"        addressBook.removeStudentFromGroup(student, group);","lastModifiedDate":"2021-10-25"},{"lineNumber":199,"author":{"gitId":"wanninglim"},"content":"        addressBook.removeGroupFromStudent(student);","lastModifiedDate":"2021-10-25"},{"lineNumber":200,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":201,"author":{"gitId":"tzejit"},"content":"        updateFilteredGroupList(PREDICATE_SHOW_ALL_GROUPS);","lastModifiedDate":"2021-10-23"},{"lineNumber":202,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":203,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":204,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":205,"author":{"gitId":"wanninglim"},"content":"     * Checks if a task exists","lastModifiedDate":"2021-10-08"},{"lineNumber":206,"author":{"gitId":"wanninglim"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":207,"author":{"gitId":"wanninglim"},"content":"     * @param task task to check","lastModifiedDate":"2021-10-08"},{"lineNumber":208,"author":{"gitId":"wanninglim"},"content":"     * @return true if task exists, false otherwise","lastModifiedDate":"2021-10-08"},{"lineNumber":209,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":210,"author":{"gitId":"wanninglim"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2021-10-08"},{"lineNumber":211,"author":{"gitId":"wanninglim"},"content":"        requireNonNull(task);","lastModifiedDate":"2021-10-08"},{"lineNumber":212,"author":{"gitId":"wanninglim"},"content":"        return addressBook.hasTask(task);","lastModifiedDate":"2021-10-08"},{"lineNumber":213,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":214,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":215,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":216,"author":{"gitId":"weenleen"},"content":"    public void deleteTask(Task target) {","lastModifiedDate":"2021-10-07"},{"lineNumber":217,"author":{"gitId":"weenleen"},"content":"        addressBook.removeTask(target);","lastModifiedDate":"2021-10-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":221,"author":{"gitId":"tzejit"},"content":"    public void addTask(Task student) {","lastModifiedDate":"2021-10-08"},{"lineNumber":222,"author":{"gitId":"tzejit"},"content":"        addressBook.addTask(student);","lastModifiedDate":"2021-10-08"},{"lineNumber":223,"author":{"gitId":"weenleen"},"content":"        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-10-07"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":227,"author":{"gitId":"weenleen"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2021-10-07"},{"lineNumber":228,"author":{"gitId":"weenleen"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2021-10-07"},{"lineNumber":229,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":230,"author":{"gitId":"weenleen"},"content":"        addressBook.setTask(target, editedTask);","lastModifiedDate":"2021-10-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":234,"author":{"gitId":"itsraveen"},"content":"    public void completeTask(Task target) {","lastModifiedDate":"2021-10-07"},{"lineNumber":235,"author":{"gitId":"itsraveen"},"content":"        requireAllNonNull(target, target);","lastModifiedDate":"2021-10-07"},{"lineNumber":236,"author":{"gitId":"weenleen"},"content":"        Task newTask \u003d target.clone();","lastModifiedDate":"2021-10-21"},{"lineNumber":237,"author":{"gitId":"itsraveen"},"content":"        newTask.markTaskComplete();","lastModifiedDate":"2021-10-13"},{"lineNumber":238,"author":{"gitId":"itsraveen"},"content":"        addressBook.setTask(target, newTask);","lastModifiedDate":"2021-10-13"},{"lineNumber":239,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":241,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":242,"author":{"gitId":"tzejit"},"content":"    public boolean hasGroup(Group group) {","lastModifiedDate":"2021-10-18"},{"lineNumber":243,"author":{"gitId":"tzejit"},"content":"        requireNonNull(group);","lastModifiedDate":"2021-10-18"},{"lineNumber":244,"author":{"gitId":"tzejit"},"content":"        return addressBook.hasGroup(group);","lastModifiedDate":"2021-10-18"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":247,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":248,"author":{"gitId":"tzejit"},"content":"    public void deleteGroup(Group target) {","lastModifiedDate":"2021-10-18"},{"lineNumber":249,"author":{"gitId":"wanninglim"},"content":"        requireNonNull(target);","lastModifiedDate":"2021-10-25"},{"lineNumber":250,"author":{"gitId":"wanninglim"},"content":"        List\u003cStudent\u003e students \u003d target.getMembersList();","lastModifiedDate":"2021-10-25"},{"lineNumber":251,"author":{"gitId":"wanninglim"},"content":"        addressBook.clearGroupFromStudents(students);","lastModifiedDate":"2021-10-25"},{"lineNumber":252,"author":{"gitId":"tzejit"},"content":"        addressBook.removeGroup(target);","lastModifiedDate":"2021-10-18"},{"lineNumber":253,"author":{"gitId":"tzejit"},"content":"        updateFilteredGroupList(PREDICATE_SHOW_ALL_GROUPS);","lastModifiedDate":"2021-10-23"},{"lineNumber":254,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":255,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":256,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":257,"author":{"gitId":"tzejit"},"content":"    public void addGroup(Group group) {","lastModifiedDate":"2021-10-18"},{"lineNumber":258,"author":{"gitId":"tzejit"},"content":"        addressBook.addGroup(group);","lastModifiedDate":"2021-10-18"},{"lineNumber":259,"author":{"gitId":"tzejit"},"content":"        updateFilteredGroupList(PREDICATE_SHOW_ALL_GROUPS);","lastModifiedDate":"2021-10-18"},{"lineNumber":260,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":261,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":262,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":263,"author":{"gitId":"tzejit"},"content":"    public void setGroup(Group target, Group editedGroup) {","lastModifiedDate":"2021-10-18"},{"lineNumber":264,"author":{"gitId":"tzejit"},"content":"        requireAllNonNull(target, editedGroup);","lastModifiedDate":"2021-10-18"},{"lineNumber":265,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":266,"author":{"gitId":"tzejit"},"content":"        addressBook.setGroup(target, editedGroup);","lastModifiedDate":"2021-10-18"},{"lineNumber":267,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":268,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":269,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":270,"author":{"gitId":"tzejit"},"content":"    public void addGithubGroup(LinkYear year, RepoName repoName, Group group) {","lastModifiedDate":"2021-10-18"},{"lineNumber":271,"author":{"gitId":"tzejit"},"content":"        requireAllNonNull(year, repoName, group);","lastModifiedDate":"2021-10-18"},{"lineNumber":272,"author":{"gitId":"tzejit"},"content":"        Group newGroup \u003d new Group(group.getName(), group.getMembers(), year, repoName, group.getTags());","lastModifiedDate":"2021-10-18"},{"lineNumber":273,"author":{"gitId":"tzejit"},"content":"        addressBook.setGroup(group, newGroup);","lastModifiedDate":"2021-10-18"},{"lineNumber":274,"author":{"gitId":"tzejit"},"content":"        updateFilteredGroupList(PREDICATE_SHOW_ALL_GROUPS);","lastModifiedDate":"2021-10-18"},{"lineNumber":275,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":276,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":277,"author":{"gitId":"tzejit"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Student List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":280,"author":{"gitId":"tzejit"},"content":"     * Returns an unmodifiable view of the list of {@code Student} backed by the internal list of","lastModifiedDate":"2021-10-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":282,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":284,"author":{"gitId":"tzejit"},"content":"    public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":285,"author":{"gitId":"tzejit"},"content":"        return filteredStudents;","lastModifiedDate":"2021-10-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":289,"author":{"gitId":"tzejit"},"content":"    public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2021-10-08"},{"lineNumber":290,"author":{"gitId":"tzejit"},"content":"        displayType \u003d STUDENTS;","lastModifiedDate":"2021-10-11"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":292,"author":{"gitId":"tzejit"},"content":"        filteredStudents.setPredicate(predicate);","lastModifiedDate":"2021-10-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":295,"author":{"gitId":"weenleen"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Task List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":296,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":297,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":298,"author":{"gitId":"weenleen"},"content":"     * Returns an unmodifiable view of the list of {@code Task} backed by the internal list of","lastModifiedDate":"2021-10-07"},{"lineNumber":299,"author":{"gitId":"weenleen"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2021-10-07"},{"lineNumber":300,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":301,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":302,"author":{"gitId":"weenleen"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":303,"author":{"gitId":"weenleen"},"content":"        return filteredTasks;","lastModifiedDate":"2021-10-07"},{"lineNumber":304,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":305,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":306,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":307,"author":{"gitId":"weenleen"},"content":"    public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-10-07"},{"lineNumber":308,"author":{"gitId":"tzejit"},"content":"        displayType \u003d TASKS;","lastModifiedDate":"2021-10-11"},{"lineNumber":309,"author":{"gitId":"weenleen"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-07"},{"lineNumber":310,"author":{"gitId":"weenleen"},"content":"        filteredTasks.setPredicate(predicate);","lastModifiedDate":"2021-10-07"},{"lineNumber":311,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":312,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":313,"author":{"gitId":"tzejit"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Group List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":314,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":315,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":316,"author":{"gitId":"tzejit"},"content":"     * Returns an unmodifiable view of the list of {@code Group} backed by the internal list of","lastModifiedDate":"2021-10-18"},{"lineNumber":317,"author":{"gitId":"tzejit"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2021-10-18"},{"lineNumber":318,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":319,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":320,"author":{"gitId":"tzejit"},"content":"    public ObservableList\u003cGroup\u003e getFilteredGroupList() {","lastModifiedDate":"2021-10-18"},{"lineNumber":321,"author":{"gitId":"tzejit"},"content":"        return filteredGroups;","lastModifiedDate":"2021-10-18"},{"lineNumber":322,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":323,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":324,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":325,"author":{"gitId":"tzejit"},"content":"    public void updateFilteredGroupList(Predicate\u003cGroup\u003e predicate) {","lastModifiedDate":"2021-10-18"},{"lineNumber":326,"author":{"gitId":"tzejit"},"content":"        displayType \u003d GROUPS;","lastModifiedDate":"2021-10-18"},{"lineNumber":327,"author":{"gitId":"tzejit"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-18"},{"lineNumber":328,"author":{"gitId":"tzejit"},"content":"        filteredGroups.setPredicate(predicate);","lastModifiedDate":"2021-10-18"},{"lineNumber":329,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":330,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":331,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":334,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":336,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":341,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":347,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":348,"author":{"gitId":"tzejit"},"content":"                \u0026\u0026 filteredStudents.equals(other.filteredStudents);","lastModifiedDate":"2021-10-08"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":350,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"weenleen":32,"itsraveen":9,"wanninglim":54,"-":141,"tzejit":114}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"     * Returns an unmodifiable view of the students list.","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"     * This list will not contain any duplicate students.","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"    ObservableList\u003cStudent\u003e getStudentList();","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"weenleen"},"content":"     * Returns an unmodifiable view of the task list.","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"weenleen"},"content":"     * This list will not contain any duplicate tasks.","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"weenleen"},"content":"    ObservableList\u003cTask\u003e getTaskList();","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"     * Returns an unmodifiable view of the group list.","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"     * This list will not contain any duplicate groups.","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"    ObservableList\u003cGroup\u003e getGroupList();","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"weenleen":6,"somekoreanboi":2,"-":14,"tzejit":11}},{"path":"src/main/java/seedu/address/model/commons/RepoName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.model.commons;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"public class RepoName {","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"            \"Repo name should contain only alphanumeric characters, underscores, \"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"             + \"tilde, dots and dashes, and it should not be blank\";","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}._\\\\-~][\\\\p{Alnum}._\\\\-~]*\";","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"    public final String repoName;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"     * Constructs a {@code RepoName}.","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"     * @param repoName A valid repo name to be used in the link.","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"    public RepoName(String repoName) {","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"        requireNonNull(repoName);","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"        checkArgument(isValidRepoName(repoName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"        this.repoName \u003d repoName;","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"    public RepoName() {","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"        this.repoName \u003d null;","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"    public boolean isNull() {","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"        return repoName \u003d\u003d null ? true : false;","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"    public static boolean isValidRepoName(String test) {","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"    public String toString() {","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"        return repoName;","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"                || (other instanceof RepoName // instanceof handles nulls","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"                \u0026\u0026 repoName.equals(((RepoName) other).repoName)); // state check","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"        return isNull() ? 0 : repoName.hashCode();","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"tzejit":58}},{"path":"src/main/java/seedu/address/model/group/Group.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.model.group;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import java.util.List;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.commons.RepoName;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":" * Represents a Group in tApp.","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"public class Group {","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"    // Identity fields","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"    private final GroupName name;","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"    // Data fields","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"    private final Members members;","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"    private final LinkYear year;","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"    private final RepoName repoName;","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"     * Constructor for a new Group object","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"    public Group(GroupName name, Members members, LinkYear year, RepoName repoName, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"        requireAllNonNull(name, members);","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"        this.members \u003d members;","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"        if (year !\u003d null) {","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"            this.year \u003d year;","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"        } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"            this.year \u003d new LinkYear();","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"        if (repoName !\u003d null) {","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"            this.repoName \u003d repoName;","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"        } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"            this.repoName \u003d new RepoName();","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"     * Constructor for a new Group object given only name and tags","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"    public Group(GroupName name, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"        requireAllNonNull(name);","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"        this.members \u003d new Members();","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"        this.year \u003d new LinkYear();","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"        this.repoName \u003d new RepoName();","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"    public GroupName getName() {","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"tzejit"},"content":"        return name;","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"     * Returns a mutable student set","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"    public Members getMembers() {","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"        return members;","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"wanninglim"},"content":"    public void updateMember(Student target, Student editedStudent) {","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"wanninglim"},"content":"        members.updateMember(target, editedStudent);","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"wanninglim"},"content":"     * Removes a member in the group","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"wanninglim"},"content":"    public void removeMember(Student student) {","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"wanninglim"},"content":"        members.removeMember(student);","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"tzejit"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"tzejit"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"tzejit"},"content":"    public List\u003cStudent\u003e getMembersList() {","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"tzejit"},"content":"        return Collections.unmodifiableList(members.studentList);","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"tzejit"},"content":"    public LinkYear getYear() {","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"tzejit"},"content":"        return year;","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"tzejit"},"content":"    public RepoName getRepoName() {","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"tzejit"},"content":"        return repoName;","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"wanninglim"},"content":"    public void removeAllMembers() {","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"wanninglim"},"content":"        members.removeAllMembers();","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":107,"author":{"gitId":"tzejit"},"content":"     * Returns the formatted Github link","lastModifiedDate":"2021-10-18"},{"lineNumber":108,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"tzejit"},"content":"    public String getGroupGithubLink() {","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"tzejit"},"content":"        if (!year.isNull() \u0026\u0026 !repoName.isNull()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"tzejit"},"content":"            return String.format(new GroupGithub(year, repoName).toString(), getName());","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"tzejit"},"content":"        } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"tzejit"},"content":"            return \"-\";","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":117,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"tzejit"},"content":"     * Returns the formatted Github link with given inputs","lastModifiedDate":"2021-10-18"},{"lineNumber":119,"author":{"gitId":"tzejit"},"content":"     * @param year A valid year to parse","lastModifiedDate":"2021-10-18"},{"lineNumber":120,"author":{"gitId":"tzejit"},"content":"     * @param repoName A valid repoName to parse","lastModifiedDate":"2021-10-18"},{"lineNumber":121,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":122,"author":{"gitId":"tzejit"},"content":"    public String getGroupGithubLink(LinkYear year, RepoName repoName) {","lastModifiedDate":"2021-10-18"},{"lineNumber":123,"author":{"gitId":"tzejit"},"content":"        if (!year.isNull() \u0026\u0026 !repoName.isNull()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":124,"author":{"gitId":"tzejit"},"content":"            return String.format(new GroupGithub(year, repoName).toString(), getName());","lastModifiedDate":"2021-10-18"},{"lineNumber":125,"author":{"gitId":"tzejit"},"content":"        } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":126,"author":{"gitId":"tzejit"},"content":"            return \"-\";","lastModifiedDate":"2021-10-18"},{"lineNumber":127,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":128,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":129,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":130,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":132,"author":{"gitId":"tzejit"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-18"},{"lineNumber":133,"author":{"gitId":"tzejit"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"tzejit"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"tzejit"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":139,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"tzejit"},"content":"     * Returns true if both groups have the same name.","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"tzejit"},"content":"     * This defines a weaker notion of equality between two groups.","lastModifiedDate":"2021-10-18"},{"lineNumber":142,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":143,"author":{"gitId":"tzejit"},"content":"    public boolean isSameGroup(Group otherGroup) {","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"tzejit"},"content":"        if (otherGroup \u003d\u003d this) {","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"tzejit"},"content":"            return true;","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":147,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":148,"author":{"gitId":"tzejit"},"content":"        return otherGroup !\u003d null","lastModifiedDate":"2021-10-18"},{"lineNumber":149,"author":{"gitId":"tzejit"},"content":"                \u0026\u0026 otherGroup.getName().equals(getName());","lastModifiedDate":"2021-10-18"},{"lineNumber":150,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":151,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":152,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":153,"author":{"gitId":"tzejit"},"content":"     * Returns true if both students have the same identity and data fields.","lastModifiedDate":"2021-10-18"},{"lineNumber":154,"author":{"gitId":"tzejit"},"content":"     * This defines a stronger notion of equality between two students.","lastModifiedDate":"2021-10-18"},{"lineNumber":155,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":156,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":157,"author":{"gitId":"tzejit"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":158,"author":{"gitId":"tzejit"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-18"},{"lineNumber":159,"author":{"gitId":"tzejit"},"content":"            return true;","lastModifiedDate":"2021-10-18"},{"lineNumber":160,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":161,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":162,"author":{"gitId":"tzejit"},"content":"        if (!(other instanceof Group)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":163,"author":{"gitId":"tzejit"},"content":"            return false;","lastModifiedDate":"2021-10-18"},{"lineNumber":164,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":165,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":166,"author":{"gitId":"tzejit"},"content":"        Group otherGroup \u003d (Group) other;","lastModifiedDate":"2021-10-18"},{"lineNumber":167,"author":{"gitId":"tzejit"},"content":"        return otherGroup.getName().equals(getName())","lastModifiedDate":"2021-10-18"},{"lineNumber":168,"author":{"gitId":"tzejit"},"content":"                \u0026\u0026 otherGroup.getMembersList().equals(getMembersList())","lastModifiedDate":"2021-10-23"},{"lineNumber":169,"author":{"gitId":"tzejit"},"content":"                \u0026\u0026 otherGroup.getGroupGithubLink().equals(getGroupGithubLink())","lastModifiedDate":"2021-10-18"},{"lineNumber":170,"author":{"gitId":"tzejit"},"content":"                \u0026\u0026 otherGroup.getTags().equals(getTags());","lastModifiedDate":"2021-10-18"},{"lineNumber":171,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":172,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":173,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":174,"author":{"gitId":"tzejit"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-18"},{"lineNumber":175,"author":{"gitId":"tzejit"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-10-18"},{"lineNumber":176,"author":{"gitId":"tzejit"},"content":"        return Objects.hash(name, members, tags, year, repoName);","lastModifiedDate":"2021-10-18"},{"lineNumber":177,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":178,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":179,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":180,"author":{"gitId":"tzejit"},"content":"    public String toString() {","lastModifiedDate":"2021-10-18"},{"lineNumber":181,"author":{"gitId":"tzejit"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-18"},{"lineNumber":182,"author":{"gitId":"tzejit"},"content":"        builder.append(getName())","lastModifiedDate":"2021-10-18"},{"lineNumber":183,"author":{"gitId":"tzejit"},"content":"                .append(\"; Members: \")","lastModifiedDate":"2021-10-18"},{"lineNumber":184,"author":{"gitId":"tzejit"},"content":"                .append(getMembers())","lastModifiedDate":"2021-10-18"},{"lineNumber":185,"author":{"gitId":"tzejit"},"content":"                .append(\"; Github: \")","lastModifiedDate":"2021-10-18"},{"lineNumber":186,"author":{"gitId":"tzejit"},"content":"                .append(getGroupGithubLink());;","lastModifiedDate":"2021-10-18"},{"lineNumber":187,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":188,"author":{"gitId":"tzejit"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2021-10-18"},{"lineNumber":189,"author":{"gitId":"tzejit"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":190,"author":{"gitId":"tzejit"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2021-10-18"},{"lineNumber":191,"author":{"gitId":"tzejit"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2021-10-18"},{"lineNumber":192,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":193,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":194,"author":{"gitId":"tzejit"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-18"},{"lineNumber":195,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":196,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":197,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":198,"author":{"gitId":"tzejit"},"content":"     * Represents a Group\u0027s name in tApp.","lastModifiedDate":"2021-10-18"},{"lineNumber":199,"author":{"gitId":"tzejit"},"content":"     * Guarantees: immutable;","lastModifiedDate":"2021-10-18"},{"lineNumber":200,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":201,"author":{"gitId":"tzejit"},"content":"    public static class GroupGithub {","lastModifiedDate":"2021-10-18"},{"lineNumber":202,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":203,"author":{"gitId":"tzejit"},"content":"        public static final String GITHUB_ADDRESS \u003d \"https://github.com/\";","lastModifiedDate":"2021-10-18"},{"lineNumber":204,"author":{"gitId":"tzejit"},"content":"        public static final String MODULE_CODE \u003d \"CS2103\";","lastModifiedDate":"2021-10-18"},{"lineNumber":205,"author":{"gitId":"tzejit"},"content":"        public final LinkYear year;","lastModifiedDate":"2021-10-18"},{"lineNumber":206,"author":{"gitId":"tzejit"},"content":"        public final RepoName repoName;","lastModifiedDate":"2021-10-18"},{"lineNumber":207,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":208,"author":{"gitId":"tzejit"},"content":"        public final String link;","lastModifiedDate":"2021-10-18"},{"lineNumber":209,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":210,"author":{"gitId":"tzejit"},"content":"        /**","lastModifiedDate":"2021-10-18"},{"lineNumber":211,"author":{"gitId":"tzejit"},"content":"         * Constructs a {@code GroupGithub}.","lastModifiedDate":"2021-10-18"},{"lineNumber":212,"author":{"gitId":"tzejit"},"content":"         *","lastModifiedDate":"2021-10-18"},{"lineNumber":213,"author":{"gitId":"tzejit"},"content":"         * @param year A valid academic year.","lastModifiedDate":"2021-10-18"},{"lineNumber":214,"author":{"gitId":"tzejit"},"content":"         * @param repoName A valid repo name.","lastModifiedDate":"2021-10-18"},{"lineNumber":215,"author":{"gitId":"tzejit"},"content":"         */","lastModifiedDate":"2021-10-18"},{"lineNumber":216,"author":{"gitId":"tzejit"},"content":"        public GroupGithub(LinkYear year, RepoName repoName) {","lastModifiedDate":"2021-10-18"},{"lineNumber":217,"author":{"gitId":"tzejit"},"content":"            requireAllNonNull(year, repoName);","lastModifiedDate":"2021-10-18"},{"lineNumber":218,"author":{"gitId":"tzejit"},"content":"            this.year \u003d year;","lastModifiedDate":"2021-10-18"},{"lineNumber":219,"author":{"gitId":"tzejit"},"content":"            this.repoName \u003d repoName;","lastModifiedDate":"2021-10-18"},{"lineNumber":220,"author":{"gitId":"tzejit"},"content":"            this.link \u003d GITHUB_ADDRESS + year + \"-\" + MODULE_CODE + \"-%1$s/\" + repoName;","lastModifiedDate":"2021-10-18"},{"lineNumber":221,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":222,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":223,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":224,"author":{"gitId":"tzejit"},"content":"        public String toString() {","lastModifiedDate":"2021-10-18"},{"lineNumber":225,"author":{"gitId":"tzejit"},"content":"            return link;","lastModifiedDate":"2021-10-18"},{"lineNumber":226,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":227,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":228,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":229,"author":{"gitId":"tzejit"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":230,"author":{"gitId":"tzejit"},"content":"            return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-18"},{"lineNumber":231,"author":{"gitId":"tzejit"},"content":"                    || (other instanceof GroupGithub // instanceof handles nulls","lastModifiedDate":"2021-10-18"},{"lineNumber":232,"author":{"gitId":"tzejit"},"content":"                    \u0026\u0026 link.equals(((GroupGithub) other).link)); // state check","lastModifiedDate":"2021-10-18"},{"lineNumber":233,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":234,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":235,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":236,"author":{"gitId":"tzejit"},"content":"        public int hashCode() {","lastModifiedDate":"2021-10-18"},{"lineNumber":237,"author":{"gitId":"tzejit"},"content":"            return link.hashCode();","lastModifiedDate":"2021-10-18"},{"lineNumber":238,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":239,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":240,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":241,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"wanninglim":14,"tzejit":227}},{"path":"src/main/java/seedu/address/model/group/GroupContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wanninglim"},"content":"package seedu.address.model.group;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"wanninglim"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"wanninglim"},"content":"import java.util.List;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"wanninglim"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"wanninglim"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"wanninglim"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"wanninglim"},"content":" * Tests that a {@code Group}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"wanninglim"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"wanninglim"},"content":"public class GroupContainsKeywordsPredicate implements Predicate\u003cGroup\u003e {","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"wanninglim"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"wanninglim"},"content":"    private List\u003cString\u003e keywordsClone \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"wanninglim"},"content":"    public GroupContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"wanninglim"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"wanninglim"},"content":"     * Ignores some special characters in input keyword","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"wanninglim"},"content":"    private void removeSpecialCharacters() {","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"wanninglim"},"content":"        for (String keyword : keywords) {","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"wanninglim"},"content":"            String newKeyword \u003d keyword.replaceAll(\"/^[\\\\w-]+$/\", \"\");","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"wanninglim"},"content":"            keywordsClone.add(newKeyword);","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"wanninglim"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"wanninglim"},"content":"    public boolean test(Group group) {","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"wanninglim"},"content":"        removeSpecialCharacters();","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"wanninglim"},"content":"        return keywordsClone.stream()","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"wanninglim"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsSubstringIgnoreCase(group.getName().name, keyword));","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"wanninglim"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"wanninglim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"wanninglim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"wanninglim"},"content":"                || (other instanceof GroupContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"wanninglim"},"content":"                \u0026\u0026 keywords.equals(((GroupContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"wanninglim"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"wanninglim":44}},{"path":"src/main/java/seedu/address/model/group/GroupName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.model.group;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":" * Represents a Group\u0027s name in tApp.","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"public class GroupName {","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"            \"Names should only an alphabet followed by 2 digits a - and another digit\";","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"    /*","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"    public static final String VALIDATION_REGEX \u003d \"[a-zA-Z]\\\\d{2}[-]\\\\d\";","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"    public final String name;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"     * @param name A valid name.","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"    public GroupName(String name) {","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"        this.name \u003d name.toUpperCase();","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"    public GroupName() {","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"        this.name \u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"    public boolean isNull () {","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"        return name \u003d\u003d null ? true : false;","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"    public String toString() {","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"        return isNull() ? \"-\" : name;","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"                || (other instanceof GroupName // instanceof handles nulls","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"                \u0026\u0026 ((isNull() \u0026\u0026 ((GroupName) other).isNull())","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"                || (name.equals(((GroupName) other).name)))); // state check","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"tzejit"},"content":"        return isNull() ? 0 : name.hashCode();","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"tzejit":68}},{"path":"src/main/java/seedu/address/model/group/LinkYear.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.model.group;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"public class LinkYear {","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"            \"Years should contain only alphanumeric characters, underscores, \"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"                    + \"tilde, dots and dashes, and it should not be blank\";","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}._\\\\-~][\\\\p{Alnum}._\\\\-~]*\";","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"    public final String year;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"     * Constructs a {@code LinkYear}.","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"     * @param year A valid academic year to be used in the link.","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"    public LinkYear(String year) {","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"        requireNonNull(year);","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"        checkArgument(isValidYear(year), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"        this.year \u003d year;","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"    public LinkYear() {","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"        this.year \u003d null;","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"    public boolean isNull() {","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"        return year \u003d\u003d null ? true : false;","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"    public static boolean isValidYear(String test) {","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"    public String toString() {","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"        return year;","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"                || (other instanceof LinkYear // instanceof handles nulls","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"                \u0026\u0026 ((isNull() \u0026\u0026 ((LinkYear) other).isNull())","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"                || year.equals(((LinkYear) other).year))); // state check","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"        return isNull() ? 0 : year.hashCode();","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"tzejit":59}},{"path":"src/main/java/seedu/address/model/group/Members.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.model.group;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"public class Members {","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"    public final ArrayList\u003cStudent\u003e studentList;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"     * Constructs a {@code Members}.","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"    public Members() {","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"        studentList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"     * Constructs a existing {@code Members}.","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"    public Members(ArrayList\u003cStudent\u003e studentList) {","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"        this.studentList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"        this.studentList.addAll(studentList);","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"    public void addMember(Student student) {","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"        this.studentList.add(student);","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"    public void removeMember(Student student) {","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"        this.studentList.removeIf(s -\u003e s.isSameStudent(student));","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"wanninglim"},"content":"    public void removeAllMembers() {","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"wanninglim"},"content":"        this.studentList.clear();","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"     * Updates a group member when edited","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"     * @param target group member to be edited","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"     * @param student edited group member","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"    public void updateMember(Student target, Student student) {","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"        removeMember(target);","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"        addMember(student);","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"                || (other instanceof Members // instanceof handles nulls","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"                \u0026\u0026 studentList.equals(((Members) other).studentList)); // state check","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"    public String toString() {","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"        if (studentList.isEmpty()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"            return \"No members\";","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"        for (Student m : studentList) {","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"            sb.append(m.getName().fullName).append(\", \");","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"        sb.setLength(sb.length() - 1);","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"tzejit"},"content":"        return sb.toString();","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"        return studentList.hashCode();","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"wanninglim":4,"tzejit":69}},{"path":"src/main/java/seedu/address/model/group/UniqueGroupList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.model.group;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import java.util.List;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.exceptions.DuplicateGroupException;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.exceptions.GroupNotFoundException;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":" * A list of groups that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":" * A group is considered unique by comparing using {@code Group#isSameGroup(Group)}. As such, adding and","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":" * updating of groups uses Group#isSameGroup(Group) for equality so as to ensure that the group being added","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":" * or updated is unique in terms of identity in the UniqueGroupList. However, the removal of a group uses","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":" * Group#equals(Object) so as to ensure that the group with exactly the same fields will be removed.","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":" *","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":" *","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":" * @see Group#isSameGroup(Group)","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"public class UniqueGroupList implements Iterable\u003cGroup\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"    private final ObservableList\u003cGroup\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"    private final ObservableList\u003cGroup\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"     * Returns true if the list contains an equivalent group as the given argument.","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"    public boolean contains(Group toCheck) {","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"        return internalList.stream().anyMatch(toCheck::isSameGroup);","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"     * Adds a group to the list.","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"     * The group must not already exist in the list.","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"    public void add(Group toAdd) {","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"            throw new DuplicateGroupException();","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"     * Replaces the group {@code target} in the list with {@code editedGroup}.","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"     * The group identity of {@code editedGroup} must not be the same as another existing group in the list.","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"    public void setGroup(Group target, Group editedGroup) {","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"        requireAllNonNull(target, editedGroup);","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"            throw new GroupNotFoundException();","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"tzejit"},"content":"        if (!target.isSameGroup(editedGroup) \u0026\u0026 contains(editedGroup)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"            throw new DuplicateGroupException();","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"        internalList.set(index, editedGroup);","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"     * Removes the equivalent group from the list.","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"     * The group must exist in the list.","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"    public void remove(Group toRemove) {","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"tzejit"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"tzejit"},"content":"            throw new GroupNotFoundException();","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"tzejit"},"content":"    public void setGroups(UniqueGroupList replacement) {","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"tzejit"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"tzejit"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"tzejit"},"content":"     * Replaces the contents of this list with {@code groups}.","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"tzejit"},"content":"     * {@code groups} must not contain duplicate groups.","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"tzejit"},"content":"    public void setGroups(List\u003cGroup\u003e groups) {","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"tzejit"},"content":"        requireAllNonNull(groups);","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"tzejit"},"content":"        if (!groupsAreUnique(groups)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"tzejit"},"content":"            throw new DuplicateGroupException();","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"tzejit"},"content":"        internalList.setAll(groups);","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"wanninglim"},"content":"     * Removes all students from all {@code groups}.","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"wanninglim"},"content":"     * {@code groups} must exist in tApp.","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"wanninglim"},"content":"    public void clearStudentsInGroups(List\u003cGroup\u003e groups) {","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"wanninglim"},"content":"        requireAllNonNull(groups);","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"wanninglim"},"content":"        for (Group group : groups) {","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"wanninglim"},"content":"            group.removeAllMembers();","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"wanninglim"},"content":"        internalList.setAll(groups);","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"wanninglim"},"content":"     * Removes a {@code student} from a {@code group}.","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"wanninglim"},"content":"     * {@code student} and {@code group} must exist in the address book.","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"wanninglim"},"content":"    public void removeStudentFromGroup(Student student, Group group) {","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"wanninglim"},"content":"        requireAllNonNull(student, group);","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"wanninglim"},"content":"        int index \u003d internalList.indexOf(group);","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"wanninglim"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"wanninglim"},"content":"            throw new GroupNotFoundException();","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"wanninglim"},"content":"        Group updatedGroup \u003d group;","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"wanninglim"},"content":"        updatedGroup.removeMember(student);","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"wanninglim"},"content":"        if (!group.isSameGroup(updatedGroup) \u0026\u0026 contains(updatedGroup)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"wanninglim"},"content":"            throw new DuplicateGroupException();","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"wanninglim"},"content":"        internalList.set(index, updatedGroup);","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"tzejit"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"tzejit"},"content":"    public ObservableList\u003cGroup\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-18"},{"lineNumber":139,"author":{"gitId":"tzejit"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":142,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":143,"author":{"gitId":"tzejit"},"content":"    public Iterator\u003cGroup\u003e iterator() {","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"tzejit"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":147,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":148,"author":{"gitId":"tzejit"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":149,"author":{"gitId":"tzejit"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-18"},{"lineNumber":150,"author":{"gitId":"tzejit"},"content":"                || (other instanceof UniqueGroupList // instanceof handles nulls","lastModifiedDate":"2021-10-18"},{"lineNumber":151,"author":{"gitId":"tzejit"},"content":"                \u0026\u0026 internalList.equals(((UniqueGroupList) other).internalList));","lastModifiedDate":"2021-10-18"},{"lineNumber":152,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":153,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":154,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":155,"author":{"gitId":"tzejit"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-18"},{"lineNumber":156,"author":{"gitId":"tzejit"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-18"},{"lineNumber":157,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":158,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":159,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":160,"author":{"gitId":"tzejit"},"content":"     * Returns true if {@code group} contains only unique groups.","lastModifiedDate":"2021-10-18"},{"lineNumber":161,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":162,"author":{"gitId":"tzejit"},"content":"    private boolean groupsAreUnique(List\u003cGroup\u003e groups) {","lastModifiedDate":"2021-10-18"},{"lineNumber":163,"author":{"gitId":"tzejit"},"content":"        for (int i \u003d 0; i \u003c groups.size() - 1; i++) {","lastModifiedDate":"2021-10-18"},{"lineNumber":164,"author":{"gitId":"tzejit"},"content":"            for (int j \u003d i + 1; j \u003c groups.size(); j++) {","lastModifiedDate":"2021-10-18"},{"lineNumber":165,"author":{"gitId":"tzejit"},"content":"                if (groups.get(i).isSameGroup(groups.get(j))) {","lastModifiedDate":"2021-10-18"},{"lineNumber":166,"author":{"gitId":"tzejit"},"content":"                    return false;","lastModifiedDate":"2021-10-18"},{"lineNumber":167,"author":{"gitId":"tzejit"},"content":"                }","lastModifiedDate":"2021-10-18"},{"lineNumber":168,"author":{"gitId":"tzejit"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":169,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":170,"author":{"gitId":"tzejit"},"content":"        return true;","lastModifiedDate":"2021-10-18"},{"lineNumber":171,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":172,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"wanninglim":35,"tzejit":137}},{"path":"src/main/java/seedu/address/model/group/exceptions/DuplicateGroupException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.model.group.exceptions;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":" * Signals that the operation will result in duplicate Groups (Groups are considered duplicates if they have the","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":" * same identity).","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"public class DuplicateGroupException extends RuntimeException {","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"    public DuplicateGroupException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"        super(\"Operation would result in duplicate groups\");","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"tzejit":11}},{"path":"src/main/java/seedu/address/model/group/exceptions/GroupNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.model.group.exceptions;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":" * Signals that the operation is unable to find the specified group.","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"public class GroupNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"tzejit":6}},{"path":"src/main/java/seedu/address/model/student/Attendance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":" * Represents a Student\u0027s attendance in tApp.","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":" * Guarantees: immutable;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"public class Attendance {","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"wanninglim"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"wanninglim"},"content":"            \"Weeks should be between 1 and %1$s\";","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"wanninglim"},"content":"    public static final int NUMBER_OF_WEEKS \u003d 13;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"wanninglim"},"content":"    public final ArrayList\u003cInteger\u003e attendanceList;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"     * Constructs an {@code Attendance}.","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"    public Attendance() {","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"wanninglim"},"content":"        attendanceList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"wanninglim"},"content":"        for (int i \u003d 0; i \u003c NUMBER_OF_WEEKS; i++) {","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"wanninglim"},"content":"            attendanceList.add(0);","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"wanninglim"},"content":"     * Constructs an existing {@code Attendance}.","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"wanninglim"},"content":"    public Attendance(ArrayList\u003cInteger\u003e attendanceList) {","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"wanninglim"},"content":"        this.attendanceList \u003d attendanceList;","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"wanninglim"},"content":"     * Toggles attendance from 0 to 1, or 1 to 0","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"wanninglim"},"content":"     * for the {@code week}.","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"wanninglim"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"wanninglim"},"content":"     * @param week attendance for the week","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"wanninglim"},"content":"    public void toggleAttendance(int week) {","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"wanninglim"},"content":"        int isPresent \u003d attendanceList.get(week);","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"wanninglim"},"content":"        if (isPresent \u003d\u003d 1) {","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"wanninglim"},"content":"            attendanceList.set(week, 0);","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"wanninglim"},"content":"        } else {","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"wanninglim"},"content":"            attendanceList.set(week, 1);","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"wanninglim"},"content":"     * Checks if a student is present during the specified {@code week}.","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"wanninglim"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"wanninglim"},"content":"     * @param week week to be checked.","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"wanninglim"},"content":"     * @return int specifying if student was present.","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"wanninglim"},"content":"    public int checkPresent(int week) {","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"wanninglim"},"content":"        int isPresent \u003d attendanceList.get(week);","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"wanninglim"},"content":"        return isPresent;","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"wanninglim"},"content":"     * Returns true if a given string is a valid week.","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"wanninglim"},"content":"    public static boolean isValidWeek(int week) {","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"wanninglim"},"content":"        return week \u003c\u003d NUMBER_OF_WEEKS \u0026\u0026 week \u003e 0;","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"                || (other instanceof Attendance // instanceof handles nulls","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"wanninglim"},"content":"                \u0026\u0026 attendanceList.equals(((Attendance) other).attendanceList)); // state check","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"wanninglim"},"content":"        return attendanceList.hashCode();","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"wanninglim":49,"tzejit":31}},{"path":"src/main/java/seedu/address/model/student/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":" * Represents a Student\u0027s email in the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":69,"tzejit":2}},{"path":"src/main/java/seedu/address/model/student/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":" * Represents a Student\u0027s name in tApp.","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":57,"tzejit":2}},{"path":"src/main/java/seedu/address/model/student/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"wanninglim"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":" * Tests that a {@code Student}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cStudent\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"wanninglim"},"content":"    private List\u003cString\u003e keywordsClone \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"wanninglim"},"content":"     * Ignores special characters in input keyword","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"wanninglim"},"content":"    private void removeSpecialCharacters() {","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"wanninglim"},"content":"        for (String keyword : keywords) {","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"wanninglim"},"content":"            String newKeyword \u003d keyword.replaceAll(\"\\\\W\", \"\");","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"wanninglim"},"content":"            keywordsClone.add(newKeyword);","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"wanninglim"},"content":"        removeSpecialCharacters();","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"wanninglim"},"content":"        return keywordsClone.stream()","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"wanninglim"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsSubstringIgnoreCase(student.getName().fullName, keyword));","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"wanninglim":15,"-":25,"tzejit":4}},{"path":"src/main/java/seedu/address/model/student/Participation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"wanninglim"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"wanninglim"},"content":" * Represents a Student\u0027s tutorial participation in tApp.","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"wanninglim"},"content":" * Guarantees: immutable;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"wanninglim"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"public class Participation {","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"wanninglim"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"wanninglim"},"content":"            \"Weeks should be between 1 and %1$s\";","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"wanninglim"},"content":"    public static final int NUMBER_OF_WEEKS \u003d 13;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"wanninglim"},"content":"    public final ArrayList\u003cInteger\u003e participationList;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"wanninglim"},"content":"     * Constructs an {@code Participation}.","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"    public Participation() {","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"wanninglim"},"content":"        participationList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"wanninglim"},"content":"        for (int i \u003d 0; i \u003c NUMBER_OF_WEEKS; i++) {","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"wanninglim"},"content":"            participationList.add(0);","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"wanninglim"},"content":"     * Constructs an existing {@code Participation}.","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"wanninglim"},"content":"    public Participation(ArrayList\u003cInteger\u003e participationList) {","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"wanninglim"},"content":"        this.participationList \u003d participationList;","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"wanninglim"},"content":"     * Toggles participation from 0 to 1, or 1 to 0","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"wanninglim"},"content":"     * for the {@code week}.","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"wanninglim"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"wanninglim"},"content":"     * @param week participation for the week","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"wanninglim"},"content":"    public void toggleParticipation(int week) {","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"wanninglim"},"content":"        int isPresent \u003d participationList.get(week);","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"wanninglim"},"content":"        if (isPresent \u003d\u003d 1) {","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"wanninglim"},"content":"            participationList.set(week, 0);","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"wanninglim"},"content":"        } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"wanninglim"},"content":"            participationList.set(week, 1);","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"wanninglim"},"content":"     * Checks if a student has participated during the specified {@code week}.","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"wanninglim"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"wanninglim"},"content":"     * @param week week to be checked.","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"wanninglim"},"content":"     * @return int specifying if student has participated.","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"wanninglim"},"content":"    public int checkParticipated(int week) {","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"wanninglim"},"content":"        return participationList.get(week);","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"wanninglim"},"content":"     * Returns true if a given string is a valid week.","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"wanninglim"},"content":"    public static boolean isValidWeek(int week) {","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"wanninglim"},"content":"        return week \u003c\u003d NUMBER_OF_WEEKS \u0026\u0026 week \u003e 0;","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"                || (other instanceof Participation // instanceof handles nulls","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"wanninglim"},"content":"                \u0026\u0026 participationList.equals(((Participation) other).participationList)); // state check","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"wanninglim"},"content":"        return participationList.hashCode();","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"wanninglim":55,"tzejit":23}},{"path":"src/main/java/seedu/address/model/student/Student.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.commons.RepoName;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":" * Represents a Student in the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"public class Student {","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"    private final StudentNumber studentNumber;","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"    private final Attendance attendance;","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"    private final Participation participation;","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"    private final UserName userName;","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"    private final RepoName repoName;","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"    private final GroupName groupName;","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"wanninglim"},"content":"     * Constructor for a new Person object","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"    public Student(Name name, Email email, StudentNumber studentNumber, UserName userName, RepoName repoName,","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"                   Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"        requireAllNonNull(name, email, studentNumber, tags);","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"        this.studentNumber \u003d studentNumber;","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"        this.attendance \u003d new Attendance();","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"        this.participation \u003d new Participation();","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"        if (userName !\u003d null) {","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"            this.userName \u003d userName;","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"        } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"            this.userName \u003d new UserName();","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"        if (repoName !\u003d null) {","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"            this.repoName \u003d repoName;","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"        } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"            this.repoName \u003d new RepoName();","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"        this.groupName \u003d new GroupName();","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"wanninglim"},"content":"     * Constructor for a re-stored Person object","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"    public Student(Name name, Email email, StudentNumber studentNumber, UserName userName, RepoName repoName,","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"wanninglim"},"content":"                   Set\u003cTag\u003e tags, Attendance attendance, Participation participation, GroupName groupName) {","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"tzejit"},"content":"        requireAllNonNull(name, email, studentNumber, tags, attendance);","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"wanninglim"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"wanninglim"},"content":"        this.email \u003d email;","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"        this.studentNumber \u003d studentNumber;","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"wanninglim"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"wanninglim"},"content":"        this.attendance \u003d attendance;","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"wanninglim"},"content":"        this.participation \u003d participation;","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"        if (userName !\u003d null) {","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"            this.userName \u003d userName;","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"        } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"            this.userName \u003d new UserName();","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"        if (repoName !\u003d null) {","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"tzejit"},"content":"            this.repoName \u003d repoName;","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"tzejit"},"content":"        } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"tzejit"},"content":"            this.repoName \u003d new RepoName();","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"tzejit"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"tzejit"},"content":"    public StudentNumber getStudentNumber() {","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"tzejit"},"content":"        return studentNumber;","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"tzejit"},"content":"    public UserName getUserName() {","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"tzejit"},"content":"        return userName;","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"tzejit"},"content":"    public RepoName getRepoName() {","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"tzejit"},"content":"        return repoName;","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":105,"author":{"gitId":"tzejit"},"content":"    public String getStudentLink() {","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"tzejit"},"content":"        if (!userName.isNull() \u0026\u0026 !repoName.isNull()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":107,"author":{"gitId":"tzejit"},"content":"            return new GithubLink(userName, repoName).toString();","lastModifiedDate":"2021-10-18"},{"lineNumber":108,"author":{"gitId":"tzejit"},"content":"        } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"tzejit"},"content":"            return \"-\";","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"tzejit"},"content":"    public Attendance getAttendance() {","lastModifiedDate":"2021-09-27"},{"lineNumber":114,"author":{"gitId":"tzejit"},"content":"        return attendance;","lastModifiedDate":"2021-09-27"},{"lineNumber":115,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":116,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":117,"author":{"gitId":"tzejit"},"content":"    public Participation getParticipation() {","lastModifiedDate":"2021-09-27"},{"lineNumber":118,"author":{"gitId":"tzejit"},"content":"        return participation;","lastModifiedDate":"2021-09-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":121,"author":{"gitId":"tzejit"},"content":"    public GroupName getGroupName() {","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"tzejit"},"content":"        return groupName;","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":133,"author":{"gitId":"wanninglim"},"content":"    public int checkPresent(int week) {","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"wanninglim"},"content":"        return attendance.checkPresent(week);","lastModifiedDate":"2021-10-26"},{"lineNumber":135,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":137,"author":{"gitId":"wanninglim"},"content":"    public void toggleAttendance(int week) {","lastModifiedDate":"2021-10-26"},{"lineNumber":138,"author":{"gitId":"wanninglim"},"content":"        attendance.toggleAttendance(week);","lastModifiedDate":"2021-10-26"},{"lineNumber":139,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":140,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"wanninglim"},"content":"    public int checkParticipated(int week) {","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"wanninglim"},"content":"        return participation.checkParticipated(week);","lastModifiedDate":"2021-10-26"},{"lineNumber":143,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":144,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"wanninglim"},"content":"    public void toggleParticipation(int week) {","lastModifiedDate":"2021-10-26"},{"lineNumber":146,"author":{"gitId":"wanninglim"},"content":"        participation.toggleParticipation(week);","lastModifiedDate":"2021-10-26"},{"lineNumber":147,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":148,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"tzejit"},"content":"     * Returns true if both students have the same name.","lastModifiedDate":"2021-10-08"},{"lineNumber":151,"author":{"gitId":"tzejit"},"content":"     * This defines a weaker notion of equality between two students.","lastModifiedDate":"2021-10-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"tzejit"},"content":"    public boolean isSameStudent(Student otherStudent) {","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"tzejit"},"content":"        if (otherStudent \u003d\u003d this) {","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"tzejit"},"content":"        return otherStudent !\u003d null","lastModifiedDate":"2021-10-08"},{"lineNumber":159,"author":{"gitId":"tzejit"},"content":"                \u0026\u0026 otherStudent.getName().equals(getName());","lastModifiedDate":"2021-10-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":162,"author":{"gitId":"wanninglim"},"content":"    public boolean hasGroupName() {","lastModifiedDate":"2021-10-25"},{"lineNumber":163,"author":{"gitId":"wanninglim"},"content":"        return !groupName.isNull();","lastModifiedDate":"2021-10-25"},{"lineNumber":164,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":165,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":167,"author":{"gitId":"tzejit"},"content":"     * Returns true if both students have the same identity and data fields.","lastModifiedDate":"2021-10-08"},{"lineNumber":168,"author":{"gitId":"tzejit"},"content":"     * This defines a stronger notion of equality between two students.","lastModifiedDate":"2021-10-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":176,"author":{"gitId":"tzejit"},"content":"        if (!(other instanceof Student)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":180,"author":{"gitId":"tzejit"},"content":"        Student otherStudent \u003d (Student) other;","lastModifiedDate":"2021-10-08"},{"lineNumber":181,"author":{"gitId":"tzejit"},"content":"        return otherStudent.getName().equals(getName())","lastModifiedDate":"2021-10-08"},{"lineNumber":182,"author":{"gitId":"tzejit"},"content":"                \u0026\u0026 otherStudent.getEmail().equals(getEmail())","lastModifiedDate":"2021-10-08"},{"lineNumber":183,"author":{"gitId":"tzejit"},"content":"                \u0026\u0026 otherStudent.getStudentNumber().equals((getStudentNumber()))","lastModifiedDate":"2021-10-13"},{"lineNumber":184,"author":{"gitId":"tzejit"},"content":"                \u0026\u0026 otherStudent.getStudentLink().equals((getStudentLink()))","lastModifiedDate":"2021-10-18"},{"lineNumber":185,"author":{"gitId":"tzejit"},"content":"                \u0026\u0026 otherStudent.getGroupName().equals(getGroupName())","lastModifiedDate":"2021-10-19"},{"lineNumber":186,"author":{"gitId":"tzejit"},"content":"                \u0026\u0026 otherStudent.getTags().equals(getTags());","lastModifiedDate":"2021-10-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":192,"author":{"gitId":"wanninglim"},"content":"        return Objects.hash(name, email, tags, attendance, participation, studentNumber, userName, repoName, groupName);","lastModifiedDate":"2021-10-19"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":201,"author":{"gitId":"tzejit"},"content":"                .append(\"; Student Number: \")","lastModifiedDate":"2021-10-13"},{"lineNumber":202,"author":{"gitId":"tzejit"},"content":"                .append(getStudentNumber())","lastModifiedDate":"2021-10-18"},{"lineNumber":203,"author":{"gitId":"tzejit"},"content":"                .append(\"; Github Link: \")","lastModifiedDate":"2021-10-18"},{"lineNumber":204,"author":{"gitId":"tzejit"},"content":"                .append(getStudentLink())","lastModifiedDate":"2021-10-19"},{"lineNumber":205,"author":{"gitId":"tzejit"},"content":"                .append(\"; Group Name: \")","lastModifiedDate":"2021-10-19"},{"lineNumber":206,"author":{"gitId":"tzejit"},"content":"                .append(getGroupName());","lastModifiedDate":"2021-10-19"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":216,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":217,"author":{"gitId":"tzejit"},"content":"     * Represents a Student\u0027s github ip link in tApp.","lastModifiedDate":"2021-10-18"},{"lineNumber":218,"author":{"gitId":"tzejit"},"content":"     * Guarantees: immutable;","lastModifiedDate":"2021-10-18"},{"lineNumber":219,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":220,"author":{"gitId":"tzejit"},"content":"    public static class GithubLink {","lastModifiedDate":"2021-10-18"},{"lineNumber":221,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":222,"author":{"gitId":"tzejit"},"content":"        public static final String GITHUB_ADDRESS \u003d \"https://github.com/\";","lastModifiedDate":"2021-10-18"},{"lineNumber":223,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":224,"author":{"gitId":"tzejit"},"content":"        public final String fullLink;","lastModifiedDate":"2021-10-18"},{"lineNumber":225,"author":{"gitId":"tzejit"},"content":"        public final UserName userName;","lastModifiedDate":"2021-10-18"},{"lineNumber":226,"author":{"gitId":"tzejit"},"content":"        public final RepoName repoName;","lastModifiedDate":"2021-10-18"},{"lineNumber":227,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":228,"author":{"gitId":"tzejit"},"content":"        /**","lastModifiedDate":"2021-10-18"},{"lineNumber":229,"author":{"gitId":"tzejit"},"content":"         * Constructs a {@code GithubName}.","lastModifiedDate":"2021-10-18"},{"lineNumber":230,"author":{"gitId":"tzejit"},"content":"         *","lastModifiedDate":"2021-10-18"},{"lineNumber":231,"author":{"gitId":"tzejit"},"content":"         * @param userName A valid user name.","lastModifiedDate":"2021-10-18"},{"lineNumber":232,"author":{"gitId":"tzejit"},"content":"         * @param repoName A valid repo name","lastModifiedDate":"2021-10-18"},{"lineNumber":233,"author":{"gitId":"tzejit"},"content":"         */","lastModifiedDate":"2021-10-18"},{"lineNumber":234,"author":{"gitId":"tzejit"},"content":"        public GithubLink(UserName userName, RepoName repoName) {","lastModifiedDate":"2021-10-18"},{"lineNumber":235,"author":{"gitId":"tzejit"},"content":"            this.userName \u003d userName;","lastModifiedDate":"2021-10-18"},{"lineNumber":236,"author":{"gitId":"tzejit"},"content":"            this.repoName \u003d repoName;","lastModifiedDate":"2021-10-18"},{"lineNumber":237,"author":{"gitId":"tzejit"},"content":"            if (userName !\u003d null \u0026\u0026 repoName !\u003d null) {","lastModifiedDate":"2021-10-18"},{"lineNumber":238,"author":{"gitId":"tzejit"},"content":"                this.fullLink \u003d GITHUB_ADDRESS + userName + \"/\" + repoName;","lastModifiedDate":"2021-10-18"},{"lineNumber":239,"author":{"gitId":"tzejit"},"content":"            } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":240,"author":{"gitId":"tzejit"},"content":"                this.fullLink \u003d \"-\";","lastModifiedDate":"2021-10-18"},{"lineNumber":241,"author":{"gitId":"tzejit"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":242,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":243,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":244,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":245,"author":{"gitId":"tzejit"},"content":"        public String toString() {","lastModifiedDate":"2021-10-18"},{"lineNumber":246,"author":{"gitId":"tzejit"},"content":"            return fullLink;","lastModifiedDate":"2021-10-18"},{"lineNumber":247,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":248,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":249,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":250,"author":{"gitId":"tzejit"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":251,"author":{"gitId":"tzejit"},"content":"            return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-18"},{"lineNumber":252,"author":{"gitId":"tzejit"},"content":"                    || (other instanceof GithubLink// instanceof handles nulls","lastModifiedDate":"2021-10-18"},{"lineNumber":253,"author":{"gitId":"tzejit"},"content":"                    \u0026\u0026 fullLink.equals(((GithubLink) other).fullLink)); // state check","lastModifiedDate":"2021-10-18"},{"lineNumber":254,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":255,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":256,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":257,"author":{"gitId":"tzejit"},"content":"        public int hashCode() {","lastModifiedDate":"2021-10-18"},{"lineNumber":258,"author":{"gitId":"tzejit"},"content":"            return fullLink.hashCode();","lastModifiedDate":"2021-10-18"},{"lineNumber":259,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":260,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wanninglim":34,"-":86,"tzejit":141}},{"path":"src/main/java/seedu/address/model/student/StudentNumber.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":" * Represents a Student\u0027s Student Number in the tApp.","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidNumber(String)}","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"public class StudentNumber {","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"            \"Student number should start and end with a letter and contain 7 numbers\";","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"    /*","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"     * The first and last character of the number must be an alphabet,","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"     * and it must contain 7 numbers in between.","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"    public static final String VALIDATION_REGEX \u003d \"[a-zA-Z]\\\\d{7}[a-zA-Z]\";","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"    public final String studentNumber;","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"     * @param studentNumber A valid name.","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"    public StudentNumber(String studentNumber) {","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"        requireNonNull(studentNumber);","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"        checkArgument(isValidNumber(studentNumber), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"        this.studentNumber \u003d studentNumber.toUpperCase();","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"    public static boolean isValidNumber(String test) {","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"    public String toString() {","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"        return studentNumber;","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"                || (other instanceof StudentNumber // instanceof handles nulls","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"                \u0026\u0026 studentNumber.equals(((StudentNumber) other).studentNumber)); // state check","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"        return studentNumber.hashCode();","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"tzejit":57}},{"path":"src/main/java/seedu/address/model/student/UniqueStudentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.exceptions.StudentNotFoundException;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":" * A list of students that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":" * A student is considered unique by comparing using {@code Student#isSameStudent(Student)}. As such, adding and","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":" * updating of students uses Student#isSameStudent(Student) for equality so as to ensure that the student being added","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":" * or updated is unique in terms of identity in the UniqueStudentList. However, the removal of a student uses","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":" * Student#equals(Object) so as to ensure that the student with exactly the same fields will be removed.","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":" *","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":" *","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":" * @see Student#isSameStudent(Student)","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"public class UniqueStudentList implements Iterable\u003cStudent\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"    private final ObservableList\u003cStudent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"    private final ObservableList\u003cStudent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"     * Returns true if the list contains an equivalent student as the given argument.","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"    public boolean contains(Student toCheck) {","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"        return internalList.stream().anyMatch(toCheck::isSameStudent);","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"     * Adds a student to the list.","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"     * The student must not already exist in the list.","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"    public void add(Student toAdd) {","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"     * Replaces the student {@code target} in the list with {@code editedStudent}.","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student in the list.","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"        requireAllNonNull(target, editedStudent);","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"            throw new StudentNotFoundException();","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"tzejit"},"content":"        if (!target.isSameStudent(editedStudent) \u0026\u0026 contains(editedStudent)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"        internalList.set(index, editedStudent);","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"     * Removes the equivalent student from the list.","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"     * The student must exist in the list.","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"    public void remove(Student toRemove) {","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"tzejit"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"tzejit"},"content":"            throw new StudentNotFoundException();","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"wanninglim"},"content":"     * Removes the groupName from the specified {@code student}.","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"wanninglim"},"content":"     * {@code student} must not be null.","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"wanninglim"},"content":"    public void removeGroupFromStudent(Student student) {","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"wanninglim"},"content":"        requireNonNull(student);","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"wanninglim"},"content":"        Student updatedStudent \u003d new Student(student.getName(), student.getEmail(), student.getStudentNumber(),","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"wanninglim"},"content":"                student.getUserName(), student.getRepoName(), student.getTags(), student.getAttendance(),","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"wanninglim"},"content":"                student.getParticipation(), new GroupName());","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"wanninglim"},"content":"        setStudent(student, updatedStudent);","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"wanninglim"},"content":"     * Clears all groupName fields from {@code students}.","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"wanninglim"},"content":"     * {@code students} students must not contain nulls.","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"wanninglim"},"content":"    public void clearGroupFromStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"wanninglim"},"content":"        requireAllNonNull(students);","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"wanninglim"},"content":"        for (Student student : students) {","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"wanninglim"},"content":"            removeGroupFromStudent(student);","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"tzejit"},"content":"    public void setStudents(UniqueStudentList replacement) {","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"tzejit"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"tzejit"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"tzejit"},"content":"     * Replaces the contents of this list with {@code students}.","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"tzejit"},"content":"     * {@code students} must not contain duplicate students.","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"tzejit"},"content":"    public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"tzejit"},"content":"        requireAllNonNull(students);","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"tzejit"},"content":"        if (!studentsAreUnique(students)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"tzejit"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"tzejit"},"content":"        internalList.setAll(students);","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"tzejit"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"tzejit"},"content":"    public ObservableList\u003cStudent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"tzejit"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"tzejit"},"content":"    public Iterator\u003cStudent\u003e iterator() {","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"tzejit"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"tzejit"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"tzejit"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-08"},{"lineNumber":140,"author":{"gitId":"tzejit"},"content":"                || (other instanceof UniqueStudentList // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":141,"author":{"gitId":"tzejit"},"content":"                        \u0026\u0026 internalList.equals(((UniqueStudentList) other).internalList));","lastModifiedDate":"2021-10-08"},{"lineNumber":142,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":143,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":144,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":145,"author":{"gitId":"tzejit"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-08"},{"lineNumber":146,"author":{"gitId":"tzejit"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-08"},{"lineNumber":147,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":148,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":149,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":150,"author":{"gitId":"tzejit"},"content":"     * Returns true if {@code students} contains only unique students.","lastModifiedDate":"2021-10-08"},{"lineNumber":151,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":152,"author":{"gitId":"tzejit"},"content":"    private boolean studentsAreUnique(List\u003cStudent\u003e students) {","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"tzejit"},"content":"        for (int i \u003d 0; i \u003c students.size() - 1; i++) {","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"tzejit"},"content":"            for (int j \u003d i + 1; j \u003c students.size(); j++) {","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"tzejit"},"content":"                if (students.get(i).isSameStudent(students.get(j))) {","lastModifiedDate":"2021-10-08"},{"lineNumber":156,"author":{"gitId":"tzejit"},"content":"                    return false;","lastModifiedDate":"2021-10-08"},{"lineNumber":157,"author":{"gitId":"tzejit"},"content":"                }","lastModifiedDate":"2021-10-08"},{"lineNumber":158,"author":{"gitId":"tzejit"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":159,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":160,"author":{"gitId":"tzejit"},"content":"        return true;","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":162,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"wanninglim":25,"tzejit":137}},{"path":"src/main/java/seedu/address/model/student/UserName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"public class UserName {","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"            \"User name should contain only alphanumeric characters, underscores, \"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"                    + \"tilde, dots and dashes, and it should not be blank\";","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}._\\\\-~][\\\\p{Alnum}._\\\\-~]*\";","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"    public final String userName;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"     * Constructs a {@code UserName}.","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"     * @param userName A valid user name to be used in the link.","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"    public UserName(String userName) {","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"        requireNonNull(userName);","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"        checkArgument(isValidUserName(userName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"        this.userName \u003d userName;","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"    public UserName() {","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"        this.userName \u003d null;","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"    public boolean isNull() {","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"        return userName \u003d\u003d null ? true : false;","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"    public static boolean isValidUserName(String test) {","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"    public String toString() {","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"        return userName;","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"                || (other instanceof UserName // instanceof handles nulls","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"                \u0026\u0026 ((isNull() \u0026\u0026 ((UserName) other).isNull())","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"                || userName.equals(((UserName) other).userName))); // state check","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"        return isNull() ? 0 : userName.hashCode();","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"tzejit":59}},{"path":"src/main/java/seedu/address/model/student/exceptions/DuplicateStudentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.model.student.exceptions;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":" * Signals that the operation will result in duplicate Students (Students are considered duplicates if they have the","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":" * same identity).","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"public class DuplicateStudentException extends RuntimeException {","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"    public DuplicateStudentException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"        super(\"Operation would result in duplicate students\");","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"tzejit":11}},{"path":"src/main/java/seedu/address/model/student/exceptions/StudentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.model.student.exceptions;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":" * Signals that the operation is unable to find the specified student.","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"public class StudentNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"tzejit":6}},{"path":"src/main/java/seedu/address/model/task/CommandType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"somekoreanboi"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"somekoreanboi"},"content":"public enum CommandType {","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"somekoreanboi"},"content":"    ADD(\"add\"), DELETE(\"delete\"), EDIT(\"edit\");","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"somekoreanboi"},"content":"    private final String usedCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"somekoreanboi"},"content":"    CommandType(String usedCommand) {","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"somekoreanboi"},"content":"        this.usedCommand \u003d usedCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"somekoreanboi"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"somekoreanboi"},"content":"    public String toString() {","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"somekoreanboi"},"content":"        return \"Task was\" + usedCommand + \"ed\";","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"somekoreanboi"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"somekoreanboi":19}},{"path":"src/main/java/seedu/address/model/task/DeadlineTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"itsraveen"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"itsraveen"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"itsraveen"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"weenleen"},"content":"    private TaskDate dueDate;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"itsraveen"},"content":"     * Constructs a {@code Task}.","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"itsraveen"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"itsraveen"},"content":"     * @param name A valid TaskName.","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"itsraveen"},"content":"     * @param tags A valid Set of Tags.","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"itsraveen"},"content":"    public DeadlineTask(TaskName name, Set\u003cTag\u003e tags, boolean isDone,","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"itsraveen"},"content":"                        TaskDate dueDate, Description description, Priority priority) {","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"itsraveen"},"content":"        super(name, tags, isDone, description, priority);","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"itsraveen"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"itsraveen"},"content":"    public TaskDate getDeadline() {","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"itsraveen"},"content":"        return dueDate;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"itsraveen"},"content":"     * Returns true if both Tasks have the same name.","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"itsraveen"},"content":"     * This defines a weaker notion of equality between two Task.","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"itsraveen"},"content":"    public boolean isSameTask(DeadlineTask otherTask) {","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"itsraveen"},"content":"        if (otherTask \u003d\u003d this) {","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"itsraveen"},"content":"            return true;","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"itsraveen"},"content":"        return otherTask !\u003d null","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"itsraveen"},"content":"                \u0026\u0026 otherTask.getName().equals(getName());","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"itsraveen"},"content":"     * Returns true if both tasks have the same identity and data fields.","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"itsraveen"},"content":"     * This defines a stronger notion of equality between two tasks.","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"itsraveen"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"itsraveen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"itsraveen"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"itsraveen"},"content":"            return true;","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"itsraveen"},"content":"        if (!(other instanceof DeadlineTask)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"itsraveen"},"content":"            return false;","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"itsraveen"},"content":"        DeadlineTask otherTask \u003d (DeadlineTask) other;","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"itsraveen"},"content":"        return otherTask.getName().equals(getName())","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"itsraveen"},"content":"                \u0026\u0026 otherTask.getDeadline().equals(getDeadline())","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"itsraveen"},"content":"                \u0026\u0026 otherTask.getTags().equals(getTags());","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"itsraveen"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"itsraveen"},"content":"    public String toString() {","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"itsraveen"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"itsraveen"},"content":"        builder.append(getName())","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"somekoreanboi"},"content":"                .append(\"\\nDescription: \")","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"somekoreanboi"},"content":"                .append(getDescription().toString())","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"somekoreanboi"},"content":"                .append(\"\\nTaskDate: \")","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"itsraveen"},"content":"                .append(getDeadline().toString())","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"itsraveen"},"content":"                .append(\"\\nStatus: \")","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"itsraveen"},"content":"                .append(getStatusString())","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"itsraveen"},"content":"                .append(\"\\nPriority: \")","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"itsraveen"},"content":"                .append(getPriorityAsString());","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"itsraveen"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"itsraveen"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"itsraveen"},"content":"            builder.append(\"\\nTags: \");","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"itsraveen"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"itsraveen"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"weenleen"},"content":"    public DeadlineTask clone() {","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"weenleen"},"content":"        DeadlineTask clone \u003d (DeadlineTask) super.clone();","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"weenleen"},"content":"        clone.dueDate \u003d dueDate;","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"weenleen"},"content":"        return clone;","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"itsraveen"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"itsraveen":76,"weenleen":8,"somekoreanboi":3}},{"path":"src/main/java/seedu/address/model/task/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"somekoreanboi"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"somekoreanboi"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"somekoreanboi"},"content":" * Description of the task","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"somekoreanboi"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"somekoreanboi"},"content":"public class Description {","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"somekoreanboi"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"somekoreanboi"},"content":"            \"Descriptions should only contain alphanumeric characters and spaces.\";","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"somekoreanboi"},"content":"    public static final Description NO_DESCRIPTION \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"somekoreanboi"},"content":"            new Description(\"No Description\");","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"somekoreanboi"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"somekoreanboi"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"somekoreanboi"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"somekoreanboi"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"somekoreanboi"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"somekoreanboi"},"content":"    public final String description;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"somekoreanboi"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"somekoreanboi"},"content":"     * Constructs a {@code Description}.","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"somekoreanboi"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"somekoreanboi"},"content":"     * @param description A valid description.","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"somekoreanboi"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"somekoreanboi"},"content":"    public Description(String description) {","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"somekoreanboi"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"somekoreanboi"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"somekoreanboi"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"somekoreanboi"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"somekoreanboi"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"somekoreanboi"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"somekoreanboi"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"somekoreanboi"},"content":"            return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"somekoreanboi"},"content":"        //If there is no description, it still is considered valid.","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"somekoreanboi"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"somekoreanboi"},"content":"            return true;","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"somekoreanboi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"somekoreanboi"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"somekoreanboi"},"content":"    public String toString() {","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"somekoreanboi"},"content":"        return description;","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"somekoreanboi"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"somekoreanboi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"somekoreanboi"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"somekoreanboi"},"content":"                || (other instanceof Description // instanceof handles nulls","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"somekoreanboi"},"content":"                \u0026\u0026 description.equals(((Description) other).description)); // state check","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"somekoreanboi"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"somekoreanboi"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"somekoreanboi"},"content":"        return description.hashCode();","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"somekoreanboi"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"somekoreanboi":64}},{"path":"src/main/java/seedu/address/model/task/EventTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"itsraveen"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"itsraveen"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"itsraveen"},"content":"public class EventTask extends Task {","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"weenleen"},"content":"    private TaskDate dueDate;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"itsraveen"},"content":"     * Constructs a {@code Task}.","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"itsraveen"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"itsraveen"},"content":"     * @param name A valid TaskName.","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"itsraveen"},"content":"     * @param tags A valid Set of Tags.","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"itsraveen"},"content":"    public EventTask(TaskName name, Set\u003cTag\u003e tags, boolean isDone,","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"itsraveen"},"content":"                     TaskDate date, Description description, Priority priority) {","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"itsraveen"},"content":"        super(name, tags, isDone, description, priority);","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"itsraveen"},"content":"        this.dueDate \u003d date;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"itsraveen"},"content":"    //    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"somekoreanboi"},"content":"    public TaskDate getTaskDate() {","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"itsraveen"},"content":"        return dueDate;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"itsraveen"},"content":"     * Returns true if both Tasks have the same name.","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"itsraveen"},"content":"     * This defines a weaker notion of equality between two Task.","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"itsraveen"},"content":"    public boolean isSameTask(EventTask otherTask) {","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"itsraveen"},"content":"        if (otherTask \u003d\u003d this) {","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"itsraveen"},"content":"            return true;","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"itsraveen"},"content":"        return otherTask !\u003d null","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"itsraveen"},"content":"                \u0026\u0026 otherTask.getName().equals(getName());","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"itsraveen"},"content":"     * Returns true if both tasks have the same identity and data fields.","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"itsraveen"},"content":"     * This defines a stronger notion of equality between two tasks.","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"itsraveen"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"itsraveen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"itsraveen"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"itsraveen"},"content":"            return true;","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"itsraveen"},"content":"        if (!(other instanceof EventTask)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"itsraveen"},"content":"            return false;","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"itsraveen"},"content":"        EventTask otherTask \u003d (EventTask) other;","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"itsraveen"},"content":"        return otherTask.getName().equals(getName())","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"somekoreanboi"},"content":"                \u0026\u0026 otherTask.getTaskDate().equals(getTaskDate())","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"itsraveen"},"content":"                \u0026\u0026 otherTask.getTags().equals(getTags());","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"itsraveen"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"itsraveen"},"content":"    public String toString() {","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"itsraveen"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"itsraveen"},"content":"        builder.append(getName())","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"somekoreanboi"},"content":"                .append(\"\\nDescription: \")","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"somekoreanboi"},"content":"                .append(getDescription().toString())","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"itsraveen"},"content":"                .append(\"\\nEvent on: \")","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"somekoreanboi"},"content":"                .append(getTaskDate().toString())","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"itsraveen"},"content":"                .append(\"\\nStatus: \")","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"itsraveen"},"content":"                .append(getStatusString())","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"itsraveen"},"content":"                .append(\"\\nPriority: \")","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"itsraveen"},"content":"                .append(getPriority().toString());","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"itsraveen"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"itsraveen"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"itsraveen"},"content":"            builder.append(\"\\nTags: \");","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"itsraveen"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"itsraveen"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"weenleen"},"content":"    public EventTask clone() {","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"weenleen"},"content":"        EventTask clone \u003d (EventTask) super.clone();","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"weenleen"},"content":"        clone.dueDate \u003d this.dueDate;","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"weenleen"},"content":"        return clone;","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"itsraveen"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"itsraveen":77,"weenleen":8,"somekoreanboi":5}},{"path":"src/main/java/seedu/address/model/task/NameContainsTestKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"itsraveen"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"itsraveen"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"itsraveen"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"itsraveen"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"itsraveen"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"itsraveen"},"content":" * Tests that a {@code Task}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"itsraveen"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"itsraveen"},"content":"public class NameContainsTestKeywordsPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"itsraveen"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"itsraveen"},"content":"    public NameContainsTestKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"itsraveen"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"itsraveen"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"itsraveen"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"itsraveen"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"itsraveen"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(task.getName().taskName, keyword));","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"itsraveen"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"itsraveen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"itsraveen"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"itsraveen"},"content":"                || (other instanceof NameContainsTestKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"itsraveen"},"content":"                \u0026\u0026 keywords.equals(((NameContainsTestKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"itsraveen"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"itsraveen":31}},{"path":"src/main/java/seedu/address/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weenleen"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"weenleen"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"weenleen"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"weenleen"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"weenleen"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"weenleen"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"itsraveen"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"itsraveen"},"content":" * Represents a Task in the address book.","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"itsraveen"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"itsraveen"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"weenleen"},"content":"public class Task implements Comparable\u003cTask\u003e, Cloneable {","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"weenleen"},"content":"    private TaskName name;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"weenleen"},"content":"    private Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"weenleen"},"content":"    private String description;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"itsraveen"},"content":"    private boolean isDone;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"itsraveen"},"content":"    private Priority priority;","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"itsraveen"},"content":"    public enum Priority {","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"itsraveen"},"content":"        HIGH, MEDIUM, LOW","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"weenleen"},"content":"     * Constructs a {@code Task}.","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"weenleen"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"weenleen"},"content":"     * @param name A valid TaskName.","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"weenleen"},"content":"     * @param tags A valid Set of Tags.","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"somekoreanboi"},"content":"     * @param description A valid Description of Tags.","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"itsraveen"},"content":"     * @param isDone A boolean indicating the status of the Task.","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"itsraveen"},"content":"     * @param priority A valid priority for the Task.","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"itsraveen"},"content":"    public Task(TaskName name, Set\u003cTag\u003e tags, boolean isDone, Description description, Priority priority) {","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"itsraveen"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"itsraveen"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"itsraveen"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"itsraveen"},"content":"        this.description \u003d description.description;","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"itsraveen"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"itsraveen"},"content":"     * Constructs a {@code Task}.","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"itsraveen"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"itsraveen"},"content":"     * @param name A valid TaskName.","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"itsraveen"},"content":"     * @param tags A valid Set of Tags.","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"itsraveen"},"content":"     * @param description A valid Description of Tags.","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"itsraveen"},"content":"     * @param isDone A boolean indicating the status of the Task.","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"somekoreanboi"},"content":"    public Task(TaskName name, Set\u003cTag\u003e tags, boolean isDone, Description description) {","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"weenleen"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"weenleen"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"itsraveen"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"somekoreanboi"},"content":"        this.description \u003d description.description;","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"itsraveen"},"content":"        this.priority \u003d Priority.LOW;","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"weenleen"},"content":"    public TaskName getName() {","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"weenleen"},"content":"        return name;","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"itsraveen"},"content":"    public String getStatusString() {","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"itsraveen"},"content":"        return this.isDone ? \"Completed\" : \"Pending\";","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"itsraveen"},"content":"    public boolean checkIsDone() {","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"itsraveen"},"content":"        return isDone;","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"itsraveen"},"content":"    public void markTaskComplete() {","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"itsraveen"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"itsraveen"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"itsraveen"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"itsraveen"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"itsraveen"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"somekoreanboi"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"somekoreanboi"},"content":"        return description;","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"itsraveen"},"content":"    public Priority getPriority() {","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"itsraveen"},"content":"        return priority;","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"itsraveen"},"content":"    public String getPriorityAsString() {","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"itsraveen"},"content":"        if (this.priority \u003d\u003d Priority.HIGH) {","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"wanninglim"},"content":"            return \"HIGH️\";","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"itsraveen"},"content":"        } else if (this.priority \u003d\u003d Priority.MEDIUM) {","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"itsraveen"},"content":"            return \"MEDIUM\";","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"itsraveen"},"content":"        } else {","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"itsraveen"},"content":"            return \"LOW\";","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":101,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"itsraveen"},"content":"     * Returns true if both Tasks have the same name.","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"itsraveen"},"content":"     * This defines a weaker notion of equality between two Task.","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"weenleen"},"content":"    public boolean isSameTask(Task otherTask) {","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"weenleen"},"content":"        if (otherTask \u003d\u003d this) {","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"weenleen"},"content":"            return true;","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"weenleen"},"content":"        } else if (this.getClass().equals(otherTask.getClass())) {","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"weenleen"},"content":"            return otherTask.getName().equals(getName()) \u0026\u0026 otherTask.getDate().equals(getDate())","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"weenleen"},"content":"                    \u0026\u0026 otherTask.getDescription().equals(getDescription());","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"weenleen"},"content":"        } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"weenleen"},"content":"            return false;","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"weenleen"},"content":"     * Returns true if both tasks have the same identity and data fields.","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"weenleen"},"content":"     * This defines a stronger notion of equality between two tasks.","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"weenleen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"weenleen"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"weenleen"},"content":"            return true;","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"weenleen"},"content":"        if (!(other instanceof Task)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"weenleen"},"content":"            return false;","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"weenleen"},"content":"        Task otherTask \u003d (Task) other;","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"weenleen"},"content":"        return otherTask.getName().equals(getName())","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"weenleen"},"content":"                \u0026\u0026 otherTask.getTags().equals(getTags())","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"weenleen"},"content":"                \u0026\u0026 otherTask.getDate().equals(getDate())","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"weenleen"},"content":"                \u0026\u0026 otherTask.getDescription().equals(getDescription());","lastModifiedDate":"2021-10-21"},{"lineNumber":136,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":137,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":138,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"weenleen"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":140,"author":{"gitId":"weenleen"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-10-07"},{"lineNumber":141,"author":{"gitId":"itsraveen"},"content":"        return Objects.hash(name, tags, isDone);","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":143,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":144,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":145,"author":{"gitId":"weenleen"},"content":"    public String toString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":146,"author":{"gitId":"weenleen"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-07"},{"lineNumber":147,"author":{"gitId":"weenleen"},"content":"        builder.append(getName())","lastModifiedDate":"2021-10-07"},{"lineNumber":148,"author":{"gitId":"itsraveen"},"content":"                .append(\"\\nStatus: \")","lastModifiedDate":"2021-10-19"},{"lineNumber":149,"author":{"gitId":"itsraveen"},"content":"                .append(getStatusString());","lastModifiedDate":"2021-10-18"},{"lineNumber":150,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":151,"author":{"gitId":"weenleen"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2021-10-07"},{"lineNumber":152,"author":{"gitId":"weenleen"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":153,"author":{"gitId":"itsraveen"},"content":"            builder.append(\"\\nTags: \");","lastModifiedDate":"2021-10-19"},{"lineNumber":154,"author":{"gitId":"weenleen"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2021-10-07"},{"lineNumber":155,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":156,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"weenleen"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-07"},{"lineNumber":158,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":159,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"weenleen"},"content":"     * Returns the date associated with the task if the task is a DeadlineTask or an EventTask.","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"weenleen"},"content":"     * The maximum LocalDate is returned if the task is a TodoTask.","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"weenleen"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"weenleen"},"content":"     * @return The date associated with a task.","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"weenleen"},"content":"    private LocalDate getDate() {","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"weenleen"},"content":"        if (this instanceof DeadlineTask) {","lastModifiedDate":"2021-10-21"},{"lineNumber":168,"author":{"gitId":"weenleen"},"content":"            return ((DeadlineTask) this).getDeadline().getDeadline();","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"weenleen"},"content":"        } else if (this instanceof EventTask) {","lastModifiedDate":"2021-10-21"},{"lineNumber":170,"author":{"gitId":"weenleen"},"content":"            return ((EventTask) this).getTaskDate().getDeadline();","lastModifiedDate":"2021-10-21"},{"lineNumber":171,"author":{"gitId":"weenleen"},"content":"        } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"weenleen"},"content":"            return LocalDate.MAX;","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":175,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":177,"author":{"gitId":"weenleen"},"content":"    public int compareTo(Task otherTask) {","lastModifiedDate":"2021-10-21"},{"lineNumber":178,"author":{"gitId":"weenleen"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-10-25"},{"lineNumber":179,"author":{"gitId":"weenleen"},"content":"            return otherTask.isDone ? 0 : 1;","lastModifiedDate":"2021-10-25"},{"lineNumber":180,"author":{"gitId":"weenleen"},"content":"        } else if (otherTask.isDone) {","lastModifiedDate":"2021-10-25"},{"lineNumber":181,"author":{"gitId":"weenleen"},"content":"            return -1;","lastModifiedDate":"2021-10-25"},{"lineNumber":182,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":183,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":184,"author":{"gitId":"weenleen"},"content":"        LocalDate thisDate \u003d this.getDate();","lastModifiedDate":"2021-10-21"},{"lineNumber":185,"author":{"gitId":"weenleen"},"content":"        LocalDate otherDate \u003d otherTask.getDate();","lastModifiedDate":"2021-10-21"},{"lineNumber":186,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":187,"author":{"gitId":"weenleen"},"content":"        return thisDate.compareTo(otherDate);","lastModifiedDate":"2021-10-21"},{"lineNumber":188,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":189,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":190,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":191,"author":{"gitId":"weenleen"},"content":"    public Task clone() {","lastModifiedDate":"2021-10-21"},{"lineNumber":192,"author":{"gitId":"weenleen"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":193,"author":{"gitId":"weenleen"},"content":"            Task clone \u003d (Task) super.clone();","lastModifiedDate":"2021-10-21"},{"lineNumber":194,"author":{"gitId":"weenleen"},"content":"            clone.name \u003d this.name;","lastModifiedDate":"2021-10-21"},{"lineNumber":195,"author":{"gitId":"weenleen"},"content":"            clone.tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":196,"author":{"gitId":"weenleen"},"content":"            clone.tags.addAll(this.tags);","lastModifiedDate":"2021-10-21"},{"lineNumber":197,"author":{"gitId":"weenleen"},"content":"            clone.isDone \u003d this.isDone;","lastModifiedDate":"2021-10-21"},{"lineNumber":198,"author":{"gitId":"weenleen"},"content":"            clone.description \u003d this.description;","lastModifiedDate":"2021-10-21"},{"lineNumber":199,"author":{"gitId":"weenleen"},"content":"            return clone;","lastModifiedDate":"2021-10-21"},{"lineNumber":200,"author":{"gitId":"weenleen"},"content":"        } catch (CloneNotSupportedException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":201,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError();","lastModifiedDate":"2021-10-21"},{"lineNumber":202,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":203,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":204,"author":{"gitId":"weenleen"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"weenleen":127,"itsraveen":70,"wanninglim":1,"somekoreanboi":6}},{"path":"src/main/java/seedu/address/model/task/TaskDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weenleen"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"weenleen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"weenleen"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"weenleen"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"weenleen"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"weenleen"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"itsraveen"},"content":"public class TaskDate {","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"weenleen"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Deadlines should be in the format yyyy-MM-dd\";","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"weenleen"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"weenleen"},"content":"    private final String value;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"weenleen"},"content":"    private LocalDate deadline;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"somekoreanboi"},"content":"     * Constructs a {@code TaskDate}.","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"weenleen"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"weenleen"},"content":"     * @param deadline A valid deadline date.","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"itsraveen"},"content":"    public TaskDate(String deadline) {","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"weenleen"},"content":"        requireNonNull(deadline);","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"weenleen"},"content":"        this.value \u003d deadline;","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"weenleen"},"content":"        try {","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"weenleen"},"content":"            this.deadline \u003d LocalDate.parse(value, DATE_TIME_FORMATTER);","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"weenleen"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"weenleen"},"content":"            checkArgument(false, MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"weenleen"},"content":"     * Returns true if a given string is a valid deadline.","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"weenleen"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"weenleen"},"content":"     * @param test The given string.","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"weenleen"},"content":"     * @return The validity of the string as a deadline.","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"weenleen"},"content":"    public static boolean isValidDeadline(String test) {","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"weenleen"},"content":"        try {","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"weenleen"},"content":"            LocalDate.parse(test, DATE_TIME_FORMATTER);","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"weenleen"},"content":"            return true;","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"weenleen"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"weenleen"},"content":"            return false;","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"weenleen"},"content":"    public LocalDate getDeadline() {","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"weenleen"},"content":"        return deadline;","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"weenleen"},"content":"    public String toString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"weenleen"},"content":"        return value;","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"weenleen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"weenleen"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"itsraveen"},"content":"                || (other instanceof TaskDate // instanceof handles nulls","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"itsraveen"},"content":"                \u0026\u0026 deadline.equals(((TaskDate) other).deadline)); // state check","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"weenleen"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"weenleen"},"content":"        return deadline.hashCode();","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"weenleen"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"weenleen":63,"itsraveen":4,"somekoreanboi":1}},{"path":"src/main/java/seedu/address/model/task/TaskName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weenleen"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"weenleen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"weenleen"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"weenleen"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":" * Basically a copy of Name from the student package","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"weenleen"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"weenleen"},"content":"public class TaskName {","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"weenleen"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"weenleen"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"weenleen"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"weenleen"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"weenleen"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"weenleen"},"content":"    public final String taskName;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"weenleen"},"content":"     * Constructs a {@code TaskName}.","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"weenleen"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"weenleen"},"content":"     * @param name A valid name.","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"weenleen"},"content":"    public TaskName(String name) {","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"weenleen"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"weenleen"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"weenleen"},"content":"        taskName \u003d name;","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"weenleen"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"weenleen"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"weenleen"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"weenleen"},"content":"    public String toString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"weenleen"},"content":"        return taskName;","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"weenleen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"weenleen"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"weenleen"},"content":"                || (other instanceof TaskName // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"weenleen"},"content":"                \u0026\u0026 taskName.equals(((TaskName) other).taskName)); // state check","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"weenleen"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"weenleen"},"content":"        return taskName.hashCode();","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"weenleen"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"weenleen":55,"itsraveen":1,"tzejit":1}},{"path":"src/main/java/seedu/address/model/task/TodoTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"itsraveen"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"itsraveen"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"itsraveen"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"itsraveen"},"content":"     * Constructs a {@code Task}.","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"itsraveen"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"itsraveen"},"content":"     * @param name A valid TaskName.","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"itsraveen"},"content":"     * @param tags A valid Set of Tags.","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"itsraveen"},"content":"    public TodoTask(TaskName name, Set\u003cTag\u003e tags, boolean isDone, Description description, Priority priority) {","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"itsraveen"},"content":"        super(name, tags, isDone, description, priority);","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"itsraveen"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"itsraveen"},"content":"    public String toString() {","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"itsraveen"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"itsraveen"},"content":"        builder.append(getName())","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"itsraveen"},"content":"                .append(\"[TODO]\")","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"itsraveen"},"content":"                .append(\"\\nStatus: \")","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"itsraveen"},"content":"                .append(getStatusString())","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"itsraveen"},"content":"                .append(\"\\nPriority: \")","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"itsraveen"},"content":"                .append(getPriority().toString());","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"itsraveen"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"itsraveen"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"itsraveen"},"content":"            builder.append(\"\\nTags: \");","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"itsraveen"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"itsraveen"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"weenleen"},"content":"    public TodoTask clone() {","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"weenleen"},"content":"        return (TodoTask) super.clone();","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"itsraveen"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"itsraveen":38,"weenleen":5}},{"path":"src/main/java/seedu/address/model/task/UniqueTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weenleen"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"weenleen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"weenleen"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"weenleen"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"weenleen"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"weenleen"},"content":"import java.util.List;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"weenleen"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"weenleen"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"weenleen"},"content":"public class UniqueTaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"weenleen"},"content":"    private final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"weenleen"},"content":"    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"weenleen"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"weenleen"},"content":"     * Returns true if the list contains an equivalent task as the given argument.","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"weenleen"},"content":"    public boolean contains(Task toCheck) {","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"weenleen"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"weenleen"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTask);","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"weenleen"},"content":"     * Adds a task to the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"weenleen"},"content":"     * The task must not already exist in the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"weenleen"},"content":"    public void add(Task toAdd) {","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"weenleen"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"weenleen"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"weenleen"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"weenleen"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"weenleen"},"content":"        sortList();","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"weenleen"},"content":"     * Replaces the task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"weenleen"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"weenleen"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"weenleen"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"weenleen"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"weenleen"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"weenleen"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"weenleen"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"weenleen"},"content":"        if (!target.isSameTask(editedTask) \u0026\u0026 contains(editedTask)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"weenleen"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"weenleen"},"content":"        internalList.set(index, editedTask);","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"weenleen"},"content":"        sortList();","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"weenleen"},"content":"     * Removes the equivalent task from the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"weenleen"},"content":"     * The task must exist in the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"weenleen"},"content":"    public void remove(Task toRemove) {","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"weenleen"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"weenleen"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"weenleen"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"itsraveen"},"content":"     * Removes the all task from the list.","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"itsraveen"},"content":"    public void removeAllTasks() {","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"itsraveen"},"content":"        internalList.clear();","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"weenleen"},"content":"    public void setTasks(UniqueTaskList replacement) {","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"weenleen"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"weenleen"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"weenleen"},"content":"        sortList();","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"weenleen"},"content":"     * Replaces the contents of this list with {@code tasks}.","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"weenleen"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"weenleen"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"weenleen"},"content":"        requireAllNonNull(tasks);","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"weenleen"},"content":"        if (!tasksAreUnique(tasks)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"weenleen"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"weenleen"},"content":"        internalList.setAll(tasks);","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"weenleen"},"content":"        sortList();","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"weenleen"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"weenleen"},"content":"    public ObservableList\u003cTask\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"weenleen"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"weenleen"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"weenleen"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"weenleen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"weenleen"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"weenleen"},"content":"                || (other instanceof UniqueTaskList // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"weenleen"},"content":"                \u0026\u0026 internalList.equals(((UniqueTaskList) other).internalList));","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"weenleen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"weenleen"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"weenleen"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"weenleen"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"weenleen"},"content":"    private boolean tasksAreUnique(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"weenleen"},"content":"        for (int i \u003d 0; i \u003c tasks.size() - 1; i++) {","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"weenleen"},"content":"            for (int j \u003d i + 1; j \u003c tasks.size(); j++) {","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"weenleen"},"content":"                if (tasks.get(i).isSameTask(tasks.get(j))) {","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"weenleen"},"content":"                    return false;","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"weenleen"},"content":"                }","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"weenleen"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":135,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":136,"author":{"gitId":"weenleen"},"content":"        return true;","lastModifiedDate":"2021-10-07"},{"lineNumber":137,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":138,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"weenleen"},"content":"    private void sortList() {","lastModifiedDate":"2021-10-21"},{"lineNumber":140,"author":{"gitId":"weenleen"},"content":"        Collections.sort(internalList);","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"weenleen"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"weenleen":135,"itsraveen":7}},{"path":"src/main/java/seedu/address/model/task/exceptions/DuplicateTaskException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weenleen"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"weenleen"},"content":"public class DuplicateTaskException extends RuntimeException {","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"weenleen"},"content":"    public DuplicateTaskException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"weenleen"},"content":"        super(\"Operation would result in duplicate tasks\");","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"weenleen"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"weenleen":7}},{"path":"src/main/java/seedu/address/model/task/exceptions/TaskNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weenleen"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"weenleen"},"content":"public class TaskNotFoundException extends RuntimeException {","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"weenleen"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"weenleen":4}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"wanninglim"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.commons.RepoName;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.student.Attendance;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.student.Participation;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.StudentNumber;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.UserName;","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"    public static Student[] getSampleStudents() {","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"        return new Student[] {","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"            new Student(new Name(\"Alex Yeoh\"), new Email(\"alexyeoh@example.com\"), new StudentNumber(\"A0123436B\"),","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"                    new UserName(\"ayeoh\"), new RepoName(\"ip\"), getTagSet(\"friends\"),","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"weenleen"},"content":"                    getDefaultAttendance(), getDefaultParticipation(), new GroupName()),","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"            new Student(new Name(\"Bernice Yu\"), new Email(\"berniceyu@example.com\"), new StudentNumber(\"A0123456A\"),","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"                    new UserName(\"BYU\"), null, getTagSet(\"colleagues\", \"friends\"),","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"weenleen"},"content":"                    getDefaultAttendance(), getDefaultParticipation(), new GroupName()),","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"            new Student(new Name(\"Charlotte Oliveiro\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"                    new StudentNumber(\"A0123450B\"), null, null, getTagSet(\"neighbours\"),","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"weenleen"},"content":"                    getDefaultAttendance(), getDefaultParticipation(), new GroupName()),","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"            new Student(new Name(\"David Li\"), new Email(\"lidavid@example.com\"), new StudentNumber(\"A0123956B\"),","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"                    null, new RepoName(\"repo\"), getTagSet(\"family\"),","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"weenleen"},"content":"                    getDefaultAttendance(), getDefaultParticipation(), new GroupName()),","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"            new Student(new Name(\"Irfan Ibrahim\"), new Email(\"irfan@example.com\"), new StudentNumber(\"A0823456B\"),","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"wanninglim"},"content":"                    new UserName(\"IrIb\"), new RepoName(\"myRepo\"), getTagSet(\"classmates\"),","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"weenleen"},"content":"                    getDefaultAttendance(), getDefaultParticipation(), new GroupName()),","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"            new Student(new Name(\"Roy Balakrishnan\"), new Email(\"royb@example.com\"), new StudentNumber(\"A1123456B\"),","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"                    null, null, getTagSet(\"colleagues\"),","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"weenleen"},"content":"                    getDefaultAttendance(), getDefaultParticipation(), new GroupName()),","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"        for (Student sampleStudent : getSampleStudents()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"            sampleAb.addStudent(sampleStudent);","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":65,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"weenleen"},"content":"     * Returns an attendance list containing the list of integers given.","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"wanninglim"},"content":"    public static Attendance getAttendanceList(Integer... integers) {","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"wanninglim"},"content":"        return new Attendance(new ArrayList\u003c\u003e(Arrays.asList(integers)));","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"wanninglim"},"content":"     * Returns a participation list containing the list of integers given.","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"wanninglim"},"content":"    public static Participation getParticipationList(Integer... integers) {","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"wanninglim"},"content":"        return new Participation(new ArrayList\u003c\u003e(Arrays.asList(integers)));","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"weenleen"},"content":"     * Returns the default attendance list.","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"weenleen"},"content":"    public static Attendance getDefaultAttendance() {","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"weenleen"},"content":"        return new Attendance();","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"weenleen"},"content":"     * Returns the default participation list.","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"weenleen"},"content":"    public static Participation getDefaultParticipation() {","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"weenleen"},"content":"        return new Participation();","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"weenleen":21,"wanninglim":16,"-":33,"tzejit":22}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedGroup.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import java.util.List;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.commons.RepoName;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.LinkYear;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.Members;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":" * Jackson-friendly version of {@link Group}.","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"class JsonAdaptedGroup {","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Group\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"    private final String name;","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"    private final String year;","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"    private final String repoName;","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"    private final ArrayList\u003cJsonAdaptedStudent\u003e members \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"     * Constructs a {@code JsonAdaptedGroup} with the given group details.","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"    public JsonAdaptedGroup(@JsonProperty(\"name\") String name,","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"                              @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"                              @JsonProperty(\"members\") ArrayList\u003cJsonAdaptedStudent\u003e members,","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"                              @JsonProperty(\"year\") String year,","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"                              @JsonProperty(\"repo\") String repoName) {","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"        this.members.addAll(members);","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"        this.year \u003d year;","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"        this.repoName \u003d repoName;","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"     * Converts a given {@code Group} into this class for Jackson use.","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"    public JsonAdaptedGroup(Group source) {","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"        name \u003d source.getName().name;","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"        members.addAll(source.getMembersList().stream()","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"                .map(JsonAdaptedStudent::new)","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"        year \u003d source.getYear().year;","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"        repoName \u003d source.getRepoName().repoName;","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"     * Converts this Jackson-friendly adapted student object into the model\u0027s {@code Student} object.","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted student.","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"    public Group toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"        final List\u003cTag\u003e groupTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"        final ArrayList\u003cStudent\u003e groupMembers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"        final LinkYear modelYear;","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"        final RepoName modelRepoName;","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"tzejit"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"tzejit"},"content":"            groupTags.add(tag.toModelType());","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"tzejit"},"content":"        for (JsonAdaptedStudent student : members) {","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"tzejit"},"content":"            groupMembers.add(student.toModelType());","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"tzejit"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"tzejit"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"tzejit"},"content":"                    GroupName.class.getSimpleName()));","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"tzejit"},"content":"        if (!GroupName.isValidName(name)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"tzejit"},"content":"            throw new IllegalValueException(GroupName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"tzejit"},"content":"        final GroupName modelName \u003d new GroupName(name);","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"tzejit"},"content":"        if (year \u003d\u003d null) {","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"tzejit"},"content":"            modelYear \u003d new LinkYear();","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"tzejit"},"content":"        } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"tzejit"},"content":"            if (!LinkYear.isValidYear(year)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"tzejit"},"content":"                throw new IllegalValueException(LinkYear.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"tzejit"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"tzejit"},"content":"            modelYear \u003d new LinkYear(year);","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"tzejit"},"content":"        if (repoName \u003d\u003d null) {","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"tzejit"},"content":"            modelRepoName \u003d new RepoName();","lastModifiedDate":"2021-10-18"},{"lineNumber":105,"author":{"gitId":"tzejit"},"content":"        } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"tzejit"},"content":"            if (!RepoName.isValidRepoName(repoName)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"tzejit"},"content":"                throw new IllegalValueException(RepoName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"tzejit"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"tzejit"},"content":"            modelRepoName \u003d new RepoName(repoName);","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"tzejit"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(groupTags);","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"tzejit"},"content":"        final Members modelMembers \u003d new Members(groupMembers);","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"tzejit"},"content":"        return new Group(modelName, modelMembers, modelYear, modelRepoName, modelTags);","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":117,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"tzejit":117}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedStudent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.commons.RepoName;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.model.student.Attendance;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.model.student.Participation;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.StudentNumber;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.UserName;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":" * Jackson-friendly version of {@link Student}.","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"class JsonAdaptedStudent {","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Student\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"    private final String studentNumber;","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"    private final String username;","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"    private final String repo;","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"    private final String groupName;","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"wanninglim"},"content":"    private final ArrayList\u003cInteger\u003e attendance \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"wanninglim"},"content":"    private final ArrayList\u003cInteger\u003e participation \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"     * Constructs a {@code JsonAdaptedStudent} with the given student details.","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"    public JsonAdaptedStudent(@JsonProperty(\"name\") String name,","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"                              @JsonProperty(\"email\") String email,","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"                              @JsonProperty(\"studentNumber\") String studentNumber,","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"                              @JsonProperty(\"username\") String username,","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"                              @JsonProperty(\"repo\") String repo,","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"                              @JsonProperty(\"group\") String groupName,","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"somekoreanboi"},"content":"                              @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"wanninglim"},"content":"                              @JsonProperty(\"attendance\") ArrayList\u003cInteger\u003e attendance,","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"wanninglim"},"content":"                              @JsonProperty(\"participation\") ArrayList\u003cInteger\u003e participation) {","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"        this.studentNumber \u003d studentNumber;","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"wanninglim"},"content":"        this.attendance.addAll(attendance);","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"wanninglim"},"content":"        this.participation.addAll(participation);","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"        this.repo \u003d repo;","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"        this.username \u003d username;","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"     * Converts a given {@code Student} into this class for Jackson use.","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"    public JsonAdaptedStudent(Student source) {","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"        studentNumber \u003d source.getStudentNumber().toString();","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"        username \u003d source.getUserName().userName;","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"        repo \u003d source.getRepoName().repoName;","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"wanninglim"},"content":"        attendance.addAll(source.getAttendance().attendanceList);","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"wanninglim"},"content":"        participation.addAll(source.getParticipation().participationList);","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"        groupName \u003d source.getGroupName().name;","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"tzejit"},"content":"     * Converts this Jackson-friendly adapted student object into the model\u0027s {@code Student} object.","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"tzejit"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted student.","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"tzejit"},"content":"    public Student toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"tzejit"},"content":"        final List\u003cTag\u003e studentTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"wanninglim"},"content":"        final ArrayList\u003cInteger\u003e studentAttendance \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"wanninglim"},"content":"        final ArrayList\u003cInteger\u003e studentParticipation \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"tzejit"},"content":"        final RepoName modelRepoName;","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"tzejit"},"content":"        final UserName modelUserName;","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"tzejit"},"content":"        final GroupName modelGroupName;","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"tzejit"},"content":"            studentTags.add(tag.toModelType());","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"wanninglim"},"content":"        studentAttendance.addAll(attendance);","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"wanninglim"},"content":"        studentParticipation.addAll(participation);","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"tzejit"},"content":"        if (studentNumber \u003d\u003d null) {","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"tzejit"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-13"},{"lineNumber":121,"author":{"gitId":"tzejit"},"content":"                    StudentNumber.class.getSimpleName()));","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":123,"author":{"gitId":"tzejit"},"content":"        if (!StudentNumber.isValidNumber(studentNumber)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":124,"author":{"gitId":"tzejit"},"content":"            throw new IllegalValueException(StudentNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"tzejit"},"content":"        final StudentNumber modelStudentNumber \u003d new StudentNumber(studentNumber);","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":128,"author":{"gitId":"tzejit"},"content":"        if (username \u003d\u003d null) {","lastModifiedDate":"2021-10-18"},{"lineNumber":129,"author":{"gitId":"tzejit"},"content":"            modelUserName \u003d new UserName();","lastModifiedDate":"2021-10-18"},{"lineNumber":130,"author":{"gitId":"tzejit"},"content":"        } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"tzejit"},"content":"            modelUserName \u003d new UserName(username);","lastModifiedDate":"2021-10-18"},{"lineNumber":132,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":133,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"tzejit"},"content":"        if (repo \u003d\u003d null) {","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"tzejit"},"content":"            modelRepoName \u003d new RepoName();","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"tzejit"},"content":"        } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"tzejit"},"content":"            modelRepoName \u003d new RepoName(repo);","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":139,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"tzejit"},"content":"        if (groupName \u003d\u003d null) {","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"tzejit"},"content":"            modelGroupName \u003d new GroupName();","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"tzejit"},"content":"        } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"tzejit"},"content":"            modelGroupName \u003d new GroupName(groupName);","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"tzejit"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(studentTags);","lastModifiedDate":"2021-10-08"},{"lineNumber":147,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":148,"author":{"gitId":"wanninglim"},"content":"        final Attendance modelAttendance \u003d new Attendance(studentAttendance);","lastModifiedDate":"2021-10-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"wanninglim"},"content":"        final Participation modelParticipation \u003d new Participation(studentParticipation);","lastModifiedDate":"2021-10-18"},{"lineNumber":151,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":152,"author":{"gitId":"tzejit"},"content":"        return new Student(modelName, modelEmail, modelStudentNumber, modelUserName, modelRepoName,","lastModifiedDate":"2021-10-18"},{"lineNumber":153,"author":{"gitId":"wanninglim"},"content":"                modelTags, modelAttendance, modelParticipation, modelGroupName);","lastModifiedDate":"2021-10-19"},{"lineNumber":154,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"wanninglim":19,"somekoreanboi":7,"-":63,"tzejit":66}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weenleen"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"weenleen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"weenleen"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"weenleen"},"content":"import java.util.List;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"weenleen"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"weenleen"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"weenleen"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"weenleen"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"weenleen"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.DeadlineTask;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.EventTask;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.TaskDate;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.TodoTask;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"weenleen"},"content":"public class JsonAdaptedTask {","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"weenleen"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Task\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"weenleen"},"content":"    private final int i;","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"weenleen"},"content":"    private final String name;","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"itsraveen"},"content":"    private String deadline;","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"somekoreanboi"},"content":"    private String description;","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"weenleen"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"weenleen"},"content":"    private final boolean isComplete;","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"itsraveen"},"content":"    private final Task.Priority priority;","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"weenleen"},"content":"     * Constructs a {@code JsonAdaptedTask} with the given task details.","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"weenleen"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"weenleen"},"content":"    public JsonAdaptedTask(@JsonProperty(\"name\") String name, @JsonProperty(\"deadline\") String deadline,","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"itsraveen"},"content":"                           @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"weenleen"},"content":"                           @JsonProperty(\"isComplete\") boolean isComplete,","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"itsraveen"},"content":"                           @JsonProperty(\"i\") int i,","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"itsraveen"},"content":"                           @JsonProperty(\"priority\") Task.Priority priority) {","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"itsraveen"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"weenleen"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"weenleen"},"content":"        this.i \u003d i;","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"weenleen"},"content":"        this.isComplete \u003d isComplete;","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"weenleen"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"weenleen"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"itsraveen"},"content":"        i \u003d 0;","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"itsraveen"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"weenleen"},"content":"     * Converts a given {@code Task} into this class for Jackson use.","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"weenleen"},"content":"    public JsonAdaptedTask(Task source) {","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"weenleen"},"content":"        name \u003d source.getName().toString();","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"somekoreanboi"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"somekoreanboi"},"content":"            description \u003d source.getDescription().toString();","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"somekoreanboi"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"somekoreanboi"},"content":"            description \u003d \"No description\";","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"somekoreanboi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"itsraveen"},"content":"        if (source instanceof DeadlineTask) {","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"itsraveen"},"content":"            this.i \u003d 1;","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"itsraveen"},"content":"            DeadlineTask task \u003d (DeadlineTask) source;","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"itsraveen"},"content":"            deadline \u003d task.getDeadline().toString();","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"weenleen"},"content":"        } else if (source instanceof EventTask) {","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"itsraveen"},"content":"            this.i \u003d 2;","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"itsraveen"},"content":"            EventTask task \u003d (EventTask) source;","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"somekoreanboi"},"content":"            deadline \u003d task.getTaskDate().toString();","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"itsraveen"},"content":"        } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"weenleen"},"content":"            this.i \u003d 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"weenleen"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"weenleen"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"weenleen"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"itsraveen"},"content":"        this.isComplete \u003d source.checkIsDone();","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"itsraveen"},"content":"        this.priority \u003d source.getPriority();","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"tzejit"},"content":"     * Converts this Jackson-friendly adapted student object into the model\u0027s {@code Student} object.","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"weenleen"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"tzejit"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted student.","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"weenleen"},"content":"    public Task toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"weenleen"},"content":"        final List\u003cTag\u003e taskTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"weenleen"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"weenleen"},"content":"            taskTags.add(tag.toModelType());","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"weenleen"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"weenleen"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"weenleen"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, TaskName.class.getSimpleName()));","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"weenleen"},"content":"        if (!TaskName.isValidName(name)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"weenleen"},"content":"            throw new IllegalValueException(TaskName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"weenleen"},"content":"        final TaskName modelName \u003d new TaskName(name);","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"itsraveen"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(taskTags);","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"somekoreanboi"},"content":"        final Description modelDescription \u003d new Description(description);","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"itsraveen"},"content":"        //if (task instanceof DeadlineTask) {","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"itsraveen"},"content":"        if (i \u003d\u003d 1) {","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"weenleen"},"content":"            if (deadline \u003d\u003d null) {","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"weenleen"},"content":"                throw new IllegalValueException(","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"itsraveen"},"content":"                        String.format(MISSING_FIELD_MESSAGE_FORMAT, TaskDate.class.getSimpleName()));","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"weenleen"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"itsraveen"},"content":"            if (!TaskDate.isValidDeadline(deadline)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"itsraveen"},"content":"                throw new IllegalValueException(TaskDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"itsraveen"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"itsraveen"},"content":"            final TaskDate modelTaskDate \u003d new TaskDate(deadline);","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"itsraveen"},"content":"            return new DeadlineTask(modelName, modelTags, isComplete, modelTaskDate, modelDescription, priority);","lastModifiedDate":"2021-10-22"},{"lineNumber":119,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"itsraveen"},"content":"        //if (task instanceof EventTask) {","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"itsraveen"},"content":"        if (i \u003d\u003d 2) {","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"itsraveen"},"content":"            if (deadline \u003d\u003d null) {","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"itsraveen"},"content":"                throw new IllegalValueException(","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"itsraveen"},"content":"                        String.format(MISSING_FIELD_MESSAGE_FORMAT, TaskDate.class.getSimpleName()));","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"weenleen"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"itsraveen"},"content":"            if (!TaskDate.isValidDeadline(deadline)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"itsraveen"},"content":"                throw new IllegalValueException(TaskDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"itsraveen"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"itsraveen"},"content":"            final TaskDate modelTaskDate \u003d new TaskDate(deadline);","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"itsraveen"},"content":"            return new EventTask(modelName, modelTags, isComplete, modelTaskDate, modelDescription, priority);","lastModifiedDate":"2021-10-22"},{"lineNumber":132,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":134,"author":{"gitId":"itsraveen"},"content":"        return new TodoTask(modelName, modelTags, isComplete, modelDescription, priority);","lastModifiedDate":"2021-10-22"},{"lineNumber":135,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":136,"author":{"gitId":"weenleen"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"weenleen":75,"itsraveen":49,"somekoreanboi":10,"tzejit":2}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"Students list contains duplicate student(s).\";","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"weenleen"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"Task list contains duplicate task(s).\";","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"    public static final String MESSAGE_DUPLICATE_GROUP \u003d \"Group list contains duplicate group(s).\";","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"    private final List\u003cJsonAdaptedStudent\u003e students \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"weenleen"},"content":"    private final List\u003cJsonAdaptedTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"    private final List\u003cJsonAdaptedGroup\u003e groups \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given students, tasks and groups.","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"students\") List\u003cJsonAdaptedStudent\u003e students,","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"                                       @JsonProperty(\"groups\") List\u003cJsonAdaptedGroup\u003e groups,","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"weenleen"},"content":"                                       @JsonProperty(\"tasks\") List\u003cJsonAdaptedTask\u003e tasks) {","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"        this.students.addAll(students);","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"weenleen"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"        this.groups.addAll(groups);","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"        students.addAll(source.getStudentList().stream().map(JsonAdaptedStudent::new).collect(Collectors.toList()));","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"weenleen"},"content":"        tasks.addAll(source.getTaskList().stream().map(JsonAdaptedTask::new).collect(Collectors.toList()));","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"        groups.addAll(source.getGroupList().stream().map(JsonAdaptedGroup::new).collect(Collectors.toList()));","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"        for (JsonAdaptedStudent jsonAdaptedStudent : students) {","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"            Student student \u003d jsonAdaptedStudent.toModelType();","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"            if (addressBook.hasStudent(student)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"tzejit"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"            addressBook.addStudent(student);","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"weenleen"},"content":"        for (JsonAdaptedTask jsonAdaptedTask : tasks) {","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"weenleen"},"content":"            Task task \u003d jsonAdaptedTask.toModelType();","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"weenleen"},"content":"            if (addressBook.hasTask(task)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"weenleen"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"weenleen"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"weenleen"},"content":"            addressBook.addTask(task);","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"tzejit"},"content":"        for (JsonAdaptedGroup jsonAdaptedGroup : groups) {","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"tzejit"},"content":"            Group group \u003d jsonAdaptedGroup.toModelType();","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"tzejit"},"content":"            if (addressBook.hasGroup(group)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_GROUP);","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"tzejit"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"tzejit"},"content":"            addressBook.addGroup(group);","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"weenleen":14,"-":48,"tzejit":25}},{"path":"src/main/java/seedu/address/ui/DeadlineTaskCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"weenleen"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.DeadlineTask;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"itsraveen"},"content":"public class DeadlineTaskCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"itsraveen"},"content":"    private static final String FXML \u003d \"DeadlineTaskListCard.fxml\";","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"weenleen"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"    public final Task task;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"    @FXML","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"    @FXML","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"    private Label id;","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"    @FXML","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"    private Label name;","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"    @FXML","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"itsraveen"},"content":"    private Label taskDate;","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"    @FXML","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"    private Label status;","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"    @FXML","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"    private FlowPane tags;","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"somekoreanboi"},"content":"    @FXML","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"somekoreanboi"},"content":"    private Label description;","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"itsraveen"},"content":"     * Creates a {@code TaskCode} with the given {@code Student} and index to display.","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"itsraveen"},"content":"    public DeadlineTaskCard(Task task, int displayedIndex) {","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"        super(FXML);","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"weenleen"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"        name.setText(task.getName().toString());","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"itsraveen"},"content":"        DeadlineTask deadlineTask \u003d (DeadlineTask) task;","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"weenleen"},"content":"        status.setText(\"Status: \" + task.getStatusString());","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"somekoreanboi"},"content":"        description.setText(task.getDescription());","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"wanninglim"},"content":"        Label priorityLabel \u003d new Label(\"Priority: \" + task.getPriorityAsString());","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"weenleen"},"content":"        Label taskType \u003d new Label(\"Deadline\");","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"weenleen"},"content":"        tags.getChildren().addAll(taskType, priorityLabel);","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"wanninglim"},"content":"        String priority \u003d task.getPriorityAsString();","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"wanninglim"},"content":"        if (priority.contains(\"HIGH\")) {","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"wanninglim"},"content":"            priorityLabel.getStyleClass().add(\"priorityLabel-high\");","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"wanninglim"},"content":"        } else if (priority.contains(\"MED\")) {","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"wanninglim"},"content":"            priorityLabel.getStyleClass().add(\"priorityLabel-med\");","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"wanninglim"},"content":"        } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"wanninglim"},"content":"            priorityLabel.getStyleClass().add(\"priorityLabel-low\");","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"weenleen"},"content":"        taskType.getStyleClass().add(\"taskType\");","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"weenleen"},"content":"        taskDate.setText(\"Date: \" + deadlineTask.getDeadline().getDeadline().format(formatter));","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"        task.getTags().stream()","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"tzejit"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"tzejit"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"tzejit"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"            return true;","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"tzejit"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"itsraveen"},"content":"        if (!(other instanceof DeadlineTaskCard)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"tzejit"},"content":"            return false;","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"tzejit"},"content":"        // state check","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"itsraveen"},"content":"        DeadlineTaskCard card \u003d (DeadlineTaskCard) other;","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"tzejit"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"tzejit"},"content":"                \u0026\u0026 task.equals(card.task);","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"weenleen":9,"itsraveen":10,"wanninglim":10,"somekoreanboi":3,"tzejit":62}},{"path":"src/main/java/seedu/address/ui/EventTaskCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"itsraveen"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"weenleen"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"itsraveen"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"itsraveen"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"itsraveen"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"itsraveen"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"itsraveen"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"itsraveen"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.EventTask;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"itsraveen"},"content":"public class EventTaskCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"itsraveen"},"content":"    private static final String FXML \u003d \"EventTaskListCard.fxml\";","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"weenleen"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"itsraveen"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"itsraveen"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"itsraveen"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"itsraveen"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"itsraveen"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"itsraveen"},"content":"    public final Task task;","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"weenleen"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"itsraveen"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"itsraveen"},"content":"    @FXML","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"itsraveen"},"content":"    private Label id;","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"itsraveen"},"content":"    @FXML","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"itsraveen"},"content":"    private Label name;","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"itsraveen"},"content":"    @FXML","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"itsraveen"},"content":"    private Label taskDate;","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"itsraveen"},"content":"    @FXML","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"itsraveen"},"content":"    private Label status;","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"itsraveen"},"content":"    @FXML","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"itsraveen"},"content":"    private FlowPane tags;","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"somekoreanboi"},"content":"    @FXML","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"somekoreanboi"},"content":"    private Label description;","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"itsraveen"},"content":"     * Creates a {@code TaskCode} with the given {@code Task} and index to display.","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"itsraveen"},"content":"    public EventTaskCard(Task task, int displayedIndex) {","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"itsraveen"},"content":"        super(FXML);","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"itsraveen"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"weenleen"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"itsraveen"},"content":"        name.setText(task.getName().toString());","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"weenleen"},"content":"        EventTask eventTask \u003d (EventTask) task;","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"weenleen"},"content":"        status.setText(\"Status: \" + task.getStatusString());","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"somekoreanboi"},"content":"        description.setText(task.getDescription());","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"wanninglim"},"content":"        Label priorityLabel \u003d new Label(\"Priority: \" + task.getPriorityAsString());","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"weenleen"},"content":"        Label taskType \u003d new Label(\"Event\");","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"weenleen"},"content":"        tags.getChildren().addAll(taskType, priorityLabel);","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"wanninglim"},"content":"        String priority \u003d task.getPriorityAsString();","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"wanninglim"},"content":"        if (priority.contains(\"HIGH\")) {","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"wanninglim"},"content":"            priorityLabel.getStyleClass().add(\"priorityLabel-high\");","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"wanninglim"},"content":"        } else if (priority.contains(\"MED\")) {","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"wanninglim"},"content":"            priorityLabel.getStyleClass().add(\"priorityLabel-med\");","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"wanninglim"},"content":"        } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"wanninglim"},"content":"            priorityLabel.getStyleClass().add(\"priorityLabel-low\");","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"weenleen"},"content":"        taskType.getStyleClass().add(\"taskType\");","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"weenleen"},"content":"        taskDate.setText(\"Date: \" + eventTask.getTaskDate().getDeadline().format(formatter));","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"itsraveen"},"content":"        task.getTags().stream()","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"itsraveen"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"itsraveen"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"itsraveen"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"itsraveen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"itsraveen"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"itsraveen"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"itsraveen"},"content":"            return true;","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"itsraveen"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"itsraveen"},"content":"        if (!(other instanceof DeadlineTaskCard)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"itsraveen"},"content":"            return false;","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"itsraveen"},"content":"        // state check","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"itsraveen"},"content":"        EventTaskCard card \u003d (EventTaskCard) other;","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"itsraveen"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"itsraveen"},"content":"                \u0026\u0026 task.equals(card.task);","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"itsraveen"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"itsraveen":70,"weenleen":10,"wanninglim":10,"somekoreanboi":3}},{"path":"src/main/java/seedu/address/ui/GroupCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":" * An UI component that displays information of a {@code Group}.","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"public class GroupCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"    private static final String FXML \u003d \"GroupListCard.fxml\";","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"    public final Group group;","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"    private MemberListPanel memberListPanel;","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"    private Label link;","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"    @FXML","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"    private StackPane memberListPanelPlaceholder;","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"     * Creates a {@code GroupCode} with the given {@code Group} and index to display.","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"    public GroupCard(Group group, int displayedIndex) {","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"        this.group \u003d group;","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"        name.setText(group.getName().name);","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"wanninglim"},"content":"        link.setText(\"Github: \" + group.getGroupGithubLink());","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"        memberListPanel \u003d new MemberListPanel(FXCollections.observableArrayList(group.getMembers().studentList));","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"        memberListPanelPlaceholder.getChildren().add(memberListPanel.getRoot());","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"        group.getTags().stream()","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"        if (!(other instanceof GroupCard)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"        GroupCard card \u003d (GroupCard) other;","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"tzejit"},"content":"                \u0026\u0026 group.equals(card.group);","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"wanninglim":1,"-":56,"tzejit":25}},{"path":"src/main/java/seedu/address/ui/GroupListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":" * Panel containing the list of groups.","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"public class GroupListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"    private static final String FXML \u003d \"GroupListPanel.fxml\";","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(GroupListPanel.class);","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"    @FXML","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"    private ListView\u003cGroup\u003e groupListView;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"     * Creates a {@code GroupListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"    public GroupListPanel(ObservableList\u003cGroup\u003e groupList) {","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"        super(FXML);","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"        groupListView.setItems(groupList);","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"        groupListView.setCellFactory(listView -\u003e new GroupListViewCell());","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Group} using a {@code GroupCard}.","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"    class GroupListViewCell extends ListCell\u003cGroup\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"        protected void updateItem(Group group, boolean empty) {","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"            super.updateItem(group, empty);","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"            if (empty || group \u003d\u003d null) {","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"                setText(null);","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"            } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"                setGraphic(new GroupCard(group, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"tzejit":49}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"weenleen"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"weenleen"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"weenleen"},"content":"import javafx.scene.control.TableColumn;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"weenleen"},"content":"import javafx.scene.control.TableView;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"weenleen"},"content":"import javafx.scene.control.cell.PropertyValueFactory;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":17,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.AddDeadlineTaskCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.AddEventTaskCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.AddGithubGroupCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.AddGroupCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.AddStudentCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.AddStudentGroupCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.AddTodoTaskCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.ClearStudentsCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.ClearTasksCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.DeleteGroupCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.DeleteStudentCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.EditStudentCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.EditTaskCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.FindGroupCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.FindStudentCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.ListGroupCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.ListStudentCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.ListTaskCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.MarkStudentAttCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.MarkStudentPartCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.MarkTaskDoneCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"weenleen"},"content":"    public static final String USER_GUIDE_URL \u003d \"https://ay2122s1-cs2103-w14-4.github.io/tp/UserGuide.html#quick-start\";","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"weenleen"},"content":"    public static final String HELP_MESSAGE \u003d \"For more information, refer to the user guide: \" + USER_GUIDE_URL;","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"weenleen"},"content":"    private static final ObservableList\u003cCommandCell\u003e commandList \u003d FXCollections.observableArrayList(","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"weenleen"},"content":"            new CommandCell(ListStudentCommand.COMMAND_WORD, \"Lists all students\"),","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"weenleen"},"content":"            new CommandCell(AddStudentCommand.COMMAND_WORD, AddStudentCommand.MESSAGE_USAGE),","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"weenleen"},"content":"            new CommandCell(DeleteStudentCommand.COMMAND_WORD, DeleteStudentCommand.MESSAGE_USAGE),","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"weenleen"},"content":"            new CommandCell(EditStudentCommand.COMMAND_WORD, EditStudentCommand.MESSAGE_USAGE),","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"weenleen"},"content":"            new CommandCell(MarkStudentAttCommand.COMMAND_WORD, MarkStudentAttCommand.MESSAGE_USAGE),","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"weenleen"},"content":"            new CommandCell(MarkStudentPartCommand.COMMAND_WORD, MarkStudentPartCommand.MESSAGE_USAGE),","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"weenleen"},"content":"            new CommandCell(FindStudentCommand.COMMAND_WORD, FindStudentCommand.MESSAGE_USAGE),","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"weenleen"},"content":"            new CommandCell(ClearStudentsCommand.COMMAND_WORD, \"Clears all students from the student list\"),","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"weenleen"},"content":"            new CommandCell(ListTaskCommand.COMMAND_WORD, \"Lists all tasks\"),","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"weenleen"},"content":"            new CommandCell(AddTaskCommand.COMMAND_WORD, AddTaskCommand.MESSAGE_USAGE),","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"weenleen"},"content":"            new CommandCell(AddTodoTaskCommand.COMMAND_WORD, AddTodoTaskCommand.MESSAGE_USAGE),","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"weenleen"},"content":"            new CommandCell(AddDeadlineTaskCommand.COMMAND_WORD, AddDeadlineTaskCommand.MESSAGE_USAGE),","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"weenleen"},"content":"            new CommandCell(AddEventTaskCommand.COMMAND_WORD, AddEventTaskCommand.MESSAGE_USAGE),","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"weenleen"},"content":"            new CommandCell(DeleteTaskCommand.COMMAND_WORD, DeleteTaskCommand.MESSAGE_USAGE),","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"weenleen"},"content":"            new CommandCell(EditTaskCommand.COMMAND_WORD, EditTaskCommand.MESSAGE_USAGE),","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"weenleen"},"content":"            new CommandCell(MarkTaskDoneCommand.COMMAND_WORD, MarkTaskDoneCommand.MESSAGE_USAGE),","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"weenleen"},"content":"            new CommandCell(ClearTasksCommand.COMMAND_WORD, \"Clears all tasks from the task list\"),","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"weenleen"},"content":"            new CommandCell(ListGroupCommand.COMMAND_WORD, \"lists all groups\"),","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"weenleen"},"content":"            new CommandCell(AddGroupCommand.COMMAND_WORD, AddGroupCommand.MESSAGE_USAGE),","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"weenleen"},"content":"            new CommandCell(AddGithubGroupCommand.COMMAND_WORD, AddGithubGroupCommand.MESSAGE_USAGE),","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"weenleen"},"content":"            new CommandCell(AddStudentGroupCommand.COMMAND_WORD, AddStudentGroupCommand.MESSAGE_USAGE),","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"weenleen"},"content":"            new CommandCell(DeleteGroupCommand.COMMAND_WORD, DeleteGroupCommand.MESSAGE_USAGE),","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"weenleen"},"content":"            new CommandCell(FindGroupCommand.COMMAND_WORD, FindGroupCommand.MESSAGE_USAGE),","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"weenleen"},"content":"            new CommandCell(HelpCommand.COMMAND_WORD, HelpCommand.MESSAGE_USAGE),","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"weenleen"},"content":"            new CommandCell(ExitCommand.COMMAND_WORD, \"Exits from tApp\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"weenleen"},"content":"    @FXML","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"weenleen"},"content":"    private TableView\u003cCommandCell\u003e commandSummaryTable;","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"weenleen"},"content":"        TableColumn\u003cCommandCell, String\u003e column1 \u003d new TableColumn\u003c\u003e(\"Command\");","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"weenleen"},"content":"        column1.setCellValueFactory(new PropertyValueFactory\u003c\u003e(\"commandWord\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"wanninglim"},"content":"        column1.setPrefWidth(150);","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"weenleen"},"content":"        TableColumn\u003cCommandCell, String\u003e column2 \u003d new TableColumn\u003c\u003e(\"Usage\");","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"weenleen"},"content":"        column2.setCellValueFactory(new PropertyValueFactory\u003c\u003e(\"usage\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"weenleen"},"content":"        commandSummaryTable.setItems(commandList);","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"weenleen"},"content":"        commandSummaryTable.getColumns().add(column1);","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"weenleen"},"content":"        commandSummaryTable.getColumns().add(column2);","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":168,"author":{"gitId":"weenleen"},"content":"        url.putString(USER_GUIDE_URL);","lastModifiedDate":"2021-10-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":171,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":172,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":173,"author":{"gitId":"weenleen"},"content":"     * A command cell class.","lastModifiedDate":"2021-10-26"},{"lineNumber":174,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":175,"author":{"gitId":"weenleen"},"content":"    public static class CommandCell {","lastModifiedDate":"2021-10-25"},{"lineNumber":176,"author":{"gitId":"weenleen"},"content":"        public final String commandWord;","lastModifiedDate":"2021-10-25"},{"lineNumber":177,"author":{"gitId":"weenleen"},"content":"        public final String usage;","lastModifiedDate":"2021-10-25"},{"lineNumber":178,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":179,"author":{"gitId":"weenleen"},"content":"        /**","lastModifiedDate":"2021-10-26"},{"lineNumber":180,"author":{"gitId":"weenleen"},"content":"         * Creates a command cell with the given string parameters.","lastModifiedDate":"2021-10-26"},{"lineNumber":181,"author":{"gitId":"weenleen"},"content":"         *","lastModifiedDate":"2021-10-26"},{"lineNumber":182,"author":{"gitId":"weenleen"},"content":"         * @param commandWord The command word of the command.","lastModifiedDate":"2021-10-26"},{"lineNumber":183,"author":{"gitId":"weenleen"},"content":"         * @param usage The String usage message.","lastModifiedDate":"2021-10-26"},{"lineNumber":184,"author":{"gitId":"weenleen"},"content":"         */","lastModifiedDate":"2021-10-26"},{"lineNumber":185,"author":{"gitId":"weenleen"},"content":"        public CommandCell(String commandWord, String usage) {","lastModifiedDate":"2021-10-25"},{"lineNumber":186,"author":{"gitId":"weenleen"},"content":"            this.commandWord \u003d commandWord;","lastModifiedDate":"2021-10-25"},{"lineNumber":187,"author":{"gitId":"weenleen"},"content":"            this.usage \u003d usage;","lastModifiedDate":"2021-10-25"},{"lineNumber":188,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":189,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":190,"author":{"gitId":"weenleen"},"content":"        public String getCommandWord() {","lastModifiedDate":"2021-10-25"},{"lineNumber":191,"author":{"gitId":"weenleen"},"content":"            return commandWord;","lastModifiedDate":"2021-10-25"},{"lineNumber":192,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":193,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":194,"author":{"gitId":"weenleen"},"content":"        public String getUsage() {","lastModifiedDate":"2021-10-25"},{"lineNumber":195,"author":{"gitId":"weenleen"},"content":"            return usage;","lastModifiedDate":"2021-10-25"},{"lineNumber":196,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":197,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"weenleen":98,"wanninglim":1,"-":99}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static seedu.address.model.Model.DisplayType.GROUPS;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.model.Model.DisplayType.STUDENTS;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.model.Model.DisplayType.TASKS;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"weenleen"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"weenleen"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":18,"author":{"gitId":"weenleen"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"weenleen"},"content":"    private static final String STUDENTS_LIST_NAME \u003d \"Students\";","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"weenleen"},"content":"    private static final String TASKS_LIST_NAME \u003d \"Tasks\";","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"weenleen"},"content":"    private static final String GROUPS_LIST_NAME \u003d \"Groups\";","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":40,"author":{"gitId":"weenleen"},"content":"    private final Stage primaryStage;","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"weenleen"},"content":"    private final Logic logic;","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"    private StudentListPanel studentListPanel;","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"    private TaskListPanel taskListPanel;","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"    private GroupListPanel groupListPanel;","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"weenleen"},"content":"    private final HelpWindow helpWindow;","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"    private StackPane studentListPanelPlaceholder;","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"weenleen"},"content":"    @FXML","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"weenleen"},"content":"    private ScrollPane terminalScrollPane;","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"weenleen"},"content":"    private VBox terminalContainer;","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"weenleen"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"weenleen"},"content":"    private Label listName;","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"tzejit"},"content":"        studentListPanel \u003d new StudentListPanel(logic.getFilteredStudentList());","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"tzejit"},"content":"        studentListPanelPlaceholder.getChildren().add(studentListPanel.getRoot());","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"weenleen"},"content":"        listName.setText(STUDENTS_LIST_NAME);","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"tzejit"},"content":"    void updateInnerParts() {","lastModifiedDate":"2021-10-11"},{"lineNumber":143,"author":{"gitId":"tzejit"},"content":"        if (logic.getDisplayType().equals(STUDENTS)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":144,"author":{"gitId":"tzejit"},"content":"            studentListPanel \u003d new StudentListPanel(logic.getFilteredStudentList());","lastModifiedDate":"2021-10-11"},{"lineNumber":145,"author":{"gitId":"tzejit"},"content":"            studentListPanelPlaceholder.getChildren().add(studentListPanel.getRoot());","lastModifiedDate":"2021-10-11"},{"lineNumber":146,"author":{"gitId":"weenleen"},"content":"            listName.setText(STUDENTS_LIST_NAME);","lastModifiedDate":"2021-10-25"},{"lineNumber":147,"author":{"gitId":"tzejit"},"content":"        } else if (logic.getDisplayType().equals(TASKS)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":148,"author":{"gitId":"tzejit"},"content":"            taskListPanel \u003d new TaskListPanel(logic.getFilteredTaskList());","lastModifiedDate":"2021-10-11"},{"lineNumber":149,"author":{"gitId":"tzejit"},"content":"            studentListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());","lastModifiedDate":"2021-10-11"},{"lineNumber":150,"author":{"gitId":"weenleen"},"content":"            listName.setText(TASKS_LIST_NAME);","lastModifiedDate":"2021-10-25"},{"lineNumber":151,"author":{"gitId":"tzejit"},"content":"        } else if (logic.getDisplayType().equals(GROUPS)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":152,"author":{"gitId":"tzejit"},"content":"            groupListPanel \u003d new GroupListPanel(logic.getFilteredGroupList());","lastModifiedDate":"2021-10-18"},{"lineNumber":153,"author":{"gitId":"tzejit"},"content":"            studentListPanelPlaceholder.getChildren().add(groupListPanel.getRoot());","lastModifiedDate":"2021-10-18"},{"lineNumber":154,"author":{"gitId":"weenleen"},"content":"            listName.setText(GROUPS_LIST_NAME);","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":156,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":157,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"weenleen"},"content":"    @FXML","lastModifiedDate":"2021-10-22"},{"lineNumber":171,"author":{"gitId":"weenleen"},"content":"    public void initialize() {","lastModifiedDate":"2021-10-22"},{"lineNumber":172,"author":{"gitId":"weenleen"},"content":"        terminalScrollPane.vvalueProperty().bind(terminalContainer.heightProperty());","lastModifiedDate":"2021-10-26"},{"lineNumber":173,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":174,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"tzejit"},"content":"            updateInnerParts();","lastModifiedDate":"2021-10-11"},{"lineNumber":222,"author":{"gitId":"weenleen"},"content":"            terminalContainer.getChildren().add(","lastModifiedDate":"2021-10-22"},{"lineNumber":223,"author":{"gitId":"weenleen"},"content":"                    new TerminalBox(commandText, commandResult.getFeedbackToUser()));","lastModifiedDate":"2021-10-22"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":227,"author":{"gitId":"weenleen"},"content":"            terminalContainer.getChildren().add(","lastModifiedDate":"2021-10-22"},{"lineNumber":228,"author":{"gitId":"weenleen"},"content":"                    new TerminalBox(commandText, e));","lastModifiedDate":"2021-10-22"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"weenleen":28,"wanninglim":2,"-":180,"tzejit":22}},{"path":"src/main/java/seedu/address/ui/MemberListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import javafx.beans.binding.Bindings;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":" * Panel containing the list of students.","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"public class MemberListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"wanninglim"},"content":"    private static final String FXML \u003d \"MemberListPanel.fxml\";","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(MemberListPanel.class);","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"    private final int cardHeight \u003d 100;","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"    @FXML","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"    private ListView\u003cStudent\u003e memberListView;","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"wanninglim"},"content":"     * Creates a {@code MemberListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"    public MemberListPanel(ObservableList\u003cStudent\u003e studentList) {","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"        super(FXML);","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"        memberListView.setItems(studentList);","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"        memberListView.setCellFactory(listView -\u003e new MemberListViewCell());","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"        memberListView.prefHeightProperty().bind(Bindings.size(studentList).multiply(cardHeight));","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Student} using a {@code StudentCard}.","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"    class MemberListViewCell extends ListCell\u003cStudent\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"        protected void updateItem(Student student, boolean empty) {","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"            super.updateItem(student, empty);","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"            if (empty || student \u003d\u003d null) {","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"                setText(null);","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"            } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"wanninglim"},"content":"                setGraphic(new StudentCard(student, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"wanninglim":3,"tzejit":49}},{"path":"src/main/java/seedu/address/ui/StudentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"weenleen"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"weenleen"},"content":" * A UI component that displays information of a {@code Student}.","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"public class StudentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"    private static final String FXML \u003d \"StudentListCard.fxml\";","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"    public final Student student;","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"    private Label studentNumber;","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"    @FXML","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"    private Label githubLink;","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"    @FXML","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"    @FXML","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"weenleen"},"content":"    private VBox studentValuesContainer;","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"     * Creates a {@code StudentCode} with the given {@code Student} and index to display.","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"    public StudentCard(Student student, int displayedIndex) {","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"        this.student \u003d student;","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"        name.setText(student.getName().fullName);","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"weenleen"},"content":"        email.setText(\"Email: \" + student.getEmail().value);","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"weenleen"},"content":"        studentNumber.setText(\"Student Number: \" + student.getStudentNumber().toString());","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"weenleen"},"content":"        if (!student.getGroupName().toString().contentEquals(\"-\")) {","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"weenleen"},"content":"            Label studentGrp \u003d new Label(\"Group: \" + student.getGroupName().toString());","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"weenleen"},"content":"            tags.getChildren().add(studentGrp);","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"weenleen"},"content":"            studentGrp.getStyleClass().add(\"studentGroupLabel\");","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"weenleen"},"content":"        studentValuesContainer.getChildren().addAll(","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"weenleen"},"content":"                new StudentValuesBox(StudentValuesBox.ATTENDANCE_HEADER, student.getAttendance()),","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"weenleen"},"content":"                new StudentValuesBox(StudentValuesBox.PARTICIPATION_HEADER, student.getParticipation()));","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"        githubLink.setText(student.getStudentLink());","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"        student.getTags().stream()","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"        if (!(other instanceof StudentCard)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"tzejit"},"content":"        StudentCard card \u003d (StudentCard) other;","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"tzejit"},"content":"                \u0026\u0026 student.equals(card.student);","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"weenleen":14,"-":57,"tzejit":19}},{"path":"src/main/java/seedu/address/ui/StudentListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":" * Panel containing the list of students.","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"public class StudentListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"    private static final String FXML \u003d \"StudentListPanel.fxml\";","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(StudentListPanel.class);","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"    private ListView\u003cStudent\u003e studentListView;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"     * Creates a {@code StudentListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"    public StudentListPanel(ObservableList\u003cStudent\u003e studentList) {","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"        super(FXML);","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"        studentListView.setItems(studentList);","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"        studentListView.setCellFactory(listView -\u003e new StudentListViewCell());","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Student} using a {@code StudentCard}.","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"weenleen"},"content":"    static class StudentListViewCell extends ListCell\u003cStudent\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"        protected void updateItem(Student student, boolean empty) {","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"            super.updateItem(student, empty);","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"            if (empty || student \u003d\u003d null) {","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"                setText(null);","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"            } else {","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"                setGraphic(new StudentCard(student, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"weenleen":1,"tzejit":48}},{"path":"src/main/java/seedu/address/ui/StudentValuesBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weenleen"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"weenleen"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"weenleen"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"weenleen"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"weenleen"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"weenleen"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"weenleen"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"weenleen"},"content":"import javafx.scene.layout.GridPane;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"weenleen"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.student.Attendance;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.student.Participation;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"weenleen"},"content":"public class StudentValuesBox extends VBox {","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"weenleen"},"content":"    public static final String ATTENDANCE_HEADER \u003d \"Attendance\";","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"weenleen"},"content":"    public static final String PARTICIPATION_HEADER \u003d \"Participation\";","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"weenleen"},"content":"    private static final String FXML \u003d \"/view/StudentValuesBox.fxml\";","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"weenleen"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"weenleen"},"content":"    private Label valueHeader;","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"weenleen"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"weenleen"},"content":"    private GridPane valueArrayGrid;","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"weenleen"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"weenleen"},"content":"    public StudentValuesBox(String header, Attendance attendance) {","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"weenleen"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"weenleen"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(FXML));","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"weenleen"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"weenleen"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"weenleen"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"weenleen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"weenleen"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"weenleen"},"content":"        valueHeader.setText(header);","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"weenleen"},"content":"        ObservableList\u003cNode\u003e children \u003d valueArrayGrid.getChildren();","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"weenleen"},"content":"        for (int i \u003d 0; i \u003c children.size(); i++) {","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"weenleen"},"content":"            if (attendance.checkPresent(i) \u003d\u003d 1) {","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"weenleen"},"content":"                children.get(i).getStyleClass().add(\"studentValuePositive\");","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"wanninglim"},"content":"            } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"wanninglim"},"content":"                children.get(i).getStyleClass().add(\"studentValueNegative\");","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"weenleen"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"weenleen"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"weenleen"},"content":"    public StudentValuesBox(String header, Participation participation) {","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"weenleen"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"weenleen"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(FXML));","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"weenleen"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"weenleen"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"weenleen"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"weenleen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"weenleen"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"weenleen"},"content":"        valueHeader.setText(header);","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"weenleen"},"content":"        ObservableList\u003cNode\u003e children \u003d valueArrayGrid.getChildren();","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"weenleen"},"content":"        for (int i \u003d 0; i \u003c children.size(); i++) {","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"wanninglim"},"content":"            if (participation.checkParticipated(i) \u003d\u003d 1) {","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"weenleen"},"content":"                children.get(i).getStyleClass().add(\"studentValuePositive\");","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"wanninglim"},"content":"            } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"wanninglim"},"content":"                children.get(i).getStyleClass().add(\"studentValueNegative\");","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"weenleen"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"weenleen"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"weenleen":70,"wanninglim":5}},{"path":"src/main/java/seedu/address/ui/TaskListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.DeadlineTask;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.EventTask;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.TodoTask;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":" * Panel containing the list of tasks.","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"public class TaskListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"    private static final String FXML \u003d \"TaskListPanel.fxml\";","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TaskListPanel.class);","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"    @FXML","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"    private ListView\u003cTask\u003e taskListView;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"     * Creates a {@code StudentListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"    public TaskListPanel(ObservableList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"        super(FXML);","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"        taskListView.setItems(taskList);","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"        taskListView.setCellFactory(listView -\u003e new TaskListViewCell());","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Student} using a {@code StudentCard}.","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"    class TaskListViewCell extends ListCell\u003cTask\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"        protected void updateItem(Task task, boolean empty) {","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"            super.updateItem(task, empty);","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"itsraveen"},"content":"            if (!(task instanceof TodoTask) \u0026\u0026 !(task instanceof EventTask) \u0026\u0026 !(task instanceof DeadlineTask)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"itsraveen"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"itsraveen"},"content":"                setText(null);","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"itsraveen"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"            if (empty || task \u003d\u003d null) {","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"                setText(null);","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"itsraveen"},"content":"            } else if (task instanceof TodoTask) {","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"itsraveen"},"content":"                setGraphic(new ToDoTaskCard(task, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"itsraveen"},"content":"            } else if (task instanceof DeadlineTask) {","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"itsraveen"},"content":"                setGraphic(new DeadlineTaskCard(task, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"itsraveen"},"content":"            } else if (task instanceof EventTask) {","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"itsraveen"},"content":"                setGraphic(new EventTaskCard(task, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"itsraveen"},"content":"            } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"itsraveen"},"content":"                setGraphic(new ToDoTaskCard(task, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"itsraveen":15,"tzejit":47}},{"path":"src/main/java/seedu/address/ui/TerminalBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weenleen"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"weenleen"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"weenleen"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"weenleen"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"weenleen"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"weenleen"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"weenleen"},"content":"public class TerminalBox extends VBox {","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"weenleen"},"content":"    private static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"weenleen"},"content":"    private static final String PREFIX \u003d \"\u003e  \";","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"weenleen"},"content":"    @FXML","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"weenleen"},"content":"    private Label inputText;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"weenleen"},"content":"    @FXML","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"weenleen"},"content":"    private Label responseText;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"weenleen"},"content":"     * Creates a {@code TerminalBox} with the given input and response strings.","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"weenleen"},"content":"    public TerminalBox(String input, String response) {","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"weenleen"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"weenleen"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/TerminalBox.fxml\"));","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"weenleen"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"weenleen"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"weenleen"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"weenleen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"weenleen"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"weenleen"},"content":"        this.inputText.setText(PREFIX + input);","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"weenleen"},"content":"        this.responseText.setText(response);","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"weenleen"},"content":"     * Creates a {@code TerminalBox} with the given input string and exception.","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"weenleen"},"content":"    public TerminalBox(String input, Exception exception) {","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"weenleen"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"weenleen"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/TerminalBox.fxml\"));","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"weenleen"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"weenleen"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"weenleen"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"weenleen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"weenleen"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"weenleen"},"content":"        this.inputText.setText(PREFIX + input);","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"weenleen"},"content":"        this.responseText.setText(exception.getMessage());","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"weenleen"},"content":"        responseText.getStyleClass().add(ERROR_STYLE_CLASS);","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"weenleen"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"weenleen":56}},{"path":"src/main/java/seedu/address/ui/ToDoTaskCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"weenleen"},"content":" * A UI component that displays information of a {@code Student}.","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"itsraveen"},"content":"public class ToDoTaskCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"itsraveen"},"content":"    private static final String FXML \u003d \"TodoTaskListCard.fxml\";","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"    public final Task task;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"    @FXML","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"    @FXML","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"    private Label id;","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"    @FXML","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"    private Label name;","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"    @FXML","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"    private Label status;","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"    @FXML","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"somekoreanboi"},"content":"    private Label description;","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"somekoreanboi"},"content":"    @FXML","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"    private FlowPane tags;","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"     * Creates a {@code StudentCode} with the given {@code Student} and index to display.","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"itsraveen"},"content":"    public ToDoTaskCard(Task task, int displayedIndex) {","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"        super(FXML);","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"weenleen"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"        name.setText(task.getName().toString());","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"weenleen"},"content":"        status.setText(\"Status: \" + task.getStatusString());","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"somekoreanboi"},"content":"        description.setText(task.getDescription());","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"wanninglim"},"content":"        Label priorityLabel \u003d new Label(\"Priority: \" + task.getPriorityAsString());","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"weenleen"},"content":"        Label taskType \u003d new Label(\"Todo\");","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"weenleen"},"content":"        tags.getChildren().addAll(taskType, priorityLabel);","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"wanninglim"},"content":"        String priority \u003d task.getPriorityAsString();","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"wanninglim"},"content":"        if (priority.contains(\"HIGH\")) {","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"wanninglim"},"content":"            priorityLabel.getStyleClass().add(\"priorityLabel-high\");","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"wanninglim"},"content":"        } else if (priority.contains(\"MED\")) {","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"wanninglim"},"content":"            priorityLabel.getStyleClass().add(\"priorityLabel-med\");","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"wanninglim"},"content":"        } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"wanninglim"},"content":"            priorityLabel.getStyleClass().add(\"priorityLabel-low\");","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"weenleen"},"content":"        taskType.getStyleClass().add(\"taskType\");","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"        task.getTags().stream()","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"            return true;","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"tzejit"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"itsraveen"},"content":"        if (!(other instanceof ToDoTaskCard)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"            return false;","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"tzejit"},"content":"        // state check","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"itsraveen"},"content":"        ToDoTaskCard card \u003d (ToDoTaskCard) other;","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"tzejit"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"tzejit"},"content":"                \u0026\u0026 task.equals(card.task);","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"weenleen":7,"itsraveen":5,"wanninglim":10,"somekoreanboi":3,"tzejit":64}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"wanninglim"},"content":"    -fx-font-family: \"DM Sans Medium\";","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"wanninglim"},"content":"    -fx-font-family: \"DM Sans Medium\";","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"wanninglim"},"content":"    -fx-font-family: \"DM Sans Medium\";","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"wanninglim"},"content":"    -fx-font-family: \"DM Sans Medium\";","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"wanninglim"},"content":"    -fx-font-size: 16pt;","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"wanninglim"},"content":"    -fx-font-family: \"DM Sans\";","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"weenleen"},"content":".split-pane:vertical .split-pane-divider {","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"weenleen"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"weenleen"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"weenleen"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":90,"author":{"gitId":"weenleen"},"content":"    -fx-border-radius: 0;","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"weenleen"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"weenleen"},"content":"    -fx-background-radius: 20;","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"weenleen"},"content":"    -fx-border-color: #383838;","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"weenleen"},"content":"    -fx-border-width: 3;","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"weenleen"},"content":"    -fx-border-width: 3;","lastModifiedDate":"2021-10-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"wanninglim"},"content":"    -fx-font-family: \"DM Sans Bold\";","lastModifiedDate":"2021-10-26"},{"lineNumber":133,"author":{"gitId":"wanninglim"},"content":"    -fx-font-size: 17px;","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"wanninglim"},"content":"    -fx-padding: 0 0 3 0;","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"wanninglim"},"content":"    -fx-font-family: \"DM Sans\";","lastModifiedDate":"2021-10-26"},{"lineNumber":140,"author":{"gitId":"wanninglim"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"wanninglim"},"content":"    -fx-padding: 0 0 1 0;","lastModifiedDate":"2021-10-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"wanninglim"},"content":"    -fx-font-family: \"DM Sans\";","lastModifiedDate":"2021-10-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"weenleen"},"content":"    -fx-font-size: 10pt;","lastModifiedDate":"2021-10-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"weenleen"},"content":"    -fx-font-size: 10pt;","lastModifiedDate":"2021-10-26"},{"lineNumber":201,"author":{"gitId":"wanninglim"},"content":"    -fx-font-family: \"DM Sans\";","lastModifiedDate":"2021-10-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"wanninglim"},"content":"    -fx-font-family: \"DM Sans Medium\";","lastModifiedDate":"2021-10-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"weenleen"},"content":".studentValueLabel {","lastModifiedDate":"2021-10-25"},{"lineNumber":311,"author":{"gitId":"weenleen"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2021-10-25"},{"lineNumber":312,"author":{"gitId":"wanninglim"},"content":"    -fx-font-family: \"DM Sans\";","lastModifiedDate":"2021-10-26"},{"lineNumber":313,"author":{"gitId":"wanninglim"},"content":"    -fx-font-size: 10pt;","lastModifiedDate":"2021-10-26"},{"lineNumber":314,"author":{"gitId":"weenleen"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-25"},{"lineNumber":315,"author":{"gitId":"weenleen"},"content":"    -fx-text-alignment: center;","lastModifiedDate":"2021-10-26"},{"lineNumber":316,"author":{"gitId":"weenleen"},"content":"    -display: inline-block;","lastModifiedDate":"2021-10-26"},{"lineNumber":317,"author":{"gitId":"wanninglim"},"content":"    -fx-padding: 0 1 0 1;","lastModifiedDate":"2021-10-26"},{"lineNumber":318,"author":{"gitId":"weenleen"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":319,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":320,"author":{"gitId":"weenleen"},"content":".studentValuePositive {","lastModifiedDate":"2021-10-26"},{"lineNumber":321,"author":{"gitId":"wanninglim"},"content":"    -fx-background-color: #28a745 !important;","lastModifiedDate":"2021-10-26"},{"lineNumber":322,"author":{"gitId":"weenleen"},"content":"    -fx-background-radius: 5 !important;","lastModifiedDate":"2021-10-26"},{"lineNumber":323,"author":{"gitId":"wanninglim"},"content":"    -fx-padding: 0 5 0 5 !important;","lastModifiedDate":"2021-10-26"},{"lineNumber":324,"author":{"gitId":"wanninglim"},"content":"    -fx-font-family: \"DM Sans Bold\" !important;","lastModifiedDate":"2021-10-26"},{"lineNumber":325,"author":{"gitId":"wanninglim"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":326,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":327,"author":{"gitId":"wanninglim"},"content":".studentValueNegative {","lastModifiedDate":"2021-10-26"},{"lineNumber":328,"author":{"gitId":"wanninglim"},"content":"    -fx-background-color: #343a40 !important;","lastModifiedDate":"2021-10-26"},{"lineNumber":329,"author":{"gitId":"wanninglim"},"content":"    -fx-background-radius: 5 !important;","lastModifiedDate":"2021-10-26"},{"lineNumber":330,"author":{"gitId":"wanninglim"},"content":"    -fx-padding: 0 5 0 5 !important;","lastModifiedDate":"2021-10-26"},{"lineNumber":331,"author":{"gitId":"wanninglim"},"content":"    -fx-font-family: \"DM Sans Bold\" !important;","lastModifiedDate":"2021-10-26"},{"lineNumber":332,"author":{"gitId":"weenleen"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":333,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":334,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":339,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":342,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":344,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"wanninglim"},"content":"    -fx-font-family: \"DM Sans\";","lastModifiedDate":"2021-10-26"},{"lineNumber":351,"author":{"gitId":"wanninglim"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2021-10-26"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":353,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":355,"author":{"gitId":"weenleen"},"content":"#commandBoxPlaceholder {","lastModifiedDate":"2021-10-26"},{"lineNumber":356,"author":{"gitId":"weenleen"},"content":"    -fx-background-color: #383838;","lastModifiedDate":"2021-10-26"},{"lineNumber":357,"author":{"gitId":"weenleen"},"content":"    -fx-padding: 5 10 5 10;","lastModifiedDate":"2021-10-26"},{"lineNumber":358,"author":{"gitId":"weenleen"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2021-10-26"},{"lineNumber":359,"author":{"gitId":"weenleen"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2021-10-26"},{"lineNumber":360,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":362,"author":{"gitId":"weenleen"},"content":"#terminalScrollPane {","lastModifiedDate":"2021-10-26"},{"lineNumber":363,"author":{"gitId":"weenleen"},"content":"    -fx-background-color: #383838;","lastModifiedDate":"2021-10-26"},{"lineNumber":364,"author":{"gitId":"weenleen"},"content":"    -fx-padding: 5 10 5 10;","lastModifiedDate":"2021-10-26"},{"lineNumber":365,"author":{"gitId":"weenleen"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2021-10-26"},{"lineNumber":366,"author":{"gitId":"weenleen"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2021-10-26"},{"lineNumber":367,"author":{"gitId":"weenleen"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":368,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":369,"author":{"gitId":"weenleen"},"content":"#listName {","lastModifiedDate":"2021-10-25"},{"lineNumber":370,"author":{"gitId":"weenleen"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2021-10-25"},{"lineNumber":371,"author":{"gitId":"weenleen"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2021-10-25"},{"lineNumber":372,"author":{"gitId":"wanninglim"},"content":"    -fx-font-family: \"DM Sans Bold\";","lastModifiedDate":"2021-10-26"},{"lineNumber":373,"author":{"gitId":"weenleen"},"content":"    -fx-font-size: 16pt;","lastModifiedDate":"2021-10-25"},{"lineNumber":374,"author":{"gitId":"weenleen"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-25"},{"lineNumber":375,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":377,"author":{"gitId":"weenleen"},"content":"#inputText {","lastModifiedDate":"2021-10-25"},{"lineNumber":378,"author":{"gitId":"weenleen"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2021-10-25"},{"lineNumber":379,"author":{"gitId":"weenleen"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2021-10-25"},{"lineNumber":380,"author":{"gitId":"wanninglim"},"content":"    -fx-font-family: \"DM Sans Bold\";","lastModifiedDate":"2021-10-26"},{"lineNumber":381,"author":{"gitId":"wanninglim"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2021-10-26"},{"lineNumber":382,"author":{"gitId":"weenleen"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-25"},{"lineNumber":383,"author":{"gitId":"weenleen"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":384,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":385,"author":{"gitId":"weenleen"},"content":"#responseText {","lastModifiedDate":"2021-10-25"},{"lineNumber":386,"author":{"gitId":"weenleen"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2021-10-25"},{"lineNumber":387,"author":{"gitId":"weenleen"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2021-10-25"},{"lineNumber":388,"author":{"gitId":"wanninglim"},"content":"    -fx-font-family: \"DM Sans\";","lastModifiedDate":"2021-10-26"},{"lineNumber":389,"author":{"gitId":"wanninglim"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2021-10-26"},{"lineNumber":390,"author":{"gitId":"weenleen"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-25"},{"lineNumber":391,"author":{"gitId":"weenleen"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":392,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":393,"author":{"gitId":"weenleen"},"content":"#commandSummaryLabel {","lastModifiedDate":"2021-10-25"},{"lineNumber":394,"author":{"gitId":"weenleen"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2021-10-25"},{"lineNumber":395,"author":{"gitId":"weenleen"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2021-10-25"},{"lineNumber":396,"author":{"gitId":"wanninglim"},"content":"    -fx-font-family: \"DM Sans Bold\";","lastModifiedDate":"2021-10-26"},{"lineNumber":397,"author":{"gitId":"wanninglim"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2021-10-26"},{"lineNumber":398,"author":{"gitId":"weenleen"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-25"},{"lineNumber":399,"author":{"gitId":"weenleen"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":400,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":401,"author":{"gitId":"weenleen"},"content":"#helpMessage {","lastModifiedDate":"2021-10-25"},{"lineNumber":402,"author":{"gitId":"weenleen"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2021-10-25"},{"lineNumber":403,"author":{"gitId":"weenleen"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2021-10-25"},{"lineNumber":404,"author":{"gitId":"wanninglim"},"content":"    -fx-font-family: \"DM Sans\";","lastModifiedDate":"2021-10-26"},{"lineNumber":405,"author":{"gitId":"weenleen"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2021-10-25"},{"lineNumber":406,"author":{"gitId":"weenleen"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-25"},{"lineNumber":407,"author":{"gitId":"weenleen"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":408,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":409,"author":{"gitId":"weenleen"},"content":".taskType {","lastModifiedDate":"2021-10-26"},{"lineNumber":410,"author":{"gitId":"weenleen"},"content":"    -fx-background-color: #fc3dc9 !important;","lastModifiedDate":"2021-10-26"},{"lineNumber":411,"author":{"gitId":"weenleen"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":412,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":413,"author":{"gitId":"wanninglim"},"content":".priorityLabel-high {","lastModifiedDate":"2021-10-26"},{"lineNumber":414,"author":{"gitId":"wanninglim"},"content":"    -fx-background-color: #d82e3f !important;","lastModifiedDate":"2021-10-26"},{"lineNumber":415,"author":{"gitId":"wanninglim"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":416,"author":{"gitId":"wanninglim"},"content":".priorityLabel-med {","lastModifiedDate":"2021-10-26"},{"lineNumber":417,"author":{"gitId":"weenleen"},"content":"    -fx-background-color: #e0883a !important;","lastModifiedDate":"2021-10-26"},{"lineNumber":418,"author":{"gitId":"weenleen"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":419,"author":{"gitId":"wanninglim"},"content":".priorityLabel-low {","lastModifiedDate":"2021-10-26"},{"lineNumber":420,"author":{"gitId":"wanninglim"},"content":"    -fx-background-color: #F6BE00 !important;","lastModifiedDate":"2021-10-26"},{"lineNumber":421,"author":{"gitId":"wanninglim"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":422,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":423,"author":{"gitId":"weenleen"},"content":".studentGroupLabel {","lastModifiedDate":"2021-10-26"},{"lineNumber":424,"author":{"gitId":"weenleen"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-26"},{"lineNumber":425,"author":{"gitId":"weenleen"},"content":"    -fx-background-color: #7c4dab !important;","lastModifiedDate":"2021-10-26"},{"lineNumber":426,"author":{"gitId":"weenleen"},"content":"    -fx-padding: 2 4 2 4;","lastModifiedDate":"2021-10-25"},{"lineNumber":427,"author":{"gitId":"weenleen"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2021-10-25"},{"lineNumber":428,"author":{"gitId":"weenleen"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2021-10-25"},{"lineNumber":429,"author":{"gitId":"weenleen"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2021-10-25"},{"lineNumber":430,"author":{"gitId":"weenleen"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":431,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":432,"author":{"gitId":"weenleen"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2021-10-25"},{"lineNumber":433,"author":{"gitId":"weenleen"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2021-10-25"},{"lineNumber":434,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":436,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":437,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":438,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":439,"author":{"gitId":"wanninglim"},"content":"    -fx-padding: 0 0 4 0;","lastModifiedDate":"2021-10-26"},{"lineNumber":440,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":441,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":443,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":444,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":445,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":446,"author":{"gitId":"wanninglim"},"content":"    -fx-padding: 2 10 2 10;","lastModifiedDate":"2021-10-26"},{"lineNumber":447,"author":{"gitId":"weenleen"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2021-10-25"},{"lineNumber":448,"author":{"gitId":"weenleen"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2021-10-25"},{"lineNumber":449,"author":{"gitId":"wanninglim"},"content":"    -fx-font-size: 12;","lastModifiedDate":"2021-10-26"},{"lineNumber":450,"author":{"gitId":"wanninglim"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":451,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":452,"author":{"gitId":"wanninglim"},"content":"#valueHeader {","lastModifiedDate":"2021-10-26"},{"lineNumber":453,"author":{"gitId":"wanninglim"},"content":"    -fx-padding: 0 0 1 0;","lastModifiedDate":"2021-10-26"},{"lineNumber":454,"author":{"gitId":"wanninglim"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":455,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":456,"author":{"gitId":"wanninglim"},"content":"#valueArrayGrid {","lastModifiedDate":"2021-10-26"},{"lineNumber":457,"author":{"gitId":"wanninglim"},"content":"    -fx-padding: 0 0 5 0;","lastModifiedDate":"2021-10-26"},{"lineNumber":458,"author":{"gitId":"wanninglim"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":459,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":460,"author":{"gitId":"wanninglim"},"content":"#memberListPanelPlaceholder {","lastModifiedDate":"2021-10-26"},{"lineNumber":461,"author":{"gitId":"wanninglim"},"content":"    -fx-padding: 10 0 0 0;","lastModifiedDate":"2021-10-26"},{"lineNumber":462,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":463,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":464,"author":{"gitId":"wanninglim"},"content":"#commandSummaryTable {","lastModifiedDate":"2021-10-26"},{"lineNumber":465,"author":{"gitId":"wanninglim"},"content":"    -fx-padding: 15 10 15 10;","lastModifiedDate":"2021-10-26"},{"lineNumber":466,"author":{"gitId":"wanninglim"},"content":"    -fx-font-family: \"DM Sans\";","lastModifiedDate":"2021-10-26"},{"lineNumber":467,"author":{"gitId":"wanninglim"},"content":"    -fx-font-size: 12px;","lastModifiedDate":"2021-10-26"},{"lineNumber":468,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"weenleen":86,"wanninglim":66,"-":316}},{"path":"src/main/resources/view/DeadlineTaskListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"itsraveen"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"itsraveen"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"itsraveen"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"itsraveen"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"itsraveen"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"itsraveen"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"itsraveen"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"itsraveen"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"itsraveen"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"itsraveen"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"itsraveen"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"itsraveen"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"itsraveen"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"itsraveen"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"itsraveen"},"content":"        \u003cHBox\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"itsraveen"},"content":"            \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"itsraveen"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"wanninglim"},"content":"                    \u003cInsets top\u003d\"15\" right\u003d\"20\" bottom\u003d\"15\" left\u003d\"20\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"itsraveen"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"itsraveen"},"content":"                \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"itsraveen"},"content":"                    \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"itsraveen"},"content":"                        \u003cminWidth\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"itsraveen"},"content":"                            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"itsraveen"},"content":"                            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"itsraveen"},"content":"                        \u003c/minWidth\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"itsraveen"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"itsraveen"},"content":"                    \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"itsraveen"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"itsraveen"},"content":"                \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"weenleen"},"content":"                \u003cLabel fx:id\u003d\"status\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$status\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"itsraveen"},"content":"                \u003cLabel fx:id\u003d\"taskDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$taskDate\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"somekoreanboi"},"content":"                \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$description\" /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"itsraveen"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"itsraveen"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"itsraveen"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"itsraveen"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"itsraveen":35,"weenleen":1,"wanninglim":1,"somekoreanboi":1}},{"path":"src/main/resources/view/EventTaskListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"itsraveen"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"itsraveen"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"itsraveen"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"itsraveen"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"itsraveen"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"itsraveen"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"itsraveen"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"itsraveen"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"itsraveen"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"itsraveen"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"itsraveen"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"itsraveen"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"itsraveen"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"itsraveen"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"itsraveen"},"content":"        \u003cHBox\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"itsraveen"},"content":"            \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"itsraveen"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"wanninglim"},"content":"                    \u003cInsets top\u003d\"15\" right\u003d\"20\" bottom\u003d\"15\" left\u003d\"20\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"itsraveen"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"itsraveen"},"content":"                \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"itsraveen"},"content":"                    \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"itsraveen"},"content":"                        \u003cminWidth\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"itsraveen"},"content":"                            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"itsraveen"},"content":"                            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"itsraveen"},"content":"                        \u003c/minWidth\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"itsraveen"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"itsraveen"},"content":"                    \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"itsraveen"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"itsraveen"},"content":"                \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"weenleen"},"content":"                \u003cLabel fx:id\u003d\"status\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$status\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"itsraveen"},"content":"                \u003cLabel fx:id\u003d\"taskDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$taskDate\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"somekoreanboi"},"content":"                \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$description\" /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"itsraveen"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"itsraveen"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"itsraveen"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"itsraveen"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"itsraveen":35,"weenleen":1,"wanninglim":1,"somekoreanboi":1}},{"path":"src/main/resources/view/Fonts.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    font-family: \"Open Sans\";","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    src: url(\"/fonts/open-sans/OpenSans-Regular.ttf\");","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    font-family: \"Open Sans SemiBold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    src: url(\"/fonts/open-sans/OpenSans-SemiBold.ttf\");","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    src: url(\"/fonts/open-sans/OpenSans-Light.ttf\");","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    font-family: \"Open Sans Bold Italic\";","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    src: url(\"/fonts/open-sans/OpenSans-BoldItalic.ttf\");","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    font-family: \"Open Sans Extra Bold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    src: url(\"/fonts/open-sans/OpenSans-ExtraBold.ttf\");","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    font-family: \"Open Sans Extra Bold Italic\";","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    src: url(\"/fonts/open-sans/OpenSans-ExtraBoldItalic.ttf\");","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    font-family: \"Open Sans Italic\";","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    src: url(\"/fonts/open-sans/OpenSans-Italic.ttf\");","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    font-family: \"Open Sans Light Italic\";","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    src: url(\"/fonts/open-sans/OpenSans-LightItalic.ttf\");","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    font-family: \"Open Sans SemiBold Italic\";","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    src: url(\"/fonts/open-sans/OpenSans-SemiBoldItalic.ttf\");","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"weenleen"},"content":"@font-face {","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"weenleen"},"content":"    font-family: \"Open Sans Bold\";","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"weenleen"},"content":"    src: url(\"/fonts/open-sans/OpenSans-Bold.ttf\");","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"weenleen"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"wanninglim"},"content":"@font-face {","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"wanninglim"},"content":"    font-family: \"DM Sans\";","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"wanninglim"},"content":"    src: url(\"/fonts/dm-sans/DMSans-Regular.ttf\");","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"wanninglim"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"wanninglim"},"content":"@font-face {","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"wanninglim"},"content":"    font-family: \"DM Sans Italic\";","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"wanninglim"},"content":"    src: url(\"/fonts/dm-sans/DMSans-Italic.ttf\");","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"wanninglim"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"wanninglim"},"content":"@font-face {","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"wanninglim"},"content":"    font-family: \"DM Sans Medium\";","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"wanninglim"},"content":"    src: url(\"/fonts/dm-sans/DMSans-Medium.ttf\");","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"wanninglim"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"wanninglim"},"content":"@font-face {","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"wanninglim"},"content":"    font-family: \"DM Sans Medium Italic\";","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"wanninglim"},"content":"    src: url(\"/fonts/dm-sans/DMSans-MediumItalic.ttf\");","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"wanninglim"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"wanninglim"},"content":"@font-face {","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"wanninglim"},"content":"    font-family: \"DM Sans Bold\";","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"wanninglim"},"content":"    src: url(\"/fonts/dm-sans/DMSans-Bold.ttf\");","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"wanninglim"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"wanninglim"},"content":"@font-face {","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"wanninglim"},"content":"    font-family: \"DM Sans Bold Italic\";","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"wanninglim"},"content":"    src: url(\"/fonts/dm-sans/DMSans-BoldItalic.ttf\");","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"wanninglim"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"weenleen":5,"wanninglim":31,"-":44}},{"path":"src/main/resources/view/GroupListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"wanninglim"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"wanninglim"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"wanninglim"},"content":"      \u003cColumnConstraints hgrow\u003d\"ALWAYS\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"    \u003cHBox\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"wanninglim"},"content":"      \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105.0\" prefWidth\u003d\"800.0\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"wanninglim"},"content":"          \u003cInsets top\u003d\"15\" right\u003d\"20\" bottom\u003d\"15\" left\u003d\"20\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"wanninglim"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"10\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"          \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"            \u003cminWidth\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"              \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"              \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"            \u003c/minWidth\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"wanninglim"},"content":"          \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"        \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"          \u003cLabel fx:id\u003d\"link\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$link\" /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"wanninglim"},"content":"        \u003cStackPane fx:id\u003d\"memberListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"wanninglim"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"wanninglim"},"content":"                  \u003cInsets /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"wanninglim"},"content":"               \u003c/VBox.margin\u003e\u003c/StackPane\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"wanninglim"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"wanninglim"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"wanninglim"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"wanninglim":15,"tzejit":30}},{"path":"src/main/resources/view/GroupListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"  \u003cListView fx:id\u003d\"groupListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"-":7,"tzejit":1}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"wanninglim"},"content":"    -fx-font-family: \"DM Sans\";","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"wanninglim":1,"-":2}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"weenleen"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"weenleen"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"weenleen"},"content":"\u003c?import javafx.scene.control.TableView?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"weenleen"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"weenleen"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"weenleen"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"weenleen"},"content":"      \u003cScrollPane hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" vvalue\u003d\"1.0\" hbarPolicy\u003d\"NEVER\" fitToHeight\u003d\"true\"\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"weenleen"},"content":"        \u003cVBox styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"weenleen"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"weenleen"},"content":"            \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\"/\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"weenleen"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"weenleen"},"content":"          \u003cLabel fx:id\u003d\"commandSummaryLabel\" text\u003d\"Command Summary\"\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"weenleen"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"weenleen"},"content":"              \u003cInsets bottom\u003d\"15\" top\u003d\"5\"/\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"weenleen"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"weenleen"},"content":"          \u003cTableView fx:id\u003d\"commandSummaryTable\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"weenleen"},"content":"          \u003cHBox alignment\u003d\"CENTER\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"weenleen"},"content":"            \u003copaqueInsets\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"weenleen"},"content":"              \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"weenleen"},"content":"            \u003c/opaqueInsets\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"weenleen"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"weenleen"},"content":"              \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"15\"/\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"weenleen"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"weenleen"},"content":"            \u003cLabel fx:id\u003d\"helpMessage\"\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"              \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u003cInsets right\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"              \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":53,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"              \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                \u003cInsets left\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"              \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":60,"author":{"gitId":"weenleen"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"weenleen"},"content":"      \u003c/ScrollPane\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"weenleen":29,"-":35}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"weenleen"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"weenleen"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"weenleen"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"wanninglim"},"content":"         title\u003d\"tApp\" minWidth\u003d\"600\" minHeight\u003d\"780\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"wanninglim"},"content":"    \u003cImage url\u003d\"@/images/tApp_logo.png\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":40,"author":{"gitId":"wanninglim"},"content":"        \u003cSplitPane VBox.vgrow\u003d\"ALWAYS\" dividerPositions\u003d\"0.8f\" orientation\u003d\"VERTICAL\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"weenleen"},"content":"          \u003cVBox fx:id\u003d\"studentList\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\" prefWidth\u003d\"600\" prefHeight\u003d\"400\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"wanninglim"},"content":"              \u003cInsets top\u003d\"15\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"weenleen"},"content":"            \u003cLabel fx:id\u003d\"listName\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"weenleen"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"weenleen"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"weenleen"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"weenleen"},"content":"              \u003cminWidth\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"weenleen"},"content":"                \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"weenleen"},"content":"                \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"weenleen"},"content":"              \u003c/minWidth\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"weenleen"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"weenleen"},"content":"            \u003cStackPane fx:id\u003d\"studentListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"weenleen"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"wanninglim"},"content":"          \u003cVBox VBox.vgrow\u003d\"ALWAYS\" style\u003d\"-fx-background-color: #303030\" spacing\u003d\"10\" prefHeight\u003d\"100\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"weenleen"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"weenleen"},"content":"              \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"weenleen"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"weenleen"},"content":"            \u003cScrollPane fx:id\u003d\"terminalScrollPane\" fitToWidth\u003d\"true\" vvalue\u003d\"1.0\" VBox.vgrow\u003d\"ALWAYS\"","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"weenleen"},"content":"                        style\u003d\"-fx-background: #383838;\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"weenleen"},"content":"              \u003cVBox fx:id\u003d\"terminalContainer\" VBox.vgrow\u003d\"ALWAYS\" style\u003d\"-fx-background-color: #383838;\" /\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"weenleen"},"content":"            \u003c/ScrollPane\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":66,"author":{"gitId":"weenleen"},"content":"            \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" minHeight\u003d\"50\" prefHeight\u003d\"50\" maxHeight\u003d\"80\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":68,"author":{"gitId":"weenleen"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":72,"author":{"gitId":"weenleen"},"content":"        \u003c/SplitPane\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"weenleen":25,"wanninglim":5,"-":48}},{"path":"src/main/resources/view/MemberListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"wanninglim"},"content":"  \u003cListView fx:id\u003d\"memberListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"wanninglim":1,"tzejit":7}},{"path":"src/main/resources/view/StatusBarFooter.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003cGridPane styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" /\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"weenleen"},"content":"  \u003cLabel fx:id\u003d\"saveLocationStatus\" style\u003d\"-fx-font-size: 10pt;\"/\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2016-08-26"}],"authorContributionMap":{"weenleen":1,"-":11}},{"path":"src/main/resources/view/StudentListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"    \u003cHBox\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"wanninglim"},"content":"          \u003cInsets top\u003d\"15\" right\u003d\"20\" bottom\u003d\"15\" left\u003d\"20\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"wanninglim"},"content":"        \u003cHBox spacing\u003d\"10\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"weenleen"},"content":"          \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"/\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"        \u003cLabel fx:id\u003d\"studentNumber\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$studentNumber\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"        \u003cLabel fx:id\u003d\"githubLink\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$githubLink\" /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"weenleen"},"content":"      \u003cVBox fx:id\u003d\"studentValuesContainer\" alignment\u003d\"CENTER_RIGHT\"\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"weenleen"},"content":"          \u003cInsets right\u003d\"15\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"weenleen":3,"wanninglim":2,"-":30,"tzejit":7}},{"path":"src/main/resources/view/StudentListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"  \u003cListView fx:id\u003d\"studentListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":7,"tzejit":1}},{"path":"src/main/resources/view/StudentValuesBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weenleen"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"weenleen"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"weenleen"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"weenleen"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"weenleen"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"weenleen"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"weenleen"},"content":"\u003c?import javafx.scene.layout.Pane?\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"weenleen"},"content":"\u003cfx:root alignment\u003d\"BOTTOM_LEFT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" type\u003d\"javafx.scene.layout.VBox\"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"weenleen"},"content":"         xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"weenleen"},"content":"    \u003cLabel fx:id\u003d\"valueHeader\" text\u003d\"Attendance\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"weenleen"},"content":"    \u003cGridPane fx:id\u003d\"valueArrayGrid\" hgap\u003d\"5\"\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"weenleen"},"content":"        \u003cminWidth\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"weenleen"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"weenleen"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"weenleen"},"content":"        \u003c/minWidth\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"weenleen"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"wanninglim"},"content":"            \u003cColumnConstraints hgrow\u003d\"ALWAYS\" minWidth\u003d\"20\" maxWidth\u003d\"20\" prefWidth\u003d\"20\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"weenleen"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"weenleen"},"content":"        \u003cLabel text\u003d\"1\" minWidth\u003d\"15\" styleClass\u003d\"studentValueLabel\" GridPane.columnIndex\u003d\"0\" GridPane.rowIndex\u003d\"0\"/\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"weenleen"},"content":"        \u003cLabel text\u003d\"2\" minWidth\u003d\"15\" styleClass\u003d\"studentValueLabel\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"0\"/\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"weenleen"},"content":"        \u003cLabel text\u003d\"3\" minWidth\u003d\"15\" styleClass\u003d\"studentValueLabel\" GridPane.columnIndex\u003d\"2\" GridPane.rowIndex\u003d\"0\"/\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"weenleen"},"content":"        \u003cLabel text\u003d\"4\" minWidth\u003d\"15\" styleClass\u003d\"studentValueLabel\" GridPane.columnIndex\u003d\"3\" GridPane.rowIndex\u003d\"0\"/\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"weenleen"},"content":"        \u003cLabel text\u003d\"5\" minWidth\u003d\"15\" styleClass\u003d\"studentValueLabel\" GridPane.columnIndex\u003d\"4\" GridPane.rowIndex\u003d\"0\"/\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"weenleen"},"content":"        \u003cLabel text\u003d\"6\" minWidth\u003d\"15\" styleClass\u003d\"studentValueLabel\" GridPane.columnIndex\u003d\"5\" GridPane.rowIndex\u003d\"0\"/\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"weenleen"},"content":"        \u003cLabel text\u003d\"7\" minWidth\u003d\"15\" styleClass\u003d\"studentValueLabel\" GridPane.columnIndex\u003d\"6\" GridPane.rowIndex\u003d\"0\"/\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"weenleen"},"content":"        \u003cLabel text\u003d\"8\" minWidth\u003d\"15\" styleClass\u003d\"studentValueLabel\" GridPane.columnIndex\u003d\"7\" GridPane.rowIndex\u003d\"0\"/\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"weenleen"},"content":"        \u003cLabel text\u003d\"9\" minWidth\u003d\"15\" styleClass\u003d\"studentValueLabel\" GridPane.columnIndex\u003d\"8\" GridPane.rowIndex\u003d\"0\"/\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"weenleen"},"content":"        \u003cLabel text\u003d\"10\" minWidth\u003d\"15\" styleClass\u003d\"studentValueLabel\" GridPane.columnIndex\u003d\"9\" GridPane.rowIndex\u003d\"0\"/\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"weenleen"},"content":"        \u003cLabel text\u003d\"11\" minWidth\u003d\"15\" styleClass\u003d\"studentValueLabel\" GridPane.columnIndex\u003d\"10\" GridPane.rowIndex\u003d\"0\"/\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"weenleen"},"content":"        \u003cLabel text\u003d\"12\" minWidth\u003d\"15\" styleClass\u003d\"studentValueLabel\" GridPane.columnIndex\u003d\"11\" GridPane.rowIndex\u003d\"0\"/\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"weenleen"},"content":"        \u003cLabel text\u003d\"13\" minWidth\u003d\"15\" styleClass\u003d\"studentValueLabel\" GridPane.columnIndex\u003d\"12\" GridPane.rowIndex\u003d\"0\"/\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"weenleen"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"weenleen"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"weenleen":34,"wanninglim":1}},{"path":"src/main/resources/view/TaskListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"  \u003cListView fx:id\u003d\"taskListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"tzejit":8}},{"path":"src/main/resources/view/TerminalBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weenleen"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"weenleen"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"weenleen"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"weenleen"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"weenleen"},"content":"\u003cfx:root alignment\u003d\"BOTTOM_LEFT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"weenleen"},"content":"         type\u003d\"javafx.scene.layout.VBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"weenleen"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"weenleen"},"content":"        \u003cInsets bottom\u003d\"2\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"2\"/\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"weenleen"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"weenleen"},"content":"    \u003cLabel fx:id\u003d\"inputText\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"weenleen"},"content":"    \u003cLabel fx:id\u003d\"responseText\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"weenleen"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"weenleen":13}},{"path":"src/main/resources/view/TodoTaskListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"    \u003cHBox\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"      \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"wanninglim"},"content":"          \u003cInsets top\u003d\"15\" right\u003d\"20\" bottom\u003d\"15\" left\u003d\"20\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"        \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"          \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"            \u003cminWidth\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"              \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"              \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"            \u003c/minWidth\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"          \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"        \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"        \u003cLabel fx:id\u003d\"status\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$status\" /\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"weenleen"},"content":"        \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$description\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"weenleen":1,"wanninglim":1,"tzejit":35}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidAndValidStudentAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"  \"students\": [ {","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"    \"name\": \"Valid Student\",","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"wanninglim"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"    \"studentNumber\" : \"A0123456B\",","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"    \"username\" : \"user\",","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"    \"repo\" : \"ip\",","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"wanninglim"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"wanninglim"},"content":"    \"attendance\" : [ 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1 ],","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"wanninglim"},"content":"    \"participation\" : [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"    \"name\": \"Student With Invalid Email Field\",","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"wanninglim"},"content":"    \"email\": \"hansexample.com\",","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"wanninglim"},"content":"    \"studentNumber\": \"A0000000B\",","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"wanninglim"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"wanninglim"},"content":"    \"attendance\" : [ 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1 ],","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"wanninglim"},"content":"    \"participation\" : [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"weenleen"},"content":"  } ],","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"  \"tasks\" : [ ],","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"  \"groups\" : [ ]","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"weenleen":1,"wanninglim":9,"-":3,"tzejit":8}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidStudentAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"  \"students\": [ {","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"    \"name\": \"Student with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"wanninglim"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"wanninglim"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"    \"username\" : \"!!!\",","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"    \"repo\" : \"AA@@#\",","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"wanninglim"},"content":"    \"attendance\" : [ 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1 ],","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"wanninglim"},"content":"    \"participation\" : [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"weenleen"},"content":"  } ],","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"  \"tasks\" : [ ],","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"  \"groups\" : [ ]","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"weenleen":1,"wanninglim":4,"-":2,"tzejit":6}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicateStudentAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"  \"students\": [ {","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"    \"studentNumber\" : \"A0123456B\",","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"    \"username\" : \"user\",","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"    \"repo\" : \"ip\",","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"wanninglim"},"content":"    \"tagged\": [ \"friends\" ],","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"wanninglim"},"content":"    \"attendance\" : [ 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1 ],","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"wanninglim"},"content":"    \"participation\" : [ 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1 ]","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"wanninglim"},"content":"    \"email\": \"pauline@example.com\",","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"    \"studentNumber\" : \"A0123456B\",","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"    \"username\" : \"user\",","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"    \"repo\" : \"ip\",","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"wanninglim"},"content":"    \"tagged\": [ \"friends\" ],","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"wanninglim"},"content":"    \"attendance\" : [ 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1 ],","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"wanninglim"},"content":"    \"participation\" : [ 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1 ]","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"weenleen"},"content":"  } ],","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"  \"tasks\" : [ ],","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"  \"groups\" : [ ]","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"weenleen":1,"wanninglim":7,"-":6,"tzejit":9}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidStudentAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"  \"students\": [ {","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Hans Muster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"wanninglim"},"content":"    \"email\": \"invalid@email!3e\",","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"wanninglim"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"    \"username\" : \"!!!\",","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"    \"repo\" : \"AA@@#\",","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"wanninglim"},"content":"    \"attendance\" : [ 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1 ],","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"wanninglim"},"content":"    \"participation\" : [ 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1 ]","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"weenleen"},"content":"  } ],","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"  \"tasks\" : [ ],","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"  \"groups\" : [ ]","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"weenleen":1,"wanninglim":4,"-":3,"tzejit":5}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalStudentsAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"  \"_comment\": \"AddressBook save file which contains the same Student values as in TypicalStudents#getTypicalAddressBook()\",","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"  \"students\" : [ {","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\" : \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"    \"studentNumber\" : \"A0000000B\",","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"    \"username\" : \"paulice\",","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"    \"repo\" : \"ip\",","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"wanninglim"},"content":"    \"tagged\" : [ \"friends\" ],","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"wanninglim"},"content":"    \"attendance\" : [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"wanninglim"},"content":"    \"participation\" : [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"    \"groupName\" : null","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \"email\" : \"johnd@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"    \"studentNumber\" : \"A0000000B\",","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"    \"username\" : \"benben\",","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"    \"repo\" : \"ip\",","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"wanninglim"},"content":"    \"tagged\" : [ \"owesMoney\", \"friends\" ],","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"wanninglim"},"content":"    \"attendance\" : [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"wanninglim"},"content":"    \"participation\" : [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"    \"groupName\" : \"W14-4\"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \"email\" : \"heinz@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"    \"studentNumber\" : \"A0000000B\",","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"    \"username\" : \"cark\",","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"    \"repo\" : \"ip\",","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"wanninglim"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"wanninglim"},"content":"    \"attendance\" : [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"wanninglim"},"content":"    \"participation\" : [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"    \"groupName\" : \"W14-4\"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \"email\" : \"cornelia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"    \"studentNumber\" : \"A0000000B\",","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"    \"username\" : \"danmei\",","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"    \"repo\" : \"ip\",","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"wanninglim"},"content":"    \"tagged\" : [ \"friends\" ],","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"wanninglim"},"content":"    \"attendance\" : [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"wanninglim"},"content":"    \"participation\" : [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"    \"groupName\" : \"W14-4\"","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \"email\" : \"werner@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"    \"studentNumber\" : \"A0000000B\",","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"    \"username\" : \"em\",","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"    \"repo\" : \"ip\",","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"wanninglim"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"wanninglim"},"content":"    \"attendance\" : [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"wanninglim"},"content":"    \"participation\" : [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"    \"groupName\" : \"F01-3\"","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \"email\" : \"lydia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"    \"studentNumber\" : \"A0000000B\",","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"    \"username\" : \"fku\",","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"    \"repo\" : \"ip\",","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"wanninglim"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"wanninglim"},"content":"    \"attendance\" : [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"wanninglim"},"content":"    \"participation\" : [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"    \"groupName\" : \"F01-3\"","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \"email\" : \"anna@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"    \"studentNumber\" : \"A0000000B\",","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"    \"username\" : \"user\",","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"    \"repo\" : \"ipppp\",","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"wanninglim"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"wanninglim"},"content":"    \"attendance\" : [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"wanninglim"},"content":"    \"participation\" : [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"    \"groupName\" : null","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"weenleen"},"content":"  } ],","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"  \"tasks\" : [ ],","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"  \"groups\" : [ ]","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"weenleen":1,"wanninglim":21,"-":22,"tzejit":32}},{"path":"src/test/java/seedu/address/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"        final Index fifthStudentIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"        assertTrue(fifthStudentIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"        assertTrue(fifthStudentIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"        assertTrue(fifthStudentIndex.equals(fifthStudentIndex));","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"        assertFalse(fifthStudentIndex.equals(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"        assertFalse(fifthStudentIndex.equals(5.0f));","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"        assertFalse(fifthStudentIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":53,"tzejit":7}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"wanninglim"},"content":"    //---------------- Tests for containsSubstringIgnoreCase --------------------------------------","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"wanninglim"},"content":"    /*","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"wanninglim"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"wanninglim"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"wanninglim"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"wanninglim"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":136,"author":{"gitId":"wanninglim"},"content":"    public void containsSubstringIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"wanninglim"},"content":"        assertThrows(NullPointerException.class, ()","lastModifiedDate":"2021-10-21"},{"lineNumber":138,"author":{"gitId":"wanninglim"},"content":"            -\u003e StringUtil.containsSubstringIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":140,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"wanninglim"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"wanninglim"},"content":"    public void containsSubstringIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":143,"author":{"gitId":"wanninglim"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"wanninglim"},"content":"            -\u003e StringUtil.containsSubstringIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":146,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"wanninglim"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"wanninglim"},"content":"    public void containsSubstringIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"wanninglim"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"wanninglim"},"content":"            -\u003e StringUtil.containsSubstringIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":151,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":153,"author":{"gitId":"wanninglim"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"wanninglim"},"content":"    public void containsSubstringIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"wanninglim"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"wanninglim"},"content":"    /*","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"wanninglim"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"wanninglim"},"content":"     *   - any word","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"wanninglim"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"wanninglim"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"wanninglim"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"wanninglim"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"wanninglim"},"content":"     *   - empty string","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"wanninglim"},"content":"     *   - one word","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"wanninglim"},"content":"     *   - multiple words","lastModifiedDate":"2021-10-21"},{"lineNumber":168,"author":{"gitId":"wanninglim"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"wanninglim"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":170,"author":{"gitId":"wanninglim"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2021-10-21"},{"lineNumber":171,"author":{"gitId":"wanninglim"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"wanninglim"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"wanninglim"},"content":"     *   - last word in sentence","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"wanninglim"},"content":"     *   - middle word in sentence","lastModifiedDate":"2021-10-21"},{"lineNumber":175,"author":{"gitId":"wanninglim"},"content":"     *   - matches multiple substring in words","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"wanninglim"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":177,"author":{"gitId":"wanninglim"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2021-10-21"},{"lineNumber":178,"author":{"gitId":"wanninglim"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2021-10-21"},{"lineNumber":179,"author":{"gitId":"wanninglim"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":180,"author":{"gitId":"wanninglim"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2021-10-21"},{"lineNumber":181,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":182,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":183,"author":{"gitId":"wanninglim"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":184,"author":{"gitId":"wanninglim"},"content":"    public void containsSubstringIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2021-10-21"},{"lineNumber":185,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":186,"author":{"gitId":"wanninglim"},"content":"        // Empty sentence","lastModifiedDate":"2021-10-21"},{"lineNumber":187,"author":{"gitId":"wanninglim"},"content":"        assertFalse(StringUtil.containsSubstringIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2021-10-21"},{"lineNumber":188,"author":{"gitId":"wanninglim"},"content":"        assertFalse(StringUtil.containsSubstringIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":189,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":190,"author":{"gitId":"wanninglim"},"content":"        // Matches a partial word only","lastModifiedDate":"2021-10-21"},{"lineNumber":191,"author":{"gitId":"wanninglim"},"content":"        assertTrue(StringUtil.containsSubstringIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2021-10-21"},{"lineNumber":192,"author":{"gitId":"wanninglim"},"content":"        assertFalse(StringUtil","lastModifiedDate":"2021-10-21"},{"lineNumber":193,"author":{"gitId":"wanninglim"},"content":"                .containsSubstringIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2021-10-21"},{"lineNumber":194,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":195,"author":{"gitId":"wanninglim"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2021-10-21"},{"lineNumber":196,"author":{"gitId":"wanninglim"},"content":"        assertTrue(StringUtil.containsSubstringIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2021-10-21"},{"lineNumber":197,"author":{"gitId":"wanninglim"},"content":"        assertTrue(StringUtil.containsSubstringIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2021-10-21"},{"lineNumber":198,"author":{"gitId":"wanninglim"},"content":"        assertTrue(StringUtil.containsSubstringIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2021-10-21"},{"lineNumber":199,"author":{"gitId":"wanninglim"},"content":"        assertTrue(StringUtil.containsSubstringIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2021-10-21"},{"lineNumber":200,"author":{"gitId":"wanninglim"},"content":"        assertTrue(StringUtil.containsSubstringIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2021-10-21"},{"lineNumber":201,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":202,"author":{"gitId":"wanninglim"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2021-10-21"},{"lineNumber":203,"author":{"gitId":"wanninglim"},"content":"        assertTrue(StringUtil.containsSubstringIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":204,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":205,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":206,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"wanninglim":81,"-":143}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REPONAME_DESC_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STUDENTNUMBER_DESC_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.USERNAME_DESC_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"import seedu.address.logic.commands.AddStudentCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"wanninglim"},"content":"        String deleteCommand \u003d \"removeStudent 9\";","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"tzejit"},"content":"        String addCommand \u003d AddStudentCommand.COMMAND_WORD + NAME_DESC_AMY + EMAIL_DESC_AMY + STUDENTNUMBER_DESC_AMY","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"tzejit"},"content":"                + USERNAME_DESC_AMY + REPONAME_DESC_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"tzejit"},"content":"        Student expectedStudent \u003d new StudentBuilder(AMY).withTags().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"tzejit"},"content":"        expectedModel.addStudent(expectedStudent);","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"tzejit"},"content":"    public void getFilteredStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"tzejit"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredStudentList().remove(0));","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"wanninglim":1,"-":147,"tzejit":15}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":" * Contains integration tests (interaction with the Model) for {@code AddStudentCommand}.","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"    public void execute_newStudent_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"        expectedModel.addStudent(validStudent);","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"        assertCommandSuccess(new AddStudentCommand(validStudent), model,","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"                String.format(AddStudentCommand.MESSAGE_SUCCESS, validStudent), expectedModel);","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"    public void execute_duplicateStudent_throwsCommandException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"        Student studentInList \u003d model.getAddressBook().getStudentList().get(0);","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"        assertCommandFailure(new AddStudentCommand(studentInList), model, AddStudentCommand.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"-":33,"tzejit":12}},{"path":"src/test/java/seedu/address/logic/commands/AddDeadlineAndEventTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"itsraveen"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"itsraveen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"itsraveen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"itsraveen"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"itsraveen"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"itsraveen"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"itsraveen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"itsraveen"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"itsraveen"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"itsraveen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"itsraveen"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"itsraveen"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"itsraveen"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.commons.RepoName;","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.group.LinkYear;","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"itsraveen"},"content":"import seedu.address.testutil.DeadlineTaskBuilder;","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"itsraveen"},"content":"public class AddDeadlineAndEventTaskCommandTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"itsraveen"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"itsraveen"},"content":"    public void constructor_nullTask_throwsNullPointerException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"itsraveen"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTaskCommand(null));","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"itsraveen"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"itsraveen"},"content":"    public void execute_taskAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"itsraveen"},"content":"        AddDeadlineAndEventTaskCommandTest.ModelStubAcceptingTaskAdded modelStub \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"itsraveen"},"content":"                new AddDeadlineAndEventTaskCommandTest.ModelStubAcceptingTaskAdded();","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"itsraveen"},"content":"        Task validTask \u003d new DeadlineTaskBuilder().build();","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"itsraveen"},"content":"        CommandResult commandResult \u003d new AddTaskCommand(validTask).execute(modelStub);","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"itsraveen"},"content":"        assertEquals(String.format(AddTaskCommand.MESSAGE_SUCCESS, validTask), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"itsraveen"},"content":"        assertEquals(Arrays.asList(validTask), modelStub.tasksAdded);","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"itsraveen"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"itsraveen"},"content":"    public void execute_duplicateTask_throwsCommandException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"itsraveen"},"content":"        Task validTask \u003d new DeadlineTaskBuilder().build();","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"itsraveen"},"content":"        AddTaskCommand addTaskCommand \u003d new AddTaskCommand(validTask);","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"itsraveen"},"content":"        AddDeadlineAndEventTaskCommandTest.ModelStub modelStub \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"itsraveen"},"content":"                new AddDeadlineAndEventTaskCommandTest.ModelStubWithTask(validTask);","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"itsraveen"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"itsraveen"},"content":"                AddTaskCommand.MESSAGE_DUPLICATE_TASK, () -\u003e addTaskCommand.execute(modelStub));","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"itsraveen"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"itsraveen"},"content":"    public void equals() {","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"itsraveen"},"content":"        Task alice \u003d new DeadlineTaskBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"itsraveen"},"content":"        Task bob \u003d new DeadlineTaskBuilder().withName(\"Bob\").build();","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"itsraveen"},"content":"        AddTaskCommand addAliceCommand \u003d new AddTaskCommand(alice);","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"itsraveen"},"content":"        AddTaskCommand addBobCommand \u003d new AddTaskCommand(bob);","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"itsraveen"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"itsraveen"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"itsraveen"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"itsraveen"},"content":"        AddTaskCommand addAliceCommandCopy \u003d new AddTaskCommand(alice);","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"itsraveen"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"itsraveen"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"itsraveen"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"itsraveen"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"itsraveen"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"itsraveen"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"itsraveen"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"itsraveen"},"content":"     * A default model stub that has all methods failing.","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"itsraveen"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"itsraveen"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"itsraveen"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"itsraveen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"itsraveen"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"itsraveen"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"itsraveen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"itsraveen"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"itsraveen"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"itsraveen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"itsraveen"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"itsraveen"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"itsraveen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"itsraveen"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"itsraveen"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"itsraveen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"itsraveen"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"itsraveen"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-10-20"},{"lineNumber":115,"author":{"gitId":"itsraveen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":117,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":118,"author":{"gitId":"itsraveen"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"itsraveen"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"itsraveen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"itsraveen"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"itsraveen"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2021-10-20"},{"lineNumber":125,"author":{"gitId":"itsraveen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":126,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":127,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":128,"author":{"gitId":"itsraveen"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":129,"author":{"gitId":"itsraveen"},"content":"        public void clearTasks() {","lastModifiedDate":"2021-10-20"},{"lineNumber":130,"author":{"gitId":"itsraveen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":131,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":132,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":133,"author":{"gitId":"itsraveen"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":134,"author":{"gitId":"itsraveen"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-20"},{"lineNumber":135,"author":{"gitId":"itsraveen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":136,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":137,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":138,"author":{"gitId":"itsraveen"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":139,"author":{"gitId":"itsraveen"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2021-10-20"},{"lineNumber":140,"author":{"gitId":"itsraveen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":141,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":142,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":143,"author":{"gitId":"itsraveen"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":144,"author":{"gitId":"wanninglim"},"content":"        public void removeStudent(Student target) {","lastModifiedDate":"2021-10-25"},{"lineNumber":145,"author":{"gitId":"itsraveen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":146,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":147,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":148,"author":{"gitId":"itsraveen"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":149,"author":{"gitId":"itsraveen"},"content":"        public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2021-10-20"},{"lineNumber":150,"author":{"gitId":"itsraveen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":151,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":152,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":153,"author":{"gitId":"itsraveen"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":154,"author":{"gitId":"itsraveen"},"content":"        public String getStudentAttendance(Student target, int week) {","lastModifiedDate":"2021-10-20"},{"lineNumber":155,"author":{"gitId":"itsraveen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":156,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":157,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":158,"author":{"gitId":"itsraveen"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":159,"author":{"gitId":"itsraveen"},"content":"        public void markStudentAttendance(Student target, int week) {","lastModifiedDate":"2021-10-20"},{"lineNumber":160,"author":{"gitId":"itsraveen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":161,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":162,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":163,"author":{"gitId":"wanninglim"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":164,"author":{"gitId":"wanninglim"},"content":"        public String getStudentParticipation(Student target, int week) {","lastModifiedDate":"2021-10-18"},{"lineNumber":165,"author":{"gitId":"wanninglim"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":166,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":167,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":168,"author":{"gitId":"wanninglim"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":169,"author":{"gitId":"wanninglim"},"content":"        public void markStudentParticipation(Student target, int week) {","lastModifiedDate":"2021-10-18"},{"lineNumber":170,"author":{"gitId":"wanninglim"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":171,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":172,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":173,"author":{"gitId":"itsraveen"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":174,"author":{"gitId":"itsraveen"},"content":"        public void addStudentGroup(Student target, Group group) {","lastModifiedDate":"2021-10-20"},{"lineNumber":175,"author":{"gitId":"itsraveen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":176,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":177,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":178,"author":{"gitId":"itsraveen"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":179,"author":{"gitId":"itsraveen"},"content":"        public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2021-10-20"},{"lineNumber":180,"author":{"gitId":"itsraveen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":181,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":182,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":183,"author":{"gitId":"itsraveen"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":184,"author":{"gitId":"itsraveen"},"content":"        public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2021-10-20"},{"lineNumber":185,"author":{"gitId":"itsraveen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":186,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":187,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":188,"author":{"gitId":"itsraveen"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":189,"author":{"gitId":"itsraveen"},"content":"        public boolean hasGroup(Group group) {","lastModifiedDate":"2021-10-20"},{"lineNumber":190,"author":{"gitId":"itsraveen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":191,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":192,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":193,"author":{"gitId":"itsraveen"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":194,"author":{"gitId":"itsraveen"},"content":"        public void deleteGroup(Group target) {","lastModifiedDate":"2021-10-20"},{"lineNumber":195,"author":{"gitId":"itsraveen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":196,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":197,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":198,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":199,"author":{"gitId":"tzejit"},"content":"        public void deleteStudentGroup(Student student, Group group) {","lastModifiedDate":"2021-10-23"},{"lineNumber":200,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":201,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":202,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":203,"author":{"gitId":"itsraveen"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":204,"author":{"gitId":"itsraveen"},"content":"        public void addGroup(Group group) {","lastModifiedDate":"2021-10-20"},{"lineNumber":205,"author":{"gitId":"itsraveen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":206,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":207,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":208,"author":{"gitId":"itsraveen"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":209,"author":{"gitId":"itsraveen"},"content":"        public void setGroup(Group target, Group editedGroup) {","lastModifiedDate":"2021-10-20"},{"lineNumber":210,"author":{"gitId":"itsraveen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":211,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":212,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":213,"author":{"gitId":"itsraveen"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":214,"author":{"gitId":"itsraveen"},"content":"        public void addGithubGroup(LinkYear year, RepoName repoName, Group group) {","lastModifiedDate":"2021-10-20"},{"lineNumber":215,"author":{"gitId":"itsraveen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":216,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":217,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":218,"author":{"gitId":"itsraveen"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":219,"author":{"gitId":"itsraveen"},"content":"        public ObservableList\u003cGroup\u003e getFilteredGroupList() {","lastModifiedDate":"2021-10-20"},{"lineNumber":220,"author":{"gitId":"itsraveen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":221,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":222,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":223,"author":{"gitId":"itsraveen"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":224,"author":{"gitId":"itsraveen"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2021-10-20"},{"lineNumber":225,"author":{"gitId":"itsraveen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":226,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":227,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":228,"author":{"gitId":"itsraveen"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":229,"author":{"gitId":"itsraveen"},"content":"        public void deleteTask(Task target) {","lastModifiedDate":"2021-10-20"},{"lineNumber":230,"author":{"gitId":"itsraveen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":231,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":232,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":233,"author":{"gitId":"itsraveen"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":234,"author":{"gitId":"itsraveen"},"content":"        public void completeTask(Task target) {","lastModifiedDate":"2021-10-20"},{"lineNumber":235,"author":{"gitId":"itsraveen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":236,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":237,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":238,"author":{"gitId":"itsraveen"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":239,"author":{"gitId":"itsraveen"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2021-10-20"},{"lineNumber":240,"author":{"gitId":"itsraveen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":241,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":242,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":243,"author":{"gitId":"itsraveen"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":244,"author":{"gitId":"itsraveen"},"content":"        public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2021-10-20"},{"lineNumber":245,"author":{"gitId":"itsraveen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":246,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":247,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":248,"author":{"gitId":"itsraveen"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":249,"author":{"gitId":"itsraveen"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2021-10-20"},{"lineNumber":250,"author":{"gitId":"itsraveen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":251,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":252,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":253,"author":{"gitId":"itsraveen"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":254,"author":{"gitId":"itsraveen"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-10-20"},{"lineNumber":255,"author":{"gitId":"itsraveen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":256,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":257,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":258,"author":{"gitId":"itsraveen"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":259,"author":{"gitId":"itsraveen"},"content":"        public DisplayType getDisplayType() {","lastModifiedDate":"2021-10-20"},{"lineNumber":260,"author":{"gitId":"itsraveen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":261,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":262,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":263,"author":{"gitId":"itsraveen"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":264,"author":{"gitId":"itsraveen"},"content":"        public void updateFilteredGroupList(Predicate\u003cGroup\u003e predicate) {","lastModifiedDate":"2021-10-20"},{"lineNumber":265,"author":{"gitId":"itsraveen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":266,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":267,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":268,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":269,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":270,"author":{"gitId":"itsraveen"},"content":"     * A Model stub that contains a single task.","lastModifiedDate":"2021-10-20"},{"lineNumber":271,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":272,"author":{"gitId":"itsraveen"},"content":"    private class ModelStubWithTask extends AddDeadlineAndEventTaskCommandTest.ModelStub {","lastModifiedDate":"2021-10-24"},{"lineNumber":273,"author":{"gitId":"itsraveen"},"content":"        private final Task task;","lastModifiedDate":"2021-10-20"},{"lineNumber":274,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":275,"author":{"gitId":"itsraveen"},"content":"        ModelStubWithTask(Task task) {","lastModifiedDate":"2021-10-20"},{"lineNumber":276,"author":{"gitId":"itsraveen"},"content":"            requireNonNull(task);","lastModifiedDate":"2021-10-20"},{"lineNumber":277,"author":{"gitId":"itsraveen"},"content":"            this.task \u003d task;","lastModifiedDate":"2021-10-20"},{"lineNumber":278,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":279,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":280,"author":{"gitId":"itsraveen"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":281,"author":{"gitId":"itsraveen"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2021-10-20"},{"lineNumber":282,"author":{"gitId":"itsraveen"},"content":"            requireNonNull(task);","lastModifiedDate":"2021-10-20"},{"lineNumber":283,"author":{"gitId":"itsraveen"},"content":"            return this.task.isSameTask(task);","lastModifiedDate":"2021-10-20"},{"lineNumber":284,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":285,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":286,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":287,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":288,"author":{"gitId":"itsraveen"},"content":"     * A Model stub that always accept the task being added.","lastModifiedDate":"2021-10-20"},{"lineNumber":289,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":290,"author":{"gitId":"itsraveen"},"content":"    private class ModelStubAcceptingTaskAdded extends AddDeadlineAndEventTaskCommandTest.ModelStub {","lastModifiedDate":"2021-10-24"},{"lineNumber":291,"author":{"gitId":"itsraveen"},"content":"        final ArrayList\u003cTask\u003e tasksAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":292,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":293,"author":{"gitId":"itsraveen"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":294,"author":{"gitId":"itsraveen"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2021-10-20"},{"lineNumber":295,"author":{"gitId":"itsraveen"},"content":"            requireNonNull(task);","lastModifiedDate":"2021-10-20"},{"lineNumber":296,"author":{"gitId":"itsraveen"},"content":"            return tasksAdded.stream().anyMatch(task::isSameTask);","lastModifiedDate":"2021-10-20"},{"lineNumber":297,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":298,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":299,"author":{"gitId":"itsraveen"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":300,"author":{"gitId":"itsraveen"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2021-10-20"},{"lineNumber":301,"author":{"gitId":"itsraveen"},"content":"            requireNonNull(task);","lastModifiedDate":"2021-10-20"},{"lineNumber":302,"author":{"gitId":"itsraveen"},"content":"            tasksAdded.add(task);","lastModifiedDate":"2021-10-20"},{"lineNumber":303,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":304,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":305,"author":{"gitId":"itsraveen"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":306,"author":{"gitId":"itsraveen"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-20"},{"lineNumber":307,"author":{"gitId":"itsraveen"},"content":"            return new AddressBook();","lastModifiedDate":"2021-10-20"},{"lineNumber":308,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":309,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":310,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":311,"author":{"gitId":"itsraveen"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"itsraveen":295,"wanninglim":11,"tzejit":5}},{"path":"src/test/java/seedu/address/logic/commands/AddGithubGroupCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showGroupAtIndex;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalGroups.REPONAME1;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalGroups.REPONAME2;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalGroups.YEAR1;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalGroups.YEAR2;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalGroups.getTypicalAddressBookWithGroups;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_GROUP;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_GROUP;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":" * {@code DeleteStudentCommand}.","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"public class AddGithubGroupCommandTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookWithGroups(), new UserPrefs());","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"    // Pass","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"        AddGithubGroupCommand addGithubGroupCommand \u003d new AddGithubGroupCommand(outOfBoundIndex, YEAR1, REPONAME1);","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"        assertCommandFailure(addGithubGroupCommand, model, Messages.MESSAGE_INVALID_GROUP_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"    // Pass","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"        showGroupAtIndex(model, INDEX_FIRST_GROUP);","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_GROUP;","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getGroupList().size());","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"        AddGithubGroupCommand addGithubGroupCommand \u003d new AddGithubGroupCommand(outOfBoundIndex, YEAR1, REPONAME1);","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"        assertCommandFailure(addGithubGroupCommand, model, Messages.MESSAGE_INVALID_GROUP_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"    // Pass","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"    public void equals() {","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"        AddGithubGroupCommand addGithubGroupCommand \u003d new AddGithubGroupCommand(INDEX_FIRST_GROUP, YEAR1, REPONAME1);","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"        AddGithubGroupCommand addSecondCommand \u003d new AddGithubGroupCommand(INDEX_SECOND_GROUP, YEAR2, REPONAME2);","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"        assertTrue(addGithubGroupCommand.equals(addGithubGroupCommand));","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"        AddGithubGroupCommand addFirstCommandCopy \u003d new AddGithubGroupCommand(INDEX_FIRST_GROUP, YEAR1, REPONAME1);","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"tzejit"},"content":"        assertTrue(addGithubGroupCommand.equals(addFirstCommandCopy));","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"        assertFalse(addGithubGroupCommand.equals(1));","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"        assertFalse(addGithubGroupCommand.equals(null));","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"        // different group -\u003e returns false","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"        assertFalse(addGithubGroupCommand.equals(addSecondCommand));","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"tzejit"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"tzejit"},"content":"    private void showNoGroup(Model model) {","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"        model.updateFilteredGroupList(p -\u003e false);","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"tzejit"},"content":"        assertTrue(model.getFilteredGroupList().isEmpty());","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"tzejit":85}},{"path":"src/test/java/seedu/address/logic/commands/AddGroupCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.commons.RepoName;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.LinkYear;","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"import seedu.address.testutil.GroupBuilder;","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"public class AddGroupCommandTest {","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"    public void constructor_nullGroup_throwsNullPointerException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddGroupCommand(null));","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"    public void execute_groupAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"        ModelStubAcceptingGroupAdded modelStub \u003d new ModelStubAcceptingGroupAdded();","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"        Group validGroup \u003d new GroupBuilder().build();","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"        CommandResult commandResult \u003d new AddGroupCommand(validGroup).execute(modelStub);","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"        assertEquals(String.format(AddGroupCommand.MESSAGE_SUCCESS, validGroup), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"        assertEquals(Arrays.asList(validGroup), modelStub.groupsAdded);","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"    public void execute_duplicateGroup_throwsCommandException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"        Group validGroup \u003d new GroupBuilder().build();","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"        AddGroupCommand addGroupCommand \u003d new AddGroupCommand(validGroup);","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"        AddGroupCommandTest.ModelStub modelStub \u003d new ModelStubWithGroup(validGroup);","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"                AddGroupCommand.MESSAGE_DUPLICATE_GROUP, () -\u003e addGroupCommand.execute(modelStub));","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"    public void equals() {","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"        Group g1 \u003d new GroupBuilder().withName(\"w14-4\").build();","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"        Group g2 \u003d new GroupBuilder().withName(\"w11-1\").build();","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"        AddGroupCommand addG1Command \u003d new AddGroupCommand(g1);","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"        AddGroupCommand addG2Command \u003d new AddGroupCommand(g2);","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"tzejit"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"        assertTrue(addG1Command.equals(addG1Command));","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"        AddGroupCommand addG1CommandCopy \u003d new AddGroupCommand(g1);","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"        assertTrue(addG1Command.equals(addG1CommandCopy));","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"        assertFalse(addG1Command.equals(1));","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"        assertFalse(addG1Command.equals(null));","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"tzejit"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"tzejit"},"content":"        assertFalse(addG1Command.equals(addG2Command));","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"tzejit"},"content":"     * A default model stub that has all methods failing.","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"tzejit"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"tzejit"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"tzejit"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"tzejit"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"tzejit"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"tzejit"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"tzejit"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"tzejit"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"tzejit"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"itsraveen"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":127,"author":{"gitId":"itsraveen"},"content":"        public void clearTasks() {","lastModifiedDate":"2021-10-20"},{"lineNumber":128,"author":{"gitId":"itsraveen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":129,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":130,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":131,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"tzejit"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-19"},{"lineNumber":133,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":134,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"tzejit"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"wanninglim"},"content":"        public void removeStudent(Student target) {","lastModifiedDate":"2021-10-25"},{"lineNumber":143,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"tzejit"},"content":"        public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":149,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":150,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":151,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":152,"author":{"gitId":"tzejit"},"content":"        public String getStudentAttendance(Student target, int week) {","lastModifiedDate":"2021-10-19"},{"lineNumber":153,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":154,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":155,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":156,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":157,"author":{"gitId":"tzejit"},"content":"        public void markStudentAttendance(Student target, int week) {","lastModifiedDate":"2021-10-19"},{"lineNumber":158,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":159,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":160,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":161,"author":{"gitId":"wanninglim"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":162,"author":{"gitId":"wanninglim"},"content":"        public String getStudentParticipation(Student target, int week) {","lastModifiedDate":"2021-10-19"},{"lineNumber":163,"author":{"gitId":"wanninglim"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":164,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":165,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":166,"author":{"gitId":"wanninglim"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":167,"author":{"gitId":"wanninglim"},"content":"        public void markStudentParticipation(Student target, int week) {","lastModifiedDate":"2021-10-19"},{"lineNumber":168,"author":{"gitId":"wanninglim"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":169,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":170,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":171,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":172,"author":{"gitId":"tzejit"},"content":"        public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2021-10-19"},{"lineNumber":173,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":174,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":175,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":176,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":177,"author":{"gitId":"tzejit"},"content":"        public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2021-10-19"},{"lineNumber":178,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":179,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":180,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":181,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":182,"author":{"gitId":"tzejit"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2021-10-19"},{"lineNumber":183,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":184,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":185,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":186,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":187,"author":{"gitId":"tzejit"},"content":"        public void deleteTask(Task target) {","lastModifiedDate":"2021-10-19"},{"lineNumber":188,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":189,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":190,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":191,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":192,"author":{"gitId":"tzejit"},"content":"        public void completeTask(Task target) {","lastModifiedDate":"2021-10-19"},{"lineNumber":193,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":194,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":195,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":196,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":197,"author":{"gitId":"tzejit"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2021-10-19"},{"lineNumber":198,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":199,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":200,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":201,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":202,"author":{"gitId":"tzejit"},"content":"        public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2021-10-19"},{"lineNumber":203,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":204,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":205,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":206,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":207,"author":{"gitId":"tzejit"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2021-10-19"},{"lineNumber":208,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":209,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":210,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":211,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":212,"author":{"gitId":"tzejit"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-10-19"},{"lineNumber":213,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":214,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":215,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":216,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":217,"author":{"gitId":"tzejit"},"content":"        public DisplayType getDisplayType() {","lastModifiedDate":"2021-10-19"},{"lineNumber":218,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":219,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":220,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":221,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":222,"author":{"gitId":"tzejit"},"content":"        public boolean hasGroup(Group group) {","lastModifiedDate":"2021-10-19"},{"lineNumber":223,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":224,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":225,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":226,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":227,"author":{"gitId":"tzejit"},"content":"        public void deleteGroup(Group target) {","lastModifiedDate":"2021-10-19"},{"lineNumber":228,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":229,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":230,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":231,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":232,"author":{"gitId":"tzejit"},"content":"        public void deleteStudentGroup(Student student, Group group) {","lastModifiedDate":"2021-10-23"},{"lineNumber":233,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":234,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":235,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":236,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":237,"author":{"gitId":"tzejit"},"content":"        public void addGroup(Group group) {","lastModifiedDate":"2021-10-19"},{"lineNumber":238,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":239,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":240,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":241,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":242,"author":{"gitId":"tzejit"},"content":"        public void setGroup(Group target, Group editedGroup) {","lastModifiedDate":"2021-10-19"},{"lineNumber":243,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":244,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":245,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":246,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":247,"author":{"gitId":"tzejit"},"content":"        public void addGithubGroup(LinkYear year, RepoName repoName, Group group) {","lastModifiedDate":"2021-10-19"},{"lineNumber":248,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":249,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":250,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":251,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":252,"author":{"gitId":"tzejit"},"content":"        public ObservableList\u003cGroup\u003e getFilteredGroupList() {","lastModifiedDate":"2021-10-19"},{"lineNumber":253,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":254,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":255,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":256,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":257,"author":{"gitId":"tzejit"},"content":"        public void updateFilteredGroupList(Predicate\u003cGroup\u003e predicate) {","lastModifiedDate":"2021-10-19"},{"lineNumber":258,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":259,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":260,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":261,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":262,"author":{"gitId":"tzejit"},"content":"        public void addStudentGroup(Student target, Group group) {","lastModifiedDate":"2021-10-19"},{"lineNumber":263,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":264,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":265,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":266,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":267,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":268,"author":{"gitId":"tzejit"},"content":"     * A Model stub that contains a single task.","lastModifiedDate":"2021-10-19"},{"lineNumber":269,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":270,"author":{"gitId":"tzejit"},"content":"    private class ModelStubWithGroup extends AddGroupCommandTest.ModelStub {","lastModifiedDate":"2021-10-19"},{"lineNumber":271,"author":{"gitId":"tzejit"},"content":"        private final Group group;","lastModifiedDate":"2021-10-19"},{"lineNumber":272,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":273,"author":{"gitId":"tzejit"},"content":"        ModelStubWithGroup(Group group) {","lastModifiedDate":"2021-10-19"},{"lineNumber":274,"author":{"gitId":"tzejit"},"content":"            requireNonNull(group);","lastModifiedDate":"2021-10-19"},{"lineNumber":275,"author":{"gitId":"tzejit"},"content":"            this.group \u003d group;","lastModifiedDate":"2021-10-19"},{"lineNumber":276,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":277,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":278,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":279,"author":{"gitId":"tzejit"},"content":"        public boolean hasGroup(Group group) {","lastModifiedDate":"2021-10-19"},{"lineNumber":280,"author":{"gitId":"tzejit"},"content":"            requireNonNull(group);","lastModifiedDate":"2021-10-19"},{"lineNumber":281,"author":{"gitId":"tzejit"},"content":"            return this.group.isSameGroup(group);","lastModifiedDate":"2021-10-19"},{"lineNumber":282,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":283,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":284,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":285,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":286,"author":{"gitId":"tzejit"},"content":"     * A Model stub that always accept the group being added.","lastModifiedDate":"2021-10-19"},{"lineNumber":287,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":288,"author":{"gitId":"tzejit"},"content":"    private class ModelStubAcceptingGroupAdded extends AddGroupCommandTest.ModelStub {","lastModifiedDate":"2021-10-19"},{"lineNumber":289,"author":{"gitId":"tzejit"},"content":"        final ArrayList\u003cGroup\u003e groupsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":290,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":291,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":292,"author":{"gitId":"tzejit"},"content":"        public boolean hasGroup(Group group) {","lastModifiedDate":"2021-10-19"},{"lineNumber":293,"author":{"gitId":"tzejit"},"content":"            requireNonNull(group);","lastModifiedDate":"2021-10-19"},{"lineNumber":294,"author":{"gitId":"tzejit"},"content":"            return groupsAdded.stream().anyMatch(group::isSameGroup);","lastModifiedDate":"2021-10-19"},{"lineNumber":295,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":296,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":297,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":298,"author":{"gitId":"tzejit"},"content":"        public void addGroup(Group group) {","lastModifiedDate":"2021-10-19"},{"lineNumber":299,"author":{"gitId":"tzejit"},"content":"            requireNonNull(group);","lastModifiedDate":"2021-10-19"},{"lineNumber":300,"author":{"gitId":"tzejit"},"content":"            groupsAdded.add(group);","lastModifiedDate":"2021-10-19"},{"lineNumber":301,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":302,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":303,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":304,"author":{"gitId":"tzejit"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-19"},{"lineNumber":305,"author":{"gitId":"tzejit"},"content":"            return new AddressBook();","lastModifiedDate":"2021-10-19"},{"lineNumber":306,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":307,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":308,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":309,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"itsraveen":5,"wanninglim":11,"tzejit":293}},{"path":"src/test/java/seedu/address/logic/commands/AddStudentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.commons.RepoName;","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.LinkYear;","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"public class AddStudentCommandTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"    public void constructor_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddStudentCommand(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"    public void execute_studentAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"        ModelStubAcceptingStudentAdded modelStub \u003d new ModelStubAcceptingStudentAdded();","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"        CommandResult commandResult \u003d new AddStudentCommand(validStudent).execute(modelStub);","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"        assertEquals(String.format(AddStudentCommand.MESSAGE_SUCCESS, validStudent), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"        assertEquals(Arrays.asList(validStudent), modelStub.studentsAdded);","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"    public void execute_duplicateStudent_throwsCommandException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"        AddStudentCommand addStudentCommand \u003d new AddStudentCommand(validStudent);","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"        ModelStub modelStub \u003d new ModelStubWithStudent(validStudent);","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"                AddStudentCommand.MESSAGE_DUPLICATE_STUDENT, () -\u003e addStudentCommand.execute(modelStub));","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"        Student alice \u003d new StudentBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"        Student bob \u003d new StudentBuilder().withName(\"Bob\").build();","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"        AddStudentCommand addAliceCommand \u003d new AddStudentCommand(alice);","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"        AddStudentCommand addBobCommand \u003d new AddStudentCommand(bob);","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"        AddStudentCommand addAliceCommandCopy \u003d new AddStudentCommand(alice);","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"tzejit"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"weenleen"},"content":"     * A default model stub that has all methods failing.","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"tzejit"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"itsraveen"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":127,"author":{"gitId":"itsraveen"},"content":"        public void clearTasks() {","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"itsraveen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"tzejit"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"wanninglim"},"content":"        public void removeStudent(Student target) {","lastModifiedDate":"2021-10-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"tzejit"},"content":"        public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2021-10-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"wanninglim"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":152,"author":{"gitId":"wanninglim"},"content":"        public String getStudentAttendance(Student target, int week) {","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"wanninglim"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":156,"author":{"gitId":"wanninglim"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":157,"author":{"gitId":"wanninglim"},"content":"        public void markStudentAttendance(Student target, int week) {","lastModifiedDate":"2021-10-08"},{"lineNumber":158,"author":{"gitId":"wanninglim"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":159,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":160,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"wanninglim"},"content":"        public String getStudentParticipation(Student target, int week) {","lastModifiedDate":"2021-10-18"},{"lineNumber":163,"author":{"gitId":"wanninglim"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":164,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":165,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":166,"author":{"gitId":"wanninglim"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":167,"author":{"gitId":"wanninglim"},"content":"        public void markStudentParticipation(Student target, int week) {","lastModifiedDate":"2021-10-18"},{"lineNumber":168,"author":{"gitId":"wanninglim"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":169,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":170,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":171,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"tzejit"},"content":"        public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"tzejit"},"content":"        public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2021-10-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":181,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":182,"author":{"gitId":"weenleen"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2021-10-07"},{"lineNumber":183,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":184,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":185,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":186,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":187,"author":{"gitId":"weenleen"},"content":"        public void deleteTask(Task target) {","lastModifiedDate":"2021-10-07"},{"lineNumber":188,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":189,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":190,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":191,"author":{"gitId":"itsraveen"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":192,"author":{"gitId":"itsraveen"},"content":"        public void completeTask(Task target) {","lastModifiedDate":"2021-10-07"},{"lineNumber":193,"author":{"gitId":"itsraveen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":194,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":195,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":196,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":197,"author":{"gitId":"weenleen"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2021-10-07"},{"lineNumber":198,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":199,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":200,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":201,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":202,"author":{"gitId":"weenleen"},"content":"        public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2021-10-07"},{"lineNumber":203,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":204,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":205,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":206,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":207,"author":{"gitId":"weenleen"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":208,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":209,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":210,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":211,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":212,"author":{"gitId":"weenleen"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-10-07"},{"lineNumber":213,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":214,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":215,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":216,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":217,"author":{"gitId":"wanninglim"},"content":"        public DisplayType getDisplayType() {","lastModifiedDate":"2021-10-12"},{"lineNumber":218,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-11"},{"lineNumber":219,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":220,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":221,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":222,"author":{"gitId":"tzejit"},"content":"        public boolean hasGroup(Group group) {","lastModifiedDate":"2021-10-18"},{"lineNumber":223,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":224,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":225,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":226,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":227,"author":{"gitId":"tzejit"},"content":"        public void deleteGroup(Group target) {","lastModifiedDate":"2021-10-18"},{"lineNumber":228,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":229,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":230,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":231,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":232,"author":{"gitId":"tzejit"},"content":"        public void deleteStudentGroup(Student student, Group group) {","lastModifiedDate":"2021-10-23"},{"lineNumber":233,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":234,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":235,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":236,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":237,"author":{"gitId":"tzejit"},"content":"        public void addGroup(Group group) {","lastModifiedDate":"2021-10-18"},{"lineNumber":238,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":239,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":240,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":241,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":242,"author":{"gitId":"tzejit"},"content":"        public void setGroup(Group target, Group editedGroup) {","lastModifiedDate":"2021-10-18"},{"lineNumber":243,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":244,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":245,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":246,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":247,"author":{"gitId":"tzejit"},"content":"        public void addGithubGroup(LinkYear year, RepoName repoName, Group group) {","lastModifiedDate":"2021-10-18"},{"lineNumber":248,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":249,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":250,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":251,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":252,"author":{"gitId":"tzejit"},"content":"        public ObservableList\u003cGroup\u003e getFilteredGroupList() {","lastModifiedDate":"2021-10-18"},{"lineNumber":253,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":254,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":255,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":256,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":257,"author":{"gitId":"tzejit"},"content":"        public void updateFilteredGroupList(Predicate\u003cGroup\u003e predicate) {","lastModifiedDate":"2021-10-18"},{"lineNumber":258,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":259,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":260,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":261,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":262,"author":{"gitId":"tzejit"},"content":"        public void addStudentGroup(Student target, Group group) {","lastModifiedDate":"2021-10-18"},{"lineNumber":263,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":264,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":268,"author":{"gitId":"tzejit"},"content":"     * A Model stub that contains a single student.","lastModifiedDate":"2021-10-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":270,"author":{"gitId":"tzejit"},"content":"    private class ModelStubWithStudent extends ModelStub {","lastModifiedDate":"2021-10-08"},{"lineNumber":271,"author":{"gitId":"tzejit"},"content":"        private final Student student;","lastModifiedDate":"2021-10-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":273,"author":{"gitId":"tzejit"},"content":"        ModelStubWithStudent(Student student) {","lastModifiedDate":"2021-10-08"},{"lineNumber":274,"author":{"gitId":"tzejit"},"content":"            requireNonNull(student);","lastModifiedDate":"2021-10-08"},{"lineNumber":275,"author":{"gitId":"tzejit"},"content":"            this.student \u003d student;","lastModifiedDate":"2021-10-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":279,"author":{"gitId":"tzejit"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2021-10-08"},{"lineNumber":280,"author":{"gitId":"tzejit"},"content":"            requireNonNull(student);","lastModifiedDate":"2021-10-08"},{"lineNumber":281,"author":{"gitId":"tzejit"},"content":"            return this.student.isSameStudent(student);","lastModifiedDate":"2021-10-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":286,"author":{"gitId":"tzejit"},"content":"     * A Model stub that always accept the student being added.","lastModifiedDate":"2021-10-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":288,"author":{"gitId":"tzejit"},"content":"    private class ModelStubAcceptingStudentAdded extends ModelStub {","lastModifiedDate":"2021-10-08"},{"lineNumber":289,"author":{"gitId":"tzejit"},"content":"        final ArrayList\u003cStudent\u003e studentsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":292,"author":{"gitId":"tzejit"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2021-10-08"},{"lineNumber":293,"author":{"gitId":"tzejit"},"content":"            requireNonNull(student);","lastModifiedDate":"2021-10-08"},{"lineNumber":294,"author":{"gitId":"tzejit"},"content":"            return studentsAdded.stream().anyMatch(student::isSameStudent);","lastModifiedDate":"2021-10-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":298,"author":{"gitId":"tzejit"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2021-10-08"},{"lineNumber":299,"author":{"gitId":"tzejit"},"content":"            requireNonNull(student);","lastModifiedDate":"2021-10-08"},{"lineNumber":300,"author":{"gitId":"tzejit"},"content":"            studentsAdded.add(student);","lastModifiedDate":"2021-10-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":305,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"weenleen":34,"itsraveen":8,"wanninglim":21,"-":148,"tzejit":98}},{"path":"src/test/java/seedu/address/logic/commands/AddStudentGroupCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showGroupAtIndex;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalGroups.GROUPNAME1;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalGroups.GROUPNAME2;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalGroups.VALID_UNINSTATITATED_GROUP;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalGroups.getTypicalAddressBookWithGroups;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_GROUP;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_GROUP;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":" * {@code DeleteStudentCommand}.","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"public class AddStudentGroupCommandTest {","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookWithGroups(), new UserPrefs());","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"    // Pass","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"    /*@Test","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"    public void execute_validIndexAndGroupUnfilteredList_success() {","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"        Student studentToAdd \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"        Group groupToBeAdded \u003d model.getFilteredGroupList().get(INDEX_FIRST_GROUP.getZeroBased());","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"        AddStudentGroupCommand addStudentGroupCommand \u003d new AddStudentGroupCommand(INDEX_FIRST_STUDENT,","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"                groupToBeAdded.getName());","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"        String expectedMessage \u003d String.format(AddStudentGroupCommand.MESSAGE_ADD_STUDENT_SUCCESS,","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"                studentToAdd, groupToBeAdded);","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"        ModelManager expectedModel \u003d new ModelManager(getTypicalAddressBookWithGroups(), new UserPrefs());","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"        expectedModel.addStudentGroup(studentToAdd, groupToBeAdded);","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"        assertCommandSuccess(addStudentGroupCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"    }*/","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"    // Pass","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"        Group groupToBeAdded \u003d model.getFilteredGroupList().get(INDEX_FIRST_GROUP.getZeroBased());","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"        AddStudentGroupCommand addStudentGroupCommand \u003d new AddStudentGroupCommand(outOfBoundIndex,","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"                groupToBeAdded.getName());","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"        assertCommandFailure(addStudentGroupCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"    // Pass","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"    public void execute_invalidGroupUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"        AddStudentGroupCommand addStudentGroupCommand \u003d new AddStudentGroupCommand(INDEX_FIRST_STUDENT,","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"tzejit"},"content":"                VALID_UNINSTATITATED_GROUP);","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"        assertCommandFailure(addStudentGroupCommand, model, Messages.MESSAGE_INVALID_GROUP_DISPLAYED_NAME);","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"    public void execute_invalidIndexAndGroupUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"        AddStudentGroupCommand addStudentGroupCommand \u003d new AddStudentGroupCommand(outOfBoundIndex,","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"                VALID_UNINSTATITATED_GROUP);","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"        assertCommandFailure(addStudentGroupCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"tzejit"},"content":"    // Pass","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"tzejit"},"content":"    /*@Test","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"tzejit"},"content":"        showGroupAtIndex(model, INDEX_FIRST_GROUP);","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"tzejit"},"content":"        Student studentToAdd \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"tzejit"},"content":"        Group groupToBeAdded \u003d model.getFilteredGroupList().get(INDEX_FIRST_GROUP.getZeroBased());","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"tzejit"},"content":"        AddStudentGroupCommand addStudentGroupCommand \u003d new AddStudentGroupCommand(INDEX_FIRST_GROUP,","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"tzejit"},"content":"                groupToBeAdded.getName());","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"tzejit"},"content":"        String expectedMessage \u003d String.format(AddStudentGroupCommand.MESSAGE_ADD_STUDENT_SUCCESS, studentToAdd,","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"tzejit"},"content":"                groupToBeAdded);","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"tzejit"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"tzejit"},"content":"        expectedModel.addStudentGroup(studentToAdd, groupToBeAdded);","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"tzejit"},"content":"        showNoGroup(expectedModel);","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"tzejit"},"content":"        assertCommandSuccess(addStudentGroupCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"tzejit"},"content":"    }*/","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"tzejit"},"content":"    // Pass","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"tzejit"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"tzejit"},"content":"        showGroupAtIndex(model, INDEX_FIRST_GROUP);","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"tzejit"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_GROUP;","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"tzejit"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"tzejit"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getGroupList().size());","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"tzejit"},"content":"        AddStudentGroupCommand addStudentGroupCommand \u003d new AddStudentGroupCommand(outOfBoundIndex,","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"tzejit"},"content":"                GROUPNAME1);","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"tzejit"},"content":"        assertCommandFailure(addStudentGroupCommand, model, Messages.MESSAGE_INVALID_GROUP_MEMBER_INDEX);","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"tzejit"},"content":"    // Pass","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"tzejit"},"content":"    public void equals() {","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"tzejit"},"content":"        AddStudentGroupCommand addStudentGroupCommand \u003d new AddStudentGroupCommand(INDEX_FIRST_STUDENT,","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"tzejit"},"content":"                GROUPNAME1);","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"tzejit"},"content":"        AddStudentGroupCommand addSecondCommand \u003d new AddStudentGroupCommand(INDEX_SECOND_STUDENT,","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"tzejit"},"content":"                GROUPNAME2);","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"tzejit"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"tzejit"},"content":"        assertTrue(addStudentGroupCommand.equals(addStudentGroupCommand));","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"tzejit"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"tzejit"},"content":"        AddStudentGroupCommand addFirstCommandCopy \u003d new AddStudentGroupCommand(INDEX_FIRST_STUDENT,","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"tzejit"},"content":"              GROUPNAME1);","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"tzejit"},"content":"        assertTrue(addStudentGroupCommand.equals(addFirstCommandCopy));","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"tzejit"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"tzejit"},"content":"        assertFalse(addStudentGroupCommand.equals(1));","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":133,"author":{"gitId":"tzejit"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-19"},{"lineNumber":134,"author":{"gitId":"tzejit"},"content":"        assertFalse(addStudentGroupCommand.equals(null));","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"tzejit"},"content":"        // different group -\u003e returns false","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"tzejit"},"content":"        assertFalse(addStudentGroupCommand.equals(addSecondCommand));","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"tzejit"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"tzejit"},"content":"    private void showNoGroup(Model model) {","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"tzejit"},"content":"        model.updateFilteredGroupList(p -\u003e false);","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"tzejit"},"content":"        assertTrue(model.getFilteredGroupList().isEmpty());","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"tzejit":148}},{"path":"src/test/java/seedu/address/logic/commands/AddTodoTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weenleen"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"weenleen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"itsraveen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"itsraveen"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"itsraveen"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"weenleen"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"weenleen"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"weenleen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"itsraveen"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"weenleen"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"weenleen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"weenleen"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"weenleen"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.commons.RepoName;","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.LinkYear;","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"itsraveen"},"content":"import seedu.address.testutil.TodoTaskBuilder;","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"itsraveen"},"content":"public class AddTodoTaskCommandTest {","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"weenleen"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"weenleen"},"content":"    public void constructor_nullTask_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"itsraveen"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTodoTaskCommand(null));","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"weenleen"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"weenleen"},"content":"    public void execute_taskAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"itsraveen"},"content":"        AddTodoTaskCommandTest.ModelStubAcceptingTaskAdded modelStub \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"itsraveen"},"content":"                new AddTodoTaskCommandTest.ModelStubAcceptingTaskAdded();","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"itsraveen"},"content":"        Task validTask \u003d new TodoTaskBuilder().build();","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"itsraveen"},"content":"        CommandResult commandResult \u003d new AddTodoTaskCommand(validTask).execute(modelStub);","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"itsraveen"},"content":"        assertEquals(String.format(AddTodoTaskCommand.MESSAGE_SUCCESS, validTask), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"weenleen"},"content":"        assertEquals(Arrays.asList(validTask), modelStub.tasksAdded);","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"weenleen"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"weenleen"},"content":"    public void execute_duplicateTask_throwsCommandException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"itsraveen"},"content":"        Task validTask \u003d new TodoTaskBuilder().build();","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"itsraveen"},"content":"        AddTodoTaskCommand addTodoTaskCommand \u003d new AddTodoTaskCommand(validTask);","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"itsraveen"},"content":"        AddTodoTaskCommandTest.ModelStub modelStub \u003d new AddTodoTaskCommandTest.ModelStubWithTask(validTask);","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"weenleen"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"itsraveen"},"content":"                AddTodoTaskCommand.MESSAGE_DUPLICATE_TASK, () -\u003e addTodoTaskCommand.execute(modelStub));","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"weenleen"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"weenleen"},"content":"    public void equals() {","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"itsraveen"},"content":"        Task todoIp \u003d new TodoTaskBuilder().withName(\"Complete iP\").build();","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"itsraveen"},"content":"        Task todoTp \u003d new TodoTaskBuilder().withName(\"Complete tP\").build();","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"itsraveen"},"content":"        Task todoTpFinalFeature \u003d new TodoTaskBuilder().withName(\"Complete tP\")","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"itsraveen"},"content":"                .withDescription(\"Implement the final feature\").build();","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"itsraveen"},"content":"        AddTodoTaskCommand todoIpCommand \u003d new AddTodoTaskCommand(todoIp);","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"itsraveen"},"content":"        AddTodoTaskCommand todoTpCommand \u003d new AddTodoTaskCommand(todoTp);","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"itsraveen"},"content":"        AddTodoTaskCommand todoFinalFeature \u003d new AddTodoTaskCommand(todoTpFinalFeature);","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"weenleen"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"itsraveen"},"content":"        assertTrue(todoIpCommand.equals(todoIpCommand));","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"weenleen"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"itsraveen"},"content":"        AddTodoTaskCommand addAliceCommandCopy \u003d new AddTodoTaskCommand(todoIp);","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"itsraveen"},"content":"        assertTrue(todoIpCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"itsraveen"},"content":"        // tasks have different description -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"itsraveen"},"content":"        assertFalse(todoFinalFeature.equals(todoTpCommand));","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"weenleen"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"itsraveen"},"content":"        assertFalse(todoIpCommand.equals(1));","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"weenleen"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"itsraveen"},"content":"        assertFalse(todoIpCommand.equals(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"weenleen"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"itsraveen"},"content":"        assertFalse(todoIpCommand.equals(todoTpCommand));","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"weenleen"},"content":"     * A default model stub that has all methods failing.","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"weenleen"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"weenleen"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"weenleen"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"weenleen"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"weenleen"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"weenleen"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"weenleen"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"weenleen"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"weenleen"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"itsraveen"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"itsraveen"},"content":"        public void clearTasks() {","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"itsraveen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"weenleen"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"weenleen"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"wanninglim"},"content":"        public void removeStudent(Student target) {","lastModifiedDate":"2021-10-25"},{"lineNumber":152,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"weenleen"},"content":"        public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"weenleen"},"content":"        public String getStudentAttendance(Student target, int week) {","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"weenleen"},"content":"        public void markStudentAttendance(Student target, int week) {","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":169,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":170,"author":{"gitId":"itsraveen"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":171,"author":{"gitId":"itsraveen"},"content":"        public String getStudentParticipation(Student target, int week) {","lastModifiedDate":"2021-10-20"},{"lineNumber":172,"author":{"gitId":"itsraveen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":173,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":174,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":175,"author":{"gitId":"itsraveen"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":176,"author":{"gitId":"itsraveen"},"content":"        public void markStudentParticipation(Student target, int week) {","lastModifiedDate":"2021-10-20"},{"lineNumber":177,"author":{"gitId":"itsraveen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":178,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"weenleen"},"content":"        public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"weenleen"},"content":"        public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":188,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":190,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":191,"author":{"gitId":"weenleen"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":196,"author":{"gitId":"weenleen"},"content":"        public void deleteTask(Task target) {","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":199,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":200,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":201,"author":{"gitId":"weenleen"},"content":"        public void completeTask(Task target) {","lastModifiedDate":"2021-10-12"},{"lineNumber":202,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":203,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":205,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":206,"author":{"gitId":"weenleen"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2021-10-12"},{"lineNumber":207,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":208,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":209,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":210,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":211,"author":{"gitId":"weenleen"},"content":"        public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2021-10-12"},{"lineNumber":212,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":213,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":214,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":215,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":216,"author":{"gitId":"weenleen"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2021-10-12"},{"lineNumber":217,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":218,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":219,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":220,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":221,"author":{"gitId":"weenleen"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-10-12"},{"lineNumber":222,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":223,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":224,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":225,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":226,"author":{"gitId":"wanninglim"},"content":"        public DisplayType getDisplayType() {","lastModifiedDate":"2021-10-12"},{"lineNumber":227,"author":{"gitId":"weenleen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":228,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":229,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":230,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":231,"author":{"gitId":"tzejit"},"content":"        public boolean hasGroup(Group group) {","lastModifiedDate":"2021-10-18"},{"lineNumber":232,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":233,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":234,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":235,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":236,"author":{"gitId":"tzejit"},"content":"        public void deleteGroup(Group target) {","lastModifiedDate":"2021-10-18"},{"lineNumber":237,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":238,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":239,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":240,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":241,"author":{"gitId":"tzejit"},"content":"        public void deleteStudentGroup(Student student, Group group) {","lastModifiedDate":"2021-10-23"},{"lineNumber":242,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":243,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":244,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":245,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":246,"author":{"gitId":"tzejit"},"content":"        public void addGroup(Group group) {","lastModifiedDate":"2021-10-18"},{"lineNumber":247,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":248,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":249,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":250,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":251,"author":{"gitId":"tzejit"},"content":"        public void setGroup(Group target, Group editedGroup) {","lastModifiedDate":"2021-10-18"},{"lineNumber":252,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":253,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":254,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":255,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":256,"author":{"gitId":"tzejit"},"content":"        public void addGithubGroup(LinkYear year, RepoName repoName, Group group) {","lastModifiedDate":"2021-10-18"},{"lineNumber":257,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":258,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":259,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":260,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":261,"author":{"gitId":"tzejit"},"content":"        public ObservableList\u003cGroup\u003e getFilteredGroupList() {","lastModifiedDate":"2021-10-18"},{"lineNumber":262,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":263,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":264,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":265,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":266,"author":{"gitId":"tzejit"},"content":"        public void updateFilteredGroupList(Predicate\u003cGroup\u003e predicate) {","lastModifiedDate":"2021-10-18"},{"lineNumber":267,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":268,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":269,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":270,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":271,"author":{"gitId":"tzejit"},"content":"        public void addStudentGroup(Student target, Group group) {","lastModifiedDate":"2021-10-18"},{"lineNumber":272,"author":{"gitId":"tzejit"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":273,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":274,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":275,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":276,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":277,"author":{"gitId":"weenleen"},"content":"     * A Model stub that contains a single task.","lastModifiedDate":"2021-10-12"},{"lineNumber":278,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":279,"author":{"gitId":"itsraveen"},"content":"    private class ModelStubWithTask extends AddTodoTaskCommandTest.ModelStub {","lastModifiedDate":"2021-10-19"},{"lineNumber":280,"author":{"gitId":"weenleen"},"content":"        private final Task task;","lastModifiedDate":"2021-10-12"},{"lineNumber":281,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":282,"author":{"gitId":"weenleen"},"content":"        ModelStubWithTask(Task task) {","lastModifiedDate":"2021-10-12"},{"lineNumber":283,"author":{"gitId":"weenleen"},"content":"            requireNonNull(task);","lastModifiedDate":"2021-10-12"},{"lineNumber":284,"author":{"gitId":"weenleen"},"content":"            this.task \u003d task;","lastModifiedDate":"2021-10-12"},{"lineNumber":285,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":286,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":287,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":288,"author":{"gitId":"weenleen"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2021-10-12"},{"lineNumber":289,"author":{"gitId":"weenleen"},"content":"            requireNonNull(task);","lastModifiedDate":"2021-10-12"},{"lineNumber":290,"author":{"gitId":"weenleen"},"content":"            return this.task.isSameTask(task);","lastModifiedDate":"2021-10-12"},{"lineNumber":291,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":292,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":293,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":294,"author":{"gitId":"weenleen"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":295,"author":{"gitId":"weenleen"},"content":"     * A Model stub that always accept the task being added.","lastModifiedDate":"2021-10-12"},{"lineNumber":296,"author":{"gitId":"weenleen"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":297,"author":{"gitId":"itsraveen"},"content":"    private class ModelStubAcceptingTaskAdded extends AddTodoTaskCommandTest.ModelStub {","lastModifiedDate":"2021-10-19"},{"lineNumber":298,"author":{"gitId":"weenleen"},"content":"        final ArrayList\u003cTask\u003e tasksAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":299,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":300,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":301,"author":{"gitId":"weenleen"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2021-10-12"},{"lineNumber":302,"author":{"gitId":"weenleen"},"content":"            requireNonNull(task);","lastModifiedDate":"2021-10-12"},{"lineNumber":303,"author":{"gitId":"weenleen"},"content":"            return tasksAdded.stream().anyMatch(task::isSameTask);","lastModifiedDate":"2021-10-12"},{"lineNumber":304,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":305,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":306,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":307,"author":{"gitId":"weenleen"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2021-10-12"},{"lineNumber":308,"author":{"gitId":"weenleen"},"content":"            requireNonNull(task);","lastModifiedDate":"2021-10-12"},{"lineNumber":309,"author":{"gitId":"weenleen"},"content":"            tasksAdded.add(task);","lastModifiedDate":"2021-10-12"},{"lineNumber":310,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":311,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":312,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":313,"author":{"gitId":"weenleen"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-12"},{"lineNumber":314,"author":{"gitId":"weenleen"},"content":"            return new AddressBook();","lastModifiedDate":"2021-10-12"},{"lineNumber":315,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":316,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":317,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":318,"author":{"gitId":"weenleen"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"weenleen":219,"itsraveen":49,"wanninglim":2,"tzejit":48}},{"path":"src/test/java/seedu/address/logic/commands/ClearGroupsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wanninglim"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.testutil.TypicalGroups.getTypicalAddressBookWithGroups;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.testutil.TypicalStudentsWithoutGroups.getTypicalAddressBookWithoutGroups;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"wanninglim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"wanninglim"},"content":"public class ClearGroupsCommandTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"wanninglim"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"wanninglim"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"wanninglim"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"wanninglim"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"wanninglim"},"content":"        assertCommandSuccess(new ClearGroupsCommand(), model, ClearGroupsCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"wanninglim"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"wanninglim"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"wanninglim"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBookWithGroups(), new UserPrefs());","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"wanninglim"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBookWithoutGroups(), new UserPrefs());","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"wanninglim"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook();","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"wanninglim"},"content":"        expectedAddressBook.setStudents(expectedModel.getFilteredStudentList());","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"wanninglim"},"content":"        expectedModel.setAddressBook(expectedAddressBook);","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"wanninglim"},"content":"        assertCommandSuccess(new ClearGroupsCommand(), model, ClearGroupsCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"wanninglim"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"wanninglim":36}},{"path":"src/test/java/seedu/address/logic/commands/ClearStudentsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"wanninglim"},"content":"public class ClearStudentsCommandTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"wanninglim"},"content":"        assertCommandSuccess(new ClearStudentsCommand(), model, ClearStudentsCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"wanninglim"},"content":"        assertCommandSuccess(new ClearStudentsCommand(), model, ClearStudentsCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"wanninglim":3,"-":28,"tzejit":1}},{"path":"src/test/java/seedu/address/logic/commands/ClearTasksCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"itsraveen"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalAddressBookWithTasks;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"itsraveen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"itsraveen"},"content":"public class ClearTasksCommandTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"itsraveen"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"itsraveen"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"itsraveen"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"itsraveen"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"itsraveen"},"content":"        assertCommandSuccess(new ClearTasksCommand(), model, ClearTasksCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"itsraveen"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"itsraveen"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"itsraveen"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBookWithTasks(), new UserPrefs());","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"itsraveen"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBookWithTasks(), new UserPrefs());","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"itsraveen"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"itsraveen"},"content":"        assertCommandSuccess(new ClearTasksCommand(), model, ClearTasksCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"itsraveen"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"itsraveen":30}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REPO;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENTNUMBER;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_USERNAME;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEEK;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_YEAR;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.group.GroupContainsKeywordsPredicate;","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.NameContainsTestKeywordsPredicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"import seedu.address.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"    public static final String VALID_STUDENTNUMBER_AMY \u003d \"A1112223B\";","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"    public static final String VALID_STUDENTNUMBER_BOB \u003d \"C1102923T\";","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"    public static final String VALID_USERNAME_AMY \u003d \"ai_mee\";","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"    public static final String VALID_USERNAME_BOB \u003d \"bob-the-builder\";","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"    public static final String VALID_REPONAME_AMY \u003d \"aimee.repo\";","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"    public static final String VALID_REPONAME_BOB \u003d \"bob_repo\";","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"somekoreanboi"},"content":"    public static final String VALID_DESCRIPTION_FUN \u003d \"fun\";","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"somekoreanboi"},"content":"    public static final String VALID_DESCRIPTION_BORING \u003d \"boring\";","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"    public static final String VALID_GROUPNAME_G1 \u003d \"w14-4\";","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"    public static final String VALID_GROUPNAME_G2 \u003d \"f01-3\";","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"    public static final String VALID_YEAR_G1 \u003d \"AY20212022\";","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"    public static final String VALID_YEAR_G2 \u003d \"AY20222023\";","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"somekoreanboi"},"content":"    public static final String DESCRIPTION_DESC_FUN \u003d \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION_FUN;","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"somekoreanboi"},"content":"    public static final String DESCRIPTION_DESC_BORING \u003d \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION_BORING;","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"    public static final String STUDENTNUMBER_DESC_AMY \u003d \" \" + PREFIX_STUDENTNUMBER + VALID_STUDENTNUMBER_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"    public static final String STUDENTNUMBER_DESC_BOB \u003d \" \" + PREFIX_STUDENTNUMBER + VALID_STUDENTNUMBER_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"    public static final String USERNAME_DESC_AMY \u003d \" \" + PREFIX_USERNAME + VALID_USERNAME_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"    public static final String USERNAME_DESC_BOB \u003d \" \" + PREFIX_USERNAME + VALID_USERNAME_BOB;","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"    public static final String REPONAME_DESC_AMY \u003d \" \" + PREFIX_REPO + VALID_REPONAME_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"    public static final String REPONAME_DESC_BOB \u003d \" \" + PREFIX_REPO + VALID_REPONAME_BOB;","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"wanninglim"},"content":"    public static final String VALID_WEEK \u003d \" \" + PREFIX_WEEK + 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"    public static final String GROUPNAME_DESC_G1 \u003d \" \" + PREFIX_GROUP + VALID_GROUPNAME_G1;","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"    public static final String GROUPNAME_DESC_G2 \u003d \" \" + PREFIX_GROUP + VALID_GROUPNAME_G2;","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"tzejit"},"content":"    public static final String YEAR_DESC_G1 \u003d \" \" + PREFIX_YEAR + VALID_YEAR_G1;","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"tzejit"},"content":"    public static final String YEAR_DESC_G2 \u003d \" \" + PREFIX_YEAR + VALID_YEAR_G2;","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"itsraveen"},"content":"    public static final String INVALID_DESCRIPTION_DESC \u003d \" \" + PREFIX_DESCRIPTION + \"play\u0026\"; // \u0026\u0027 not allowed in desc","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"tzejit"},"content":"    public static final String INVALID_STUDENTNUMBER_DESC \u003d \" \" + PREFIX_STUDENTNUMBER + \"A1233222\";","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"tzejit"},"content":"    // missing final character","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"tzejit"},"content":"    public static final String INVALID_USERNAME_DESC \u003d \" \" + PREFIX_USERNAME + \"a@my\"; // \u0027@\u0027 not allowed in username","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"tzejit"},"content":"    public static final String INVALID_REPONAME_DESC \u003d \" \" + PREFIX_REPO + \"boB!\"; // \u0027!\u0027 not allowed in reponame","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"tzejit"},"content":"    public static final String INVALID_GROUPNAME_DESC \u003d \" \" + PREFIX_GROUP + \"@A1-2\"; // \u0027@\u0027 not allowed in group name","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"tzejit"},"content":"    public static final String INVALID_YEAR_DESC \u003d \" \" + PREFIX_YEAR + \"2@212022\"; // \u0027@\u0027 not allowed in year","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"itsraveen"},"content":"    public static final String VALID_TASK_NAME_STUDY \u003d \"Study\";","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"itsraveen"},"content":"    public static final String VALID_TASK_NAME_PLAY \u003d \"Play\";","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"itsraveen"},"content":"    public static final String VALID_TASK_DESCRIPTION_STUDY \u003d \"Revise for CS2103\";","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"itsraveen"},"content":"    public static final String VALID_TASK_DESCRIPTION_PLAY \u003d \"Play soccer with Alex\";","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"itsraveen"},"content":"    public static final String VALID_TASK_TAG_STUDY \u003d \"study\";","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"itsraveen"},"content":"    public static final String VALID_TASK_TAG_WORK \u003d \"work\";","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"itsraveen"},"content":"    public static final String VALID_TASK_TAG_FUN \u003d \"fun\";","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"itsraveen"},"content":"    public static final String VALID_TASK_TAG_EXERCISE \u003d \"exercise\";","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"itsraveen"},"content":"    public static final String VALID_TASK_DATE \u003d \"2021-10-10\";","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"itsraveen"},"content":"    public static final String TASK_NAME_DESC_STUDY \u003d \" \" + PREFIX_NAME + VALID_TASK_NAME_STUDY;","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"itsraveen"},"content":"    public static final String TASK_NAME_DESC_PLAY \u003d \" \" + PREFIX_NAME + VALID_TASK_NAME_PLAY;","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"itsraveen"},"content":"    public static final String TASK_DESCRIPTION_DESC_STUDY \u003d \" \" + PREFIX_DESCRIPTION + VALID_TASK_DESCRIPTION_STUDY;","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"itsraveen"},"content":"    public static final String TASK_DESCRIPTION_DESC_PLAY \u003d \" \" + PREFIX_DESCRIPTION + VALID_TASK_DESCRIPTION_PLAY;","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"itsraveen"},"content":"    public static final String TASKNAME_DESC_STUDY \u003d \" \" + PREFIX_NAME + VALID_TASK_NAME_STUDY;","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"itsraveen"},"content":"    public static final String TASKNAME_DESC_PLAY \u003d \" \" + PREFIX_NAME + VALID_TASK_NAME_PLAY;","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"itsraveen"},"content":"    public static final String TASK_TAG_DESC_STUDY \u003d \" \" + PREFIX_TAG + VALID_TASK_TAG_STUDY;","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"itsraveen"},"content":"    public static final String TASK_TAG_DESC_WORK \u003d \" \" + PREFIX_TAG + VALID_TASK_TAG_WORK;","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"itsraveen"},"content":"    public static final String TASK_TAG_DESC_FUN \u003d \" \" + PREFIX_TAG + VALID_TASK_TAG_FUN;","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"itsraveen"},"content":"    public static final String TASK_TAG_DESC_EXERCISE \u003d \" \" + PREFIX_TAG + VALID_TASK_TAG_EXERCISE;","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"itsraveen"},"content":"    public static final String TASK_DEADLINE_DESC \u003d \" \" + PREFIX_DEADLINE + VALID_TASK_DATE;","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"itsraveen"},"content":"    public static final String TASK_EVENTDATE_DESC \u003d \" \" + PREFIX_EVENT + VALID_TASK_DATE;","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"itsraveen"},"content":"    public static final String INVALID_TASK_NAME_DESC \u003d \" \" + PREFIX_NAME + \"Study\u0026\";","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"itsraveen"},"content":"    public static final String INVALID_TASK_DESCRIPTION_DESC \u003d \" \" + PREFIX_DESCRIPTION + \"\u0026\";","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"itsraveen"},"content":"    public static final String INVALID_TASK_TAG_DESC \u003d \" \" + PREFIX_TAG + \"fun*\";","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"itsraveen"},"content":"    public static final String INVALID_TASK_DEADLINE_DESC \u003d \" \" + PREFIX_DEADLINE + \"2020-02-02$\";","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"itsraveen"},"content":"    public static final String INVALID_TASK_EVENTDATE_DESC \u003d \" \" + PREFIX_EVENT + \"2020-02-02$\";","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":128,"author":{"gitId":"weenleen"},"content":"    public static final EditStudentCommand.EditStudentDescriptor DESC_AMY;","lastModifiedDate":"2021-10-23"},{"lineNumber":129,"author":{"gitId":"weenleen"},"content":"    public static final EditStudentCommand.EditStudentDescriptor DESC_BOB;","lastModifiedDate":"2021-10-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":131,"author":{"gitId":"somekoreanboi"},"content":"    public static final EditTaskCommand.EditTaskDescriptor DESC_STUDY;","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"somekoreanboi"},"content":"    public static final EditTaskCommand.EditTaskDescriptor DESC_PLAY;","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":135,"author":{"gitId":"tzejit"},"content":"        DESC_AMY \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"tzejit"},"content":"                .withStudentNumber(VALID_STUDENTNUMBER_AMY).withUserName(VALID_USERNAME_AMY)","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"tzejit"},"content":"                .withRepoName(VALID_REPONAME_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"tzejit"},"content":"        DESC_BOB \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"tzejit"},"content":"                .withStudentNumber(VALID_STUDENTNUMBER_BOB).withUserName(VALID_USERNAME_BOB)","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"tzejit"},"content":"                .withRepoName(VALID_REPONAME_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"somekoreanboi"},"content":"        DESC_STUDY \u003d new EditTaskDescriptorBuilder().withName(VALID_TASK_NAME_STUDY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"somekoreanboi"},"content":"        DESC_PLAY \u003d new EditTaskDescriptorBuilder().withName(VALID_TASK_NAME_PLAY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":175,"author":{"gitId":"tzejit"},"content":"     * - the address book, filtered student list and selected student in {@code actualModel} remain unchanged","lastModifiedDate":"2021-10-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":181,"author":{"gitId":"tzejit"},"content":"        List\u003cStudent\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredStudentList());","lastModifiedDate":"2021-10-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":185,"author":{"gitId":"tzejit"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredStudentList());","lastModifiedDate":"2021-10-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":187,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":188,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"itsraveen"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":190,"author":{"gitId":"itsraveen"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":191,"author":{"gitId":"itsraveen"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"itsraveen"},"content":"     * - the address book, filtered student list and selected student in {@code actualModel} remain unchanged","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"itsraveen"},"content":"    public static void assertTaskCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"itsraveen"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2021-10-12"},{"lineNumber":196,"author":{"gitId":"itsraveen"},"content":"        // only do so by copying its components.","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"itsraveen"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"weenleen"},"content":"        List\u003cTask\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredTaskList());","lastModifiedDate":"2021-10-23"},{"lineNumber":199,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":200,"author":{"gitId":"itsraveen"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2021-10-12"},{"lineNumber":201,"author":{"gitId":"itsraveen"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2021-10-12"},{"lineNumber":202,"author":{"gitId":"itsraveen"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredTaskList());","lastModifiedDate":"2021-10-12"},{"lineNumber":203,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":206,"author":{"gitId":"tzejit"},"content":"     * Updates {@code model}\u0027s filtered list to show only the student at the given {@code targetIndex} in the","lastModifiedDate":"2021-10-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":209,"author":{"gitId":"tzejit"},"content":"    public static void showStudentAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-10-08"},{"lineNumber":210,"author":{"gitId":"tzejit"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredStudentList().size());","lastModifiedDate":"2021-10-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":212,"author":{"gitId":"tzejit"},"content":"        Student student \u003d model.getFilteredStudentList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":213,"author":{"gitId":"tzejit"},"content":"        final String[] splitName \u003d student.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-10-08"},{"lineNumber":214,"author":{"gitId":"weenleen"},"content":"        model.updateFilteredStudentList(new NameContainsKeywordsPredicate(List.of(splitName[0])));","lastModifiedDate":"2021-10-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":216,"author":{"gitId":"tzejit"},"content":"        assertEquals(1, model.getFilteredStudentList().size());","lastModifiedDate":"2021-10-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":220,"author":{"gitId":"itsraveen"},"content":"     * Updates {@code model}\u0027s filtered list to show only the task at the given {@code targetIndex} in the","lastModifiedDate":"2021-10-12"},{"lineNumber":221,"author":{"gitId":"itsraveen"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2021-10-12"},{"lineNumber":222,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":223,"author":{"gitId":"itsraveen"},"content":"    public static void showTaskAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-10-12"},{"lineNumber":224,"author":{"gitId":"itsraveen"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredTaskList().size());","lastModifiedDate":"2021-10-12"},{"lineNumber":225,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":226,"author":{"gitId":"itsraveen"},"content":"        Task task \u003d model.getFilteredTaskList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":227,"author":{"gitId":"itsraveen"},"content":"        final String[] splitName \u003d task.getName().taskName.split(\"\\\\s+\");","lastModifiedDate":"2021-10-12"},{"lineNumber":228,"author":{"gitId":"weenleen"},"content":"        model.updateFilteredTaskList(new NameContainsTestKeywordsPredicate(List.of(splitName[0])));","lastModifiedDate":"2021-10-23"},{"lineNumber":229,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":230,"author":{"gitId":"itsraveen"},"content":"        assertEquals(1, model.getFilteredTaskList().size());","lastModifiedDate":"2021-10-12"},{"lineNumber":231,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":232,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":234,"author":{"gitId":"tzejit"},"content":"     * Updates {@code model}\u0027s filtered list to show only the groups at the given {@code targetIndex} in the","lastModifiedDate":"2021-10-19"},{"lineNumber":235,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2021-10-19"},{"lineNumber":236,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":237,"author":{"gitId":"tzejit"},"content":"    public static void showGroupAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-10-19"},{"lineNumber":238,"author":{"gitId":"tzejit"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredGroupList().size());","lastModifiedDate":"2021-10-19"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":240,"author":{"gitId":"tzejit"},"content":"        Group group \u003d model.getFilteredGroupList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-19"},{"lineNumber":241,"author":{"gitId":"tzejit"},"content":"        final String[] splitName \u003d group.getName().name.split(\"\\\\s+\");","lastModifiedDate":"2021-10-19"},{"lineNumber":242,"author":{"gitId":"wanninglim"},"content":"        model.updateFilteredGroupList(new GroupContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-10-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":244,"author":{"gitId":"tzejit"},"content":"        assertEquals(1, model.getFilteredGroupList().size());","lastModifiedDate":"2021-10-19"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"itsraveen":73,"weenleen":5,"wanninglim":3,"somekoreanboi":9,"-":104,"tzejit":53}},{"path":"src/test/java/seedu/address/logic/commands/DeleteGroupCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showGroupAtIndex;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalGroups.getTypicalAddressBookWithGroups;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_GROUP;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_GROUP;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":" * {@code DeleteStudentCommand}.","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"public class DeleteGroupCommandTest {","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookWithGroups(), new UserPrefs());","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"    // Pass","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"        Group groupToDelete \u003d model.getFilteredGroupList().get(INDEX_FIRST_GROUP.getZeroBased());","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"        DeleteGroupCommand deleteGroupCommand \u003d new DeleteGroupCommand(INDEX_FIRST_GROUP);","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"        String expectedMessage \u003d String.format(DeleteGroupCommand.MESSAGE_DELETE_GROUP_SUCCESS, groupToDelete);","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"        expectedModel.deleteGroup(groupToDelete);","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"        assertCommandSuccess(deleteGroupCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"    // Pass","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredGroupList().size() + 1);","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"        DeleteGroupCommand deleteCommand \u003d new DeleteGroupCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_GROUP_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"    // Pass","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"        showGroupAtIndex(model, INDEX_FIRST_GROUP);","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"        Group groupToDelete \u003d model.getFilteredGroupList().get(INDEX_FIRST_GROUP.getZeroBased());","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"        DeleteGroupCommand deleteGroupCommand \u003d new DeleteGroupCommand(INDEX_FIRST_GROUP);","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"        String expectedMessage \u003d String.format(DeleteGroupCommand.MESSAGE_DELETE_GROUP_SUCCESS, groupToDelete);","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"        expectedModel.deleteGroup(groupToDelete);","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"        showNoGroup(expectedModel);","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"        assertCommandSuccess(deleteGroupCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"    // Pass","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"        showGroupAtIndex(model, INDEX_FIRST_GROUP);","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_GROUP;","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getGroupList().size());","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"tzejit"},"content":"        DeleteGroupCommand deleteGroupCommand \u003d new DeleteGroupCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"tzejit"},"content":"        assertCommandFailure(deleteGroupCommand, model, Messages.MESSAGE_INVALID_GROUP_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"tzejit"},"content":"    // Pass","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"tzejit"},"content":"    public void equals() {","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"tzejit"},"content":"        DeleteGroupCommand deleteFirstCommand \u003d new DeleteGroupCommand(INDEX_FIRST_GROUP);","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"tzejit"},"content":"        DeleteGroupCommand deleteSecondCommand \u003d new DeleteGroupCommand(INDEX_SECOND_GROUP);","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"tzejit"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"tzejit"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"tzejit"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"tzejit"},"content":"        DeleteGroupCommand deleteFirstCommandCopy \u003d new DeleteGroupCommand(INDEX_FIRST_GROUP);","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"tzejit"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"tzejit"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"tzejit"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"tzejit"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"tzejit"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"tzejit"},"content":"        // different group -\u003e returns false","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"tzejit"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"tzejit"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"tzejit"},"content":"    private void showNoGroup(Model model) {","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"tzejit"},"content":"        model.updateFilteredGroupList(p -\u003e false);","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"tzejit"},"content":"        assertTrue(model.getFilteredGroupList().isEmpty());","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"tzejit":114}},{"path":"src/test/java/seedu/address/logic/commands/DeleteStudentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"wanninglim"},"content":" * {@code DeleteStudentCommand}.","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"wanninglim"},"content":"public class DeleteStudentCommandTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"        Student studentToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"        DeleteStudentCommand deleteStudentCommand \u003d new DeleteStudentCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"        String expectedMessage \u003d String.format(DeleteStudentCommand.MESSAGE_DELETE_STUDENT_SUCCESS, studentToDelete);","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"wanninglim"},"content":"        expectedModel.removeStudent(studentToDelete);","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"wanninglim"},"content":"        assertCommandSuccess(deleteStudentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"        DeleteStudentCommand deleteCommand \u003d new DeleteStudentCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"        Student studentToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"        DeleteStudentCommand deleteStudentCommand \u003d new DeleteStudentCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"        String expectedMessage \u003d String.format(DeleteStudentCommand.MESSAGE_DELETE_STUDENT_SUCCESS, studentToDelete);","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"wanninglim"},"content":"        expectedModel.removeStudent(studentToDelete);","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"        showNoStudent(expectedModel);","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"wanninglim"},"content":"        assertCommandSuccess(deleteStudentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getStudentList().size());","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"wanninglim"},"content":"        DeleteStudentCommand deleteStudentCommand \u003d new DeleteStudentCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"        assertCommandFailure(deleteStudentCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"        DeleteStudentCommand deleteFirstCommand \u003d new DeleteStudentCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"tzejit"},"content":"        DeleteStudentCommand deleteSecondCommand \u003d new DeleteStudentCommand(INDEX_SECOND_STUDENT);","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"tzejit"},"content":"        DeleteStudentCommand deleteFirstCommandCopy \u003d new DeleteStudentCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"tzejit"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"tzejit"},"content":"    private void showNoStudent(Model model) {","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"tzejit"},"content":"        model.updateFilteredStudentList(p -\u003e false);","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"tzejit"},"content":"        assertTrue(model.getFilteredStudentList().isEmpty());","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"wanninglim":7,"-":75,"tzejit":27}},{"path":"src/test/java/seedu/address/logic/commands/DeleteStudentGroupCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showGroupAtIndex;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalGroups.getTypicalAddressBookWithGroups;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_GROUP;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_GROUP;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_GROUP;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":" * {@code DeleteStudentCommand}.","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"public class DeleteStudentGroupCommandTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookWithGroups(), new UserPrefs());","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"    // Pass","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"    public void execute_invalidGroupIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredGroupList().size() + 1);","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"        DeleteStudentGroupCommand deleteStudentGroupCommand \u003d new DeleteStudentGroupCommand(outOfBoundIndex,","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"                INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"        assertCommandFailure(deleteStudentGroupCommand, model, Messages.MESSAGE_INVALID_GROUP_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"    // Pass","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"    public void execute_invalidMemberIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredGroupList()","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"                .get(INDEX_THIRD_GROUP.getZeroBased()).getMembersList().size() + 1);","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"        DeleteStudentGroupCommand deleteStudentGroupCommand \u003d new DeleteStudentGroupCommand(INDEX_THIRD_GROUP,","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"                outOfBoundIndex);","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"        assertCommandFailure(deleteStudentGroupCommand, model, Messages.MESSAGE_INVALID_GROUP_MEMBER_REMOVAL_INDEX);","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"    public void execute_invalidGroupAndMemberIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredGroupList().size() + 1);","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"        DeleteStudentGroupCommand deleteStudentGroupCommand \u003d new DeleteStudentGroupCommand(outOfBoundIndex,","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"                outOfBoundIndex);","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"        assertCommandFailure(deleteStudentGroupCommand, model, Messages.MESSAGE_INVALID_GROUP_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"    // Pass","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"    public void execute_invalidGroupIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"        showGroupAtIndex(model, INDEX_FIRST_GROUP);","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"tzejit"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_GROUP;","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getGroupList().size());","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"        DeleteStudentGroupCommand deleteStudentGroupCommand \u003d new DeleteStudentGroupCommand(outOfBoundIndex,","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"                outOfBoundIndex);","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"        assertCommandFailure(deleteStudentGroupCommand, model, Messages.MESSAGE_INVALID_GROUP_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"    // Pass","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"tzejit"},"content":"    public void equals() {","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"tzejit"},"content":"        DeleteStudentGroupCommand deleteStudentGroupCommand \u003d new DeleteStudentGroupCommand(INDEX_FIRST_GROUP,","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"                INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"tzejit"},"content":"        DeleteStudentGroupCommand addSecondCommand \u003d new DeleteStudentGroupCommand(INDEX_SECOND_GROUP,","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"tzejit"},"content":"                INDEX_SECOND_STUDENT);","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"tzejit"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"tzejit"},"content":"        assertTrue(deleteStudentGroupCommand.equals(deleteStudentGroupCommand));","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"tzejit"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"tzejit"},"content":"        DeleteStudentGroupCommand addFirstCommandCopy \u003d new DeleteStudentGroupCommand(INDEX_FIRST_GROUP,","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"tzejit"},"content":"                INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"tzejit"},"content":"        assertTrue(deleteStudentGroupCommand.equals(addFirstCommandCopy));","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"tzejit"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"tzejit"},"content":"        assertFalse(deleteStudentGroupCommand.equals(1));","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"tzejit"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"tzejit"},"content":"        assertFalse(deleteStudentGroupCommand.equals(null));","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"tzejit"},"content":"        // different group -\u003e returns false","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"tzejit"},"content":"        assertFalse(deleteStudentGroupCommand.equals(addSecondCommand));","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"tzejit"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"tzejit"},"content":"    private void showNoGroup(Model model) {","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"tzejit"},"content":"        model.updateFilteredGroupList(p -\u003e false);","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"tzejit"},"content":"        assertTrue(model.getFilteredGroupList().isEmpty());","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":111,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"tzejit":111}},{"path":"src/test/java/seedu/address/logic/commands/DeleteTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalAddressBookWithTasks;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"itsraveen"},"content":" * {@code DeleteStudentCommand}.","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"itsraveen"},"content":"public class DeleteTaskCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"itsraveen"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookWithTasks(), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"itsraveen"},"content":"    // Pass","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"itsraveen"},"content":"        Task taskToDelete \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"itsraveen"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"itsraveen"},"content":"        String expectedMessage \u003d String.format(DeleteTaskCommand.MESSAGE_DELETE_TASK_SUCCESS, taskToDelete);","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"itsraveen"},"content":"        expectedModel.deleteTask(taskToDelete);","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"itsraveen"},"content":"        assertCommandSuccess(deleteTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"itsraveen"},"content":"    // Pass","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"itsraveen"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"itsraveen"},"content":"        DeleteTaskCommand deleteCommand \u003d new DeleteTaskCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"itsraveen"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"itsraveen"},"content":"    // Pass","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"itsraveen"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"itsraveen"},"content":"        Task taskToDelete \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"itsraveen"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"itsraveen"},"content":"        String expectedMessage \u003d String.format(DeleteTaskCommand.MESSAGE_DELETE_TASK_SUCCESS, taskToDelete);","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"itsraveen"},"content":"        expectedModel.deleteTask(taskToDelete);","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"itsraveen"},"content":"        showNoTask(expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"itsraveen"},"content":"        assertCommandSuccess(deleteTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"itsraveen"},"content":"    // Pass","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"itsraveen"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"itsraveen"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_TASK;","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"itsraveen"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getTaskList().size());","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"itsraveen"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"itsraveen"},"content":"        assertCommandFailure(deleteTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"itsraveen"},"content":"    // Pass","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"itsraveen"},"content":"        DeleteTaskCommand deleteFirstCommand \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"itsraveen"},"content":"        DeleteTaskCommand deleteSecondCommand \u003d new DeleteTaskCommand(INDEX_SECOND_TASK);","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"itsraveen"},"content":"        DeleteTaskCommand deleteFirstCommandCopy \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"itsraveen"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"itsraveen"},"content":"    private void showNoTask(Model model) {","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"itsraveen"},"content":"        model.updateFilteredTaskList(p -\u003e false);","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"itsraveen"},"content":"        assertTrue(model.getFilteredTaskList().isEmpty());","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"itsraveen":40,"-":74}},{"path":"src/test/java/seedu/address/logic/commands/EditStudentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"weenleen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"weenleen"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.EditStudentCommand.EditStudentDescriptor;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"import seedu.address.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"weenleen"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditStudentCommand.","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"weenleen"},"content":"public class EditStudentCommandTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"weenleen"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"        Student editedStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder(editedStudent).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"weenleen"},"content":"        EditStudentCommand editCommand \u003d new EditStudentCommand(INDEX_FIRST_STUDENT, descriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"weenleen"},"content":"        String expectedMessage \u003d String.format(EditStudentCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), editedStudent);","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"        Index indexLastStudent \u003d Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"        Student lastStudent \u003d model.getFilteredStudentList().get(indexLastStudent.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"        StudentBuilder studentInList \u003d new StudentBuilder(lastStudent);","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"        Student editedStudent \u003d studentInList.withName(VALID_NAME_BOB)","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"weenleen"},"content":"        EditStudentCommand editCommand \u003d new EditStudentCommand(indexLastStudent, descriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"weenleen"},"content":"        String expectedMessage \u003d String.format(EditStudentCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"        expectedModel.setStudent(lastStudent, editedStudent);","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"weenleen"},"content":"        EditStudentCommand editCommand \u003d new EditStudentCommand(INDEX_FIRST_STUDENT, new EditStudentDescriptor());","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"        Student editedStudent \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"weenleen"},"content":"        String expectedMessage \u003d String.format(EditStudentCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"tzejit"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"tzejit"},"content":"        Student studentInFilteredList \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"tzejit"},"content":"        Student editedStudent \u003d new StudentBuilder(studentInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"weenleen"},"content":"        EditStudentCommand editCommand \u003d new EditStudentCommand(INDEX_FIRST_STUDENT,","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"tzejit"},"content":"                new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"weenleen"},"content":"        String expectedMessage \u003d String.format(EditStudentCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"tzejit"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), editedStudent);","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"tzejit"},"content":"    public void execute_duplicateStudentUnfilteredList_failure() {","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"tzejit"},"content":"        Student firstStudent \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"tzejit"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder(firstStudent).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"weenleen"},"content":"        EditStudentCommand editCommand \u003d new EditStudentCommand(INDEX_SECOND_STUDENT, descriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"weenleen"},"content":"        assertCommandFailure(editCommand, model, EditStudentCommand.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"tzejit"},"content":"    public void execute_duplicateStudentFilteredList_failure() {","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"tzejit"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"tzejit"},"content":"        // edit student in filtered list into a duplicate in address book","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"tzejit"},"content":"        Student studentInList \u003d model.getAddressBook().getStudentList().get(INDEX_SECOND_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"weenleen"},"content":"        EditStudentCommand editCommand \u003d new EditStudentCommand(INDEX_FIRST_STUDENT,","lastModifiedDate":"2021-10-23"},{"lineNumber":117,"author":{"gitId":"tzejit"},"content":"                new EditStudentDescriptorBuilder(studentInList).build());","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"weenleen"},"content":"        assertCommandFailure(editCommand, model, EditStudentCommand.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-10-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"tzejit"},"content":"    public void execute_invalidStudentIndexUnfilteredList_failure() {","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"tzejit"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"tzejit"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"weenleen"},"content":"        EditStudentCommand editCommand \u003d new EditStudentCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"tzejit"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"tzejit"},"content":"    public void execute_invalidStudentIndexFilteredList_failure() {","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"tzejit"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"tzejit"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"tzejit"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getStudentList().size());","lastModifiedDate":"2021-10-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"weenleen"},"content":"        EditStudentCommand editCommand \u003d new EditStudentCommand(outOfBoundIndex,","lastModifiedDate":"2021-10-23"},{"lineNumber":143,"author":{"gitId":"tzejit"},"content":"                new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-10-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"tzejit"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"weenleen"},"content":"        final EditStudentCommand standardCommand \u003d new EditStudentCommand(INDEX_FIRST_STUDENT, DESC_AMY);","lastModifiedDate":"2021-10-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"tzejit"},"content":"        EditStudentDescriptor copyDescriptor \u003d new EditStudentDescriptor(DESC_AMY);","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"weenleen"},"content":"        EditStudentCommand commandWithSameValues \u003d new EditStudentCommand(INDEX_FIRST_STUDENT, copyDescriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":155,"author":{"gitId":"weenleen"},"content":"        assertEquals(standardCommand, commandWithSameValues);","lastModifiedDate":"2021-10-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"weenleen"},"content":"        assertEquals(standardCommand, standardCommand);","lastModifiedDate":"2021-10-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"weenleen"},"content":"        assertNotEquals(null, standardCommand);","lastModifiedDate":"2021-10-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"weenleen"},"content":"        assertNotEquals(standardCommand, new ClearStudentsCommand());","lastModifiedDate":"2021-10-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"weenleen"},"content":"        assertNotEquals(standardCommand, new EditStudentCommand(INDEX_SECOND_STUDENT, DESC_AMY));","lastModifiedDate":"2021-10-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"weenleen"},"content":"        assertNotEquals(standardCommand, new EditStudentCommand(INDEX_FIRST_STUDENT, DESC_BOB));","lastModifiedDate":"2021-10-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"weenleen":28,"-":103,"tzejit":42}},{"path":"src/test/java/seedu/address/logic/commands/EditTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"somekoreanboi"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"somekoreanboi"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"somekoreanboi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_PLAY;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_STUDY;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"itsraveen"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_NAME_PLAY;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_NAME_STUDY;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"itsraveen"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_DATE;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalAddressBookWithTasks;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"somekoreanboi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.DeadlineTask;","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.EventTask;","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"itsraveen"},"content":"//import seedu.address.model.task.TodoTask;","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"itsraveen"},"content":"import seedu.address.testutil.DeadlineTaskBuilder;","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"itsraveen"},"content":"import seedu.address.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"itsraveen"},"content":"import seedu.address.testutil.EventTaskBuilder;","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"itsraveen"},"content":"import seedu.address.testutil.TodoTaskBuilder;","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"itsraveen"},"content":"//import seedu.address.testutil.TodoTaskBuilder;","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"somekoreanboi"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"somekoreanboi"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"somekoreanboi"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"somekoreanboi"},"content":"public class EditTaskCommandTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"somekoreanboi"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookWithTasks(), new UserPrefs());","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"somekoreanboi"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"somekoreanboi"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"itsraveen"},"content":"        EditTaskCommand editTaskCommand \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"itsraveen"},"content":"                new EditTaskCommand(INDEX_FIRST_TASK, new EditTaskCommand.EditTaskDescriptor());","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"itsraveen"},"content":"        Task editedTask \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"somekoreanboi"},"content":"        String expectedMessage \u003d String.format(EditTaskCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"somekoreanboi"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"somekoreanboi"},"content":"        expectedModel.setTask(model.getFilteredTaskList().get(0), editedTask);","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"somekoreanboi"},"content":"        assertCommandSuccess(editTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"itsraveen"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"itsraveen"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"itsraveen"},"content":"        EditTaskCommand editTaskCommand \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"itsraveen"},"content":"                new EditTaskCommand(INDEX_FIRST_TASK, new EditTaskCommand.EditTaskDescriptor());","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"itsraveen"},"content":"        Task editedTask \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"itsraveen"},"content":"        String expectedMessage \u003d String.format(EditTaskCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"itsraveen"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"itsraveen"},"content":"        assertCommandSuccess(editTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"itsraveen"},"content":"    /*@Test","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"itsraveen"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"itsraveen"},"content":"        Index indexLastTask \u003d Index.fromOneBased(model.getFilteredTaskList().size()-1);","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"itsraveen"},"content":"        Task lastTask \u003d model.getFilteredTaskList().get(model.getFilteredTaskList().size()-1);","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"itsraveen"},"content":"        DeadlineTaskBuilder taskInList \u003d new DeadlineTaskBuilder((DeadlineTask) lastTask);","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"itsraveen"},"content":"        Task editedTask \u003d taskInList.withName(VALID_TASK_NAME_STUDY)","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"itsraveen"},"content":"                .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"itsraveen"},"content":"                .withDate(\"2021-01-01\")","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"itsraveen"},"content":"                .withPriority(\"H\")","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"itsraveen"},"content":"                .build();","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"itsraveen"},"content":"        EditTaskCommand.EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withName(VALID_TASK_NAME_STUDY)","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"itsraveen"},"content":"                .withTags(VALID_TAG_HUSBAND).withPriority(\"H\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"itsraveen"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(indexLastTask, descriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"itsraveen"},"content":"        String expectedMessage \u003d String.format(EditTaskCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"itsraveen"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"itsraveen"},"content":"        expectedModel.setTask(lastTask, editedTask);","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"itsraveen"},"content":"        assertCommandSuccess(editTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"itsraveen"},"content":"    }*/","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"itsraveen"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"itsraveen"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"itsraveen"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"itsraveen"},"content":"        Task taskInFilteredList \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"itsraveen"},"content":"        Task editedTask;","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"itsraveen"},"content":"        if (taskInFilteredList instanceof DeadlineTask) {","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"itsraveen"},"content":"            editedTask \u003d new DeadlineTaskBuilder((DeadlineTask) taskInFilteredList)","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"itsraveen"},"content":"                    .withName(VALID_TASK_NAME_PLAY).build();","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"itsraveen"},"content":"        } else if (taskInFilteredList instanceof EventTask) {","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"itsraveen"},"content":"            editedTask \u003d new EventTaskBuilder((EventTask) taskInFilteredList)","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"itsraveen"},"content":"                    .withName(VALID_TASK_NAME_PLAY).build();","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"itsraveen"},"content":"        } else {","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"itsraveen"},"content":"            editedTask \u003d new TodoTaskBuilder(taskInFilteredList)","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"itsraveen"},"content":"                    .withName(VALID_TASK_NAME_PLAY).build();","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"itsraveen"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"itsraveen"},"content":"                new EditTaskDescriptorBuilder().withName(VALID_TASK_NAME_PLAY).build());","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"itsraveen"},"content":"        String expectedMessage \u003d String.format(EditTaskCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"itsraveen"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"itsraveen"},"content":"        expectedModel.setTask(model.getFilteredTaskList().get(0), editedTask);","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"itsraveen"},"content":"        assertCommandSuccess(editTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"somekoreanboi"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"somekoreanboi"},"content":"    public void execute_duplicateTaskUnfilteredList_failure() {","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"somekoreanboi"},"content":"        Task firstTask \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"somekoreanboi"},"content":"        EditTaskCommand.EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder(firstTask).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"somekoreanboi"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(INDEX_SECOND_TASK, descriptor);","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"somekoreanboi"},"content":"        assertCommandFailure(editTaskCommand, model, EditTaskCommand.MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"somekoreanboi"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"somekoreanboi"},"content":"    public void execute_duplicateTaskFilteredList_failure() {","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"somekoreanboi"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":136,"author":{"gitId":"somekoreanboi"},"content":"        // edit task in filtered list into a duplicate in address book","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"somekoreanboi"},"content":"        Task taskInList \u003d model.getAddressBook().getTaskList().get(INDEX_SECOND_TASK.getZeroBased());","lastModifiedDate":"2021-10-21"},{"lineNumber":138,"author":{"gitId":"somekoreanboi"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"somekoreanboi"},"content":"                new EditTaskDescriptorBuilder(taskInList).build());","lastModifiedDate":"2021-10-21"},{"lineNumber":140,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"somekoreanboi"},"content":"        assertCommandFailure(editTaskCommand, model, EditTaskCommand.MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":143,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"somekoreanboi"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"somekoreanboi"},"content":"    public void execute_invalidTaskIndexUnfilteredList_failure() {","lastModifiedDate":"2021-10-21"},{"lineNumber":146,"author":{"gitId":"somekoreanboi"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"somekoreanboi"},"content":"        EditTaskCommand.EditTaskDescriptor descriptor \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"somekoreanboi"},"content":"                new EditTaskDescriptorBuilder().withName(VALID_TASK_NAME_STUDY).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"somekoreanboi"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":151,"author":{"gitId":"somekoreanboi"},"content":"        assertCommandFailure(editTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":153,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"somekoreanboi"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"somekoreanboi"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"somekoreanboi"},"content":"     * but smaller than size of address book","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"somekoreanboi"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"somekoreanboi"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"somekoreanboi"},"content":"    public void execute_invalidTaskIndexFilteredList_failure() {","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"somekoreanboi"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"somekoreanboi"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_TASK;","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"somekoreanboi"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"somekoreanboi"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getTaskList().size());","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"somekoreanboi"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(outOfBoundIndex,","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"somekoreanboi"},"content":"                new EditTaskDescriptorBuilder().withName(VALID_TASK_NAME_STUDY).build());","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":168,"author":{"gitId":"somekoreanboi"},"content":"        assertCommandFailure(editTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":170,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":171,"author":{"gitId":"somekoreanboi"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"somekoreanboi"},"content":"    public void equals() {","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"somekoreanboi"},"content":"        final EditTaskCommand standardCommand \u003d new EditTaskCommand(INDEX_FIRST_TASK, DESC_STUDY);","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":175,"author":{"gitId":"somekoreanboi"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"somekoreanboi"},"content":"        EditTaskCommand.EditTaskDescriptor copyDescriptor \u003d new EditTaskCommand.EditTaskDescriptor(DESC_STUDY);","lastModifiedDate":"2021-10-21"},{"lineNumber":177,"author":{"gitId":"somekoreanboi"},"content":"        EditTaskCommand commandWithSameValues \u003d new EditTaskCommand(INDEX_FIRST_TASK, copyDescriptor);","lastModifiedDate":"2021-10-21"},{"lineNumber":178,"author":{"gitId":"somekoreanboi"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-10-21"},{"lineNumber":179,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":180,"author":{"gitId":"somekoreanboi"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-21"},{"lineNumber":181,"author":{"gitId":"somekoreanboi"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-10-21"},{"lineNumber":182,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":183,"author":{"gitId":"somekoreanboi"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-21"},{"lineNumber":184,"author":{"gitId":"somekoreanboi"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-10-21"},{"lineNumber":185,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":186,"author":{"gitId":"somekoreanboi"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-21"},{"lineNumber":187,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":188,"author":{"gitId":"somekoreanboi"},"content":"        assertFalse(standardCommand.equals(new ClearStudentsCommand()));","lastModifiedDate":"2021-10-21"},{"lineNumber":189,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":190,"author":{"gitId":"somekoreanboi"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-10-21"},{"lineNumber":191,"author":{"gitId":"somekoreanboi"},"content":"        assertFalse(standardCommand.equals(new EditTaskCommand(INDEX_SECOND_TASK, DESC_STUDY)));","lastModifiedDate":"2021-10-21"},{"lineNumber":192,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":193,"author":{"gitId":"somekoreanboi"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2021-10-21"},{"lineNumber":194,"author":{"gitId":"somekoreanboi"},"content":"        assertFalse(standardCommand.equals(new EditTaskCommand(INDEX_FIRST_TASK, DESC_PLAY)));","lastModifiedDate":"2021-10-21"},{"lineNumber":195,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":196,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":197,"author":{"gitId":"somekoreanboi"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"itsraveen":76,"somekoreanboi":121}},{"path":"src/test/java/seedu/address/logic/commands/EditTaskDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"weenleen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"weenleen"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REPONAME_BOB;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_USERNAME_BOB;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.EditStudentCommand.EditStudentDescriptor;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"import seedu.address.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"somekoreanboi"},"content":"public class EditTaskDescriptorTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"weenleen"},"content":"        EditStudentDescriptor descriptorWithSameValues \u003d new EditStudentCommand.EditStudentDescriptor(DESC_AMY);","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"weenleen"},"content":"        assertEquals(DESC_AMY, descriptorWithSameValues);","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"weenleen"},"content":"        assertEquals(DESC_AMY, DESC_AMY);","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"weenleen"},"content":"        assertNotEquals(null, DESC_AMY);","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"weenleen"},"content":"        assertNotEquals(5, DESC_AMY);","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"weenleen"},"content":"        assertNotEquals(DESC_AMY, DESC_BOB);","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"weenleen"},"content":"        EditStudentCommand.EditStudentDescriptor editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY)","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"                .withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"weenleen"},"content":"        assertNotEquals(DESC_AMY, editedAmy);","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"weenleen"},"content":"        assertNotEquals(DESC_AMY, editedAmy);","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"        // different username -\u003e returns false","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withUserName(VALID_USERNAME_BOB).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"weenleen"},"content":"        assertNotEquals(DESC_AMY, editedAmy);","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"        // different reponame -\u003e returns false","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withRepoName(VALID_REPONAME_BOB).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"weenleen"},"content":"        assertNotEquals(DESC_AMY, editedAmy);","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"weenleen"},"content":"        assertNotEquals(DESC_AMY, editedAmy);","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"weenleen":16,"somekoreanboi":1,"-":32,"tzejit":12}},{"path":"src/test/java/seedu/address/logic/commands/FindGroupCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wanninglim"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"wanninglim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"wanninglim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"wanninglim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_GROUPS_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.testutil.TypicalGroups.GROUP1;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.testutil.TypicalGroups.GROUP2;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.testutil.TypicalGroups.GROUP3;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.testutil.TypicalGroups.getTypicalAddressBookWithGroups;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"wanninglim"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"wanninglim"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"wanninglim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.group.GroupContainsKeywordsPredicate;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"wanninglim"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"wanninglim"},"content":" * Contains integration tests (interaction with the Model) for {@code FindGroupCommand}.","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"wanninglim"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"wanninglim"},"content":"public class FindGroupCommandTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"wanninglim"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookWithGroups(), new UserPrefs());","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"wanninglim"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBookWithGroups(), new UserPrefs());","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"wanninglim"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"wanninglim"},"content":"    public void equals() {","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"wanninglim"},"content":"        GroupContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"wanninglim"},"content":"                new GroupContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"wanninglim"},"content":"        GroupContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"wanninglim"},"content":"                new GroupContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"wanninglim"},"content":"        FindGroupCommand findFirstCommand \u003d new FindGroupCommand(firstPredicate);","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"wanninglim"},"content":"        FindGroupCommand findSecondCommand \u003d new FindGroupCommand(secondPredicate);","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"wanninglim"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"wanninglim"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"wanninglim"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"wanninglim"},"content":"        FindGroupCommand findFirstCommandCopy \u003d new FindGroupCommand(firstPredicate);","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"wanninglim"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"wanninglim"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"wanninglim"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"wanninglim"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"wanninglim"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"wanninglim"},"content":"        // different group -\u003e returns false","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"wanninglim"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"wanninglim"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"wanninglim"},"content":"    public void execute_zeroKeywords_noGroupFound() {","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"wanninglim"},"content":"        String expectedMessage \u003d String.format(MESSAGE_GROUPS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"wanninglim"},"content":"        GroupContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"wanninglim"},"content":"        FindGroupCommand command \u003d new FindGroupCommand(predicate);","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"wanninglim"},"content":"        expectedModel.updateFilteredGroupList(predicate);","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"wanninglim"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"wanninglim"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredGroupList());","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"wanninglim"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"wanninglim"},"content":"    public void execute_multipleKeywords_multipleGroupsFound() {","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"wanninglim"},"content":"        String expectedMessage \u003d String.format(MESSAGE_GROUPS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"        GroupContainsKeywordsPredicate predicate \u003d preparePredicate(\"w14 f01 m16\");","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"wanninglim"},"content":"        FindGroupCommand command \u003d new FindGroupCommand(predicate);","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"wanninglim"},"content":"        expectedModel.updateFilteredGroupList(predicate);","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"wanninglim"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"wanninglim"},"content":"        assertEquals(Arrays.asList(GROUP1, GROUP2, GROUP3), model.getFilteredGroupList());","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"wanninglim"},"content":"     * Parses {@code userInput} into a {@code GroupContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"wanninglim"},"content":"    private GroupContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"wanninglim"},"content":"        return new GroupContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"wanninglim"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"wanninglim":82,"tzejit":1}},{"path":"src/test/java/seedu/address/logic/commands/FindStudentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.CARL;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.ELLE;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.FIONA;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"wanninglim"},"content":" * Contains integration tests (interaction with the Model) for {@code FindStudentCommand}.","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"wanninglim"},"content":"public class FindStudentCommandTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"wanninglim"},"content":"        FindStudentCommand findFirstCommand \u003d new FindStudentCommand(firstPredicate);","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"wanninglim"},"content":"        FindStudentCommand findSecondCommand \u003d new FindStudentCommand(secondPredicate);","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"wanninglim"},"content":"        FindStudentCommand findFirstCommandCopy \u003d new FindStudentCommand(firstPredicate);","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"    public void execute_zeroKeywords_noStudentFound() {","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"wanninglim"},"content":"        String expectedMessage \u003d String.format(MESSAGE_STUDENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"wanninglim"},"content":"        FindStudentCommand command \u003d new FindStudentCommand(predicate);","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredStudentList());","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"    public void execute_multipleKeywords_multipleStudentsFound() {","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"wanninglim"},"content":"        String expectedMessage \u003d String.format(MESSAGE_STUDENTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"wanninglim"},"content":"        FindStudentCommand command \u003d new FindStudentCommand(predicate);","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredStudentList());","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"wanninglim":10,"-":61,"tzejit":12}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":35,"tzejit":4}},{"path":"src/test/java/seedu/address/logic/commands/MarkStudentAttCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wanninglim"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"wanninglim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"wanninglim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"wanninglim"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"wanninglim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"wanninglim"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"wanninglim"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"wanninglim"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"wanninglim"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"wanninglim"},"content":" * Contains integration tests (interaction with the Model) and unit tests for MarkStudentAttCommand.","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"wanninglim"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"wanninglim"},"content":"public class MarkStudentAttCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"wanninglim"},"content":"    private static final Integer[] MARK_ATTENDANCE_PRESENT_EXPECTED \u003d { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"wanninglim"},"content":"    private static final Integer[] MARK_ATTENDANCE_ABSENT_EXPECTED \u003d { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"wanninglim"},"content":"    private static final int FIRST_WEEK \u003d 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"wanninglim"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"wanninglim"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"wanninglim"},"content":"    public void execute_markStudentPresentUnfilteredList_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"wanninglim"},"content":"        String type \u003d \"present\";","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"wanninglim"},"content":"        Student studentToMark \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"wanninglim"},"content":"        // reset student attendance status","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"wanninglim"},"content":"        if (model.getStudentAttendance(studentToMark, FIRST_WEEK - 1) \u003d\u003d \"present\") {","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"wanninglim"},"content":"            model.markStudentAttendance(studentToMark, FIRST_WEEK - 1);","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"wanninglim"},"content":"        Student markedStudent \u003d new StudentBuilder(studentToMark)","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"wanninglim"},"content":"                .withAttendance(MARK_ATTENDANCE_PRESENT_EXPECTED).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"wanninglim"},"content":"        MarkStudentAttCommand markStudentAttCommand \u003d new MarkStudentAttCommand(","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"wanninglim"},"content":"                Collections.singletonList(INDEX_FIRST_STUDENT), FIRST_WEEK - 1);","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"wanninglim"},"content":"        String expectedMessage \u003d String.format(MarkStudentAttCommand.MESSAGE_MARK_STUDENT_SUCCESS,","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"wanninglim"},"content":"                markedStudent.getName(), type, FIRST_WEEK);","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"wanninglim"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"wanninglim"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), markedStudent);","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"wanninglim"},"content":"        assertCommandSuccess(markStudentAttCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"wanninglim"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"wanninglim"},"content":"    public void execute_markStudentAbsentUnfilteredList_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"wanninglim"},"content":"        String type \u003d \"absent\";","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"wanninglim"},"content":"        Student studentToMark \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"wanninglim"},"content":"        // reset student attendance status","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"wanninglim"},"content":"        if (model.getStudentAttendance(studentToMark, FIRST_WEEK - 1) \u003d\u003d \"absent\") {","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"wanninglim"},"content":"            model.markStudentAttendance(studentToMark, FIRST_WEEK - 1);","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"wanninglim"},"content":"        Student markedStudent \u003d new StudentBuilder(studentToMark)","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"wanninglim"},"content":"                .withAttendance(MARK_ATTENDANCE_ABSENT_EXPECTED).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"wanninglim"},"content":"        MarkStudentAttCommand markStudentAttCommand \u003d new MarkStudentAttCommand(","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"wanninglim"},"content":"                Collections.singletonList(INDEX_FIRST_STUDENT), FIRST_WEEK - 1);","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"wanninglim"},"content":"        String expectedMessage \u003d String.format(MarkStudentAttCommand.MESSAGE_MARK_STUDENT_SUCCESS,","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"wanninglim"},"content":"                markedStudent.getName(), type, FIRST_WEEK);","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"wanninglim"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"wanninglim"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), markedStudent);","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"wanninglim"},"content":"        assertCommandSuccess(markStudentAttCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"wanninglim"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"wanninglim"},"content":"    public void execute_markStudentPresentFilteredList_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"wanninglim"},"content":"        String type \u003d \"present\";","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"wanninglim"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"wanninglim"},"content":"        Student studentInFilteredList \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"wanninglim"},"content":"        // reset student attendance status","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"wanninglim"},"content":"        if (model.getStudentAttendance(studentInFilteredList, FIRST_WEEK - 1) \u003d\u003d \"present\") {","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"wanninglim"},"content":"            model.markStudentAttendance(studentInFilteredList, FIRST_WEEK - 1);","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"wanninglim"},"content":"        Student markedStudent \u003d new StudentBuilder(studentInFilteredList)","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"wanninglim"},"content":"                .withAttendance(MARK_ATTENDANCE_PRESENT_EXPECTED).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"wanninglim"},"content":"        MarkStudentAttCommand markStudentAttCommand \u003d new MarkStudentAttCommand(","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"wanninglim"},"content":"                Collections.singletonList(INDEX_FIRST_STUDENT), FIRST_WEEK - 1);","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"wanninglim"},"content":"        String expectedMessage \u003d String.format(MarkStudentAttCommand.MESSAGE_MARK_STUDENT_SUCCESS,","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"wanninglim"},"content":"                markedStudent.getName(), type, FIRST_WEEK);","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"wanninglim"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"wanninglim"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), markedStudent);","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"wanninglim"},"content":"        assertCommandSuccess(markStudentAttCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"wanninglim"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"wanninglim"},"content":"    public void execute_markStudentAbsentFilteredList_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"wanninglim"},"content":"        String type \u003d \"absent\";","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"wanninglim"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"wanninglim"},"content":"        Student studentInFilteredList \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":124,"author":{"gitId":"wanninglim"},"content":"        // reset student attendance status","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"wanninglim"},"content":"        if (model.getStudentAttendance(studentInFilteredList, FIRST_WEEK - 1) \u003d\u003d \"absent\") {","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"wanninglim"},"content":"            model.markStudentAttendance(studentInFilteredList, FIRST_WEEK - 1);","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"wanninglim"},"content":"        Student markedStudent \u003d new StudentBuilder(studentInFilteredList)","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"wanninglim"},"content":"                .withAttendance(MARK_ATTENDANCE_ABSENT_EXPECTED).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"wanninglim"},"content":"        MarkStudentAttCommand markStudentAttCommand \u003d new MarkStudentAttCommand(","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"wanninglim"},"content":"                Collections.singletonList(INDEX_FIRST_STUDENT), FIRST_WEEK - 1);","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"wanninglim"},"content":"        String expectedMessage \u003d String.format(MarkStudentAttCommand.MESSAGE_MARK_STUDENT_SUCCESS,","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"wanninglim"},"content":"                markedStudent.getName(), type, FIRST_WEEK);","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"wanninglim"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"wanninglim"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), markedStudent);","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"wanninglim"},"content":"        assertCommandSuccess(markStudentAttCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"wanninglim"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"wanninglim"},"content":"    public void execute_invalidStudentIndexUnfilteredList_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"wanninglim"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"wanninglim"},"content":"        MarkStudentAttCommand markStudentAttCommand \u003d new MarkStudentAttCommand(","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"wanninglim"},"content":"                Collections.singletonList(outOfBoundIndex), FIRST_WEEK);","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"wanninglim"},"content":"        assertCommandFailure(markStudentAttCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"wanninglim"},"content":"     * Mark attendance of filtered list where index is larger than size of filtered list,","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"wanninglim"},"content":"     * but smaller than size of address book","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"wanninglim"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"wanninglim"},"content":"    public void execute_invalidStudentIndexFilteredList_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"wanninglim"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"wanninglim"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"wanninglim"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"wanninglim"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getStudentList().size());","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"wanninglim"},"content":"        MarkStudentAttCommand markStudentAttCommand \u003d new MarkStudentAttCommand(","lastModifiedDate":"2021-10-24"},{"lineNumber":165,"author":{"gitId":"wanninglim"},"content":"                Collections.singletonList(outOfBoundIndex), FIRST_WEEK);","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"wanninglim"},"content":"        assertCommandFailure(markStudentAttCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"wanninglim"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"wanninglim"},"content":"    public void equals() {","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"wanninglim"},"content":"        final MarkStudentAttCommand standardCommand \u003d new MarkStudentAttCommand(","lastModifiedDate":"2021-10-24"},{"lineNumber":173,"author":{"gitId":"wanninglim"},"content":"                Collections.singletonList(INDEX_FIRST_STUDENT), FIRST_WEEK);","lastModifiedDate":"2021-10-24"},{"lineNumber":174,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"wanninglim"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"wanninglim"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"wanninglim"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"wanninglim"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"wanninglim"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"wanninglim"},"content":"        assertFalse(standardCommand.equals(new ClearStudentsCommand()));","lastModifiedDate":"2021-10-18"},{"lineNumber":183,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"wanninglim"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"wanninglim":184}},{"path":"src/test/java/seedu/address/logic/commands/MarkStudentPartCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wanninglim"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"wanninglim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"wanninglim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"wanninglim"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"wanninglim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"wanninglim"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"wanninglim"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"wanninglim"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"wanninglim"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"wanninglim"},"content":" * Contains integration tests (interaction with the Model) and unit tests for MarkStudentPartCommand.","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"wanninglim"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"wanninglim"},"content":"public class MarkStudentPartCommandTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"wanninglim"},"content":"    private static final Integer[] MARK_PARTICIPATION_PRESENT_EXPECTED \u003d { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"wanninglim"},"content":"    private static final Integer[] MARK_PARTICIPATION_ABSENT_EXPECTED \u003d { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"wanninglim"},"content":"    private static final int FIRST_WEEK \u003d 1;","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"wanninglim"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"wanninglim"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"wanninglim"},"content":"    public void execute_markStudentParticipatedUnfilteredList_success() {","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"wanninglim"},"content":"        String type \u003d \"participated\";","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"wanninglim"},"content":"        Student studentToMark \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"wanninglim"},"content":"        // reset student participation status","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"wanninglim"},"content":"        if (model.getStudentParticipation(studentToMark, FIRST_WEEK - 1) \u003d\u003d \"participated\") {","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"wanninglim"},"content":"            model.markStudentParticipation(studentToMark, FIRST_WEEK - 1);","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"wanninglim"},"content":"        Student markedStudent \u003d new StudentBuilder(studentToMark)","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"wanninglim"},"content":"                .withParticipation(MARK_PARTICIPATION_PRESENT_EXPECTED).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"wanninglim"},"content":"        MarkStudentPartCommand markStudentPartCommand \u003d new MarkStudentPartCommand(","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"wanninglim"},"content":"                Collections.singletonList(INDEX_FIRST_STUDENT), FIRST_WEEK - 1);","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"wanninglim"},"content":"        String expectedMessage \u003d String.format(MarkStudentPartCommand.MESSAGE_MARK_STUDENT_SUCCESS,","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"wanninglim"},"content":"                markedStudent.getName(), type, FIRST_WEEK);","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"wanninglim"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"wanninglim"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), markedStudent);","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"wanninglim"},"content":"        assertCommandSuccess(markStudentPartCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"wanninglim"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"wanninglim"},"content":"    public void execute_markStudentNotParticipatedUnfilteredList_success() {","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"wanninglim"},"content":"        String type \u003d \"not participated\";","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"wanninglim"},"content":"        Student studentToMark \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"wanninglim"},"content":"        // reset student participation status","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"wanninglim"},"content":"        if (model.getStudentParticipation(studentToMark, FIRST_WEEK - 1) \u003d\u003d \"not participated\") {","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"wanninglim"},"content":"            model.markStudentParticipation(studentToMark, FIRST_WEEK - 1);","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"wanninglim"},"content":"        Student markedStudent \u003d new StudentBuilder(studentToMark)","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"wanninglim"},"content":"                .withParticipation(MARK_PARTICIPATION_ABSENT_EXPECTED).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"wanninglim"},"content":"        MarkStudentPartCommand markStudentPartCommand \u003d new MarkStudentPartCommand(","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"wanninglim"},"content":"                Collections.singletonList(INDEX_FIRST_STUDENT), FIRST_WEEK - 1);","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"wanninglim"},"content":"        String expectedMessage \u003d String.format(MarkStudentPartCommand.MESSAGE_MARK_STUDENT_SUCCESS,","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"wanninglim"},"content":"                markedStudent.getName(), type, FIRST_WEEK);","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"wanninglim"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"wanninglim"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), markedStudent);","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"wanninglim"},"content":"        assertCommandSuccess(markStudentPartCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"wanninglim"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"wanninglim"},"content":"    public void execute_markStudentParticipatedFilteredList_success() {","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"wanninglim"},"content":"        String type \u003d \"participated\";","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"wanninglim"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"wanninglim"},"content":"        Student studentInFilteredList \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"wanninglim"},"content":"        // reset student participation status","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"wanninglim"},"content":"        if (model.getStudentParticipation(studentInFilteredList, FIRST_WEEK - 1) \u003d\u003d \"participated\") {","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"wanninglim"},"content":"            model.markStudentParticipation(studentInFilteredList, FIRST_WEEK - 1);","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"wanninglim"},"content":"        Student markedStudent \u003d new StudentBuilder(studentInFilteredList)","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"wanninglim"},"content":"                .withParticipation(MARK_PARTICIPATION_PRESENT_EXPECTED).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"wanninglim"},"content":"        MarkStudentPartCommand markStudentPartCommand \u003d new MarkStudentPartCommand(","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"wanninglim"},"content":"                Collections.singletonList(INDEX_FIRST_STUDENT), FIRST_WEEK - 1);","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":107,"author":{"gitId":"wanninglim"},"content":"        String expectedMessage \u003d String.format(MarkStudentPartCommand.MESSAGE_MARK_STUDENT_SUCCESS,","lastModifiedDate":"2021-10-18"},{"lineNumber":108,"author":{"gitId":"wanninglim"},"content":"                markedStudent.getName(), type, FIRST_WEEK);","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"wanninglim"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"wanninglim"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), markedStudent);","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"wanninglim"},"content":"        assertCommandSuccess(markStudentPartCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"wanninglim"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":117,"author":{"gitId":"wanninglim"},"content":"    public void execute_markStudentNotParticipatedFilteredList_success() {","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"wanninglim"},"content":"        String type \u003d \"not participated\";","lastModifiedDate":"2021-10-18"},{"lineNumber":119,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":120,"author":{"gitId":"wanninglim"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-18"},{"lineNumber":121,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":122,"author":{"gitId":"wanninglim"},"content":"        Student studentInFilteredList \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-18"},{"lineNumber":123,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":124,"author":{"gitId":"wanninglim"},"content":"        // reset student participation status","lastModifiedDate":"2021-10-18"},{"lineNumber":125,"author":{"gitId":"wanninglim"},"content":"        if (model.getStudentParticipation(studentInFilteredList, FIRST_WEEK - 1) \u003d\u003d \"not participated\") {","lastModifiedDate":"2021-10-18"},{"lineNumber":126,"author":{"gitId":"wanninglim"},"content":"            model.markStudentParticipation(studentInFilteredList, FIRST_WEEK - 1);","lastModifiedDate":"2021-10-18"},{"lineNumber":127,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":128,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":129,"author":{"gitId":"wanninglim"},"content":"        Student markedStudent \u003d new StudentBuilder(studentInFilteredList)","lastModifiedDate":"2021-10-18"},{"lineNumber":130,"author":{"gitId":"wanninglim"},"content":"                .withParticipation(MARK_PARTICIPATION_ABSENT_EXPECTED).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":132,"author":{"gitId":"wanninglim"},"content":"        MarkStudentPartCommand markStudentPartCommand \u003d new MarkStudentPartCommand(","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"wanninglim"},"content":"                Collections.singletonList(INDEX_FIRST_STUDENT), FIRST_WEEK - 1);","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"wanninglim"},"content":"        String expectedMessage \u003d String.format(MarkStudentPartCommand.MESSAGE_MARK_STUDENT_SUCCESS,","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"wanninglim"},"content":"                markedStudent.getName(), type, FIRST_WEEK);","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"wanninglim"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-18"},{"lineNumber":139,"author":{"gitId":"wanninglim"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), markedStudent);","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"wanninglim"},"content":"        assertCommandSuccess(markStudentPartCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-18"},{"lineNumber":142,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":143,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"wanninglim"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"wanninglim"},"content":"    public void execute_invalidStudentIndexUnfilteredList_failure() {","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"wanninglim"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2021-10-18"},{"lineNumber":147,"author":{"gitId":"wanninglim"},"content":"        MarkStudentPartCommand markStudentPartCommand \u003d new MarkStudentPartCommand(","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"wanninglim"},"content":"                Collections.singletonList(outOfBoundIndex), FIRST_WEEK);","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":150,"author":{"gitId":"wanninglim"},"content":"        assertCommandFailure(markStudentPartCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-18"},{"lineNumber":151,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":152,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":153,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":154,"author":{"gitId":"wanninglim"},"content":"     * Mark participation of filtered list where index is larger than size of filtered list,","lastModifiedDate":"2021-10-18"},{"lineNumber":155,"author":{"gitId":"wanninglim"},"content":"     * but smaller than size of address book","lastModifiedDate":"2021-10-18"},{"lineNumber":156,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":157,"author":{"gitId":"wanninglim"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":158,"author":{"gitId":"wanninglim"},"content":"    public void execute_invalidStudentIndexFilteredList_failure() {","lastModifiedDate":"2021-10-18"},{"lineNumber":159,"author":{"gitId":"wanninglim"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-18"},{"lineNumber":160,"author":{"gitId":"wanninglim"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-10-18"},{"lineNumber":161,"author":{"gitId":"wanninglim"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-18"},{"lineNumber":162,"author":{"gitId":"wanninglim"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getStudentList().size());","lastModifiedDate":"2021-10-18"},{"lineNumber":163,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":164,"author":{"gitId":"wanninglim"},"content":"        MarkStudentPartCommand markStudentPartCommand \u003d new MarkStudentPartCommand(","lastModifiedDate":"2021-10-24"},{"lineNumber":165,"author":{"gitId":"wanninglim"},"content":"                Collections.singletonList(outOfBoundIndex), FIRST_WEEK);","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":167,"author":{"gitId":"wanninglim"},"content":"        assertCommandFailure(markStudentPartCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-18"},{"lineNumber":168,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":169,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":170,"author":{"gitId":"wanninglim"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":171,"author":{"gitId":"wanninglim"},"content":"    public void equals() {","lastModifiedDate":"2021-10-18"},{"lineNumber":172,"author":{"gitId":"wanninglim"},"content":"        final MarkStudentPartCommand standardCommand \u003d new MarkStudentPartCommand(","lastModifiedDate":"2021-10-24"},{"lineNumber":173,"author":{"gitId":"wanninglim"},"content":"                Collections.singletonList(INDEX_FIRST_STUDENT), FIRST_WEEK);","lastModifiedDate":"2021-10-24"},{"lineNumber":174,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":175,"author":{"gitId":"wanninglim"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-18"},{"lineNumber":176,"author":{"gitId":"wanninglim"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-10-18"},{"lineNumber":177,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":178,"author":{"gitId":"wanninglim"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-18"},{"lineNumber":179,"author":{"gitId":"wanninglim"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-10-18"},{"lineNumber":180,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":181,"author":{"gitId":"wanninglim"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-18"},{"lineNumber":182,"author":{"gitId":"wanninglim"},"content":"        assertFalse(standardCommand.equals(new ClearStudentsCommand()));","lastModifiedDate":"2021-10-18"},{"lineNumber":183,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":184,"author":{"gitId":"wanninglim"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"wanninglim":184}},{"path":"src/test/java/seedu/address/logic/commands/MarkTaskDoneCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"itsraveen"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"weenleen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"weenleen"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"itsraveen"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalAddressBookWithTasks;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"weenleen"},"content":"import java.util.List;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"weenleen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"itsraveen"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"itsraveen"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"itsraveen"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"itsraveen"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"itsraveen"},"content":" * {@code MarkTaskDoneCommand}.","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"itsraveen"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"itsraveen"},"content":"public class MarkTaskDoneCommandTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"weenleen"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBookWithTasks(), new UserPrefs());","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"itsraveen"},"content":"    // Pass","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"itsraveen"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"itsraveen"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"itsraveen"},"content":"        Task taskToMarkAsDone \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"weenleen"},"content":"        MarkTaskDoneCommand markTaskDoneCommand \u003d new MarkTaskDoneCommand(List.of(INDEX_FIRST_TASK));","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"itsraveen"},"content":"        String expectedMessage \u003d String.format(MarkTaskDoneCommand.MESSAGE_MARK_TASK_DONE_SUCCESS, taskToMarkAsDone);","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"itsraveen"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"itsraveen"},"content":"        expectedModel.completeTask(taskToMarkAsDone);","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"itsraveen"},"content":"        assertCommandSuccess(markTaskDoneCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"itsraveen"},"content":"    // Pass","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"itsraveen"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"itsraveen"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"itsraveen"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"weenleen"},"content":"        MarkTaskDoneCommand markTaskDoneCommand \u003d new MarkTaskDoneCommand(List.of(outOfBoundIndex));","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"itsraveen"},"content":"        assertCommandFailure(markTaskDoneCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"itsraveen"},"content":"    // Pass","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"itsraveen"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"itsraveen"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"itsraveen"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"itsraveen"},"content":"        Task taskToMarkAsDone \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"weenleen"},"content":"        MarkTaskDoneCommand markTaskDoneCommand \u003d new MarkTaskDoneCommand(List.of(INDEX_FIRST_TASK));","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"itsraveen"},"content":"        String expectedMessage \u003d String.format(MarkTaskDoneCommand.MESSAGE_MARK_TASK_DONE_SUCCESS, taskToMarkAsDone);","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"itsraveen"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"itsraveen"},"content":"        expectedModel.completeTask(taskToMarkAsDone);","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"itsraveen"},"content":"        showNoTask(expectedModel);","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"itsraveen"},"content":"        assertCommandSuccess(markTaskDoneCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"itsraveen"},"content":"    // Pass","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"itsraveen"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"itsraveen"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"itsraveen"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"itsraveen"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_TASK;","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"itsraveen"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"itsraveen"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getTaskList().size());","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"weenleen"},"content":"        MarkTaskDoneCommand markTaskDoneCommand \u003d new MarkTaskDoneCommand(List.of(outOfBoundIndex));","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"itsraveen"},"content":"        assertCommandFailure(markTaskDoneCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"itsraveen"},"content":"    // Pass","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"itsraveen"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"itsraveen"},"content":"    public void equals() {","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"weenleen"},"content":"        MarkTaskDoneCommand markFirstTaskDoneCommand \u003d new MarkTaskDoneCommand(List.of(INDEX_FIRST_TASK));","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"weenleen"},"content":"        MarkTaskDoneCommand markSecondTaskDoneCommand \u003d new MarkTaskDoneCommand(List.of(INDEX_SECOND_TASK));","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"itsraveen"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"weenleen"},"content":"        assertEquals(markFirstTaskDoneCommand, markFirstTaskDoneCommand);","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"itsraveen"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"weenleen"},"content":"        MarkTaskDoneCommand markFirstTaskDoneCommandCopy \u003d new MarkTaskDoneCommand(List.of(INDEX_FIRST_TASK));","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"weenleen"},"content":"        assertEquals(markFirstTaskDoneCommand, markFirstTaskDoneCommandCopy);","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"itsraveen"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"weenleen"},"content":"        assertNotEquals(1, markFirstTaskDoneCommand);","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"itsraveen"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"weenleen"},"content":"        assertNotEquals(null, markFirstTaskDoneCommand);","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"itsraveen"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"weenleen"},"content":"        assertNotEquals(markFirstTaskDoneCommand, markSecondTaskDoneCommand);","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"itsraveen"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"itsraveen"},"content":"    private void showNoTask(Model model) {","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"itsraveen"},"content":"        model.updateFilteredTaskList(p -\u003e false);","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"itsraveen"},"content":"        assertTrue(model.getFilteredTaskList().isEmpty());","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"itsraveen"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"itsraveen":99,"weenleen":18}},{"path":"src/test/java/seedu/address/logic/parser/AddDeadlineTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"itsraveen"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TASK_DEADLINE_DESC;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TASK_TAG_DESC;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TASK_DEADLINE_DESC;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TASK_DESCRIPTION_DESC_PLAY;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TASK_NAME_DESC_PLAY;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TASK_TAG_DESC_EXERCISE;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TASK_TAG_DESC_FUN;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_DATE;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_DESCRIPTION_PLAY;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_NAME_PLAY;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_TAG_EXERCISE;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_TAG_FUN;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_TAG_STUDY;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"itsraveen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"itsraveen"},"content":"import seedu.address.logic.commands.AddDeadlineTaskCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.DeadlineTask;","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.TaskDate;","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"itsraveen"},"content":"import seedu.address.testutil.DeadlineTaskBuilder;","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"itsraveen"},"content":"public class AddDeadlineTaskCommandParserTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"itsraveen"},"content":"    private AddDeadlineTaskCommandParser parser \u003d new AddDeadlineTaskCommandParser();","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"itsraveen"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"itsraveen"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"itsraveen"},"content":"        DeadlineTask expectedTask \u003d new DeadlineTaskBuilder().withName(VALID_TASK_NAME_PLAY)","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"itsraveen"},"content":"                .withDescription(VALID_TASK_DESCRIPTION_PLAY)","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"itsraveen"},"content":"                .withTags(VALID_TASK_TAG_EXERCISE)","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"itsraveen"},"content":"                .withDate(VALID_TASK_DATE)","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"itsraveen"},"content":"                .build();","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"itsraveen"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + TASK_NAME_DESC_PLAY + TASK_DEADLINE_DESC","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"itsraveen"},"content":"                + TASK_DESCRIPTION_DESC_PLAY + TASK_TAG_DESC_EXERCISE, new AddDeadlineTaskCommand(expectedTask));","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"itsraveen"},"content":"        assertParseSuccess(parser, TASK_NAME_DESC_PLAY + TASK_DEADLINE_DESC","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"itsraveen"},"content":"                + TASK_DESCRIPTION_DESC_PLAY + TASK_TAG_DESC_EXERCISE, new AddDeadlineTaskCommand(expectedTask));","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"itsraveen"},"content":"        Task expectedTaskWithMultipleTags \u003d new DeadlineTaskBuilder().withName(VALID_TASK_NAME_PLAY)","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"itsraveen"},"content":"                .withDescription(VALID_TASK_DESCRIPTION_PLAY)","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"itsraveen"},"content":"                .withTags(VALID_TASK_TAG_EXERCISE, VALID_TASK_TAG_FUN)","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"itsraveen"},"content":"                .withDate(VALID_TASK_DATE)","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"itsraveen"},"content":"                .build();","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"itsraveen"},"content":"        assertParseSuccess(parser, TASK_NAME_DESC_PLAY + TASK_DEADLINE_DESC","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"itsraveen"},"content":"                        + TASK_DESCRIPTION_DESC_PLAY + TASK_TAG_DESC_EXERCISE + TASK_TAG_DESC_FUN,","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"itsraveen"},"content":"                new AddDeadlineTaskCommand(expectedTaskWithMultipleTags));","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"itsraveen"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"itsraveen"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"itsraveen"},"content":"        // zero tags","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"itsraveen"},"content":"        DeadlineTask expectedTask \u003d new DeadlineTaskBuilder().withName(VALID_TASK_NAME_PLAY)","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"itsraveen"},"content":"                .withDate(VALID_TASK_DATE)","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"itsraveen"},"content":"                .build();","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"itsraveen"},"content":"        assertParseSuccess(parser, TASK_NAME_DESC_PLAY + TASK_DEADLINE_DESC","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"itsraveen"},"content":"                + TASK_DESCRIPTION_DESC_PLAY, new AddDeadlineTaskCommand(expectedTask));","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"itsraveen"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"itsraveen"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"itsraveen"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddDeadlineTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"itsraveen"},"content":"        // missing name prefix","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"itsraveen"},"content":"        assertParseFailure(parser, VALID_TASK_TAG_STUDY + TASK_DEADLINE_DESC, expectedMessage);","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"itsraveen"},"content":"        // missing deadline prefix","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"itsraveen"},"content":"        assertParseFailure(parser, TASK_NAME_DESC_PLAY + VALID_TASK_DATE","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"itsraveen"},"content":"                + TASK_DESCRIPTION_DESC_PLAY, expectedMessage);","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"itsraveen"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"itsraveen"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"itsraveen"},"content":"        // invalid name","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"itsraveen"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + INVALID_NAME_DESC","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"itsraveen"},"content":"                + TASK_DEADLINE_DESC, TaskName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"itsraveen"},"content":"        // invalid date","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"itsraveen"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + TASK_NAME_DESC_PLAY","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"itsraveen"},"content":"                + INVALID_TASK_DEADLINE_DESC, TaskDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"itsraveen"},"content":"        // invalid description","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"itsraveen"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + TASK_NAME_DESC_PLAY","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"itsraveen"},"content":"                + TASK_DEADLINE_DESC + INVALID_TASK_DEADLINE_DESC, TaskDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"itsraveen"},"content":"        // invalid tags","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"itsraveen"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + TASK_NAME_DESC_PLAY","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"itsraveen"},"content":"                + TASK_DEADLINE_DESC + TASK_DESCRIPTION_DESC_PLAY + INVALID_TASK_TAG_DESC, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"itsraveen"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"itsraveen":105}},{"path":"src/test/java/seedu/address/logic/parser/AddEventTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"itsraveen"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TASK_DEADLINE_DESC;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TASK_EVENTDATE_DESC;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TASK_TAG_DESC;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TASK_DESCRIPTION_DESC_PLAY;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TASK_EVENTDATE_DESC;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TASK_NAME_DESC_PLAY;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TASK_TAG_DESC_EXERCISE;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TASK_TAG_DESC_FUN;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_DATE;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_DESCRIPTION_PLAY;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_NAME_PLAY;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_TAG_EXERCISE;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_TAG_FUN;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_TAG_STUDY;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"itsraveen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"itsraveen"},"content":"import seedu.address.logic.commands.AddEventTaskCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.EventTask;","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.TaskDate;","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"itsraveen"},"content":"import seedu.address.testutil.EventTaskBuilder;","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"itsraveen"},"content":"public class AddEventTaskCommandParserTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"itsraveen"},"content":"    private AddEventTaskCommandParser parser \u003d new AddEventTaskCommandParser();","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"itsraveen"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"itsraveen"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"itsraveen"},"content":"        EventTask expectedTask \u003d new EventTaskBuilder().withName(VALID_TASK_NAME_PLAY)","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"itsraveen"},"content":"                .withDescription(VALID_TASK_DESCRIPTION_PLAY)","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"itsraveen"},"content":"                .withTags(VALID_TASK_TAG_EXERCISE)","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"itsraveen"},"content":"                .withDate(VALID_TASK_DATE)","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"itsraveen"},"content":"                .build();","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"itsraveen"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + TASK_NAME_DESC_PLAY + TASK_EVENTDATE_DESC","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"itsraveen"},"content":"                + TASK_DESCRIPTION_DESC_PLAY + TASK_TAG_DESC_EXERCISE, new AddEventTaskCommand(expectedTask));","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"itsraveen"},"content":"        assertParseSuccess(parser, TASK_NAME_DESC_PLAY + TASK_EVENTDATE_DESC","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"itsraveen"},"content":"                + TASK_DESCRIPTION_DESC_PLAY + TASK_TAG_DESC_EXERCISE, new AddEventTaskCommand(expectedTask));","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"itsraveen"},"content":"        Task expectedTaskWithMultipleTags \u003d new EventTaskBuilder().withName(VALID_TASK_NAME_PLAY)","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"itsraveen"},"content":"                .withDescription(VALID_TASK_DESCRIPTION_PLAY)","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"itsraveen"},"content":"                .withTags(VALID_TASK_TAG_EXERCISE, VALID_TASK_TAG_FUN)","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"itsraveen"},"content":"                .withDate(VALID_TASK_DATE)","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"itsraveen"},"content":"                .build();","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"itsraveen"},"content":"        assertParseSuccess(parser, TASK_NAME_DESC_PLAY + TASK_EVENTDATE_DESC","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"itsraveen"},"content":"                        + TASK_DESCRIPTION_DESC_PLAY + TASK_TAG_DESC_EXERCISE + TASK_TAG_DESC_FUN,","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"itsraveen"},"content":"                new AddEventTaskCommand(expectedTaskWithMultipleTags));","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"itsraveen"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"itsraveen"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"itsraveen"},"content":"        // zero tags and description","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"itsraveen"},"content":"        EventTask expectedTaskWithoutTagsAndDescription \u003d new EventTaskBuilder().withName(VALID_TASK_NAME_PLAY)","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"itsraveen"},"content":"                .withDate(VALID_TASK_DATE)","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"itsraveen"},"content":"                .build();","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"itsraveen"},"content":"        assertParseSuccess(parser, TASK_NAME_DESC_PLAY + TASK_EVENTDATE_DESC,","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"itsraveen"},"content":"                new AddEventTaskCommand(expectedTaskWithoutTagsAndDescription));","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"itsraveen"},"content":"        // zero tags","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"itsraveen"},"content":"        EventTask expectedTaskWithoutTags \u003d new EventTaskBuilder().withName(VALID_TASK_NAME_PLAY)","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"itsraveen"},"content":"                .withDescription(VALID_TASK_DESCRIPTION_PLAY)","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"itsraveen"},"content":"                .withDate(VALID_TASK_DATE)","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"itsraveen"},"content":"                .build();","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"itsraveen"},"content":"        assertParseSuccess(parser, TASK_NAME_DESC_PLAY + TASK_EVENTDATE_DESC","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"itsraveen"},"content":"                + TASK_DESCRIPTION_DESC_PLAY, new AddEventTaskCommand(expectedTaskWithoutTags));","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"itsraveen"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"itsraveen"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"itsraveen"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddEventTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"itsraveen"},"content":"        // missing name prefix","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"itsraveen"},"content":"        assertParseFailure(parser, VALID_TASK_TAG_STUDY + TASK_EVENTDATE_DESC, expectedMessage);","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"itsraveen"},"content":"        // missing event date prefix","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"itsraveen"},"content":"        assertParseFailure(parser, TASK_NAME_DESC_PLAY + VALID_TASK_DATE","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"itsraveen"},"content":"                + TASK_DESCRIPTION_DESC_PLAY, expectedMessage);","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"itsraveen"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"itsraveen"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"itsraveen"},"content":"        // invalid name","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"itsraveen"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + INVALID_NAME_DESC","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"itsraveen"},"content":"                + TASK_EVENTDATE_DESC, TaskName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"itsraveen"},"content":"        // invalid date","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"itsraveen"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + TASK_NAME_DESC_PLAY","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"itsraveen"},"content":"                + INVALID_TASK_EVENTDATE_DESC, TaskDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"itsraveen"},"content":"        // invalid description","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"itsraveen"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + TASK_NAME_DESC_PLAY","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"itsraveen"},"content":"                + TASK_EVENTDATE_DESC + INVALID_TASK_DEADLINE_DESC, TaskDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"itsraveen"},"content":"        // invalid tags","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"itsraveen"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + TASK_NAME_DESC_PLAY","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"itsraveen"},"content":"                + TASK_EVENTDATE_DESC + TASK_DESCRIPTION_DESC_PLAY + INVALID_TASK_TAG_DESC, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"itsraveen"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"itsraveen":113}},{"path":"src/test/java/seedu/address/logic/parser/AddGithubGroupCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GROUPNAME_DESC_G1;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_REPONAME_DESC;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_YEAR_DESC;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REPONAME_DESC_AMY;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REPONAME_DESC_BOB;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REPONAME_AMY;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_YEAR_G1;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.YEAR_DESC_G1;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.YEAR_DESC_G2;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_GROUP;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"import seedu.address.logic.commands.AddGithubGroupCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.commons.RepoName;","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.LinkYear;","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"public class AddGithubGroupCommandParserTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"    private AddGithubGroupCommandParser parser \u003d new AddGithubGroupCommandParser();","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"        LinkYear expectedYear \u003d new LinkYear(VALID_YEAR_G1);","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"        RepoName expectedRepoName \u003d new RepoName(VALID_REPONAME_AMY);","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + INDEX_FIRST_GROUP.getOneBased() + YEAR_DESC_G1","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"                + REPONAME_DESC_AMY,","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"                new AddGithubGroupCommand(INDEX_FIRST_GROUP, expectedYear, expectedRepoName));","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"        // multiple years - last year accepted","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"        assertParseSuccess(parser, INDEX_FIRST_GROUP.getOneBased() + YEAR_DESC_G2 + YEAR_DESC_G1","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"                        + REPONAME_DESC_AMY,","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"                new AddGithubGroupCommand(INDEX_FIRST_GROUP, expectedYear, expectedRepoName));","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"        // multiple reponames - last name accepted","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"        assertParseSuccess(parser, INDEX_FIRST_GROUP.getOneBased() + YEAR_DESC_G1 + REPONAME_DESC_BOB","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"                        + REPONAME_DESC_AMY,","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"                new AddGithubGroupCommand(INDEX_FIRST_GROUP, expectedYear, expectedRepoName));","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddGithubGroupCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"        // missing year prefix","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"        assertParseFailure(parser, INDEX_FIRST_GROUP.getOneBased() + VALID_YEAR_G1 + REPONAME_DESC_AMY,","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"        // missing reponame prefix","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"        assertParseFailure(parser, INDEX_FIRST_GROUP.getOneBased() + YEAR_DESC_G1 + VALID_REPONAME_AMY,","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"tzejit"},"content":"        // invalid year name","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"        assertParseFailure(parser, INDEX_FIRST_GROUP.getOneBased() + INVALID_YEAR_DESC + REPONAME_DESC_AMY,","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"                LinkYear.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"        // invalid repo name","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"        assertParseFailure(parser, INDEX_FIRST_GROUP.getOneBased() + YEAR_DESC_G1 + INVALID_REPONAME_DESC,","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"                RepoName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"        // invalid index","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"        assertParseFailure(parser, \"a\" + VALID_YEAR_G1 + VALID_REPONAME_AMY,","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddGithubGroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"        // non-empty preamble","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"tzejit"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + INDEX_FIRST_STUDENT.getOneBased() + GROUPNAME_DESC_G1,","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"tzejit"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddGithubGroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"tzejit":81}},{"path":"src/test/java/seedu/address/logic/parser/AddGroupCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GROUPNAME_DESC_G1;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GROUPNAME_DESC_G2;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GROUPNAME_DESC;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUPNAME_G1;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"import seedu.address.logic.commands.AddGroupCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"import seedu.address.testutil.GroupBuilder;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"public class AddGroupCommandParserTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"    private AddGroupCommandParser parser \u003d new AddGroupCommandParser();","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"        Group expectedGroup \u003d new GroupBuilder().withName(VALID_GROUPNAME_G1).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + GROUPNAME_DESC_G1 + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"                new AddGroupCommand(expectedGroup));","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"        assertParseSuccess(parser, GROUPNAME_DESC_G2 + GROUPNAME_DESC_G1 + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"                new AddGroupCommand(expectedGroup));","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"        Group expectedGroupMultipleTags \u003d new GroupBuilder().withName(VALID_GROUPNAME_G1)","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"        assertParseSuccess(parser, GROUPNAME_DESC_G1 + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"                new AddGroupCommand(expectedGroupMultipleTags));","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddGroupCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"        // missing group prefix","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"        assertParseFailure(parser, VALID_GROUPNAME_G1, expectedMessage);","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"        // invalid group name","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"        assertParseFailure(parser, INVALID_GROUPNAME_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"                GroupName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"        // non-empty preamble","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + GROUPNAME_DESC_G1 + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddGroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"tzejit":64}},{"path":"src/test/java/seedu/address/logic/parser/AddStudentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_REPONAME_DESC;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_STUDENTNUMBER_DESC;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_USERNAME_DESC;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REPONAME_DESC_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REPONAME_DESC_BOB;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STUDENTNUMBER_DESC_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STUDENTNUMBER_DESC_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.USERNAME_DESC_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.USERNAME_DESC_BOB;","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REPONAME_BOB;","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENTNUMBER_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_USERNAME_BOB;","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"import seedu.address.logic.commands.AddStudentCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.commons.RepoName;","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.StudentNumber;","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.UserName;","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"public class AddStudentCommandParserTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"    private AddStudentCommandParser parser \u003d new AddStudentCommandParser();","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"        Student expectedStudent \u003d new StudentBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"                + STUDENTNUMBER_DESC_BOB + USERNAME_DESC_BOB + REPONAME_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"                new AddStudentCommand(expectedStudent));","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + EMAIL_DESC_BOB + STUDENTNUMBER_DESC_BOB","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"                + USERNAME_DESC_BOB + REPONAME_DESC_BOB + TAG_DESC_FRIEND, new AddStudentCommand(expectedStudent));","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"tzejit"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB + STUDENTNUMBER_DESC_BOB","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"                + USERNAME_DESC_BOB + REPONAME_DESC_BOB + TAG_DESC_FRIEND, new AddStudentCommand(expectedStudent));","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"        // multiple usernames - last username accepted","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + STUDENTNUMBER_DESC_BOB + USERNAME_DESC_AMY","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"                + USERNAME_DESC_BOB + REPONAME_DESC_BOB + TAG_DESC_FRIEND, new AddStudentCommand(expectedStudent));","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"        // multiple reponames - last reponame accepted","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + STUDENTNUMBER_DESC_BOB + REPONAME_DESC_AMY","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"                + REPONAME_DESC_BOB + USERNAME_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"                new AddStudentCommand(expectedStudent));","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"tzejit"},"content":"        Student expectedStudentMultipleTags \u003d new StudentBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":80,"author":{"gitId":"tzejit"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + STUDENTNUMBER_DESC_BOB + REPONAME_DESC_BOB","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"                + USERNAME_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"tzejit"},"content":"                new AddStudentCommand(expectedStudentMultipleTags));","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"tzejit"},"content":"        Student expectedStudent \u003d new StudentBuilder(AMY).withTags().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"tzejit"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + EMAIL_DESC_AMY + STUDENTNUMBER_DESC_AMY + USERNAME_DESC_AMY","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"tzejit"},"content":"                + REPONAME_DESC_AMY, new AddStudentCommand(expectedStudent));","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"tzejit"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddStudentCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"tzejit"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + EMAIL_DESC_BOB + STUDENTNUMBER_DESC_BOB,","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"tzejit"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_EMAIL_BOB + STUDENTNUMBER_DESC_BOB,","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"tzejit"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"tzejit"},"content":"        // missing studentNumber prefix","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"tzejit"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + VALID_STUDENTNUMBER_BOB,","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"tzejit"},"content":"        // missing repoName prefix","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"tzejit"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + VALID_STUDENTNUMBER_BOB","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"tzejit"},"content":"                        + VALID_REPONAME_BOB, expectedMessage);","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"tzejit"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_EMAIL_BOB + VALID_STUDENTNUMBER_BOB","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"tzejit"},"content":"                        + VALID_USERNAME_BOB + VALID_REPONAME_BOB, expectedMessage);","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"tzejit"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + EMAIL_DESC_BOB + STUDENTNUMBER_DESC_BOB","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"tzejit"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_EMAIL_DESC + STUDENTNUMBER_DESC_BOB","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"tzejit"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + STUDENTNUMBER_DESC_BOB","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"tzejit"},"content":"        // invalid studentNumber","lastModifiedDate":"2021-10-13"},{"lineNumber":133,"author":{"gitId":"tzejit"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + INVALID_STUDENTNUMBER_DESC","lastModifiedDate":"2021-10-13"},{"lineNumber":134,"author":{"gitId":"tzejit"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, StudentNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-13"},{"lineNumber":135,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":136,"author":{"gitId":"tzejit"},"content":"        // invalid userName","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"tzejit"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + STUDENTNUMBER_DESC_BOB","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"tzejit"},"content":"                + INVALID_USERNAME_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, UserName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":139,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"tzejit"},"content":"        // invalid repoName","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"tzejit"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + STUDENTNUMBER_DESC_BOB","lastModifiedDate":"2021-10-18"},{"lineNumber":142,"author":{"gitId":"tzejit"},"content":"                + INVALID_REPONAME_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, RepoName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":143,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"tzejit"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + EMAIL_DESC_BOB + STUDENTNUMBER_DESC_BOB,","lastModifiedDate":"2021-10-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":149,"author":{"gitId":"tzejit"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + EMAIL_DESC_BOB + STUDENTNUMBER_DESC_BOB","lastModifiedDate":"2021-10-13"},{"lineNumber":150,"author":{"gitId":"tzejit"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-09-27"},{"lineNumber":151,"author":{"gitId":"tzejit"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddStudentCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"-":72,"tzejit":81}},{"path":"src/test/java/seedu/address/logic/parser/AddStudentGroupCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GROUPNAME_DESC_G1;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GROUPNAME_DESC_G2;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GROUPNAME_DESC;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUPNAME_G1;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"import seedu.address.logic.commands.AddStudentGroupCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"public class AddStudentGroupCommandParserTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"    private AddStudentGroupCommandParser parser \u003d new AddStudentGroupCommandParser();","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"        GroupName expectedGroupName \u003d new GroupName(VALID_GROUPNAME_G1);","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + INDEX_FIRST_STUDENT.getOneBased() + GROUPNAME_DESC_G1,","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"                new AddStudentGroupCommand(INDEX_FIRST_STUDENT, expectedGroupName));","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"        // multiple group names - last name accepted","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"        assertParseSuccess(parser, INDEX_FIRST_STUDENT.getOneBased() + GROUPNAME_DESC_G2 + GROUPNAME_DESC_G1,","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"                new AddStudentGroupCommand(INDEX_FIRST_STUDENT, expectedGroupName));","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddStudentGroupCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"        // missing group prefix","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"        assertParseFailure(parser, INDEX_FIRST_STUDENT + VALID_GROUPNAME_G1, expectedMessage);","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"        // invalid group name","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"        assertParseFailure(parser, INDEX_FIRST_STUDENT.getOneBased() + INVALID_GROUPNAME_DESC,","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"                GroupName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"        // invalid index","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"        assertParseFailure(parser, \"a\" + GROUPNAME_DESC_G1,","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddStudentGroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"        // non-empty preamble","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + INDEX_FIRST_STUDENT.getOneBased() + GROUPNAME_DESC_G1,","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddStudentGroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"tzejit":57}},{"path":"src/test/java/seedu/address/logic/parser/AddTodoTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"itsraveen"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DESCRIPTION_DESC;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TASK_NAME_DESC;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TASK_TAG_DESC;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TASK_DESCRIPTION_DESC_PLAY;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TASK_DESCRIPTION_DESC_STUDY;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TASK_NAME_DESC_PLAY;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TASK_TAG_DESC_EXERCISE;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TASK_TAG_DESC_FUN;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_DESCRIPTION_PLAY;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_NAME_PLAY;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_TAG_EXERCISE;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_TAG_FUN;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_TAG_STUDY;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"itsraveen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"itsraveen"},"content":"import seedu.address.logic.commands.AddTodoTaskCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"itsraveen"},"content":"import seedu.address.testutil.TodoTaskBuilder;","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"itsraveen"},"content":"public class AddTodoTaskCommandParserTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"itsraveen"},"content":"    private AddTodoTaskCommandParser parser \u003d new AddTodoTaskCommandParser();","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"itsraveen"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"itsraveen"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"itsraveen"},"content":"        Task expectedTask \u003d new TodoTaskBuilder().withName(VALID_TASK_NAME_PLAY)","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"itsraveen"},"content":"                .withDescription(VALID_TASK_DESCRIPTION_PLAY)","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"itsraveen"},"content":"                .withTags(VALID_TASK_TAG_EXERCISE)","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"itsraveen"},"content":"                .build();","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"itsraveen"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + TASK_NAME_DESC_PLAY","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"itsraveen"},"content":"                        + TASK_DESCRIPTION_DESC_PLAY + TASK_TAG_DESC_EXERCISE, new AddTodoTaskCommand(expectedTask));","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"itsraveen"},"content":"        assertParseSuccess(parser, TASK_NAME_DESC_PLAY","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"itsraveen"},"content":"                + TASK_DESCRIPTION_DESC_PLAY + TASK_TAG_DESC_EXERCISE, new AddTodoTaskCommand(expectedTask));","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"itsraveen"},"content":"        Task expectedTaskWithMultipleTags \u003d new TodoTaskBuilder().withName(VALID_TASK_NAME_PLAY)","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"itsraveen"},"content":"                .withDescription(VALID_TASK_DESCRIPTION_PLAY)","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"itsraveen"},"content":"                .withTags(VALID_TASK_TAG_EXERCISE, VALID_TASK_TAG_FUN)","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"itsraveen"},"content":"                .build();","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"itsraveen"},"content":"        assertParseSuccess(parser, TASK_NAME_DESC_PLAY","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"itsraveen"},"content":"                + TASK_DESCRIPTION_DESC_PLAY + TASK_TAG_DESC_EXERCISE + TASK_TAG_DESC_FUN,","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"itsraveen"},"content":"                new AddTodoTaskCommand(expectedTaskWithMultipleTags));","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"itsraveen"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"itsraveen"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"itsraveen"},"content":"        // zero tags","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"itsraveen"},"content":"        Task expectedTask \u003d new TodoTaskBuilder().withName(VALID_TASK_NAME_PLAY)","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"itsraveen"},"content":"                .withDescription(VALID_TASK_DESCRIPTION_PLAY)","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"itsraveen"},"content":"                .build();","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"itsraveen"},"content":"        assertParseSuccess(parser, TASK_NAME_DESC_PLAY","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"itsraveen"},"content":"                + TASK_DESCRIPTION_DESC_PLAY, new AddTodoTaskCommand(expectedTask));","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"itsraveen"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"itsraveen"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"itsraveen"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTodoTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"itsraveen"},"content":"        // missing name prefix","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"itsraveen"},"content":"        assertParseFailure(parser, VALID_TASK_TAG_STUDY + TASK_DESCRIPTION_DESC_STUDY, expectedMessage);","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"itsraveen"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"itsraveen"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"itsraveen"},"content":"        // invalid name","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"itsraveen"},"content":"        assertParseFailure(parser, INVALID_TASK_NAME_DESC + TASK_DESCRIPTION_DESC_PLAY","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"itsraveen"},"content":"                + TASK_TAG_DESC_FUN, TaskName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"itsraveen"},"content":"        // invalid description","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"itsraveen"},"content":"        assertParseFailure(parser, TASK_NAME_DESC_PLAY + INVALID_DESCRIPTION_DESC,","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"itsraveen"},"content":"                Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"itsraveen"},"content":"        // invalid tag","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"itsraveen"},"content":"        assertParseFailure(parser, TASK_NAME_DESC_PLAY + TASK_DESCRIPTION_DESC_PLAY","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"itsraveen"},"content":"                        + INVALID_TASK_TAG_DESC, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"itsraveen"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"itsraveen":91}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEEK;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"wanninglim"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"import seedu.address.logic.commands.AddStudentCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"wanninglim"},"content":"import seedu.address.logic.commands.ClearGroupsCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"wanninglim"},"content":"import seedu.address.logic.commands.ClearStudentsCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"wanninglim"},"content":"import seedu.address.logic.commands.DeleteStudentCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.EditStudentCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"wanninglim"},"content":"import seedu.address.logic.commands.FindGroupCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"wanninglim"},"content":"import seedu.address.logic.commands.FindStudentCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"wanninglim"},"content":"import seedu.address.logic.commands.MarkStudentAttCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"wanninglim"},"content":"import seedu.address.logic.commands.MarkStudentPartCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.group.GroupContainsKeywordsPredicate;","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"import seedu.address.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"import seedu.address.testutil.StudentUtil;","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"        Student student \u003d new StudentBuilder().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"        AddStudentCommand command \u003d (AddStudentCommand) parser.parseCommand(StudentUtil.getAddCommand(student));","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"        assertEquals(new AddStudentCommand(student), command);","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"wanninglim"},"content":"    public void parseCommand_clearStudents() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"wanninglim"},"content":"        assertTrue(parser.parseCommand(ClearStudentsCommand.COMMAND_WORD) instanceof ClearStudentsCommand);","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"wanninglim"},"content":"        assertTrue(parser.parseCommand(ClearStudentsCommand.COMMAND_WORD + \" 3\") instanceof ClearStudentsCommand);","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"wanninglim"},"content":"    public void parseCommand_clearGroups() throws Exception {","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"wanninglim"},"content":"        assertTrue(parser.parseCommand(ClearGroupsCommand.COMMAND_WORD) instanceof ClearGroupsCommand);","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"wanninglim"},"content":"        assertTrue(parser.parseCommand(ClearGroupsCommand.COMMAND_WORD + \" 3\") instanceof ClearGroupsCommand);","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"wanninglim"},"content":"    public void parseCommand_deleteStudent() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"wanninglim"},"content":"        DeleteStudentCommand command \u003d (DeleteStudentCommand) parser.parseCommand(","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"                DeleteStudentCommand.COMMAND_WORD + \" \" + INDEX_FIRST_STUDENT.getOneBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"        assertEquals(new DeleteStudentCommand(INDEX_FIRST_STUDENT), command);","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"        Student student \u003d new StudentBuilder().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"weenleen"},"content":"        EditStudentCommand.EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder(student).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"weenleen"},"content":"        EditStudentCommand command \u003d (EditStudentCommand) parser.parseCommand(EditStudentCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"                + INDEX_FIRST_STUDENT.getOneBased() + \" \" + StudentUtil.getEditStudentDescriptorDetails(descriptor));","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"weenleen"},"content":"        EditStudentCommand temp \u003d new EditStudentCommand(INDEX_FIRST_STUDENT, descriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"        assertEquals(temp, command);","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"wanninglim"},"content":"    public void parseCommand_findStudent() throws Exception {","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"wanninglim"},"content":"        FindStudentCommand command \u003d (FindStudentCommand) parser.parseCommand(","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"weenleen"},"content":"                FindStudentCommand.COMMAND_WORD + \" \" + String.join(\" \", keywords));","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"wanninglim"},"content":"        assertEquals(new FindStudentCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"wanninglim"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"wanninglim"},"content":"    public void parseCommand_findGroup() throws Exception {","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"wanninglim"},"content":"        FindGroupCommand command \u003d (FindGroupCommand) parser.parseCommand(","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"weenleen"},"content":"                FindGroupCommand.COMMAND_WORD + \" \" + String.join(\" \", keywords));","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"wanninglim"},"content":"        assertEquals(new FindGroupCommand(new GroupContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"wanninglim"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"wanninglim"},"content":"    public void parseCommand_markStudentAttendance() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"wanninglim"},"content":"        int validWeek \u003d 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"wanninglim"},"content":"        MarkStudentAttCommand command \u003d (MarkStudentAttCommand) parser.parseCommand(","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"wanninglim"},"content":"                MarkStudentAttCommand.COMMAND_WORD + \" \" + INDEX_FIRST_STUDENT.getOneBased() + \" \"","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"wanninglim"},"content":"                        + PREFIX_WEEK + validWeek);","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"wanninglim"},"content":"        assertEquals(new MarkStudentAttCommand(","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"wanninglim"},"content":"                Collections.singletonList(INDEX_FIRST_STUDENT), validWeek), command);","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"wanninglim"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":122,"author":{"gitId":"wanninglim"},"content":"    public void parseCommand_markStudentParticipation() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":123,"author":{"gitId":"wanninglim"},"content":"        int validWeek \u003d 1;","lastModifiedDate":"2021-10-18"},{"lineNumber":124,"author":{"gitId":"wanninglim"},"content":"        MarkStudentPartCommand command \u003d (MarkStudentPartCommand) parser.parseCommand(","lastModifiedDate":"2021-10-18"},{"lineNumber":125,"author":{"gitId":"wanninglim"},"content":"                MarkStudentPartCommand.COMMAND_WORD + \" \" + INDEX_FIRST_STUDENT.getOneBased() + \" \"","lastModifiedDate":"2021-10-18"},{"lineNumber":126,"author":{"gitId":"wanninglim"},"content":"                        + PREFIX_WEEK + validWeek);","lastModifiedDate":"2021-10-18"},{"lineNumber":127,"author":{"gitId":"wanninglim"},"content":"        assertEquals(new MarkStudentPartCommand(","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"wanninglim"},"content":"                Collections.singletonList(INDEX_FIRST_STUDENT), validWeek), command);","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":130,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"weenleen":6,"wanninglim":47,"-":73,"tzejit":15}},{"path":"src/test/java/seedu/address/logic/parser/DeleteGroupCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_GROUP;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import seedu.address.logic.commands.DeleteGroupCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":" * outside of the DeleteStudentCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":" * same path through the DeleteStudentCommand, and therefore we test only one of them.","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"public class DeleteGroupCommandParserTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"    private DeleteGroupCommandParser parser \u003d new DeleteGroupCommandParser();","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"        assertParseSuccess(parser, \"1\", new DeleteGroupCommand(INDEX_FIRST_GROUP));","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteGroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"tzejit":33}},{"path":"src/test/java/seedu/address/logic/parser/DeleteStudentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"wanninglim"},"content":"import seedu.address.logic.commands.DeleteStudentCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"wanninglim"},"content":" * outside of the DeleteStudentCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"wanninglim"},"content":" * same path through the DeleteStudentCommand, and therefore we test only one of them.","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"wanninglim"},"content":"public class DeleteStudentCommandParserTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"wanninglim"},"content":"    private DeleteStudentCommandParser parser \u003d new DeleteStudentCommandParser();","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"        assertParseSuccess(parser, \"1\", new DeleteStudentCommand(INDEX_FIRST_STUDENT));","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"wanninglim"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"wanninglim"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteStudentCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"wanninglim":7,"-":24,"tzejit":2}},{"path":"src/test/java/seedu/address/logic/parser/DeleteStudentGroupCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_WRONG_NUMBER_OF_INDEX;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_GROUP;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import seedu.address.logic.commands.DeleteStudentGroupCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":" * outside of the DeleteStudentCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":" * same path through the DeleteStudentGroupCommand, and therefore we test only one of them.","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"public class DeleteStudentGroupCommandParserTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"    private DeleteStudentGroupCommandParser parser \u003d new DeleteStudentGroupCommandParser();","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"        assertParseSuccess(parser, \"1 1\", new DeleteStudentGroupCommand(INDEX_FIRST_GROUP, INDEX_FIRST_STUDENT));","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteStudentGroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"    public void parse_validArgsInvalidNumber_throwsParseException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"        assertParseFailure(parser, \"1 1 1\",","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"                String.format(MESSAGE_WRONG_NUMBER_OF_INDEX, 2, 3));","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"tzejit":41}},{"path":"src/test/java/seedu/address/logic/parser/DeleteTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"itsraveen"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"itsraveen"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"itsraveen"},"content":" * outside of the DeleteStudentCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"itsraveen"},"content":" * same path through the DeleteStudentCommand, and therefore we test only one of them.","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"itsraveen"},"content":"public class DeleteTaskCommandParserTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"itsraveen"},"content":"    private DeleteTaskCommandParser parser \u003d new DeleteTaskCommandParser();","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"itsraveen"},"content":"        assertParseSuccess(parser, \"1\", new DeleteTaskCommand(INDEX_FIRST_TASK));","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"itsraveen"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"itsraveen"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"itsraveen":9,"-":24}},{"path":"src/test/java/seedu/address/logic/parser/EditStudentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_REPONAME_DESC;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_STUDENTNUMBER_DESC;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_USERNAME_DESC;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REPONAME_DESC_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STUDENTNUMBER_DESC_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.USERNAME_DESC_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REPONAME_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENTNUMBER_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_USERNAME_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_STUDENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.EditStudentCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.EditStudentCommand.EditStudentDescriptor;","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.commons.RepoName;","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.StudentNumber;","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.UserName;","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"import seedu.address.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"weenleen"},"content":"public class EditStudentCommandParserTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"weenleen"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditStudentCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"weenleen"},"content":"    private final EditStudentCommandParser parser \u003d new EditStudentCommandParser();","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"weenleen"},"content":"        assertParseFailure(parser, \"1\", EditStudentCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"tzejit"},"content":"        assertParseFailure(parser, \"1\" + INVALID_STUDENTNUMBER_DESC, StudentNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"tzejit"},"content":"        // invalid studentNumber","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"tzejit"},"content":"        assertParseFailure(parser, \"1\" + INVALID_USERNAME_DESC, UserName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"tzejit"},"content":"        // invalid username","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"tzejit"},"content":"        assertParseFailure(parser, \"1\" + INVALID_REPONAME_DESC, RepoName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"weenleen"},"content":"        // invalid repoName","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"tzejit"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Student} being edited,","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"weenleen"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY,","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"weenleen"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"weenleen"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND,","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"weenleen"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"weenleen"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND,","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"weenleen"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"tzejit"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"tzejit"},"content":"        Index targetIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"tzejit"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_DESC_HUSBAND + EMAIL_DESC_AMY + USERNAME_DESC_AMY","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"tzejit"},"content":"                + NAME_DESC_AMY + STUDENTNUMBER_DESC_AMY + REPONAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"weenleen"},"content":"        EditStudentCommand.EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder()","lastModifiedDate":"2021-10-23"},{"lineNumber":115,"author":{"gitId":"weenleen"},"content":"                .withName(VALID_NAME_AMY)","lastModifiedDate":"2021-10-23"},{"lineNumber":116,"author":{"gitId":"tzejit"},"content":"                .withEmail(VALID_EMAIL_AMY).withStudentNumber(VALID_STUDENTNUMBER_AMY).withRepoName(VALID_REPONAME_AMY)","lastModifiedDate":"2021-10-18"},{"lineNumber":117,"author":{"gitId":"tzejit"},"content":"                .withUserName(VALID_USERNAME_AMY).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"weenleen"},"content":"        EditStudentCommand expectedCommand \u003d new EditStudentCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"tzejit"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"tzejit"},"content":"        String userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"tzejit"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder()","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"weenleen"},"content":"        EditStudentCommand expectedCommand \u003d new EditStudentCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"tzejit"},"content":"        Index targetIndex \u003d INDEX_THIRD_STUDENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":140,"author":{"gitId":"tzejit"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":141,"author":{"gitId":"weenleen"},"content":"        EditStudentCommand expectedCommand \u003d new EditStudentCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":146,"author":{"gitId":"tzejit"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":147,"author":{"gitId":"weenleen"},"content":"        expectedCommand \u003d new EditStudentCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"tzejit"},"content":"        // studentNumber","lastModifiedDate":"2021-10-18"},{"lineNumber":151,"author":{"gitId":"tzejit"},"content":"        userInput \u003d targetIndex.getOneBased() + STUDENTNUMBER_DESC_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":152,"author":{"gitId":"tzejit"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withStudentNumber(VALID_STUDENTNUMBER_AMY).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":153,"author":{"gitId":"weenleen"},"content":"        expectedCommand \u003d new EditStudentCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":154,"author":{"gitId":"tzejit"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-18"},{"lineNumber":155,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":156,"author":{"gitId":"tzejit"},"content":"        // userName","lastModifiedDate":"2021-10-18"},{"lineNumber":157,"author":{"gitId":"tzejit"},"content":"        userInput \u003d targetIndex.getOneBased() + USERNAME_DESC_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":158,"author":{"gitId":"tzejit"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withUserName(VALID_USERNAME_AMY).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":159,"author":{"gitId":"weenleen"},"content":"        expectedCommand \u003d new EditStudentCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":160,"author":{"gitId":"tzejit"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-18"},{"lineNumber":161,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":162,"author":{"gitId":"tzejit"},"content":"        // repoName","lastModifiedDate":"2021-10-18"},{"lineNumber":163,"author":{"gitId":"tzejit"},"content":"        userInput \u003d targetIndex.getOneBased() + REPONAME_DESC_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":164,"author":{"gitId":"tzejit"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withRepoName(VALID_REPONAME_AMY).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":165,"author":{"gitId":"weenleen"},"content":"        expectedCommand \u003d new EditStudentCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":166,"author":{"gitId":"tzejit"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-18"},{"lineNumber":167,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":170,"author":{"gitId":"tzejit"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":171,"author":{"gitId":"weenleen"},"content":"        expectedCommand \u003d new EditStudentCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":177,"author":{"gitId":"tzejit"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":178,"author":{"gitId":"tzejit"},"content":"        String userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY","lastModifiedDate":"2021-10-08"},{"lineNumber":179,"author":{"gitId":"tzejit"},"content":"                + TAG_DESC_FRIEND + EMAIL_DESC_AMY + TAG_DESC_FRIEND + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2021-10-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"weenleen"},"content":"        EditStudentCommand.EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder()","lastModifiedDate":"2021-10-23"},{"lineNumber":182,"author":{"gitId":"tzejit"},"content":"                .withEmail(VALID_EMAIL_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2021-09-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"weenleen"},"content":"        EditStudentCommand expectedCommand \u003d new EditStudentCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"tzejit"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":193,"author":{"gitId":"tzejit"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_EMAIL_DESC + EMAIL_DESC_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":194,"author":{"gitId":"weenleen"},"content":"        EditStudentCommand.EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder()","lastModifiedDate":"2021-10-23"},{"lineNumber":195,"author":{"gitId":"weenleen"},"content":"                .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-10-23"},{"lineNumber":196,"author":{"gitId":"tzejit"},"content":"                .build();","lastModifiedDate":"2021-10-08"},{"lineNumber":197,"author":{"gitId":"weenleen"},"content":"        EditStudentCommand expectedCommand \u003d new EditStudentCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"tzejit"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":202,"author":{"gitId":"tzejit"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":203,"author":{"gitId":"weenleen"},"content":"        expectedCommand \u003d new EditStudentCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":209,"author":{"gitId":"tzejit"},"content":"        Index targetIndex \u003d INDEX_THIRD_STUDENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"weenleen"},"content":"        EditStudentCommand.EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withTags().build();","lastModifiedDate":"2021-10-23"},{"lineNumber":213,"author":{"gitId":"weenleen"},"content":"        EditStudentCommand expectedCommand \u003d new EditStudentCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"weenleen":31,"-":123,"tzejit":63}},{"path":"src/test/java/seedu/address/logic/parser/EditTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"somekoreanboi"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESCRIPTION_DESC_BORING;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESCRIPTION_DESC_FUN;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DESCRIPTION_DESC;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TASKNAME_DESC_PLAY;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_BORING;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_FUN;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_NAME_PLAY;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_TASK;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"somekoreanboi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.logic.commands.EditTaskCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"somekoreanboi"},"content":"public class EditTaskCommandParserTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"somekoreanboi"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"somekoreanboi"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"somekoreanboi"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"somekoreanboi"},"content":"    private EditTaskCommandParser parser \u003d new EditTaskCommandParser();","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"somekoreanboi"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"somekoreanboi"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"somekoreanboi"},"content":"        // no index specified","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"somekoreanboi"},"content":"        assertParseFailure(parser, VALID_TASK_NAME_PLAY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"somekoreanboi"},"content":"        // no field specified","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"somekoreanboi"},"content":"        assertParseFailure(parser, \"1\", EditTaskCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"somekoreanboi"},"content":"        // no index and no field specified","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"somekoreanboi"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"somekoreanboi"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"somekoreanboi"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"somekoreanboi"},"content":"        // negative index","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"somekoreanboi"},"content":"        assertParseFailure(parser, \"-5\" + TASKNAME_DESC_PLAY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"somekoreanboi"},"content":"        // zero index","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"somekoreanboi"},"content":"        assertParseFailure(parser, \"0\" + TASKNAME_DESC_PLAY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"somekoreanboi"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"somekoreanboi"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"somekoreanboi"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"somekoreanboi"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"somekoreanboi"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"somekoreanboi"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"somekoreanboi"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, TaskName.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"somekoreanboi"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"somekoreanboi"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Student} being edited,","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"somekoreanboi"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"somekoreanboi"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"somekoreanboi"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"somekoreanboi"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"somekoreanboi"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"somekoreanboi"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, TaskName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"somekoreanboi"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"somekoreanboi"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"somekoreanboi"},"content":"        Index targetIndex \u003d INDEX_SECOND_TASK;","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"somekoreanboi"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_DESC_HUSBAND","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"somekoreanboi"},"content":"                + TASKNAME_DESC_PLAY + TAG_DESC_FRIEND;","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"somekoreanboi"},"content":"        EditTaskCommand.EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withName(VALID_TASK_NAME_PLAY)","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"somekoreanboi"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"somekoreanboi"},"content":"        EditTaskCommand expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"somekoreanboi"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"somekoreanboi"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"somekoreanboi"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"somekoreanboi"},"content":"        Index targetIndex \u003d INDEX_FIRST_TASK;","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"somekoreanboi"},"content":"        String userInput \u003d targetIndex.getOneBased() + DESCRIPTION_DESC_BORING;","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"somekoreanboi"},"content":"        EditTaskCommand.EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder()","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"somekoreanboi"},"content":"                .withDescription(VALID_DESCRIPTION_BORING).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"somekoreanboi"},"content":"        EditTaskCommand expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"somekoreanboi"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"somekoreanboi"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"somekoreanboi"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"somekoreanboi"},"content":"        // name","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"somekoreanboi"},"content":"        Index targetIndex \u003d INDEX_THIRD_TASK;","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"somekoreanboi"},"content":"        String userInput \u003d targetIndex.getOneBased() + TASKNAME_DESC_PLAY;","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"somekoreanboi"},"content":"        EditTaskCommand.EditTaskDescriptor descriptor \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"somekoreanboi"},"content":"                new EditTaskDescriptorBuilder().withName(VALID_TASK_NAME_PLAY).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"somekoreanboi"},"content":"        EditTaskCommand expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"somekoreanboi"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"somekoreanboi"},"content":"        // description","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"somekoreanboi"},"content":"        userInput \u003d targetIndex.getOneBased() + DESCRIPTION_DESC_BORING;","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"somekoreanboi"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder().withDescription(VALID_DESCRIPTION_BORING).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"somekoreanboi"},"content":"        expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"somekoreanboi"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"somekoreanboi"},"content":"        // tags","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"somekoreanboi"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"somekoreanboi"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"somekoreanboi"},"content":"        expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"somekoreanboi"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"somekoreanboi"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"somekoreanboi"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"somekoreanboi"},"content":"        Index targetIndex \u003d INDEX_FIRST_TASK;","lastModifiedDate":"2021-10-21"},{"lineNumber":136,"author":{"gitId":"somekoreanboi"},"content":"        String userInput \u003d targetIndex.getOneBased() + DESCRIPTION_DESC_BORING","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"somekoreanboi"},"content":"                + TAG_DESC_FRIEND + DESCRIPTION_DESC_BORING","lastModifiedDate":"2021-10-21"},{"lineNumber":138,"author":{"gitId":"somekoreanboi"},"content":"                + TAG_DESC_FRIEND + DESCRIPTION_DESC_FUN + TAG_DESC_HUSBAND;","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":140,"author":{"gitId":"somekoreanboi"},"content":"        EditTaskCommand.EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder()","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"somekoreanboi"},"content":"                .withDescription(VALID_DESCRIPTION_FUN).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"somekoreanboi"},"content":"                .build();","lastModifiedDate":"2021-10-21"},{"lineNumber":143,"author":{"gitId":"somekoreanboi"},"content":"        EditTaskCommand expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"somekoreanboi"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":146,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"somekoreanboi"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"somekoreanboi"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"somekoreanboi"},"content":"        // no other valid values specified","lastModifiedDate":"2021-10-21"},{"lineNumber":151,"author":{"gitId":"somekoreanboi"},"content":"        Index targetIndex \u003d INDEX_FIRST_TASK;","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"somekoreanboi"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_DESCRIPTION_DESC + DESCRIPTION_DESC_BORING;","lastModifiedDate":"2021-10-21"},{"lineNumber":153,"author":{"gitId":"somekoreanboi"},"content":"        EditTaskCommand.EditTaskDescriptor descriptor \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"somekoreanboi"},"content":"                new EditTaskDescriptorBuilder().withDescription(VALID_DESCRIPTION_BORING).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"somekoreanboi"},"content":"        EditTaskCommand expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"somekoreanboi"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"somekoreanboi"},"content":"        // other valid values specified","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"somekoreanboi"},"content":"        userInput \u003d targetIndex.getOneBased() + DESCRIPTION_DESC_BORING;","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"somekoreanboi"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder().withDescription(VALID_DESCRIPTION_BORING).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"somekoreanboi"},"content":"        expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"somekoreanboi"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"somekoreanboi"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"somekoreanboi"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"somekoreanboi"},"content":"        Index targetIndex \u003d INDEX_THIRD_TASK;","lastModifiedDate":"2021-10-21"},{"lineNumber":168,"author":{"gitId":"somekoreanboi"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":170,"author":{"gitId":"somekoreanboi"},"content":"        EditTaskCommand.EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withTags().build();","lastModifiedDate":"2021-10-21"},{"lineNumber":171,"author":{"gitId":"somekoreanboi"},"content":"        EditTaskCommand expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"somekoreanboi"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":175,"author":{"gitId":"somekoreanboi"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"somekoreanboi":176}},{"path":"src/test/java/seedu/address/logic/parser/FindGroupCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wanninglim"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"wanninglim"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"wanninglim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"wanninglim"},"content":"import seedu.address.logic.commands.FindGroupCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.group.GroupContainsKeywordsPredicate;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"wanninglim"},"content":"public class FindGroupCommandParserTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"wanninglim"},"content":"    private FindGroupCommandParser parser \u003d new FindGroupCommandParser();","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"wanninglim"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"wanninglim"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"wanninglim"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"wanninglim"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindGroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"wanninglim"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"wanninglim"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"wanninglim"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"wanninglim"},"content":"        FindGroupCommand expectedFindGroupCommand \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"wanninglim"},"content":"                new FindGroupCommand(new GroupContainsKeywordsPredicate(Arrays.asList(\"W14-3\", \"W14-4\")));","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"wanninglim"},"content":"        assertParseSuccess(parser, \"W14-3 W14-4\", expectedFindGroupCommand);","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"wanninglim"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"wanninglim"},"content":"        assertParseSuccess(parser, \" \\n W14-3 \\n \\t W14-4  \\t\", expectedFindGroupCommand);","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"wanninglim"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"wanninglim":35}},{"path":"src/test/java/seedu/address/logic/parser/FindStudentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"wanninglim"},"content":"import seedu.address.logic.commands.FindStudentCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"wanninglim"},"content":"public class FindStudentCommandParserTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"wanninglim"},"content":"    private FindStudentCommandParser parser \u003d new FindStudentCommandParser();","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"wanninglim"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"wanninglim"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindStudentCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"wanninglim"},"content":"        FindStudentCommand expectedFindStudentCommand \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"wanninglim"},"content":"                new FindStudentCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"wanninglim"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindStudentCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"wanninglim"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindStudentCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"wanninglim":9,"-":25,"tzejit":1}},{"path":"src/test/java/seedu/address/logic/parser/MarkStudentAttCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wanninglim"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_WEEK;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"wanninglim"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"wanninglim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"wanninglim"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"wanninglim"},"content":"import seedu.address.logic.commands.MarkStudentAttCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"wanninglim"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"wanninglim"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"wanninglim"},"content":" * outside of the MarkStudentAttCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"wanninglim"},"content":" * same path through the MarkStudentAttCommand, and therefore we test only one of them.","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"wanninglim"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"wanninglim"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"wanninglim"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"wanninglim"},"content":"public class MarkStudentAttCommandParserTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"wanninglim"},"content":"    private MarkStudentAttCommandParser parser \u003d new MarkStudentAttCommandParser();","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"wanninglim"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"wanninglim"},"content":"    public void parse_validArgs_returnsMarkStudentAttCommand() {","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"wanninglim"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"wanninglim"},"content":"        String userInput \u003d targetIndex.getOneBased() + VALID_WEEK;","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"wanninglim"},"content":"        assertParseSuccess(parser, userInput,","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"wanninglim"},"content":"                new MarkStudentAttCommand(","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"wanninglim"},"content":"                        Collections.singletonList(INDEX_FIRST_STUDENT), 1));","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"wanninglim"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"wanninglim"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"wanninglim"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"wanninglim"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkStudentAttCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"wanninglim"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"wanninglim":42}},{"path":"src/test/java/seedu/address/logic/parser/MarkStudentPartCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wanninglim"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_WEEK;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"wanninglim"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"wanninglim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"wanninglim"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"wanninglim"},"content":"import seedu.address.logic.commands.MarkStudentPartCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"wanninglim"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"wanninglim"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"wanninglim"},"content":" * outside of the MarkStudentPartCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"wanninglim"},"content":" * same path through the MarkStudentPartCommand, and therefore we test only one of them.","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"wanninglim"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"wanninglim"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"wanninglim"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"wanninglim"},"content":"public class MarkStudentPartCommandParserTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"wanninglim"},"content":"    private MarkStudentPartCommandParser parser \u003d new MarkStudentPartCommandParser();","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"wanninglim"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"wanninglim"},"content":"    public void parse_validArgs_returnsMarkStudentPartCommand() {","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"wanninglim"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"wanninglim"},"content":"        String userInput \u003d targetIndex.getOneBased() + VALID_WEEK;","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"wanninglim"},"content":"        assertParseSuccess(parser, userInput,","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"wanninglim"},"content":"                new MarkStudentPartCommand(Collections.singletonList(INDEX_FIRST_STUDENT), 1));","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"wanninglim"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"wanninglim"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"wanninglim"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"wanninglim"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkStudentPartCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"wanninglim"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"wanninglim":41}},{"path":"src/test/java/seedu/address/logic/parser/MarkTaskDoneCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weenleen"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"weenleen"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"weenleen"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"weenleen"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"weenleen"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"weenleen"},"content":"import java.util.List;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"weenleen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.MarkTaskDoneCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"weenleen"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"weenleen"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"weenleen"},"content":" * outside the MarkTaskDoneCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"weenleen"},"content":" * same path through the MarkTaskDoneCommand, and therefore we test only one of them.","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"weenleen"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"weenleen"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"weenleen"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"weenleen"},"content":"public class MarkTaskDoneCommandParserTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"weenleen"},"content":"    private final MarkTaskDoneCommandParser parser \u003d new MarkTaskDoneCommandParser();","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"weenleen"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"weenleen"},"content":"    public void parse_validArgs_returnsMarkTaskDoneCommand() {","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"weenleen"},"content":"        String userInput \u003d String.valueOf(INDEX_FIRST_TASK.getOneBased());","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"weenleen"},"content":"        assertParseSuccess(parser, userInput,","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"weenleen"},"content":"                new MarkTaskDoneCommand(List.of(INDEX_FIRST_TASK)));","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"weenleen"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"weenleen"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"weenleen"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"weenleen"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkTaskDoneCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"weenleen"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"weenleen"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"weenleen":38}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_GROUP;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.commons.RepoName;","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.StudentNumber;","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.UserName;","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"    private static final String INVALID_STUDENTNUMBER \u003d \"a91023b\";","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"    private static final String INVALID_USERNAME \u003d \"@a@\";","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"    private static final String INVALID_REPONAME \u003d \"}sad{P\";","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"    private static final String INVALID_GROUPNAME \u003d \"W1-2\";","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"    private static final String VALID_STUDENTNUMBER \u003d \"A0123456A\";","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"    private static final String VALID_USERNAME \u003d \"racch\";","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"    private static final String VALID_REPONAME \u003d \"ab3\";","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"    private static final String VALID_GROUPNAME \u003d \"W01-4\";","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"        assertEquals(INDEX_FIRST_STUDENT, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"tzejit"},"content":"        assertEquals(INDEX_FIRST_STUDENT, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"    public void parseMultipleIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMultipleIndex(\"10 a\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"    public void parseMultipleIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, () -\u003e ParserUtil.parseMultipleIndex(","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"                Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"tzejit"},"content":"    public void parseMultipleIndex_validInput_success() throws Exception {","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"        ArrayList\u003cIndex\u003e expectedIndexArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"tzejit"},"content":"        expectedIndexArray.add(INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"tzejit"},"content":"        expectedIndexArray.add(INDEX_THIRD_GROUP);","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"tzejit"},"content":"        // 1 whitespace","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"tzejit"},"content":"        assertEquals(expectedIndexArray, ParserUtil.parseMultipleIndex(\"1 3\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"tzejit"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"tzejit"},"content":"        assertEquals(expectedIndexArray, ParserUtil.parseMultipleIndex(\"  1 3  \"));","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"tzejit"},"content":"        // Multiple whitespaces","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"tzejit"},"content":"        assertEquals(expectedIndexArray, ParserUtil.parseMultipleIndex(\"1    3\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":141,"author":{"gitId":"tzejit"},"content":"    public void parseStudentNumber_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":142,"author":{"gitId":"tzejit"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseStudentNumber((String) null));","lastModifiedDate":"2021-10-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":146,"author":{"gitId":"tzejit"},"content":"    public void parseStudentNumber_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":147,"author":{"gitId":"tzejit"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseStudentNumber(INVALID_STUDENTNUMBER));","lastModifiedDate":"2021-10-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":151,"author":{"gitId":"tzejit"},"content":"    public void parseStudentNumber_validValueWithoutWhitespace_returnsStudentNumber() throws Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":152,"author":{"gitId":"tzejit"},"content":"        StudentNumber expectedStudentNumber \u003d new StudentNumber(VALID_STUDENTNUMBER);","lastModifiedDate":"2021-10-13"},{"lineNumber":153,"author":{"gitId":"tzejit"},"content":"        assertEquals(expectedStudentNumber, ParserUtil.parseStudentNumber(VALID_STUDENTNUMBER));","lastModifiedDate":"2021-10-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":157,"author":{"gitId":"tzejit"},"content":"    public void parseStudentNumber_validValueWithWhitespace_returnsTrimmedStudentNumber() throws Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":158,"author":{"gitId":"tzejit"},"content":"        String studentNumberWithWhitespace \u003d WHITESPACE + VALID_STUDENTNUMBER + WHITESPACE;","lastModifiedDate":"2021-10-13"},{"lineNumber":159,"author":{"gitId":"tzejit"},"content":"        StudentNumber expectedStudentNumber \u003d new StudentNumber(VALID_STUDENTNUMBER);","lastModifiedDate":"2021-10-13"},{"lineNumber":160,"author":{"gitId":"tzejit"},"content":"        assertEquals(expectedStudentNumber, ParserUtil.parseStudentNumber(studentNumberWithWhitespace));","lastModifiedDate":"2021-10-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":164,"author":{"gitId":"tzejit"},"content":"    public void parseUserName_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":165,"author":{"gitId":"tzejit"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseUserName((String) null));","lastModifiedDate":"2021-10-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":169,"author":{"gitId":"tzejit"},"content":"    public void parseUserName_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":170,"author":{"gitId":"tzejit"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseUserName(INVALID_USERNAME));","lastModifiedDate":"2021-10-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":174,"author":{"gitId":"tzejit"},"content":"    public void parseUserName_validValueWithoutWhitespace_returnsUserName() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":175,"author":{"gitId":"tzejit"},"content":"        UserName expectedUserName \u003d new UserName(VALID_USERNAME);","lastModifiedDate":"2021-10-18"},{"lineNumber":176,"author":{"gitId":"tzejit"},"content":"        assertEquals(expectedUserName, ParserUtil.parseUserName(VALID_USERNAME));","lastModifiedDate":"2021-10-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":180,"author":{"gitId":"tzejit"},"content":"    public void parseUserName_validValueWithWhitespace_returnsTrimmedUserName() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":181,"author":{"gitId":"tzejit"},"content":"        String userNameWithWhitespace \u003d WHITESPACE + VALID_USERNAME + WHITESPACE;","lastModifiedDate":"2021-10-18"},{"lineNumber":182,"author":{"gitId":"tzejit"},"content":"        UserName expectedUserName \u003d new UserName(VALID_USERNAME);","lastModifiedDate":"2021-10-18"},{"lineNumber":183,"author":{"gitId":"tzejit"},"content":"        assertEquals(expectedUserName, ParserUtil.parseUserName(userNameWithWhitespace));","lastModifiedDate":"2021-10-18"},{"lineNumber":184,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":185,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":186,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":187,"author":{"gitId":"tzejit"},"content":"    public void parseRepoName_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":188,"author":{"gitId":"tzejit"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseRepo((String) null));","lastModifiedDate":"2021-10-18"},{"lineNumber":189,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":190,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":191,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":192,"author":{"gitId":"tzejit"},"content":"    public void parseRepoName_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":193,"author":{"gitId":"tzejit"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseRepo(INVALID_REPONAME));","lastModifiedDate":"2021-10-18"},{"lineNumber":194,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":195,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":196,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":197,"author":{"gitId":"tzejit"},"content":"    public void parseRepoName_validValueWithoutWhitespace_returnsRepoName() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":198,"author":{"gitId":"tzejit"},"content":"        RepoName expectedRepoName \u003d new RepoName(VALID_REPONAME);","lastModifiedDate":"2021-10-18"},{"lineNumber":199,"author":{"gitId":"tzejit"},"content":"        assertEquals(expectedRepoName, ParserUtil.parseRepo(VALID_REPONAME));","lastModifiedDate":"2021-10-18"},{"lineNumber":200,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":201,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":202,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":203,"author":{"gitId":"tzejit"},"content":"    public void parseRepoName_validValueWithWhitespace_returnsTrimmedRepoName() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":204,"author":{"gitId":"tzejit"},"content":"        String repoNameWithWhitespace \u003d WHITESPACE + VALID_REPONAME + WHITESPACE;","lastModifiedDate":"2021-10-18"},{"lineNumber":205,"author":{"gitId":"tzejit"},"content":"        RepoName expectedRepoName \u003d new RepoName(VALID_REPONAME);","lastModifiedDate":"2021-10-18"},{"lineNumber":206,"author":{"gitId":"tzejit"},"content":"        assertEquals(expectedRepoName, ParserUtil.parseRepo(repoNameWithWhitespace));","lastModifiedDate":"2021-10-18"},{"lineNumber":207,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":208,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":209,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":210,"author":{"gitId":"tzejit"},"content":"    public void parseGroupName_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":211,"author":{"gitId":"tzejit"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseGroupName((String) null));","lastModifiedDate":"2021-10-18"},{"lineNumber":212,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":213,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":214,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":215,"author":{"gitId":"tzejit"},"content":"    public void parseGroupName_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":216,"author":{"gitId":"tzejit"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseGroupName(INVALID_GROUPNAME));","lastModifiedDate":"2021-10-18"},{"lineNumber":217,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":218,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":219,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":220,"author":{"gitId":"tzejit"},"content":"    public void parseGroupName_validValueWithoutWhitespace_returnsGroupName() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":221,"author":{"gitId":"tzejit"},"content":"        GroupName expectedGroupName \u003d new GroupName(VALID_GROUPNAME);","lastModifiedDate":"2021-10-18"},{"lineNumber":222,"author":{"gitId":"tzejit"},"content":"        assertEquals(expectedGroupName, ParserUtil.parseGroupName(VALID_GROUPNAME));","lastModifiedDate":"2021-10-18"},{"lineNumber":223,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":224,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":225,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":226,"author":{"gitId":"tzejit"},"content":"    public void parseGroupName_validValueWithWhitespace_returnsTrimmedGroupName() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":227,"author":{"gitId":"tzejit"},"content":"        String groupNameWithWhitespace \u003d WHITESPACE + VALID_GROUPNAME + WHITESPACE;","lastModifiedDate":"2021-10-18"},{"lineNumber":228,"author":{"gitId":"tzejit"},"content":"        GroupName expectedGroupName \u003d new GroupName(VALID_GROUPNAME);","lastModifiedDate":"2021-10-18"},{"lineNumber":229,"author":{"gitId":"tzejit"},"content":"        assertEquals(expectedGroupName, ParserUtil.parseGroupName(groupNameWithWhitespace));","lastModifiedDate":"2021-10-18"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":277,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"-":165,"tzejit":112}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"weenleen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"        assertEquals(Collections.emptyList(), addressBook.getStudentList());","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"    public void resetData_withDuplicateStudents_throwsDuplicateStudentException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"        // Two students with the same identity fields","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"        List\u003cStudent\u003e newStudents \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newStudents);","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"    public void hasStudent_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasStudent(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"    public void hasStudent_studentNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"tzejit"},"content":"        assertFalse(addressBook.hasStudent(ALICE));","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"    public void hasStudent_studentInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"        addressBook.addStudent(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"        assertTrue(addressBook.hasStudent(ALICE));","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"    public void hasStudent_studentWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"        addressBook.addStudent(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"tzejit"},"content":"        assertTrue(addressBook.hasStudent(editedAlice));","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"tzejit"},"content":"    public void getStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"tzejit"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getStudentList().remove(0));","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"tzejit"},"content":"     * A stub ReadOnlyAddressBook whose students list can violate interface constraints.","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"tzejit"},"content":"        private final ObservableList\u003cStudent\u003e students \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"weenleen"},"content":"        private final ObservableList\u003cTask\u003e tasks \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"tzejit"},"content":"        private final ObservableList\u003cGroup\u003e groups \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"tzejit"},"content":"        AddressBookStub(Collection\u003cStudent\u003e students) {","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"tzejit"},"content":"            this.students.setAll(students);","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"tzejit"},"content":"        public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"tzejit"},"content":"            return students;","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"weenleen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"weenleen"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"weenleen"},"content":"        public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"weenleen"},"content":"            return tasks;","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"weenleen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"tzejit"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"tzejit"},"content":"        public ObservableList\u003cGroup\u003e getGroupList() {","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"tzejit"},"content":"            return groups;","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"weenleen":7,"-":71,"tzejit":37}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.BENSON;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"    public void hasStudent_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasStudent(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"    public void hasStudent_studentNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"tzejit"},"content":"        assertFalse(modelManager.hasStudent(ALICE));","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"tzejit"},"content":"    public void hasStudent_studentInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"tzejit"},"content":"        modelManager.addStudent(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"tzejit"},"content":"        assertTrue(modelManager.hasStudent(ALICE));","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"tzejit"},"content":"    public void getFilteredStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"tzejit"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredStudentList().remove(0));","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"tzejit"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withStudent(ALICE).withStudent(BENSON).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"tzejit"},"content":"        modelManager.updateFilteredStudentList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"tzejit"},"content":"        modelManager.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"-":116,"tzejit":16}},{"path":"src/test/java/seedu/address/model/commons/RepoNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.model.commons;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"public class RepoNameTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"        assertThrows(NullPointerException.class, () -\u003e new RepoName(null));","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"        String invalidName \u003d \"re!po\";","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new RepoName(invalidName));","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"    public void isValidName() {","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"        // null name","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"        assertThrows(NullPointerException.class, () -\u003e RepoName.isValidRepoName(null));","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"        // invalid name","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"        assertFalse(RepoName.isValidRepoName(\"\")); // empty string","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"        assertFalse(RepoName.isValidRepoName(\" \")); // space only","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"        assertFalse(RepoName.isValidRepoName(\"peter repo\")); // contains space","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"        assertFalse(RepoName.isValidRepoName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"        assertFalse(RepoName.isValidRepoName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"        // valid name","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"        assertTrue(RepoName.isValidRepoName(\"w_1~4-4.ds\")); // all no","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"tzejit":39}},{"path":"src/test/java/seedu/address/model/group/GroupNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.model.group;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"public class GroupNameTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"        assertThrows(NullPointerException.class, () -\u003e new GroupName(null));","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"        String invalidName \u003d \"w4-4\";","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new GroupName(invalidName));","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"    public void isValidName() {","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"        // null name","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"        assertThrows(NullPointerException.class, () -\u003e GroupName.isValidName(null));","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"        // invalid name","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"        assertFalse(GroupName.isValidName(\"\")); // empty string","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"        assertFalse(GroupName.isValidName(\" \")); // spaces only","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"        assertFalse(GroupName.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"        assertFalse(GroupName.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"        assertFalse(GroupName.isValidName(\"w4-4\")); // first numerical input only 1 digit","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"        assertFalse(GroupName.isValidName(\"w14-44\")); // second numerical input more than 1 digit","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"        assertFalse(GroupName.isValidName(\"w14 4\")); // no dash between numerical inputs","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"        // valid name","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"        assertTrue(GroupName.isValidName(\"w14-4\")); // lowercase letter","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"        assertTrue(GroupName.isValidName(\"F04-2\")); // uppercase letter","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"tzejit":41}},{"path":"src/test/java/seedu/address/model/group/GroupTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.model.group;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUPNAME_G1;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUPNAME_G2;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REPONAME_BOB;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_YEAR_G2;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalGroups.GROUP1;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalGroups.GROUP2;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"import seedu.address.testutil.GroupBuilder;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"public class GroupTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"        Group group \u003d new GroupBuilder().build();","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e group.getTags().remove(0));","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"    public void isSameGroup() {","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"        assertTrue(GROUP1.isSameGroup(GROUP1));","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"        assertFalse(GROUP1.isSameGroup(null));","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"        Group editedGroup1 \u003d new GroupBuilder(GROUP1).withName(VALID_GROUPNAME_G1).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"        assertTrue(GROUP1.isSameGroup(editedGroup1));","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"        editedGroup1 \u003d new GroupBuilder(GROUP1).withName(VALID_GROUPNAME_G2).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"        assertFalse(GROUP1.isSameGroup(editedGroup1));","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"        // name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"        Group editedGroup2 \u003d new GroupBuilder(GROUP2).withName(VALID_GROUPNAME_G2.toLowerCase()).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"        assertTrue(GROUP2.isSameGroup(editedGroup2));","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"    public void equals() {","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"        Group group1Copy \u003d new GroupBuilder(GROUP1).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"        assertTrue(GROUP1.equals(group1Copy));","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"        assertTrue(GROUP1.equals(GROUP1));","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"        assertFalse(GROUP1.equals(null));","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"        assertFalse(GROUP1.equals(5));","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"        assertFalse(GROUP1.equals(GROUP2));","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"tzejit"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"        Group editedGroup1 \u003d new GroupBuilder(GROUP1).withName(VALID_GROUPNAME_G2).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"        assertFalse(GROUP1.equals(editedGroup1));","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"        // different members -\u003e returns false","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"        editedGroup1 \u003d new GroupBuilder(GROUP1).withMembers(ALICE).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"        assertFalse(GROUP1.equals(editedGroup1));","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"        // different year -\u003e returns false","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"        editedGroup1 \u003d new GroupBuilder(GROUP1).withYear(VALID_YEAR_G2).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"        assertFalse(GROUP1.equals(editedGroup1));","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"        // different reponame -\u003e returns false","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"tzejit"},"content":"        editedGroup1 \u003d new GroupBuilder(GROUP1).withRepo(VALID_REPONAME_BOB).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"tzejit"},"content":"        assertFalse(GROUP1.equals(editedGroup1));","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"tzejit"},"content":"        editedGroup1 \u003d new GroupBuilder(GROUP1).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"tzejit"},"content":"        assertFalse(GROUP1.equals(editedGroup1));","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"tzejit":85}},{"path":"src/test/java/seedu/address/model/group/LinkYearTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.model.group;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"public class LinkYearTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"        assertThrows(NullPointerException.class, () -\u003e new LinkYear(null));","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"        String invalidName \u003d \"w4!\";","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new LinkYear(invalidName));","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"    public void isValidName() {","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"        // null name","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"        assertThrows(NullPointerException.class, () -\u003e LinkYear.isValidYear(null));","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"        // invalid name","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"        assertFalse(LinkYear.isValidYear(\"\")); // empty string","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"        assertFalse(LinkYear.isValidYear(\" \")); // space only","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"        assertFalse(LinkYear.isValidYear(\"may 2016\")); // contains space","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"        assertFalse(LinkYear.isValidYear(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"        assertFalse(LinkYear.isValidYear(\"20*20\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"        // valid name","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"        assertTrue(LinkYear.isValidYear(\"ay_20-21.21~22\")); // all no","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"tzejit":38}},{"path":"src/test/java/seedu/address/model/group/MembersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.model.group;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"public class MembersTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Members(null));","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"tzejit":14}},{"path":"src/test/java/seedu/address/model/group/UniqueGroupListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.model.group;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalGroups.GROUP1;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalGroups.GROUP2;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"import java.util.List;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.exceptions.DuplicateGroupException;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.exceptions.GroupNotFoundException;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"import seedu.address.testutil.GroupBuilder;","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"public class UniqueGroupListTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"    private final UniqueGroupList uniqueGroupList \u003d new UniqueGroupList();","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"    public void contains_nullGroup_throwsNullPointerException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGroupList.contains(null));","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"    public void contains_groupNotInList_returnsFalse() {","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"        assertFalse(uniqueGroupList.contains(GROUP1));","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"    public void contains_groupInList_returnsTrue() {","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"        uniqueGroupList.add(GROUP1);","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"        assertTrue(uniqueGroupList.contains(GROUP1));","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"    public void contains_groupWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"        uniqueGroupList.add(GROUP1);","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"        Group editedGroup1 \u003d new GroupBuilder(GROUP1).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"        assertTrue(uniqueGroupList.contains(editedGroup1));","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"    public void add_nullGroup_throwsNullPointerException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGroupList.add(null));","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"    public void add_duplicateGroup_throwsDuplicateStudentException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"        uniqueGroupList.add(GROUP1);","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"        assertThrows(DuplicateGroupException.class, () -\u003e uniqueGroupList.add(GROUP1));","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"    public void setGroup_nullTargetGroup_throwsNullPointerException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGroupList.setGroup(null, GROUP1));","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"tzejit"},"content":"    public void setGroup_nullEditedGroup_throwsNullPointerException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGroupList.setGroup(GROUP1, null));","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"    public void setGroup_targetGroupNotInList_throwsStudentNotFoundException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"        assertThrows(GroupNotFoundException.class, () -\u003e uniqueGroupList.setGroup(GROUP1, GROUP1));","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"    public void setGroup_editedGroupIsSameGroup_success() {","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"        uniqueGroupList.add(GROUP1);","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"        uniqueGroupList.setGroup(GROUP1, GROUP1);","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"tzejit"},"content":"        UniqueGroupList expectedUniqueGroupList \u003d new UniqueGroupList();","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"tzejit"},"content":"        expectedUniqueGroupList.add(GROUP1);","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"tzejit"},"content":"        assertEquals(uniqueGroupList, this.uniqueGroupList);","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"tzejit"},"content":"    public void setGroup_editedGroupHasSameIdentity_success() {","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"tzejit"},"content":"        uniqueGroupList.add(GROUP1);","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"tzejit"},"content":"        Group editedGroup \u003d new GroupBuilder(GROUP1).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"tzejit"},"content":"                .build();","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"tzejit"},"content":"        uniqueGroupList.setGroup(GROUP1, editedGroup);","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"tzejit"},"content":"        UniqueGroupList expectedUniqueGroupList \u003d new UniqueGroupList();","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"tzejit"},"content":"        expectedUniqueGroupList.add(editedGroup);","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"tzejit"},"content":"        assertEquals(expectedUniqueGroupList, uniqueGroupList);","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"tzejit"},"content":"    public void setGroup_editedGroupHasDifferentIdentity_success() {","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"tzejit"},"content":"        uniqueGroupList.add(GROUP1);","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"tzejit"},"content":"        uniqueGroupList.setGroup(GROUP1, GROUP2);","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"tzejit"},"content":"        UniqueGroupList expectedUniqueGroupList \u003d new UniqueGroupList();","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"tzejit"},"content":"        expectedUniqueGroupList.add(GROUP2);","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"tzejit"},"content":"        assertEquals(expectedUniqueGroupList, uniqueGroupList);","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"tzejit"},"content":"    public void setGroup_editedGroupHasNonUniqueIdentity_throwsDuplicateStudentException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"tzejit"},"content":"        uniqueGroupList.add(GROUP1);","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"tzejit"},"content":"        uniqueGroupList.add(GROUP2);","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"tzejit"},"content":"        assertThrows(DuplicateGroupException.class, () -\u003e uniqueGroupList.setGroup(GROUP1, GROUP2));","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":111,"author":{"gitId":"tzejit"},"content":"    public void remove_nullGroup_throwsNullPointerException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":112,"author":{"gitId":"tzejit"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGroupList.remove(null));","lastModifiedDate":"2021-10-23"},{"lineNumber":113,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":114,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":115,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":116,"author":{"gitId":"tzejit"},"content":"    public void remove_groupDoesNotExist_throwsGroupNotFoundException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":117,"author":{"gitId":"tzejit"},"content":"        assertThrows(GroupNotFoundException.class, () -\u003e uniqueGroupList.remove(GROUP1));","lastModifiedDate":"2021-10-23"},{"lineNumber":118,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":119,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":120,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":121,"author":{"gitId":"tzejit"},"content":"    public void remove_existingGroup_removesGroup() {","lastModifiedDate":"2021-10-23"},{"lineNumber":122,"author":{"gitId":"tzejit"},"content":"        uniqueGroupList.add(GROUP1);","lastModifiedDate":"2021-10-23"},{"lineNumber":123,"author":{"gitId":"tzejit"},"content":"        uniqueGroupList.remove(GROUP1);","lastModifiedDate":"2021-10-23"},{"lineNumber":124,"author":{"gitId":"tzejit"},"content":"        UniqueGroupList expectedUniqueGroupList \u003d new UniqueGroupList();","lastModifiedDate":"2021-10-23"},{"lineNumber":125,"author":{"gitId":"tzejit"},"content":"        assertEquals(expectedUniqueGroupList, uniqueGroupList);","lastModifiedDate":"2021-10-23"},{"lineNumber":126,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":127,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":128,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":129,"author":{"gitId":"tzejit"},"content":"    public void setGroups_nullUniqueGroupList_throwsNullPointerException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":130,"author":{"gitId":"tzejit"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGroupList.setGroups((UniqueGroupList) null));","lastModifiedDate":"2021-10-23"},{"lineNumber":131,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":132,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":133,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":134,"author":{"gitId":"tzejit"},"content":"    public void setGroups_uniqueGroupList_replacesOwnListWithProvidedUniqueGroupList() {","lastModifiedDate":"2021-10-23"},{"lineNumber":135,"author":{"gitId":"tzejit"},"content":"        uniqueGroupList.add(GROUP1);","lastModifiedDate":"2021-10-23"},{"lineNumber":136,"author":{"gitId":"tzejit"},"content":"        UniqueGroupList expectedUniqueGroupList \u003d new UniqueGroupList();","lastModifiedDate":"2021-10-23"},{"lineNumber":137,"author":{"gitId":"tzejit"},"content":"        expectedUniqueGroupList.add(GROUP2);","lastModifiedDate":"2021-10-23"},{"lineNumber":138,"author":{"gitId":"tzejit"},"content":"        uniqueGroupList.setGroups(expectedUniqueGroupList);","lastModifiedDate":"2021-10-23"},{"lineNumber":139,"author":{"gitId":"tzejit"},"content":"        assertEquals(expectedUniqueGroupList, uniqueGroupList);","lastModifiedDate":"2021-10-23"},{"lineNumber":140,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":141,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":142,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":143,"author":{"gitId":"tzejit"},"content":"    public void setGroups_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":144,"author":{"gitId":"tzejit"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGroupList.setGroups((List\u003cGroup\u003e) null));","lastModifiedDate":"2021-10-23"},{"lineNumber":145,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":146,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":147,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":148,"author":{"gitId":"tzejit"},"content":"    public void setGroups_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-10-23"},{"lineNumber":149,"author":{"gitId":"tzejit"},"content":"        uniqueGroupList.add(GROUP1);","lastModifiedDate":"2021-10-23"},{"lineNumber":150,"author":{"gitId":"tzejit"},"content":"        List\u003cGroup\u003e groupList \u003d Collections.singletonList(GROUP2);","lastModifiedDate":"2021-10-23"},{"lineNumber":151,"author":{"gitId":"tzejit"},"content":"        uniqueGroupList.setGroups(groupList);","lastModifiedDate":"2021-10-23"},{"lineNumber":152,"author":{"gitId":"tzejit"},"content":"        UniqueGroupList expectedUniqueGroupList \u003d new UniqueGroupList();","lastModifiedDate":"2021-10-23"},{"lineNumber":153,"author":{"gitId":"tzejit"},"content":"        expectedUniqueGroupList.add(GROUP2);","lastModifiedDate":"2021-10-23"},{"lineNumber":154,"author":{"gitId":"tzejit"},"content":"        assertEquals(expectedUniqueGroupList, uniqueGroupList);","lastModifiedDate":"2021-10-23"},{"lineNumber":155,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":156,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":157,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":158,"author":{"gitId":"tzejit"},"content":"    public void setGroups_listWithDuplicateGroups_throwsDuplicateGroupException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":159,"author":{"gitId":"tzejit"},"content":"        List\u003cGroup\u003e listWithDuplicateGroups \u003d Arrays.asList(GROUP1, GROUP1);","lastModifiedDate":"2021-10-23"},{"lineNumber":160,"author":{"gitId":"tzejit"},"content":"        assertThrows(DuplicateGroupException.class, () -\u003e uniqueGroupList.setGroups(listWithDuplicateGroups));","lastModifiedDate":"2021-10-23"},{"lineNumber":161,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":162,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":163,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":164,"author":{"gitId":"tzejit"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":165,"author":{"gitId":"tzejit"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-10-23"},{"lineNumber":166,"author":{"gitId":"tzejit"},"content":"            -\u003e uniqueGroupList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-10-23"},{"lineNumber":167,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":168,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"tzejit":168}},{"path":"src/test/java/seedu/address/model/student/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":67,"tzejit":1}},{"path":"src/test/java/seedu/address/model/student/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice\")","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"                .withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":64,"tzejit":11}},{"path":"src/test/java/seedu/address/model/student/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":39,"tzejit":1}},{"path":"src/test/java/seedu/address/model/student/StudentNumberTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"public class StudentNumberTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"        assertThrows(NullPointerException.class, () -\u003e new StudentNumber(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"    public void constructor_invalidStudentNumber_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"        String invalidStudentNumber \u003d \"\";","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new StudentNumber(invalidStudentNumber));","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"    public void isValidStudentNumber() {","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"        // null student number","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"        assertThrows(NullPointerException.class, () -\u003e StudentNumber.isValidNumber(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"        // blank student number","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"        assertFalse(StudentNumber.isValidNumber(\"\")); // empty string","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"        assertFalse(StudentNumber.isValidNumber(\" \")); // spaces only","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"        // missing parts","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"        assertFalse(StudentNumber.isValidNumber(\"0123456A\")); // missing starting character","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"        assertFalse(StudentNumber.isValidNumber(\"A0123456\")); // missing ending character","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"        assertFalse(StudentNumber.isValidNumber(\"A012345A\")); // missing number","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"        // invalid parts","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"        assertFalse(StudentNumber.isValidNumber(\"@1234567B\")); // invalid character","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"        assertFalse(StudentNumber.isValidNumber(\"A01234_56B\")); // underscore in student number","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"        assertFalse(StudentNumber.isValidNumber(\"A0 123456B\")); // spaces in student number","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"        assertFalse(StudentNumber.isValidNumber(\" A0123456A\")); // leading space","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"        assertFalse(StudentNumber.isValidNumber(\"A0123456A \")); // trailing space","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"        assertFalse(StudentNumber.isValidNumber(\"AA0123456A\")); // double upper case character at the front","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"        assertFalse(StudentNumber.isValidNumber(\"A0123456AA\")); // double upper case character at the back","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"        assertFalse(StudentNumber.isValidNumber(\"aA0123456A\")); // double lower case character at the front","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"        assertFalse(StudentNumber.isValidNumber(\"A0123456Aa\")); // double lower case character at the back","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"        // valid Number","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"        assertTrue(StudentNumber.isValidNumber(\"a0123456A\")); // lower case starting character","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"        assertTrue(StudentNumber.isValidNumber(\"A0123456a\")); // lower case ending character","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"        assertTrue(StudentNumber.isValidNumber(\"a0123456a\")); // lower case starting and ending character","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"tzejit":54}},{"path":"src/test/java/seedu/address/model/student/StudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REPONAME_BOB;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENTNUMBER_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_USERNAME_BOB;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"public class StudentTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"        Student student \u003d new StudentBuilder().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e student.getTags().remove(0));","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"    public void isSameStudent() {","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"        assertTrue(ALICE.isSameStudent(ALICE));","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"        assertFalse(ALICE.isSameStudent(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withEmail(VALID_EMAIL_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"        assertTrue(ALICE.isSameStudent(editedAlice));","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"        assertFalse(ALICE.isSameStudent(editedAlice));","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"        Student editedBob \u003d new StudentBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"        assertFalse(BOB.isSameStudent(editedBob));","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"        editedBob \u003d new StudentBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"        assertFalse(BOB.isSameStudent(editedBob));","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"        Student aliceCopy \u003d new StudentBuilder(ALICE).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"        ;","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"tzejit"},"content":"        // different student number -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"tzejit"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withStudentNumber(VALID_STUDENTNUMBER_BOB).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"tzejit"},"content":"        // different username -\u003e returns false","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"tzejit"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withUserName(VALID_USERNAME_BOB).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"tzejit"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"tzejit"},"content":"        // different reponame -\u003e returns false","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"tzejit"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withRepoName(VALID_REPONAME_BOB).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"tzejit"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":92,"author":{"gitId":"tzejit"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"-":57,"tzejit":38}},{"path":"src/test/java/seedu/address/model/student/UniqueStudentListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.model.student;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.exceptions.StudentNotFoundException;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"public class UniqueStudentListTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"    private final UniqueStudentList uniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"    public void contains_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.contains(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"    public void contains_studentNotInList_returnsFalse() {","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"        assertFalse(uniqueStudentList.contains(ALICE));","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"    public void contains_studentInList_returnsTrue() {","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"        assertTrue(uniqueStudentList.contains(ALICE));","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"    public void contains_studentWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"                .build();","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"        assertTrue(uniqueStudentList.contains(editedAlice));","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"    public void add_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.add(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"    public void add_duplicateStudent_throwsDuplicateStudentException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e uniqueStudentList.add(ALICE));","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"    public void setStudent_nullTargetStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudent(null, ALICE));","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"    public void setStudent_nullEditedStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudent(ALICE, null));","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"    public void setStudent_targetStudentNotInList_throwsStudentNotFoundException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"        assertThrows(StudentNotFoundException.class, () -\u003e uniqueStudentList.setStudent(ALICE, ALICE));","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"    public void setStudent_editedStudentIsSameStudent_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"tzejit"},"content":"        uniqueStudentList.setStudent(ALICE, ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"tzejit"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"tzejit"},"content":"        expectedUniqueStudentList.add(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"tzejit"},"content":"    public void setStudent_editedStudentHasSameIdentity_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"tzejit"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"tzejit"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"tzejit"},"content":"                .build();","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"tzejit"},"content":"        uniqueStudentList.setStudent(ALICE, editedAlice);","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"tzejit"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"tzejit"},"content":"        expectedUniqueStudentList.add(editedAlice);","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"tzejit"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"tzejit"},"content":"    public void setStudent_editedStudentHasDifferentIdentity_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"tzejit"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"tzejit"},"content":"        uniqueStudentList.setStudent(ALICE, BOB);","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"tzejit"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"tzejit"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"tzejit"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"tzejit"},"content":"    public void setStudent_editedStudentHasNonUniqueIdentity_throwsDuplicateStudentException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"tzejit"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"tzejit"},"content":"        uniqueStudentList.add(BOB);","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"tzejit"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e uniqueStudentList.setStudent(ALICE, BOB));","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"tzejit"},"content":"    public void remove_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"tzejit"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.remove(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"tzejit"},"content":"    public void remove_studentDoesNotExist_throwsStudentNotFoundException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"tzejit"},"content":"        assertThrows(StudentNotFoundException.class, () -\u003e uniqueStudentList.remove(ALICE));","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"tzejit"},"content":"    public void remove_existingStudent_removesStudent() {","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"tzejit"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"tzejit"},"content":"        uniqueStudentList.remove(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"tzejit"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"tzejit"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"tzejit"},"content":"    public void setStudents_nullUniqueStudentList_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"tzejit"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudents((UniqueStudentList) null));","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"tzejit"},"content":"    public void setStudents_uniqueStudentList_replacesOwnListWithProvidedUniqueStudentList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"tzejit"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"tzejit"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"tzejit"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"tzejit"},"content":"        uniqueStudentList.setStudents(expectedUniqueStudentList);","lastModifiedDate":"2021-10-08"},{"lineNumber":140,"author":{"gitId":"tzejit"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-10-08"},{"lineNumber":141,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":142,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":143,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":144,"author":{"gitId":"tzejit"},"content":"    public void setStudents_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":145,"author":{"gitId":"tzejit"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudents((List\u003cStudent\u003e) null));","lastModifiedDate":"2021-10-08"},{"lineNumber":146,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":147,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":148,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":149,"author":{"gitId":"tzejit"},"content":"    public void setStudents_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":150,"author":{"gitId":"tzejit"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":151,"author":{"gitId":"tzejit"},"content":"        List\u003cStudent\u003e studentList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2021-10-08"},{"lineNumber":152,"author":{"gitId":"tzejit"},"content":"        uniqueStudentList.setStudents(studentList);","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"tzejit"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"tzejit"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"tzejit"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-10-08"},{"lineNumber":156,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":157,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":158,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":159,"author":{"gitId":"tzejit"},"content":"    public void setStudents_listWithDuplicateStudents_throwsDuplicateStudentException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":160,"author":{"gitId":"tzejit"},"content":"        List\u003cStudent\u003e listWithDuplicateStudents \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"tzejit"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e uniqueStudentList.setStudents(listWithDuplicateStudents));","lastModifiedDate":"2021-10-08"},{"lineNumber":162,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":163,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":164,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":165,"author":{"gitId":"tzejit"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":166,"author":{"gitId":"tzejit"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-10-08"},{"lineNumber":167,"author":{"gitId":"tzejit"},"content":"            -\u003e uniqueStudentList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-10-08"},{"lineNumber":168,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":169,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"tzejit":169}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedGroupTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static seedu.address.storage.JsonAdaptedGroup.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalGroups.GROUP1;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import java.util.List;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.commons.RepoName;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.LinkYear;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"public class JsonAdaptedGroupTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"    private static final String INVALID_NAME \u003d \"w1-4\";","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"    private static final String INVALID_YEAR \u003d \"20!21\";","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"    private static final String INVALID_REPONAME \u003d \"Re:po\";","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"    private static final String VALID_NAME \u003d GROUP1.getName().toString();","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"    private static final String VALID_YEAR \u003d GROUP1.getYear().toString();","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"    private static final String VALID_REPONAME \u003d GROUP1.getRepoName().toString();","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"    private static final Set\u003cTag\u003e VALID_TAGS_SET \u003d GROUP1.getTags();","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d VALID_TAGS_SET.stream()","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"    private static final ArrayList\u003cStudent\u003e VALID_MEMBER_ARRAY \u003d GROUP1.getMembers().studentList;","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"    private static final ArrayList\u003cJsonAdaptedStudent\u003e VALID_MEMBERS \u003d new ArrayList\u003c\u003e(VALID_MEMBER_ARRAY.stream()","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"            .map(JsonAdaptedStudent::new)","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"            .collect(Collectors.toList()));","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"    public void toModelType_validGroupDetails_returnsGroup() throws Exception {","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"        JsonAdaptedGroup group \u003d new JsonAdaptedGroup(GROUP1);","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"        assertEquals(GROUP1, group.toModelType());","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"        JsonAdaptedGroup group \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"                new JsonAdaptedGroup(INVALID_NAME, VALID_TAGS, VALID_MEMBERS, VALID_YEAR, VALID_REPONAME);","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"        String expectedMessage \u003d GroupName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, group::toModelType);","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"        JsonAdaptedGroup group \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"                new JsonAdaptedGroup(null, VALID_TAGS, VALID_MEMBERS, VALID_YEAR, VALID_REPONAME);","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, GroupName.class.getSimpleName());","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, group::toModelType);","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"    public void toModelType_invalidYear_throwsIllegalValueException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"        JsonAdaptedGroup group \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"tzejit"},"content":"                new JsonAdaptedGroup(VALID_NAME, VALID_TAGS, VALID_MEMBERS, INVALID_YEAR, VALID_REPONAME);","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"        String expectedMessage \u003d LinkYear.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, group::toModelType);","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"    public void toModelType_invalidRepoName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"        JsonAdaptedGroup group \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"                new JsonAdaptedGroup(VALID_NAME, VALID_TAGS, VALID_MEMBERS, VALID_YEAR, INVALID_REPONAME);","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"        String expectedMessage \u003d RepoName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, group::toModelType);","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"tzejit"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"tzejit"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"tzejit"},"content":"        JsonAdaptedGroup group \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"tzejit"},"content":"                new JsonAdaptedGroup(VALID_NAME, invalidTags, VALID_MEMBERS, VALID_YEAR, VALID_REPONAME);","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"tzejit"},"content":"        assertThrows(IllegalValueException.class, group::toModelType);","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"tzejit":87}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedStudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static seedu.address.storage.JsonAdaptedStudent.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.BENSON;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.StudentNumber;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"public class JsonAdaptedStudentTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"    private static final String INVALID_STUDENTNUMBER \u003d \"123\";","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"    private static final String INVALID_USERNAME \u003d \"joh!\";","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"    private static final String INVALID_REPONAME \u003d \"Re:po\";","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"    private static final String VALID_STUDENTNUMBER \u003d BENSON.getStudentNumber().toString();","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"    private static final String VALID_USERNAME \u003d BENSON.getUserName().toString();","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"    private static final String VALID_REPONAME \u003d BENSON.getRepoName().toString();","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"    private static final String VALID_GROUPNAME \u003d BENSON.getGroupName().toString();","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"wanninglim"},"content":"    private static final ArrayList\u003cInteger\u003e VALID_ATTENDANCE \u003d BENSON.getAttendance().attendanceList;","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"wanninglim"},"content":"    private static final ArrayList\u003cInteger\u003e VALID_PARTICIPATION \u003d BENSON.getParticipation().participationList;","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"    public void toModelType_validStudentDetails_returnsStudent() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(BENSON);","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"        assertEquals(BENSON, student.toModelType());","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"                new JsonAdaptedStudent(INVALID_NAME, VALID_EMAIL, VALID_STUDENTNUMBER, VALID_USERNAME, VALID_REPONAME,","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"wanninglim"},"content":"                        VALID_GROUPNAME, VALID_TAGS, VALID_ATTENDANCE, VALID_PARTICIPATION);","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(null, VALID_EMAIL, VALID_STUDENTNUMBER,","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"wanninglim"},"content":"                VALID_USERNAME, VALID_REPONAME, VALID_GROUPNAME, VALID_TAGS, VALID_ATTENDANCE, VALID_PARTICIPATION);","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"tzejit"},"content":"                new JsonAdaptedStudent(VALID_NAME, INVALID_EMAIL, VALID_STUDENTNUMBER, VALID_USERNAME, VALID_REPONAME,","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"wanninglim"},"content":"                        VALID_GROUPNAME, VALID_TAGS, VALID_ATTENDANCE, VALID_PARTICIPATION);","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_NAME, null, VALID_STUDENTNUMBER, VALID_USERNAME,","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"wanninglim"},"content":"                VALID_REPONAME, VALID_GROUPNAME, VALID_TAGS, VALID_ATTENDANCE, VALID_PARTICIPATION);","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"tzejit"},"content":"    public void toModelType_invalidStudentNumber_throwsIllegalValueException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"tzejit"},"content":"                new JsonAdaptedStudent(VALID_NAME, VALID_EMAIL, INVALID_STUDENTNUMBER, VALID_USERNAME, VALID_REPONAME,","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"wanninglim"},"content":"                        VALID_GROUPNAME, VALID_TAGS, VALID_ATTENDANCE, VALID_PARTICIPATION);","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"tzejit"},"content":"        String expectedMessage \u003d StudentNumber.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"tzejit"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"tzejit"},"content":"    public void toModelType_nullStudentNumber_throwsIllegalValueException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"tzejit"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_NAME, VALID_EMAIL, null, VALID_USERNAME,","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"wanninglim"},"content":"                VALID_REPONAME, VALID_GROUPNAME, VALID_TAGS, VALID_ATTENDANCE, VALID_PARTICIPATION);","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"tzejit"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, StudentNumber.class.getSimpleName());","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"tzejit"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"tzejit"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"tzejit"},"content":"                new JsonAdaptedStudent(VALID_NAME, VALID_EMAIL, VALID_STUDENTNUMBER, VALID_USERNAME, VALID_REPONAME,","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"wanninglim"},"content":"                        VALID_GROUPNAME, invalidTags, VALID_ATTENDANCE, VALID_PARTICIPATION);","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"tzejit"},"content":"        assertThrows(IllegalValueException.class, student::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"wanninglim":9,"-":51,"tzejit":45}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.testutil.TypicalStudents.HOON;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.testutil.TypicalStudents.IDA;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"    public void readAddressBook_invalidStudentAddressBook_throwDataConversionException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidStudentAddressBook.json\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"    public void readAddressBook_invalidAndValidStudentAddressBook_throwDataConversionException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidStudentAddressBook.json\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"somekoreanboi"},"content":"        original.addStudent(HOON);","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"somekoreanboi"},"content":"        original.removeStudent(ALICE);","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"somekoreanboi"},"content":"        original.addStudent(IDA);","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"somekoreanboi"},"content":"    private void assertEquals(AddressBook original, AddressBook addressBook) {","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"somekoreanboi":9,"-":99,"tzejit":4}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"import seedu.address.testutil.TypicalStudents;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"    private static final Path TYPICAL_STUDENTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalStudentsAddressBook.json\");","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"    private static final Path INVALID_STUDENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidStudentAddressBook.json\");","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"    private static final Path DUPLICATE_STUDENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateStudentAddressBook.json\");","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"    public void toModelType_typicalStudentsFile_success() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_STUDENTS_FILE,","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"        AddressBook typicalStudentsAddressBook \u003d TypicalStudents.getTypicalAddressBook();","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"        assertEquals(addressBookFromFile, typicalStudentsAddressBook);","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"    public void toModelType_invalidStudentFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_STUDENT_FILE,","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"    public void toModelType_duplicateStudents_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_STUDENT_FILE,","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_STUDENT,","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":34,"tzejit":13}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"somekoreanboi"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"somekoreanboi":1,"-":66}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withStudent(\"John\", \"Doe\").build();}","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"     * Adds a new {@code Student} to the {@code AddressBook} that we are building.","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"    public AddressBookBuilder withStudent(Student student) {","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"        addressBook.addStudent(student);","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":29,"tzejit":5}},{"path":"src/test/java/seedu/address/testutil/DeadlineTaskBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"itsraveen"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"itsraveen"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"itsraveen"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.DeadlineTask;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.TaskDate;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"itsraveen"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"itsraveen"},"content":" * A utility class to help with building Task objects.","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"itsraveen"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"itsraveen"},"content":"public class DeadlineTaskBuilder {","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"itsraveen"},"content":"    public static final String DEFAULT_TASK_NAME \u003d \"Do CS2103 tP\";","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"itsraveen"},"content":"    public static final String DEFAULT_TASK_DATE \u003d \"2021-10-10\";","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"itsraveen"},"content":"    private TaskName taskName;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"somekoreanboi"},"content":"    private TaskDate taskDate;","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"itsraveen"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"itsraveen"},"content":"    private boolean isDone;","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"somekoreanboi"},"content":"    private Description description;","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"itsraveen"},"content":"    private Task.Priority priority;","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"itsraveen"},"content":"     * Creates a {@code TaskBuilder} with the default details.","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"itsraveen"},"content":"    public DeadlineTaskBuilder() {","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"itsraveen"},"content":"        this.taskName \u003d new TaskName(DEFAULT_TASK_NAME);","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"somekoreanboi"},"content":"        this.taskDate \u003d new TaskDate(DEFAULT_TASK_DATE);","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"itsraveen"},"content":"        this.tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"itsraveen"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"somekoreanboi"},"content":"        this.description \u003d new Description(\"No Description\");","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"itsraveen"},"content":"        this.priority \u003d Task.Priority.LOW;","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"itsraveen"},"content":"     * Initializes the TaskBuilder with the data of {@code taskToCopy}.","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"itsraveen"},"content":"    public DeadlineTaskBuilder(DeadlineTask taskToCopy) {","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"itsraveen"},"content":"        this.taskName \u003d taskToCopy.getName();","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"itsraveen"},"content":"        this.taskDate \u003d new TaskDate(taskToCopy.getDeadline().toString());","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"itsraveen"},"content":"        this.tags \u003d new HashSet\u003c\u003e(taskToCopy.getTags());","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"itsraveen"},"content":"        this.isDone \u003d taskToCopy.checkIsDone();","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"somekoreanboi"},"content":"        this.description \u003d new Description(taskToCopy.getDescription());","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"itsraveen"},"content":"     * Sets the {@code Name} of the {@code Task} that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"itsraveen"},"content":"    public DeadlineTaskBuilder withName(String name) {","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"itsraveen"},"content":"        this.taskName \u003d new TaskName(name);","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"itsraveen"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"somekoreanboi"},"content":"     * Sets the {@code TaskDate} of the {@code Task} that we are building.","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"itsraveen"},"content":"    public DeadlineTaskBuilder withDate(String date) {","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"somekoreanboi"},"content":"        this.taskDate \u003d new TaskDate(date);","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"itsraveen"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"itsraveen"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Task} that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"itsraveen"},"content":"    public DeadlineTaskBuilder withTags(String ... tags) {","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"itsraveen"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"itsraveen"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"somekoreanboi"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"somekoreanboi"},"content":"     * Parses the {@code description} into a {@code Task} and set it to the {@code Task} that we are building.","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"somekoreanboi"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"itsraveen"},"content":"    public DeadlineTaskBuilder withDescription(String description) {","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"somekoreanboi"},"content":"        this.description \u003d new Description(description);","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"somekoreanboi"},"content":"        return this;","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"itsraveen"},"content":"     * Parses the {@code description} into a {@code Task} and set it to the {@code Task} that we are building.","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"itsraveen"},"content":"    public DeadlineTaskBuilder withPriority(String description) {","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"itsraveen"},"content":"        if (description.contains(\"H\") || description.contains(\"h\")) {","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"itsraveen"},"content":"            this.priority \u003d Task.Priority.HIGH;","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"itsraveen"},"content":"        } else if (description.contains(\"M\") || description.contains(\"m\")) {","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"itsraveen"},"content":"            this.priority \u003d Task.Priority.MEDIUM;","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"itsraveen"},"content":"        } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"itsraveen"},"content":"            this.priority \u003d Task.Priority.LOW;","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"itsraveen"},"content":"        return this;","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"itsraveen"},"content":"    public DeadlineTask build() {","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"itsraveen"},"content":"        return new DeadlineTask(taskName, tags, false, taskDate, description, priority);","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"itsraveen"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"itsraveen":88,"somekoreanboi":14}},{"path":"src/test/java/seedu/address/testutil/EditStudentDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.EditStudentCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.EditStudentCommand.EditStudentDescriptor;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.commons.RepoName;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.StudentNumber;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.UserName;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"somekoreanboi"},"content":" * A utility class to help with building EditTaskDescriptor objects.","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"public class EditStudentDescriptorBuilder {","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"weenleen"},"content":"    private final EditStudentCommand.EditStudentDescriptor descriptor;","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"    public EditStudentDescriptorBuilder() {","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"        descriptor \u003d new EditStudentDescriptor();","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"weenleen"},"content":"    public EditStudentDescriptorBuilder(EditStudentCommand.EditStudentDescriptor descriptor) {","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"weenleen"},"content":"        this.descriptor \u003d new EditStudentCommand.EditStudentDescriptor(descriptor);","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"somekoreanboi"},"content":"     * Returns an {@code EditTaskDescriptor} with fields containing {@code student}\u0027s details","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"    public EditStudentDescriptorBuilder(Student student) {","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"weenleen"},"content":"        descriptor \u003d new EditStudentCommand.EditStudentDescriptor();","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"        descriptor.setName(student.getName());","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"        descriptor.setEmail(student.getEmail());","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"        descriptor.setUserName(student.getUserName());","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"        descriptor.setRepoName(student.getRepoName());","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"        descriptor.setStudentNumber(student.getStudentNumber());","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"        descriptor.setTags(student.getTags());","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"somekoreanboi"},"content":"     * Sets the {@code Name} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"    public EditStudentDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"somekoreanboi"},"content":"     * Sets the {@code Email} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"    public EditStudentDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"somekoreanboi"},"content":"     * Sets the {@code StudentNumber} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"tzejit"},"content":"    public EditStudentDescriptorBuilder withStudentNumber(String studentNumber) {","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"        descriptor.setStudentNumber(new StudentNumber(studentNumber));","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"        return this;","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"somekoreanboi"},"content":"     * Sets the {@code UserName} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"    public EditStudentDescriptorBuilder withUserName(String userName) {","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"        descriptor.setUserName(new UserName(userName));","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"        return this;","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"somekoreanboi"},"content":"     * Sets the {@code RepoName} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"    public EditStudentDescriptorBuilder withRepoName(String repoName) {","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"tzejit"},"content":"        descriptor.setRepoName(new RepoName(repoName));","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"tzejit"},"content":"        return this;","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"somekoreanboi"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditTaskDescriptor}","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"tzejit"},"content":"     * that we are building.","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"tzejit"},"content":"    public EditStudentDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"tzejit"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"tzejit"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"tzejit"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"weenleen"},"content":"    public EditStudentCommand.EditStudentDescriptor build() {","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"tzejit"},"content":"        return descriptor;","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"weenleen":7,"somekoreanboi":8,"tzejit":84}},{"path":"src/test/java/seedu/address/testutil/EditTaskDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"somekoreanboi"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"somekoreanboi"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"somekoreanboi"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"somekoreanboi"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.logic.commands.EditTaskCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.model.task.DeadlineTask;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.model.task.EventTask;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"somekoreanboi"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"somekoreanboi"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"somekoreanboi"},"content":" * A utility class to help with building EditTaskDescriptor objects.","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"somekoreanboi"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"somekoreanboi"},"content":"public class EditTaskDescriptorBuilder {","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"somekoreanboi"},"content":"    private EditTaskCommand.EditTaskDescriptor descriptor;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"itsraveen"},"content":"    private Task.Priority priority;","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"somekoreanboi"},"content":"    public EditTaskDescriptorBuilder() {","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"somekoreanboi"},"content":"        descriptor \u003d new EditTaskCommand.EditTaskDescriptor();","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"somekoreanboi"},"content":"    public EditTaskDescriptorBuilder(EditTaskCommand.EditTaskDescriptor descriptor) {","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"somekoreanboi"},"content":"        this.descriptor \u003d new EditTaskCommand.EditTaskDescriptor(descriptor);","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"somekoreanboi"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"somekoreanboi"},"content":"     * Returns an {@code EditTaskDescriptor} with fields containing {@code task}\u0027s details","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"somekoreanboi"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"somekoreanboi"},"content":"    public EditTaskDescriptorBuilder(Task task) {","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"somekoreanboi"},"content":"        descriptor \u003d new EditTaskCommand.EditTaskDescriptor();","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"somekoreanboi"},"content":"        descriptor.setTaskName(task.getName());","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"somekoreanboi"},"content":"        descriptor.setTags(task.getTags());","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"somekoreanboi"},"content":"        if (task instanceof EventTask) {","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"somekoreanboi"},"content":"            descriptor.setDeadline(((EventTask) task).getTaskDate());","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"somekoreanboi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"somekoreanboi"},"content":"        if (task instanceof DeadlineTask) {","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"somekoreanboi"},"content":"            descriptor.setDeadline(((DeadlineTask) task).getDeadline());","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"somekoreanboi"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"somekoreanboi"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"somekoreanboi"},"content":"     * Sets the {@code Name} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"somekoreanboi"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"somekoreanboi"},"content":"    public EditTaskDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"somekoreanboi"},"content":"        descriptor.setTaskName(new TaskName(name));","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"somekoreanboi"},"content":"        return this;","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"somekoreanboi"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"somekoreanboi"},"content":"     * Sets the {@code Description} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"somekoreanboi"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"somekoreanboi"},"content":"    public EditTaskDescriptorBuilder withDescription(String description) {","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"somekoreanboi"},"content":"        descriptor.setDescription(new Description(description));","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"somekoreanboi"},"content":"        return this;","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"somekoreanboi"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"somekoreanboi"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditTaskDescriptor}","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"somekoreanboi"},"content":"     * that we are building.","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"somekoreanboi"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"somekoreanboi"},"content":"    public EditTaskDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"somekoreanboi"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"somekoreanboi"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"somekoreanboi"},"content":"        return this;","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"itsraveen"},"content":"     * Parses the {@code description} into a {@code Task} and set it to the {@code Task} that we are building.","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"itsraveen"},"content":"    public EditTaskDescriptorBuilder withPriority(String description) {","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"itsraveen"},"content":"        if (description.contains(\"H\") || description.contains(\"h\")) {","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"itsraveen"},"content":"            this.priority \u003d Task.Priority.HIGH;","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"itsraveen"},"content":"        } else if (description.contains(\"M\") || description.contains(\"m\")) {","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"itsraveen"},"content":"            this.priority \u003d Task.Priority.MEDIUM;","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"itsraveen"},"content":"        } else {","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"itsraveen"},"content":"            this.priority \u003d Task.Priority.LOW;","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"itsraveen"},"content":"        return this;","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"somekoreanboi"},"content":"    public EditTaskCommand.EditTaskDescriptor build() {","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"somekoreanboi"},"content":"        return descriptor;","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"somekoreanboi"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"itsraveen":15,"somekoreanboi":76}},{"path":"src/test/java/seedu/address/testutil/EventTaskBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"itsraveen"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"itsraveen"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"itsraveen"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.EventTask;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.TaskDate;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"itsraveen"},"content":"public class EventTaskBuilder {","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"itsraveen"},"content":"    public static final String DEFAULT_TASK_NAME \u003d \"Do CS2103 tP\";","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"itsraveen"},"content":"    public static final String DEFAULT_TASK_DATE \u003d \"2021-10-10\";","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"itsraveen"},"content":"    private TaskName taskName;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"somekoreanboi"},"content":"    private TaskDate taskDate;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"itsraveen"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"itsraveen"},"content":"    private boolean isDone;","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"somekoreanboi"},"content":"    private Description description;","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"itsraveen"},"content":"    private Task.Priority priority;","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"itsraveen"},"content":"     * Creates a {@code TaskBuilder} with the default details.","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"itsraveen"},"content":"    public EventTaskBuilder() {","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"itsraveen"},"content":"        this.taskName \u003d new TaskName(DEFAULT_TASK_NAME);","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"somekoreanboi"},"content":"        this.taskDate \u003d new TaskDate(DEFAULT_TASK_DATE);","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"itsraveen"},"content":"        this.tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"itsraveen"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"somekoreanboi"},"content":"        this.description \u003d new Description(\"No Description\");","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"itsraveen"},"content":"        this.priority \u003d Task.Priority.LOW;","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"itsraveen"},"content":"     * Initializes the TaskBuilder with the data of {@code taskToCopy}.","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"itsraveen"},"content":"    public EventTaskBuilder(EventTask taskToCopy) {","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"itsraveen"},"content":"        this.taskName \u003d taskToCopy.getName();","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"itsraveen"},"content":"        this.taskDate \u003d new TaskDate(taskToCopy.getTaskDate().toString());","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"itsraveen"},"content":"        this.tags \u003d new HashSet\u003c\u003e(taskToCopy.getTags());","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"itsraveen"},"content":"        this.isDone \u003d taskToCopy.checkIsDone();","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"somekoreanboi"},"content":"        this.description \u003d new Description(taskToCopy.getDescription());","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"itsraveen"},"content":"     * Sets the {@code Name} of the {@code Task} that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"itsraveen"},"content":"    public EventTaskBuilder withName(String name) {","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"itsraveen"},"content":"        this.taskName \u003d new TaskName(name);","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"itsraveen"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"somekoreanboi"},"content":"     * Sets the {@code TaskDate} of the {@code Task} that we are building.","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"itsraveen"},"content":"    public EventTaskBuilder withDate(String date) {","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"somekoreanboi"},"content":"        this.taskDate \u003d new TaskDate(date);","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"itsraveen"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"itsraveen"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Task} that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"itsraveen"},"content":"    public EventTaskBuilder withTags(String ... tags) {","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"itsraveen"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"itsraveen"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"somekoreanboi"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"somekoreanboi"},"content":"     * Parses the {@code description} into a {@code Task} and set it to the {@code Task} that we are building.","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"somekoreanboi"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"itsraveen"},"content":"    public EventTaskBuilder withDescription(String description) {","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"somekoreanboi"},"content":"        this.description \u003d new Description(description);","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"somekoreanboi"},"content":"        return this;","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"itsraveen"},"content":"     * Parses the {@code description} into a {@code Task} and set it to the {@code Task} that we are building.","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"itsraveen"},"content":"    public EventTaskBuilder withPriority(String description) {","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"itsraveen"},"content":"        if (description.contains(\"H\") || description.contains(\"h\")) {","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"itsraveen"},"content":"            this.priority \u003d Task.Priority.HIGH;","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"itsraveen"},"content":"        } else if (description.contains(\"M\") || description.contains(\"m\")) {","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"itsraveen"},"content":"            this.priority \u003d Task.Priority.MEDIUM;","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"itsraveen"},"content":"        } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"itsraveen"},"content":"            this.priority \u003d Task.Priority.LOW;","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"itsraveen"},"content":"        return this;","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"itsraveen"},"content":"    public EventTask build() {","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"itsraveen"},"content":"        return new EventTask(taskName, tags, false, taskDate, description, priority);","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"itsraveen"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"itsraveen":85,"somekoreanboi":14}},{"path":"src/test/java/seedu/address/testutil/GroupBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.commons.RepoName;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.LinkYear;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.Members;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":" * A utility class to help with building Task objects.","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"public class GroupBuilder {","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"    public static final String DEFAULT_GROUP_NAME \u003d \"w14-4\";","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"    private GroupName groupName;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"    private Members members;","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"    private LinkYear year;","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"    private RepoName repoName;","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"     * Creates a {@code GroupBuild} with the default details.","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"    public GroupBuilder() {","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"        this.groupName \u003d new GroupName(DEFAULT_GROUP_NAME);","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"        this.tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"        this.members \u003d new Members();","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"        this.year \u003d new LinkYear();","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"        this.repoName \u003d new RepoName();","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"     * Initializes the TaskGroupBuilder with the data of {@code groupToCopy}.","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"    public GroupBuilder(Group groupToCopy) {","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"        this.groupName \u003d groupToCopy.getName();","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"        this.tags \u003d new HashSet\u003c\u003e(groupToCopy.getTags());","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"        this.repoName \u003d groupToCopy.getRepoName();","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"        this.members \u003d groupToCopy.getMembers();","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"        this.year \u003d groupToCopy.getYear();","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"     * Sets the {@code Name} of the {@code Group} that we are building.","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"    public GroupBuilder withName(String name) {","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"        this.groupName \u003d new GroupName(name);","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"        return this;","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Group} that we are building.","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"    public GroupBuilder withTags(String ... tags) {","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"        return this;","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"     * Parses the {@code members} into a {@code Set\u003cMembers\u003e} and set it to the {@code Group} that we are building.","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"    public GroupBuilder withMembers(Student... students) {","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"        ArrayList\u003cStudent\u003e studentList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"        for (Student student : students) {","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"            studentList.add(new StudentBuilder(student).build());","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"        members \u003d new Members(studentList);","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"        return this;","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"tzejit"},"content":"     * Sets the {@code LinkYear} of the {@code Group} that we are building.","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"tzejit"},"content":"    public GroupBuilder withYear(String year) {","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"tzejit"},"content":"        this.year \u003d new LinkYear(year);","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"tzejit"},"content":"        return this;","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"tzejit"},"content":"     * Sets the {@code RepoName} of the {@code Group} that we are building.","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"tzejit"},"content":"    public GroupBuilder withRepo(String name) {","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"tzejit"},"content":"        repoName \u003d new RepoName(name);","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"tzejit"},"content":"        return this;","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"tzejit"},"content":"    public Group build() {","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"tzejit"},"content":"        return new Group(groupName, members, year, repoName, tags);","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"tzejit":99}},{"path":"src/test/java/seedu/address/testutil/StudentBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"wanninglim"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.commons.RepoName;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.student.Attendance;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.student.Participation;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.StudentNumber;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.UserName;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":" * A utility class to help with building Student objects.","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"public class StudentBuilder {","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"    public static final String DEFAULT_STUDENTNUMBER \u003d \"A0123456B\";","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"    public static final String DEFAULT_USERNAME \u003d \"username\";","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"    public static final String DEFAULT_REPO \u003d \"ip\";","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"    private Name name;","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"    private Email email;","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"    private StudentNumber studentNumber;","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"    private UserName userName;","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"    private RepoName repoName;","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"wanninglim"},"content":"    private Attendance attendance;","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"wanninglim"},"content":"    private Participation participation;","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"    private GroupName groupName;","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"     * Creates a {@code StudentBuilder} with the default details.","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"    public StudentBuilder() {","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"        studentNumber \u003d new StudentNumber(DEFAULT_STUDENTNUMBER);","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"        userName \u003d new UserName(DEFAULT_USERNAME);","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"        repoName \u003d new RepoName(DEFAULT_REPO);","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"wanninglim"},"content":"        attendance \u003d new Attendance();","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"wanninglim"},"content":"        participation \u003d new Participation();","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"        groupName \u003d new GroupName();","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"     * Initializes the StudentBuilder with the data of {@code studentToCopy}.","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"    public StudentBuilder(Student studentToCopy) {","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"        name \u003d studentToCopy.getName();","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"        email \u003d studentToCopy.getEmail();","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"        studentNumber \u003d studentToCopy.getStudentNumber();","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"        userName \u003d studentToCopy.getUserName();","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"        repoName \u003d studentToCopy.getRepoName();","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"        tags \u003d new HashSet\u003c\u003e(studentToCopy.getTags());","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"wanninglim"},"content":"        attendance \u003d new Attendance(new ArrayList\u003c\u003e(studentToCopy.getAttendance().attendanceList));","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"wanninglim"},"content":"        participation \u003d new Participation(new ArrayList\u003c\u003e(studentToCopy.getParticipation().participationList));","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"        groupName \u003d studentToCopy.getGroupName();","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"     * Sets the {@code Name} of the {@code Student} that we are building.","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"    public StudentBuilder withName(String name) {","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"wanninglim"},"content":"     * Sets the {@code Email} of the {@code Student} that we are building.","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"wanninglim"},"content":"    public StudentBuilder withEmail(String email) {","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"wanninglim"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"wanninglim"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"tzejit"},"content":"     * Sets the {@code StudentNumber} of the {@code Student} that we are building.","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"tzejit"},"content":"    public StudentBuilder withStudentNumber(String studentNumber) {","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"tzejit"},"content":"        this.studentNumber \u003d new StudentNumber(studentNumber);","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"tzejit"},"content":"        return this;","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"tzejit"},"content":"     * Sets the {@code userName} of the {@code Student} that we are building.","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"tzejit"},"content":"    public StudentBuilder withUserName(String userName) {","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"tzejit"},"content":"        this.userName \u003d new UserName(userName);","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"tzejit"},"content":"        return this;","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"tzejit"},"content":"     * Sets the {@code repoName} of the {@code Student} that we are building.","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":105,"author":{"gitId":"tzejit"},"content":"    public StudentBuilder withRepoName(String repoName) {","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"tzejit"},"content":"        this.repoName \u003d new RepoName(repoName);","lastModifiedDate":"2021-10-18"},{"lineNumber":107,"author":{"gitId":"tzejit"},"content":"        return this;","lastModifiedDate":"2021-10-18"},{"lineNumber":108,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"tzejit"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Student} that we are building.","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"tzejit"},"content":"    public StudentBuilder withTags(String ... tags) {","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"tzejit"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"tzejit"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"wanninglim"},"content":"     * Sets the {@code Attendance} of the {@code Student} that we are building.","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"wanninglim"},"content":"    public StudentBuilder withAttendance(Integer... integers) {","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"wanninglim"},"content":"        this.attendance \u003d SampleDataUtil.getAttendanceList(integers);","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"tzejit"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":128,"author":{"gitId":"wanninglim"},"content":"     * Sets the {@code Participation} of the {@code Student} that we are building.","lastModifiedDate":"2021-10-18"},{"lineNumber":129,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":130,"author":{"gitId":"wanninglim"},"content":"    public StudentBuilder withParticipation(Integer... integers) {","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"wanninglim"},"content":"        this.attendance \u003d SampleDataUtil.getAttendanceList(integers);","lastModifiedDate":"2021-10-18"},{"lineNumber":132,"author":{"gitId":"wanninglim"},"content":"        return this;","lastModifiedDate":"2021-10-18"},{"lineNumber":133,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"tzejit"},"content":"     * Sets the {@code Attendance} of the {@code Student} that we are building.","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"tzejit"},"content":"    public StudentBuilder withGroupName(String groupName) {","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"tzejit"},"content":"        this.groupName \u003d new GroupName(groupName);","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"tzejit"},"content":"        return this;","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"tzejit"},"content":"    public Student build() {","lastModifiedDate":"2021-10-08"},{"lineNumber":144,"author":{"gitId":"wanninglim"},"content":"        return new Student(name, email, studentNumber, userName, repoName , tags, attendance, participation, groupName);","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":146,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"wanninglim":29,"tzejit":117}},{"path":"src/test/java/seedu/address/testutil/StudentUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REPO;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENTNUMBER;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_USERNAME;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import seedu.address.logic.commands.AddStudentCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"weenleen"},"content":"import seedu.address.logic.commands.EditStudentCommand.EditStudentDescriptor;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":" * A utility class for Student.","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"public class StudentUtil {","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"     * Returns an add command string for adding the {@code student}.","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"    public static String getAddCommand(Student student) {","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"        return AddStudentCommand.COMMAND_WORD + \" \" + getStudentDetails(student);","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"     * Returns the part of command string for the given {@code student}\u0027s details.","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"    public static String getStudentDetails(Student student) {","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"weenleen"},"content":"        sb.append(PREFIX_NAME).append(student.getName().fullName).append(\" \");","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"weenleen"},"content":"        sb.append(PREFIX_EMAIL).append(student.getEmail().value).append(\" \");","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"weenleen"},"content":"        sb.append(PREFIX_STUDENTNUMBER).append(student.getStudentNumber().toString()).append(\" \");","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"weenleen"},"content":"        sb.append(PREFIX_USERNAME).append(student.getUserName().toString()).append(\" \");","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"weenleen"},"content":"        sb.append(PREFIX_REPO).append(student.getRepoName().toString()).append(\" \");","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"weenleen"},"content":"        student.getTags().forEach(","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"weenleen"},"content":"            s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \")","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"somekoreanboi"},"content":"     * Returns the part of command string for the given {@code EditTaskDescriptor}\u0027s details.","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"    public static String getEditStudentDescriptorDetails(EditStudentDescriptor descriptor) {","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"        descriptor.getStudentNumber().ifPresent(studentNumber -\u003e sb.append(PREFIX_STUDENTNUMBER)","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"weenleen"},"content":"                .append(studentNumber).append(\" \"));","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"weenleen"},"content":"        descriptor.getUserName().ifPresent(userName -\u003e sb.append(PREFIX_USERNAME).append(userName)","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"                .append(\" \"));","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"weenleen"},"content":"        descriptor.getRepoName().ifPresent(repoName -\u003e sb.append(PREFIX_REPO).append(repoName)","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"                .append(\" \"));","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"weenleen":11,"somekoreanboi":1,"-":40,"tzejit":16}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"     * Returns the middle index of the student in the {@code model}\u0027s student list.","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"        return Index.fromOneBased(model.getFilteredStudentList().size() / 2);","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"     * Returns the last index of the student in the {@code model}\u0027s student list.","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"        return Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"     * Returns the student in the {@code model}\u0027s student list at {@code index}.","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"    public static Student getStudent(Model model, Index index) {","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"        return model.getFilteredStudentList().get(index.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":47,"tzejit":8}},{"path":"src/test/java/seedu/address/testutil/TodoTaskBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"itsraveen"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"itsraveen"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"itsraveen"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.TaskName;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"itsraveen"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"itsraveen"},"content":" * A utility class to help with building Task objects.","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"itsraveen"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"itsraveen"},"content":"public class TodoTaskBuilder {","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"itsraveen"},"content":"    public static final String DEFAULT_TASK_NAME \u003d \"Do CS2103 tP\";","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"itsraveen"},"content":"    private TaskName taskName;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"itsraveen"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"itsraveen"},"content":"    private boolean isDone;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"itsraveen"},"content":"    private Description description;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"itsraveen"},"content":"    private Task.Priority priority;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"itsraveen"},"content":"     * Creates a {@code TaskBuilder} with the default details.","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"itsraveen"},"content":"    public TodoTaskBuilder() {","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"itsraveen"},"content":"        this.taskName \u003d new TaskName(DEFAULT_TASK_NAME);","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"itsraveen"},"content":"        this.tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"itsraveen"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"itsraveen"},"content":"        this.description \u003d new Description(\"No Description\");","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"itsraveen"},"content":"        this.priority \u003d Task.Priority.LOW;","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"itsraveen"},"content":"     * Initializes the TaskBuilder with the data of {@code taskToCopy}.","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"itsraveen"},"content":"    public TodoTaskBuilder(Task taskToCopy) {","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"itsraveen"},"content":"        this.taskName \u003d taskToCopy.getName();","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"itsraveen"},"content":"        this.tags \u003d new HashSet\u003c\u003e(taskToCopy.getTags());","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"itsraveen"},"content":"        this.isDone \u003d taskToCopy.checkIsDone();","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"itsraveen"},"content":"        this.description \u003d new Description(taskToCopy.getDescription());","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"itsraveen"},"content":"     * Sets the {@code Name} of the {@code Task} that we are building.","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"itsraveen"},"content":"    public TodoTaskBuilder withName(String name) {","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"itsraveen"},"content":"        this.taskName \u003d new TaskName(name);","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"itsraveen"},"content":"        return this;","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"itsraveen"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Task} that we are building.","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"itsraveen"},"content":"    public TodoTaskBuilder withTags(String ... tags) {","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"itsraveen"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"itsraveen"},"content":"        return this;","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"itsraveen"},"content":"     * Parses the {@code description} into a {@code Task} and set it to the {@code Task} that we are building.","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"itsraveen"},"content":"    public TodoTaskBuilder withDescription(String description) {","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"itsraveen"},"content":"        this.description \u003d new Description(description);","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"itsraveen"},"content":"        return this;","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"itsraveen"},"content":"     * Parses the {@code description} into a {@code Task} and set it to the {@code Task} that we are building.","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"itsraveen"},"content":"    public TodoTaskBuilder withPriority(String description) {","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"itsraveen"},"content":"        this.priority \u003d Task.Priority.LOW;","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"itsraveen"},"content":"        return this;","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"itsraveen"},"content":"    public Task build() {","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"itsraveen"},"content":"        return new Task(taskName, tags, false, description, priority);","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"itsraveen"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"itsraveen":83}},{"path":"src/test/java/seedu/address/testutil/TypicalGroups.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUPNAME_G1;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUPNAME_G2;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REPONAME_AMY;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REPONAME_BOB;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_YEAR_G1;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_YEAR_G2;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.BENSON;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.CARL;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.DANIEL;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.ELLE;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.FIONA;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalStudents;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.commons.RepoName;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.group.LinkYear;","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":" * A utility class containing a list of {@code Group} objects to be used in tests.","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"public class TypicalGroups {","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"    public static final Group GROUP1 \u003d new GroupBuilder().withName(VALID_GROUPNAME_G1).withYear(VALID_YEAR_G1)","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"            .withRepo(VALID_REPONAME_AMY).withMembers(BENSON, CARL, DANIEL).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"    public static final Group GROUP2 \u003d new GroupBuilder().withName(VALID_GROUPNAME_G2).withMembers(ELLE, FIONA)","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"            .withRepo(VALID_REPONAME_BOB).withYear(VALID_YEAR_G2).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"    public static final Group GROUP3 \u003d new GroupBuilder().withName(\"m16-6\").withRepo(\"ip\").withYear(\"AY20192020\")","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"            .build();","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"    public static final RepoName REPONAME1 \u003d new RepoName(\"tp\");","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"    public static final RepoName REPONAME2 \u003d new RepoName(\"2103_tp-project\");","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"    public static final LinkYear YEAR1 \u003d new LinkYear(\"AY20212022\");","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"    public static final LinkYear YEAR2 \u003d new LinkYear(\"AY20222023\");","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"    public static final GroupName GROUPNAME1 \u003d new GroupName(\"W14-4\");","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"    public static final GroupName GROUPNAME2 \u003d new GroupName(\"W14-5\");","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"    public static final GroupName VALID_UNINSTATITATED_GROUP \u003d new GroupName(\"m11-1\");","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"    private TypicalGroups() {} // prevents instantiation","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"     * Returns an {@code AddressBook} with all the typical students.","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"    public static AddressBook getTypicalAddressBookWithGroups() {","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"        for (Group group : getTypicalGroups()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"            ab.addGroup(group);","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"        for (Student student : getTypicalStudents()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"            ab.addStudent(student);","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"        return ab;","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"    public static List\u003cGroup\u003e getTypicalGroups() {","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(GROUP1, GROUP2, GROUP3));","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"tzejit":70}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"    public static final Index INDEX_FIRST_STUDENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"    public static final Index INDEX_SECOND_STUDENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"    public static final Index INDEX_THIRD_STUDENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"itsraveen"},"content":"    public static final Index INDEX_FIRST_TASK \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"itsraveen"},"content":"    public static final Index INDEX_SECOND_TASK \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"itsraveen"},"content":"    public static final Index INDEX_THIRD_TASK \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"    public static final Index INDEX_FIRST_GROUP \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"    public static final Index INDEX_SECOND_GROUP \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"    public static final Index INDEX_THIRD_GROUP \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"itsraveen":4,"-":9,"tzejit":7}},{"path":"src/test/java/seedu/address/testutil/TypicalStudents.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUPNAME_G1;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUPNAME_G2;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REPONAME_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REPONAME_BOB;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENTNUMBER_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENTNUMBER_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_USERNAME_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_USERNAME_BOB;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":" * A utility class containing a list of {@code Student} objects to be used in tests.","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"public class TypicalStudents {","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"    public static final Student ALICE \u003d new StudentBuilder().withName(\"Alice Pauline\").withEmail(\"alice@example.com\")","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"            .withStudentNumber(\"A0000000B\").withUserName(\"paulice\").withRepoName(\"ip\").withTags(\"friends\").build();","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"    public static final Student BENSON \u003d new StudentBuilder().withName(\"Benson Meier\").withStudentNumber(\"A0000000B\")","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"            .withEmail(\"johnd@example.com\").withTags(\"owesMoney\", \"friends\").withUserName(\"benben\")","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"            .withGroupName(VALID_GROUPNAME_G1).withRepoName(\"ip\").build();","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"    public static final Student CARL \u003d new StudentBuilder().withName(\"Carl Kurz\").withUserName(\"cark\")","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"            .withGroupName(VALID_GROUPNAME_G1).withRepoName(\"ip\").withStudentNumber(\"A0000000B\")","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"            .withEmail(\"heinz@example.com\").build();","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"    public static final Student DANIEL \u003d new StudentBuilder().withName(\"Daniel Meier\").withEmail(\"cornelia@example.com\")","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"            .withGroupName(VALID_GROUPNAME_G1).withStudentNumber(\"A0000000B\").withUserName(\"danmei\").withRepoName(\"ip\")","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"    public static final Student ELLE \u003d new StudentBuilder().withName(\"Elle Meyer\").withUserName(\"em\")","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"            .withGroupName(VALID_GROUPNAME_G2).withRepoName(\"ip\").withStudentNumber(\"A0000000B\")","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"            .withEmail(\"werner@example.com\").build();","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"    public static final Student FIONA \u003d new StudentBuilder().withName(\"Fiona Kunz\").withUserName(\"fku\")","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"            .withGroupName(VALID_GROUPNAME_G2).withRepoName(\"ip\").withStudentNumber(\"A0000000B\")","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"            .withEmail(\"lydia@example.com\").build();","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"    public static final Student GEORGE \u003d new StudentBuilder().withName(\"George Best\").withUserName(\"user\")","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"            .withRepoName(\"ipppp\").withStudentNumber(\"A0000000B\").withEmail(\"anna@example.com\").build();","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"    public static final Student HOON \u003d new StudentBuilder().withName(\"Hoon Meier\")","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"            .withEmail(\"stefan@example.com\").withStudentNumber(\"B0584738B\").build();","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"    public static final Student IDA \u003d new StudentBuilder().withName(\"Ida Mueller\")","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"            .withEmail(\"hans@example.com\").withStudentNumber(\"B0584738B\").build();","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"    // Manually added - Student\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"    public static final Student AMY \u003d new StudentBuilder().withName(VALID_NAME_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"            .withStudentNumber(VALID_STUDENTNUMBER_AMY).withUserName(VALID_USERNAME_AMY)","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"            .withRepoName(VALID_REPONAME_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"    public static final Student BOB \u003d new StudentBuilder().withName(VALID_NAME_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"            .withStudentNumber(VALID_STUDENTNUMBER_BOB).withUserName(VALID_USERNAME_BOB)","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"            .withRepoName(VALID_REPONAME_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"    private TypicalStudents() {} // prevents instantiation","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"     * Returns an {@code AddressBook} with all the typical students.","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"        for (Student student : getTypicalStudents()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"            ab.addStudent(student);","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":79,"author":{"gitId":"tzejit"},"content":"    public static List\u003cStudent\u003e getTypicalStudents() {","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"-":36,"tzejit":46}},{"path":"src/test/java/seedu/address/testutil/TypicalStudentsWithoutGroups.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wanninglim"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REPONAME_AMY;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REPONAME_BOB;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENTNUMBER_AMY;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENTNUMBER_BOB;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_USERNAME_AMY;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"wanninglim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_USERNAME_BOB;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"wanninglim"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"wanninglim"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"wanninglim"},"content":"import java.util.List;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"wanninglim"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"wanninglim"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"wanninglim"},"content":" * A utility class containing a list of {@code Student} objects to be used in tests.","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"wanninglim"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"wanninglim"},"content":"public class TypicalStudentsWithoutGroups {","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"wanninglim"},"content":"    public static final Student ALICE \u003d new StudentBuilder().withName(\"Alice Pauline\").withEmail(\"alice@example.com\")","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"wanninglim"},"content":"            .withStudentNumber(\"A0000000B\").withUserName(\"paulice\").withRepoName(\"ip\").withTags(\"friends\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"wanninglim"},"content":"    public static final Student BENSON \u003d new StudentBuilder().withName(\"Benson Meier\").withStudentNumber(\"A0000000B\")","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"wanninglim"},"content":"            .withEmail(\"johnd@example.com\").withTags(\"owesMoney\", \"friends\").withUserName(\"benben\")","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"wanninglim"},"content":"            .withRepoName(\"ip\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"wanninglim"},"content":"    public static final Student CARL \u003d new StudentBuilder().withName(\"Carl Kurz\").withUserName(\"cark\")","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"wanninglim"},"content":"            .withRepoName(\"ip\").withStudentNumber(\"A0000000B\")","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"wanninglim"},"content":"            .withEmail(\"heinz@example.com\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"wanninglim"},"content":"    public static final Student DANIEL \u003d new StudentBuilder().withName(\"Daniel Meier\").withEmail(\"cornelia@example.com\")","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"wanninglim"},"content":"            .withStudentNumber(\"A0000000B\").withUserName(\"danmei\").withRepoName(\"ip\")","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"wanninglim"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"wanninglim"},"content":"    public static final Student ELLE \u003d new StudentBuilder().withName(\"Elle Meyer\").withUserName(\"em\")","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"wanninglim"},"content":"            .withRepoName(\"ip\").withStudentNumber(\"A0000000B\")","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"wanninglim"},"content":"            .withEmail(\"werner@example.com\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"wanninglim"},"content":"    public static final Student FIONA \u003d new StudentBuilder().withName(\"Fiona Kunz\").withUserName(\"fku\")","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"wanninglim"},"content":"            .withRepoName(\"ip\").withStudentNumber(\"A0000000B\")","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"wanninglim"},"content":"            .withEmail(\"lydia@example.com\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"wanninglim"},"content":"    public static final Student GEORGE \u003d new StudentBuilder().withName(\"George Best\").withUserName(\"user\")","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"wanninglim"},"content":"            .withRepoName(\"ipppp\").withStudentNumber(\"A0000000B\").withEmail(\"anna@example.com\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"wanninglim"},"content":"    // Manually added","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"wanninglim"},"content":"    public static final Student HOON \u003d new StudentBuilder().withName(\"Hoon Meier\")","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"wanninglim"},"content":"            .withEmail(\"stefan@example.com\").withStudentNumber(\"B0584738B\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"wanninglim"},"content":"    public static final Student IDA \u003d new StudentBuilder().withName(\"Ida Mueller\")","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"wanninglim"},"content":"            .withEmail(\"hans@example.com\").withStudentNumber(\"B0584738B\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"wanninglim"},"content":"    // Manually added - Student\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"wanninglim"},"content":"    public static final Student AMY \u003d new StudentBuilder().withName(VALID_NAME_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"wanninglim"},"content":"            .withStudentNumber(VALID_STUDENTNUMBER_AMY).withUserName(VALID_USERNAME_AMY)","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"wanninglim"},"content":"            .withRepoName(VALID_REPONAME_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"wanninglim"},"content":"    public static final Student BOB \u003d new StudentBuilder().withName(VALID_NAME_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"wanninglim"},"content":"            .withStudentNumber(VALID_STUDENTNUMBER_BOB).withUserName(VALID_USERNAME_BOB)","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"wanninglim"},"content":"            .withRepoName(VALID_REPONAME_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"wanninglim"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"wanninglim"},"content":"    private TypicalStudentsWithoutGroups() {} // prevents instantiation","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"wanninglim"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"wanninglim"},"content":"     * Returns an {@code AddressBook} with all the typical students.","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"wanninglim"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"wanninglim"},"content":"    public static AddressBook getTypicalAddressBookWithoutGroups() {","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"wanninglim"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"wanninglim"},"content":"        for (Student student : getTypicalStudentsWithoutGroups()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"wanninglim"},"content":"            ab.addStudent(student);","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"wanninglim"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"wanninglim"},"content":"        return ab;","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"wanninglim"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"wanninglim"},"content":"    public static List\u003cStudent\u003e getTypicalStudentsWithoutGroups() {","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"wanninglim"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"wanninglim"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"wanninglim"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"wanninglim":80}},{"path":"src/test/java/seedu/address/testutil/TypicalTasks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"itsraveen"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"itsraveen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"itsraveen"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"itsraveen"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"itsraveen"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"itsraveen"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"itsraveen"},"content":" * A utility class containing a list of {@code Task} objects to be used in tests.","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"itsraveen"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"itsraveen"},"content":"public class TypicalTasks {","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"itsraveen"},"content":"    public static final Task TUTORIAL \u003d new DeadlineTaskBuilder().withName(\"Do Tutorial\")","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"itsraveen"},"content":"            .withDate(\"2000-02-02\")","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"itsraveen"},"content":"            .withTags(\"work\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"itsraveen"},"content":"    public static final Task MEETING \u003d new DeadlineTaskBuilder().withName(\"Prepare for meeting\")","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"itsraveen"},"content":"            .withDate(\"2010-02-02\")","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"itsraveen"},"content":"            .withTags(\"work\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"itsraveen"},"content":"    public static final Task DINNER \u003d new DeadlineTaskBuilder().withName(\"Buy Dinner\")","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"itsraveen"},"content":"            .withDate(\"2021-10-12\")","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"itsraveen"},"content":"            .withTags(\"personal\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"itsraveen"},"content":"    public static final Task FRIEND_BIRTHDAY \u003d new DeadlineTaskBuilder().withName(\"Plan Birthday\")","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"itsraveen"},"content":"            .withDate(\"2021-10-20\")","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"itsraveen"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"itsraveen"},"content":"    public static final Task EXERCISE \u003d new DeadlineTaskBuilder().withName(\"Run\")","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"itsraveen"},"content":"            .withDate(\"2000-02-02\")","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"itsraveen"},"content":"            .build();","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"itsraveen"},"content":"    private TypicalTasks() {}","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"itsraveen"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"itsraveen"},"content":"     * Returns an {@code AddressBook} with all the typical tasks.","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"itsraveen"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"itsraveen"},"content":"    public static AddressBook getTypicalAddressBookWithTasks() {","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"itsraveen"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"itsraveen"},"content":"        for (Task task : getTypicalTasks()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"itsraveen"},"content":"            ab.addTask(task);","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"itsraveen"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"itsraveen"},"content":"        return ab;","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"itsraveen"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"itsraveen"},"content":"    public static List\u003cTask\u003e getTypicalTasks() {","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"itsraveen"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"itsraveen"},"content":"                TUTORIAL, MEETING, DINNER, FRIEND_BIRTHDAY, EXERCISE));","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"itsraveen"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"itsraveen"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"itsraveen":48}}]
