[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103-T16-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103-T16-4/tp/actions)","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"ForYourInterest is a brownfield project based on the AddressBook-Level3 project for managing members in university clubs/societies. While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).\u003cbr\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"## Product Website","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"For the detailed documentation of this project, see the **[ForYourInterest Product Website](https://ay2122s1-cs2103-t16-4.github.io/tp/)**.","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"## Acknowledgements","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"yongxiangng":7,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"run {","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"yongxiangng"},"content":"    archiveName \u003d \u0027foryourinterest.jar\u0027","lastModifiedDate":"2021-10-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"yongxiangng":5,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"### Ng Yong Xiang","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"\u003cimg src\u003d\"images/yongxiangng.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"[[github](http://github.com/yongxiangng)]","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"[[portfolio](team/yongxiangng.md)]","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"nzixuan"},"content":"- Role: Developer","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"nzixuan"},"content":"- Responsibilities: Deliverables and deadlines","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"IceWizard4902"},"content":"### Nguyen Quang Vinh","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"IceWizard4902"},"content":"\u003cimg src\u003d\"images/icewizard4902.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"IceWizard4902"},"content":"[[github](https://github.com/IceWizard4902)]","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"IceWizard4902"},"content":"[[portfolio](team/nguyenquangvinh.md)]","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"nzixuan"},"content":"- Role: Developer","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"nzixuan"},"content":"- Responsibilities: Testing","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"nzixuan"},"content":"### Ng Zi Xuan","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"nzixuan"},"content":"\u003cimg src\u003d\"images/nzixuan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"nzixuan"},"content":"[[github](http://github.com/nzixuan)] [[portfolio](team/nzixuan.md)]","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"nzixuan"},"content":"- Role: Developer","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"nzixuan"},"content":"- Responsibilities: Data","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"ryanongra"},"content":"### Ryan Ong","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":"\u003cimg src\u003d\"images/ryanongra.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"[[github](http://github.com/ryanongra)]","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"[[portfolio](team/ryanongra.md)]","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"nzixuan"},"content":"- Role: Developer","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"nzixuan"},"content":"- Responsibilities: Code Quality","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"dannytayjy"},"content":"### Tay Jun Yang","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"dannytayjy"},"content":"\u003cimg src\u003d\"images/dannytayjy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"dannytayjy"},"content":"[[github](http://github.com/dannytayjy)]","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"dannytayjy"},"content":"[[portfolio](team/dannytayjy.md)]","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"nzixuan"},"content":"- Role: Developer","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"nzixuan"},"content":"- Responsibilities: UI","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"IceWizard4902":4,"yongxiangng":4,"dannytayjy":4,"nzixuan":13,"ryanongra":4,"-":28}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"yongxiangng"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"yongxiangng"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object and `Event` object residing in the `Model`.","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"yongxiangng"},"content":"#### MemberUI","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"yongxiangng"},"content":"\u003cimg src\u003d\"images/MemberUiClassDiagram.png\" width\u003d\"235\" /\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":90,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":91,"author":{"gitId":"yongxiangng"},"content":"* Within the `PersonListPanel` either `PersonCard` is displayed or `PersonDetailsCard` exclusively.","lastModifiedDate":"2021-10-17"},{"lineNumber":92,"author":{"gitId":"yongxiangng"},"content":"* The `PersonCard` and `PersonDetailsCard` depends on `Model`.","lastModifiedDate":"2021-10-17"},{"lineNumber":93,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":94,"author":{"gitId":"yongxiangng"},"content":"#### EventUI","lastModifiedDate":"2021-10-17"},{"lineNumber":95,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":96,"author":{"gitId":"yongxiangng"},"content":"\u003cimg src\u003d\"images/EventUiClassDiagram.png\" width\u003d\"200\" /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":98,"author":{"gitId":"yongxiangng"},"content":"* Within the `EventListPanel`, `EventCard` is displayed.","lastModifiedDate":"2021-10-17"},{"lineNumber":99,"author":{"gitId":"yongxiangng"},"content":"* The `EventCard` depends on `Model`.","lastModifiedDate":"2021-10-17"},{"lineNumber":100,"author":{"gitId":"yongxiangng"},"content":"* The `EventCard` also reuses `PersonListPanel` from the UI components related to the member tab, hence the association.","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"yongxiangng"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object) and all `Event` objects (which are contained in a `UniqueEventList` object).","lastModifiedDate":"2021-10-17"},{"lineNumber":140,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"yongxiangng"},"content":"* stores the currently \u0027selected\u0027 `Event` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cEvent\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-10-17"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"yongxiangng"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"320\" /\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"yongxiangng"},"content":"#### Person","lastModifiedDate":"2021-10-17"},{"lineNumber":152,"author":{"gitId":"yongxiangng"},"content":"\u003cimg src\u003d\"images/PersonClassDiagram.png\" width\u003d\"415\" /\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":153,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":154,"author":{"gitId":"yongxiangng"},"content":"* The `Person` package contains classes related to the `Person` class.","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"yongxiangng"},"content":"* The `Person` class contains:","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"yongxiangng"},"content":"    * `Name`","lastModifiedDate":"2021-10-17"},{"lineNumber":157,"author":{"gitId":"yongxiangng"},"content":"    * `Phone`","lastModifiedDate":"2021-10-17"},{"lineNumber":158,"author":{"gitId":"ryanongra"},"content":"    * `Telegram`","lastModifiedDate":"2021-10-23"},{"lineNumber":159,"author":{"gitId":"yongxiangng"},"content":"    * `Email`","lastModifiedDate":"2021-10-17"},{"lineNumber":160,"author":{"gitId":"yongxiangng"},"content":"    * `Tag`","lastModifiedDate":"2021-10-17"},{"lineNumber":161,"author":{"gitId":"yongxiangng"},"content":"* The `UniquePersonList` contains a unique list of `Person` objects.","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":163,"author":{"gitId":"yongxiangng"},"content":"#### Event","lastModifiedDate":"2021-10-17"},{"lineNumber":164,"author":{"gitId":"yongxiangng"},"content":"\u003cimg src\u003d\"images/EventClassDiagram.png\" width\u003d\"210\" /\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":165,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":166,"author":{"gitId":"yongxiangng"},"content":"* The `Event` package contains classes related to the `Event` class.","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"yongxiangng"},"content":"* The `Event` class contains:","lastModifiedDate":"2021-10-21"},{"lineNumber":168,"author":{"gitId":"yongxiangng"},"content":"    * `EventName`","lastModifiedDate":"2021-10-17"},{"lineNumber":169,"author":{"gitId":"yongxiangng"},"content":"    * `UniquePersonList` as the list of attendees","lastModifiedDate":"2021-10-21"},{"lineNumber":170,"author":{"gitId":"yongxiangng"},"content":"* The `UniqueEventList` contains a unique list of `Event` objects.","lastModifiedDate":"2021-10-21"},{"lineNumber":171,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"yongxiangng"},"content":"### Event feature","lastModifiedDate":"2021-10-17"},{"lineNumber":195,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":196,"author":{"gitId":"yongxiangng"},"content":"#### Implementation Details","lastModifiedDate":"2021-10-17"},{"lineNumber":197,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":198,"author":{"gitId":"yongxiangng"},"content":"The event feature is implemented in `AddressBook` by having `AddressBook` maintain a `UniqueEventList`. The implementation is similar to how `Person` is implemented in `AddressBook`. The relevant UI components then displays the events in an `EventCard` within the `EventListPanel`.","lastModifiedDate":"2021-10-24"},{"lineNumber":199,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":200,"author":{"gitId":"yongxiangng"},"content":"As a result, `AddressBook` now has the following additional methods.","lastModifiedDate":"2021-10-17"},{"lineNumber":201,"author":{"gitId":"yongxiangng"},"content":"* `setEvents(List\u003cEvents\u003e)`","lastModifiedDate":"2021-10-17"},{"lineNumber":202,"author":{"gitId":"yongxiangng"},"content":"* `hasEvent(Event)`","lastModifiedDate":"2021-10-17"},{"lineNumber":203,"author":{"gitId":"yongxiangng"},"content":"* `addEvent(Event)`","lastModifiedDate":"2021-10-17"},{"lineNumber":204,"author":{"gitId":"yongxiangng"},"content":"* `setEvent(Event, Event)`","lastModifiedDate":"2021-10-17"},{"lineNumber":205,"author":{"gitId":"yongxiangng"},"content":"* `removeEvent(Event)`","lastModifiedDate":"2021-10-17"},{"lineNumber":206,"author":{"gitId":"yongxiangng"},"content":"* `clearAllEvents()`","lastModifiedDate":"2021-10-17"},{"lineNumber":207,"author":{"gitId":"yongxiangng"},"content":"* `getEventList()`","lastModifiedDate":"2021-10-17"},{"lineNumber":208,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":209,"author":{"gitId":"yongxiangng"},"content":"The `Model` interface now has the following additional methods.","lastModifiedDate":"2021-10-17"},{"lineNumber":210,"author":{"gitId":"yongxiangng"},"content":"* `hasEvent(Event)`","lastModifiedDate":"2021-10-17"},{"lineNumber":211,"author":{"gitId":"yongxiangng"},"content":"* `deleteEvent(Event)`","lastModifiedDate":"2021-10-17"},{"lineNumber":212,"author":{"gitId":"yongxiangng"},"content":"* `clearAllEvent()`","lastModifiedDate":"2021-10-17"},{"lineNumber":213,"author":{"gitId":"yongxiangng"},"content":"* `addEvent(Event)`","lastModifiedDate":"2021-10-17"},{"lineNumber":214,"author":{"gitId":"yongxiangng"},"content":"* `setEvent(Event, Event)`","lastModifiedDate":"2021-10-17"},{"lineNumber":215,"author":{"gitId":"yongxiangng"},"content":"* `getFilteredList()`","lastModifiedDate":"2021-10-17"},{"lineNumber":216,"author":{"gitId":"yongxiangng"},"content":"* `updateFilteredLisst(Predicate\u003cEvent\u003e)`","lastModifiedDate":"2021-10-17"},{"lineNumber":217,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":218,"author":{"gitId":"yongxiangng"},"content":"The way `Event` behaves is very similar to `Person` and thus will be omitted to reduce repeated details.","lastModifiedDate":"2021-10-17"},{"lineNumber":219,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":220,"author":{"gitId":"yongxiangng"},"content":"#### Design considerations","lastModifiedDate":"2021-10-17"},{"lineNumber":221,"author":{"gitId":"yongxiangng"},"content":"Aspect: Whether to generify `UniqueEventList`:","lastModifiedDate":"2021-10-17"},{"lineNumber":222,"author":{"gitId":"yongxiangng"},"content":"* **Alternative 1 (current choice)**: Create a `UniqueEventList` class similar to `UniquePersonList`.","lastModifiedDate":"2021-10-17"},{"lineNumber":223,"author":{"gitId":"yongxiangng"},"content":"    * Pros: Easy to implement since there is already a reference. Can get code out fast.","lastModifiedDate":"2021-10-17"},{"lineNumber":224,"author":{"gitId":"yongxiangng"},"content":"    * Cons: Lots of boilerplate code","lastModifiedDate":"2021-10-17"},{"lineNumber":225,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":226,"author":{"gitId":"yongxiangng"},"content":"* **Alternative 2**: Generify `UniqueEventList` and `UniquePersonList`.","lastModifiedDate":"2021-10-17"},{"lineNumber":227,"author":{"gitId":"yongxiangng"},"content":"    * Pros: Much more elegant, extensible.","lastModifiedDate":"2021-10-17"},{"lineNumber":228,"author":{"gitId":"yongxiangng"},"content":"    * Cons: Needs major changes to existing code, risks regressions. Need to change multiple methods name like `setPerson` to `setItem`.","lastModifiedDate":"2021-10-17"},{"lineNumber":229,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":230,"author":{"gitId":"yongxiangng"},"content":"We have decided to go ahead with **Alternative 1** as it is easier to implement due to time constraints. Alternative 1 is likely to be more reliable as we do not risk running into regressions as much. While **Alternative 1** is less extensible, since we are only creating 1 more class of this type, the pros seems to outweigh the cons.","lastModifiedDate":"2021-10-17"},{"lineNumber":231,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":232,"author":{"gitId":"yongxiangng"},"content":"Aspect: Whether to generify `Name`, reuse `Name` or create `EventName`:","lastModifiedDate":"2021-10-17"},{"lineNumber":233,"author":{"gitId":"yongxiangng"},"content":"* **Alternative 1 (current choice)**: Create `EventName` class similar to `Name`.","lastModifiedDate":"2021-10-17"},{"lineNumber":234,"author":{"gitId":"yongxiangng"},"content":"    * Pros: Easy to implement, since we already have similar code. Less likely to introduce regressions.","lastModifiedDate":"2021-10-17"},{"lineNumber":235,"author":{"gitId":"yongxiangng"},"content":"    * Cons: More boilerplate code.","lastModifiedDate":"2021-10-17"},{"lineNumber":236,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":237,"author":{"gitId":"yongxiangng"},"content":"* **Alternative 2**: Reuse `Name` class.","lastModifiedDate":"2021-10-17"},{"lineNumber":238,"author":{"gitId":"yongxiangng"},"content":"    * Pros: Nothing to implement, lesser things to test.","lastModifiedDate":"2021-10-17"},{"lineNumber":239,"author":{"gitId":"yongxiangng"},"content":"    * Cons: Unable to have different type of valid name checking.","lastModifiedDate":"2021-10-17"},{"lineNumber":240,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":241,"author":{"gitId":"yongxiangng"},"content":"* **Alternative 3**: Make `Name` class generic, depending on the type of predicate used to test if name is valid.","lastModifiedDate":"2021-10-17"},{"lineNumber":242,"author":{"gitId":"yongxiangng"},"content":"    * Pros: Much more general. Lesser things to test, lesser bugs when done correctly.","lastModifiedDate":"2021-10-17"},{"lineNumber":243,"author":{"gitId":"yongxiangng"},"content":"    * Cons: Hard to implement. Over engineering.","lastModifiedDate":"2021-10-17"},{"lineNumber":244,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":245,"author":{"gitId":"yongxiangng"},"content":"We have decided to go ahead with **Alternative 1** as it allows for greater flexibility for future changes. The validity of an `EventName` does not have to follow that of `Name` and thus **Alternative 1** would be ideal for such a case. Moreover, using a different class allows for type checking, which ensures we do not accidentally pass a `Name` belonging to a `Person` to a method expecting `EventName` belonging to an `Event`.","lastModifiedDate":"2021-10-24"},{"lineNumber":246,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":247,"author":{"gitId":"nzixuan"},"content":"### Chain commands feature","lastModifiedDate":"2021-10-25"},{"lineNumber":248,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":249,"author":{"gitId":"nzixuan"},"content":"#### Implementation Details","lastModifiedDate":"2021-10-25"},{"lineNumber":250,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":251,"author":{"gitId":"nzixuan"},"content":"The Chain Commands feature is implemented in `AddressBookParser` as a type of `Command` with similar implementations to how other commands are executed.","lastModifiedDate":"2021-10-25"},{"lineNumber":252,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":253,"author":{"gitId":"nzixuan"},"content":"As such a new regex expression is created in `AddressBookParser` besides looking for the current `BASIC_COMMAND_FORMAT` and will search for commands with `ADVANCED_COMMAND_FORMAT`.","lastModifiedDate":"2021-10-25"},{"lineNumber":254,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":255,"author":{"gitId":"nzixuan"},"content":"If a command matches the `ADVANCED_COMMAND_FORMAT` it will then parse the command into a `ChainCommand` which when executed will execute the two commands parsed into it.","lastModifiedDate":"2021-10-25"},{"lineNumber":256,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":257,"author":{"gitId":"nzixuan"},"content":"The following sequence diagram shows how the Chain command parsing and execution works:","lastModifiedDate":"2021-10-25"},{"lineNumber":258,"author":{"gitId":"nzixuan"},"content":"![ChainCommandSequenceDiagram](images/ChainCommandSequenceDiagram.png)","lastModifiedDate":"2021-10-25"},{"lineNumber":259,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":260,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":261,"author":{"gitId":"nzixuan"},"content":"#### Design considerations","lastModifiedDate":"2021-10-25"},{"lineNumber":262,"author":{"gitId":"nzixuan"},"content":"Aspect: How to parse inputs given to `ChainCommand`:","lastModifiedDate":"2021-10-25"},{"lineNumber":263,"author":{"gitId":"nzixuan"},"content":"* **Alternative 1 (current choice)**: Handle the parsing of the inputs within `AddressBookParser` itself.","lastModifiedDate":"2021-10-25"},{"lineNumber":264,"author":{"gitId":"nzixuan"},"content":"    * Pros: Easy to implement with no new classes created.","lastModifiedDate":"2021-10-25"},{"lineNumber":265,"author":{"gitId":"nzixuan"},"content":"    * Cons: Creates an additional condition before basic commands are parsed. Making it difficult to trace the regular functioning of basic commands.","lastModifiedDate":"2021-10-25"},{"lineNumber":266,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":267,"author":{"gitId":"nzixuan"},"content":"* **Alternative 2**: Use a `ChainCommandParser` and Command Words","lastModifiedDate":"2021-10-25"},{"lineNumber":268,"author":{"gitId":"nzixuan"},"content":"    * Pros: The structure of how commands are usually executed is preserved, making code tracing easier to do.","lastModifiedDate":"2021-10-25"},{"lineNumber":269,"author":{"gitId":"nzixuan"},"content":"    * Cons: Unable to parse the inputs of the ChainCommand without passing the current `AddressBookParser` object into the parser. Which will change the inputs of the `Parser`.","lastModifiedDate":"2021-10-25"},{"lineNumber":270,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":271,"author":{"gitId":"nzixuan"},"content":"We have decided to go ahead with **Alternative 1** as it preserves the current implementation of the `Parser` and avoid having to pass around `AddressBookParser` objects during run time. While the code is modified instead of extended, we  believe that the alternative will cause even more modifications in the future resulting in futher problems.","lastModifiedDate":"2021-10-25"},{"lineNumber":272,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":363,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":364,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":365,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":366,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"nzixuan"},"content":"* has a need to manage a significant number of members for his CCA or interest group","lastModifiedDate":"2021-09-25"},{"lineNumber":377,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":380,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"nzixuan"},"content":"**Value proposition**: manage members faster than a typical mouse/GUI driven app","lastModifiedDate":"2021-09-25"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ----------------------------------------------------------------------            |","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"nzixuan"},"content":"| `* * *`  | user                                       | add new members with details   | track my members                                                                  |","lastModifiedDate":"2021-09-25"},{"lineNumber":392,"author":{"gitId":"nzixuan"},"content":"| `* * *`  | user                                       | delete a member                | remove members who are not active anymore                                         |","lastModifiedDate":"2021-09-25"},{"lineNumber":393,"author":{"gitId":"nzixuan"},"content":"| `* * *`  | user                                       | view a member\u0027s detail         |                                                                                   |","lastModifiedDate":"2021-09-25"},{"lineNumber":394,"author":{"gitId":"nzixuan"},"content":"| `* * `   | first time user                             | easily find the details of available commands | learn new commands                                                  |","lastModifiedDate":"2021-09-25"},{"lineNumber":395,"author":{"gitId":"nzixuan"},"content":"| `* * `   | first time user                             | easily populate the application with dummy data | try out features and see how the application is used             |","lastModifiedDate":"2021-09-25"},{"lineNumber":396,"author":{"gitId":"nzixuan"},"content":"| `* * `   | first time user                             | easily clear all data          | remove unneeded data and start the application afresh                             |","lastModifiedDate":"2021-09-25"},{"lineNumber":397,"author":{"gitId":"nzixuan"},"content":"| `* * `   | new user                                   | see new tip on features and commands | get to know the application better                                          |","lastModifiedDate":"2021-09-25"},{"lineNumber":398,"author":{"gitId":"nzixuan"},"content":"| `* * `   | new user                                   | undo my commands               | easily undo mistakes                                                              |","lastModifiedDate":"2021-09-25"},{"lineNumber":399,"author":{"gitId":"nzixuan"},"content":"| `* * `   | interest group leader                      | search and filter member        | find selected members easily                                                       |","lastModifiedDate":"2021-09-25"},{"lineNumber":400,"author":{"gitId":"nzixuan"},"content":"| `*  `    | expert user                                | type commands in one line      | execute commands quickly                                                          |","lastModifiedDate":"2021-09-25"},{"lineNumber":401,"author":{"gitId":"nzixuan"},"content":"| `*  `    | expert user                                | chain commands together and write macros | increase my productivity                                                |","lastModifiedDate":"2021-09-25"},{"lineNumber":402,"author":{"gitId":"nzixuan"},"content":"| `*  `    | user                                       | tag an event or training session to a person | keep track of their attendance and contact them easily if they have not arrived |","lastModifiedDate":"2021-09-25"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"nzixuan"},"content":"(For all use cases below, the **System** is the `ForYourInterest` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-09-25"},{"lineNumber":407,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":408,"author":{"gitId":"nzixuan"},"content":"**Use case: UC01 - Add a new member into the system**","lastModifiedDate":"2021-09-25"},{"lineNumber":409,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":410,"author":{"gitId":"nzixuan"},"content":"**MSS**","lastModifiedDate":"2021-09-25"},{"lineNumber":411,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":412,"author":{"gitId":"nzixuan"},"content":"1. User wants to add a new member.","lastModifiedDate":"2021-09-25"},{"lineNumber":413,"author":{"gitId":"nzixuan"},"content":"2. User enters the details of the new member, which are name, phone number, telegram handle and email.","lastModifiedDate":"2021-09-25"},{"lineNumber":414,"author":{"gitId":"nzixuan"},"content":"3. System confirms that the member is added.","lastModifiedDate":"2021-09-25"},{"lineNumber":415,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":416,"author":{"gitId":"nzixuan"},"content":"   Use case ends.","lastModifiedDate":"2021-09-25"},{"lineNumber":417,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":418,"author":{"gitId":"nzixuan"},"content":"**Extensions**","lastModifiedDate":"2021-09-25"},{"lineNumber":419,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":420,"author":{"gitId":"nzixuan"},"content":"* 2a. System detects that the name is not entered.","lastModifiedDate":"2021-09-25"},{"lineNumber":421,"author":{"gitId":"nzixuan"},"content":"    * 2a1. System requests for the name to be entered.","lastModifiedDate":"2021-09-25"},{"lineNumber":422,"author":{"gitId":"nzixuan"},"content":"    * 2a2. User enters the name of the new member.","lastModifiedDate":"2021-09-25"},{"lineNumber":423,"author":{"gitId":"nzixuan"},"content":"    * Step 2a1-2a2 are repeated until the name is entered.","lastModifiedDate":"2021-09-25"},{"lineNumber":424,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":425,"author":{"gitId":"nzixuan"},"content":"* 2b. System detects that the phone number is not entered.","lastModifiedDate":"2021-09-25"},{"lineNumber":426,"author":{"gitId":"nzixuan"},"content":"    * 2b1. System accepts that the phone number is not entered as it is optional.","lastModifiedDate":"2021-09-25"},{"lineNumber":427,"author":{"gitId":"nzixuan"},"content":"    * Use case resumes at 2c.","lastModifiedDate":"2021-09-25"},{"lineNumber":428,"author":{"gitId":"nzixuan"},"content":"* 2c. System detects that the telegram handle is not entered.","lastModifiedDate":"2021-09-25"},{"lineNumber":429,"author":{"gitId":"nzixuan"},"content":"    * 2c1. System accepts that the telegram handle is not entered as it is optional.","lastModifiedDate":"2021-09-25"},{"lineNumber":430,"author":{"gitId":"nzixuan"},"content":"    * Use case resumes at 2d.","lastModifiedDate":"2021-09-25"},{"lineNumber":431,"author":{"gitId":"nzixuan"},"content":"* 2d. System detects that the email is not entered.","lastModifiedDate":"2021-09-25"},{"lineNumber":432,"author":{"gitId":"nzixuan"},"content":"    * 2d1. System accepts that the email is not entered as it is optional.","lastModifiedDate":"2021-09-25"},{"lineNumber":433,"author":{"gitId":"nzixuan"},"content":"    * Use case resumes at 3.","lastModifiedDate":"2021-09-25"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":435,"author":{"gitId":"nzixuan"},"content":"**Use case: UC02 - Delete a member from the system**","lastModifiedDate":"2021-09-25"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":437,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-09-25"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":439,"author":{"gitId":"nzixuan"},"content":"1. User searches for a member using \u003cins\u003eUC04 - Find a member\u003cins/\u003e.","lastModifiedDate":"2021-09-25"},{"lineNumber":440,"author":{"gitId":"nzixuan"},"content":"2. User types in command to delete the member.","lastModifiedDate":"2021-09-25"},{"lineNumber":441,"author":{"gitId":"nzixuan"},"content":"3. System confirms that the member is deleted.","lastModifiedDate":"2021-09-25"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":443,"author":{"gitId":"nzixuan"},"content":"   Use case ends.","lastModifiedDate":"2021-09-25"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":445,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-09-25"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":447,"author":{"gitId":"nzixuan"},"content":"* 2a. User attempts to delete a member that is not in the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":448,"author":{"gitId":"nzixuan"},"content":"    * 2a1. System notifies the user that the member is not in the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":450,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2021-09-25"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":452,"author":{"gitId":"nzixuan"},"content":"**Use case: UC03 - View all members managed by the system**","lastModifiedDate":"2021-09-25"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":454,"author":{"gitId":"nzixuan"},"content":"**MSS**","lastModifiedDate":"2021-09-25"},{"lineNumber":455,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":456,"author":{"gitId":"nzixuan"},"content":"1. User requests to view all members managed by the system by using the command `list`.","lastModifiedDate":"2021-09-25"},{"lineNumber":457,"author":{"gitId":"nzixuan"},"content":"2. System shows a list of all members managed by the system.","lastModifiedDate":"2021-09-25"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"nzixuan"},"content":"   Use case ends.","lastModifiedDate":"2021-09-25"},{"lineNumber":460,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":461,"author":{"gitId":"nzixuan"},"content":"**Use case: UC04 - Find a member**","lastModifiedDate":"2021-09-25"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"nzixuan"},"content":"1. User requests to find members with a given keyword.","lastModifiedDate":"2021-09-25"},{"lineNumber":466,"author":{"gitId":"nzixuan"},"content":"2. Members with details matching the given keywords are shown in the same format as \u003cins\u003eUC03 - View all members managed by the system\u003cins/\u003e.","lastModifiedDate":"2021-09-25"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"nzixuan"},"content":"* 1a. User enters empty keyword","lastModifiedDate":"2021-09-25"},{"lineNumber":472,"author":{"gitId":"nzixuan"},"content":"    * 1a1. System informs user that keyword cannot be empty","lastModifiedDate":"2021-09-25"},{"lineNumber":473,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":474,"author":{"gitId":"nzixuan"},"content":"      Use case ends.","lastModifiedDate":"2021-09-25"},{"lineNumber":475,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":476,"author":{"gitId":"nzixuan"},"content":"**Use case: UC05 - View the details of members**","lastModifiedDate":"2021-09-25"},{"lineNumber":477,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":478,"author":{"gitId":"nzixuan"},"content":"**Guarantees: All details previously entered are displayed**","lastModifiedDate":"2021-09-25"},{"lineNumber":479,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":480,"author":{"gitId":"nzixuan"},"content":"**MSS**","lastModifiedDate":"2021-09-25"},{"lineNumber":481,"author":{"gitId":"nzixuan"},"content":"1. User requests to see the details of a certain member.","lastModifiedDate":"2021-09-25"},{"lineNumber":482,"author":{"gitId":"nzixuan"},"content":"2. All details regarding the specified member are shown.","lastModifiedDate":"2021-09-25"},{"lineNumber":483,"author":{"gitId":"nzixuan"},"content":"   Use case ends.","lastModifiedDate":"2021-09-25"},{"lineNumber":484,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":485,"author":{"gitId":"nzixuan"},"content":"**Extensions**","lastModifiedDate":"2021-09-25"},{"lineNumber":486,"author":{"gitId":"nzixuan"},"content":"* 1a. User enters the name of a member who does not exist in the current list of members","lastModifiedDate":"2021-09-25"},{"lineNumber":487,"author":{"gitId":"nzixuan"},"content":"    * 1a1. Application is unable to find the user specified.","lastModifiedDate":"2021-09-25"},{"lineNumber":488,"author":{"gitId":"nzixuan"},"content":"    * 1a2. Application displays message to inform user than member specified does not exist.","lastModifiedDate":"2021-09-25"},{"lineNumber":489,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":490,"author":{"gitId":"nzixuan"},"content":"  Use case ends.","lastModifiedDate":"2021-09-25"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"nzixuan"},"content":"**Use case: UC06 - Clear past data**","lastModifiedDate":"2021-09-25"},{"lineNumber":493,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":494,"author":{"gitId":"nzixuan"},"content":"**Guarantees: All member data are cleared**","lastModifiedDate":"2021-09-25"},{"lineNumber":495,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":496,"author":{"gitId":"nzixuan"},"content":"**MSS**","lastModifiedDate":"2021-09-25"},{"lineNumber":497,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":498,"author":{"gitId":"nzixuan"},"content":"1. User requests to delete member data.","lastModifiedDate":"2021-09-25"},{"lineNumber":499,"author":{"gitId":"nzixuan"},"content":"2. All member data is deleted.","lastModifiedDate":"2021-09-25"},{"lineNumber":500,"author":{"gitId":"nzixuan"},"content":"3. System confirms that past data has been deleted.","lastModifiedDate":"2021-09-25"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"nzixuan"},"content":"**Extensions**","lastModifiedDate":"2021-09-25"},{"lineNumber":505,"author":{"gitId":"nzixuan"},"content":"* 2a. System is unable to delete data.","lastModifiedDate":"2021-09-25"},{"lineNumber":506,"author":{"gitId":"nzixuan"},"content":"    * 2a1. System notifies the user of the reason why it is not able to delete the data.","lastModifiedDate":"2021-09-25"},{"lineNumber":507,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":508,"author":{"gitId":"nzixuan"},"content":"**Use case: UC07 - Exit the application**","lastModifiedDate":"2021-09-25"},{"lineNumber":509,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":510,"author":{"gitId":"nzixuan"},"content":"**MSS**","lastModifiedDate":"2021-09-25"},{"lineNumber":511,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":512,"author":{"gitId":"nzixuan"},"content":"1. User is done using the app and requests to exit the app.","lastModifiedDate":"2021-09-25"},{"lineNumber":513,"author":{"gitId":"nzixuan"},"content":"2. Application exits.","lastModifiedDate":"2021-09-25"},{"lineNumber":514,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":515,"author":{"gitId":"nzixuan"},"content":"   Use case ends.","lastModifiedDate":"2021-09-25"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"yongxiangng"},"content":"* **Address Book**: An address book is a database used for storing contacts","lastModifiedDate":"2021-10-30"},{"lineNumber":526,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"yongxiangng"},"content":"* **Interest Group (IG)**: A student run organisation which focuses on a common interest (such as sports, games, etc). Similar to co-curricular activities (CCAs) in Secondary School or Junior College.","lastModifiedDate":"2021-10-30"},{"lineNumber":529,"author":{"gitId":"nzixuan"},"content":"* **IG**: Interest Group","lastModifiedDate":"2021-09-25"},{"lineNumber":530,"author":{"gitId":"nzixuan"},"content":"* **RC**: Residential College","lastModifiedDate":"2021-09-25"},{"lineNumber":531,"author":{"gitId":"nzixuan"},"content":"* **Halls**: Halls of Residence","lastModifiedDate":"2021-09-25"},{"lineNumber":532,"author":{"gitId":"nzixuan"},"content":"* **CCA**: Co-Curricular Activity","lastModifiedDate":"2021-09-25"},{"lineNumber":533,"author":{"gitId":"nzixuan"},"content":"* **Telegram handle**: Telegram username","lastModifiedDate":"2021-09-25"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":535,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"ryanongra"},"content":"### Adding a person","lastModifiedDate":"2021-10-27"},{"lineNumber":564,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":565,"author":{"gitId":"ryanongra"},"content":"1. Adding a new person to the address book.","lastModifiedDate":"2021-10-27"},{"lineNumber":566,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":567,"author":{"gitId":"ryanongra"},"content":"    1. Test case: `add n/John Doe`\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":568,"author":{"gitId":"ryanongra"},"content":"       Expected: First person is added to the list. Details of the added person shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2021-10-27"},{"lineNumber":569,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":570,"author":{"gitId":"ryanongra"},"content":"    1. Test case: `add n/John Smith p/98765432 e/johnd@example.com t/@johndoedoe tag/friends tag/owesMoney`\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":571,"author":{"gitId":"ryanongra"},"content":"       Expected: Second person is added to the list. Tags are displayed under the person\u0027s name. Details of the added person shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2021-10-27"},{"lineNumber":572,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":573,"author":{"gitId":"ryanongra"},"content":"    1. Test case: omit optional details (phone number, email, telegram, tags) \u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":574,"author":{"gitId":"ryanongra"},"content":"       Assumption: Name is provided and person is not a duplicate.","lastModifiedDate":"2021-10-27"},{"lineNumber":575,"author":{"gitId":"ryanongra"},"content":"       Expected: Person is added to the list. Details of the added person shown in the status message. Omitted details are replaced by the placeholder message: \"NIL: No [omitted detail] specified\".","lastModifiedDate":"2021-10-27"},{"lineNumber":576,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":577,"author":{"gitId":"ryanongra"},"content":"    1. Test case: `add n/John Smith`\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":578,"author":{"gitId":"ryanongra"},"content":"       Expected: No person is added. Duplicate person error details shown in status bar.","lastModifiedDate":"2021-10-27"},{"lineNumber":579,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":580,"author":{"gitId":"ryanongra"},"content":"    1. Test case: `add p/98765432`\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":581,"author":{"gitId":"ryanongra"},"content":"       Expected: No person is added. Invalid command format error shown in status bar.","lastModifiedDate":"2021-10-27"},{"lineNumber":582,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":583,"author":{"gitId":"ryanongra"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2021-10-27"},{"lineNumber":584,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":585,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"ryanongra"},"content":"### Renaming an event","lastModifiedDate":"2021-10-27"},{"lineNumber":603,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":604,"author":{"gitId":"ryanongra"},"content":"1. Rename an existing event in the address book.","lastModifiedDate":"2021-10-27"},{"lineNumber":605,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":606,"author":{"gitId":"ryanongra"},"content":"    1. Test case: `renameEvent 1 ev/NewName`\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":607,"author":{"gitId":"ryanongra"},"content":"       Expected: Name of the first event in the event list changes to \"NewName\". List of attendees remains the same.","lastModifiedDate":"2021-10-27"},{"lineNumber":608,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":609,"author":{"gitId":"ryanongra"},"content":"    1. Test case: `renameEvent ev/NewName`\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":610,"author":{"gitId":"ryanongra"},"content":"       Expected: No event name is changed. Invalid command format shown in status bar.","lastModifiedDate":"2021-10-27"},{"lineNumber":611,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":612,"author":{"gitId":"ryanongra"},"content":"    1. Test case: `renameEvent 1`\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":613,"author":{"gitId":"ryanongra"},"content":"       Expected: No event name is changed. Invalid command format shown in status bar.","lastModifiedDate":"2021-10-27"},{"lineNumber":614,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":615,"author":{"gitId":"ryanongra"},"content":"### Removing a person from an event","lastModifiedDate":"2021-10-27"},{"lineNumber":616,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":617,"author":{"gitId":"ryanongra"},"content":"1. Removes a specified person from a specified event in the address book.","lastModifiedDate":"2021-10-27"},{"lineNumber":618,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":619,"author":{"gitId":"ryanongra"},"content":"    1. Prerequisites: The event \"Party\" exists. The \"Party\" contains an attendee with the name \"John Doe\". An event with the name \"Dinner\" does not exist.","lastModifiedDate":"2021-10-27"},{"lineNumber":620,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":621,"author":{"gitId":"ryanongra"},"content":"    1. Test case: `removePersonFromEvent n/John Doe ev/Party`\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":622,"author":{"gitId":"ryanongra"},"content":"       Expected: John Doe is removed from the \"Party\" event\u0027s list. Details of the removal show in status bar.","lastModifiedDate":"2021-10-27"},{"lineNumber":623,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":624,"author":{"gitId":"ryanongra"},"content":"    1. Test case: `removePersonFromEvent n/John Doe`\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":625,"author":{"gitId":"ryanongra"},"content":"       Expected: No change. Invalid command format shown in status bar.","lastModifiedDate":"2021-10-27"},{"lineNumber":626,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":627,"author":{"gitId":"ryanongra"},"content":"    1. Test case: `removePersonFromEvent ev/Party`\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":628,"author":{"gitId":"ryanongra"},"content":"       Expected: No change. Invalid command format shown in status bar.","lastModifiedDate":"2021-10-27"},{"lineNumber":629,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":630,"author":{"gitId":"ryanongra"},"content":"    1. Test case: `removePersonFromEvent n/John Doe ev/Dinner`\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":631,"author":{"gitId":"ryanongra"},"content":"       Expected: No change. Event not found error message shown in status bar.","lastModifiedDate":"2021-10-27"},{"lineNumber":632,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":633,"author":{"gitId":"ryanongra"},"content":"    1. Test case: `removePersonFromEvent n/John Doe ev/Party`\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":634,"author":{"gitId":"ryanongra"},"content":"       Note: John Doe no longer exists in this event\u0027s list due to test case ii.","lastModifiedDate":"2021-10-27"},{"lineNumber":635,"author":{"gitId":"ryanongra"},"content":"       Expected: No change. Person not found error message shown in status bar.","lastModifiedDate":"2021-10-27"},{"lineNumber":636,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":637,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":638,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":640,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":641,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":642,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"IceWizard4902"},"content":"2. _{ more test cases …​ }_","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"IceWizard4902":1,"yongxiangng":94,"ryanongra":58,"nzixuan":131,"-":359}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"ForYourInterest is a **desktop app for managing members in university clubs/societies, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, ForYourInterest can get your member management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"1. Download the latest `foryourinterest.jar` from [here](https://github.com/AY2122S1-CS2103-T16-4/tp/releases).","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your ForYourInterest.","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"yongxiangng"},"content":"   * **`list`** : View all persons.","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"   * **`add`**`n/Xiao Ming p/61234567 t/@xiao_ming e/xiaoming@gmail.com` : Adds a contact named `Xiao Ming` to the application.","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * **`delete`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"IceWizard4902"},"content":"   * **`clear`**`-p 1-10` : Deletes all entries in person list from index 1 to 10 inclusive.","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"ryanongra"},"content":"  e.g `n/NAME [tag/TAG]` can be used as `n/John Doe tag/friend` or as `n/John Doe`.","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"ryanongra"},"content":"  e.g. `[tag/TAG]…​` can be used as ` ` (i.e. 0 times), `tag/friend`, `tag/friend tag/family` etc.","lastModifiedDate":"2021-10-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"yongxiangng"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"### Adding a person : `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"yongxiangng"},"content":"Adds a person to the Interest Group.","lastModifiedDate":"2021-10-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"ryanongra"},"content":"Format: `add n/NAME [p/PHONE_NUMBER] [t/TELEGRAM_HANDLE] [e/EMAIL] [tag/TAG]`","lastModifiedDate":"2021-10-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"yongxiangng"},"content":"* Only person\u0027s name must be entered to add the person. All other details are optional.","lastModifiedDate":"2021-10-30"},{"lineNumber":82,"author":{"gitId":"yongxiangng"},"content":"* `Peron` added should not have the same name (case-sensitive) as `Person` that is already in the application.","lastModifiedDate":"2021-10-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"ryanongra"},"content":"* `add n/Smith p/91234567 t/smith18 tag/Team Captain tag/Team A`","lastModifiedDate":"2021-10-30"},{"lineNumber":86,"author":{"gitId":"ryanongra"},"content":"* `add n/Xiao Ming p/61234567 t/@xiao_ming e/xiaoming@gmail.com`","lastModifiedDate":"2021-09-25"},{"lineNumber":87,"author":{"gitId":"ryanongra"},"content":"* `add n/John Doe`","lastModifiedDate":"2021-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"IceWizard4902"},"content":"Shows the list of all persons in the IG.","lastModifiedDate":"2021-09-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"yongxiangng"},"content":"* The list will display the names of all the persons in the IG","lastModifiedDate":"2021-10-30"},{"lineNumber":96,"author":{"gitId":"yongxiangng"},"content":"* The IG leader can use the `details` command with the name to show further details of the person (name, phone number, Telegram handle, Email)","lastModifiedDate":"2021-10-30"},{"lineNumber":97,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":98,"author":{"gitId":"IceWizard4902"},"content":"Examples:","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"yongxiangng"},"content":"* `list` in an IG of 5 persons will display all the person’s names.","lastModifiedDate":"2021-10-30"},{"lineNumber":100,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"yongxiangng"},"content":"Edits an existing person in the application.","lastModifiedDate":"2021-10-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"ryanongra"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [t/TELEGRAM_HANDLE] [tag/TAG]…​`","lastModifiedDate":"2021-10-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"ryanongra"},"content":"* You can remove all the person’s tags by typing `tag/` without","lastModifiedDate":"2021-10-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"ryanongra"},"content":"*  `edit 2 n/Betsy Crower tag/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2021-10-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"yongxiangng"},"content":"### Finding a person : `find`","lastModifiedDate":"2021-10-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"yongxiangng"},"content":"Finds the persons whose details contain any of the given keywords and shows the filtered list of persons in the IG. These include their name, mobile number, telegram handle and email.","lastModifiedDate":"2021-10-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"yongxiangng"},"content":"* The search is case-insensitive. E.g `xiaomings` will match `Xiaomings`","lastModifiedDate":"2021-09-22"},{"lineNumber":125,"author":{"gitId":"yongxiangng"},"content":"* The order of the keywords does not matter. e.g. `Xuan Ming` will match `Ming Xuan`","lastModifiedDate":"2021-09-22"},{"lineNumber":126,"author":{"gitId":"yongxiangng"},"content":"* The name, mobile number, telegram handle and email will be searched for the keyword.","lastModifiedDate":"2021-09-22"},{"lineNumber":127,"author":{"gitId":"yongxiangng"},"content":"* Only full words will be matched e.g. `Han` will not match `Hanna`","lastModifiedDate":"2021-09-22"},{"lineNumber":128,"author":{"gitId":"yongxiangng"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search). e.g. `Hanna Bo` will return `Hanna Bana`, `Ling Bo`","lastModifiedDate":"2021-09-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"yongxiangng"},"content":"* `find xuan` returns `Xuan Ming` and `Xuan Xuan`","lastModifiedDate":"2021-09-22"},{"lineNumber":132,"author":{"gitId":"yongxiangng"},"content":"* `find xiaowen@gmail.com` returns `Xiao Wen`","lastModifiedDate":"2021-09-22"},{"lineNumber":133,"author":{"gitId":"yongxiangng"},"content":"* `find Alex Yeoh`","lastModifiedDate":"2021-10-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"nzixuan"},"content":"Deletes the specified person from the Interest Group","lastModifiedDate":"2021-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"nzixuan"},"content":"Format: `delete [-e] INDEX`","lastModifiedDate":"2021-10-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"nzixuan"},"content":"* Deletes the person or event at the specified `INDEX`.","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"nzixuan"},"content":"* The index refers to the index number shown in the displayed list.","lastModifiedDate":"2021-10-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"nzixuan"},"content":"* -e specifies that the delete command targeting the event list.","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"nzixuan"},"content":"* `list` followed by `delete 3` deletes the 3rd person in the displayed person list.","lastModifiedDate":"2021-09-24"},{"lineNumber":148,"author":{"gitId":"nzixuan"},"content":"* `find Jason` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2021-09-24"},{"lineNumber":149,"author":{"gitId":"nzixuan"},"content":"*  `delete -e 1` deletes the 1st event in the displayed event list.","lastModifiedDate":"2021-10-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"ryanongra"},"content":"### View a person\u0027s details : `details`","lastModifiedDate":"2021-09-25"},{"lineNumber":152,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":153,"author":{"gitId":"yongxiangng"},"content":"Shows the detailed view of a particular person in the IG. Typing any command other than the `details` command subsequently will cause the view to show the summarized view of the same person.","lastModifiedDate":"2021-10-30"},{"lineNumber":154,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":155,"author":{"gitId":"yongxiangng"},"content":"Format: `details NAME` or `details INDEX`","lastModifiedDate":"2021-10-13"},{"lineNumber":156,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":157,"author":{"gitId":"yongxiangng"},"content":"* The argument interprets as an `INDEX` if it is a positive integer, `NAME` otherwise.","lastModifiedDate":"2021-10-13"},{"lineNumber":158,"author":{"gitId":"yongxiangng"},"content":"* Displays the details of the person at the specified `INDEX`.","lastModifiedDate":"2021-10-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2021-10-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-13"},{"lineNumber":161,"author":{"gitId":"yongxiangng"},"content":"* The NAME entered must match the person’s name exactly (case-sensitive).","lastModifiedDate":"2021-10-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-09-25"},{"lineNumber":164,"author":{"gitId":"yongxiangng"},"content":"* `list` followed by `details 3` displays details of the 3rd person in the displayed person list.","lastModifiedDate":"2021-10-13"},{"lineNumber":165,"author":{"gitId":"yongxiangng"},"content":"* `details Xiao Ming`","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"yongxiangng"},"content":"* `details Alex Yeoh`","lastModifiedDate":"2021-10-30"},{"lineNumber":167,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":168,"author":{"gitId":"yongxiangng"},"content":"### Creating an event : `event`","lastModifiedDate":"2021-10-24"},{"lineNumber":169,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":170,"author":{"gitId":"yongxiangng"},"content":"Creates an event in the application.","lastModifiedDate":"2021-10-30"},{"lineNumber":171,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":172,"author":{"gitId":"yongxiangng"},"content":"Format: `event EVENT_NAME`","lastModifiedDate":"2021-10-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":174,"author":{"gitId":"yongxiangng"},"content":"* Putting any valid event name will create an event with no attendee. To add attendees, see `addPersonToEvent` command.","lastModifiedDate":"2021-10-24"},{"lineNumber":175,"author":{"gitId":"yongxiangng"},"content":"* `Event` added should not have the same event name (case-sensitive) as `Event` that is already in the application.","lastModifiedDate":"2021-10-30"},{"lineNumber":176,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":177,"author":{"gitId":"yongxiangng"},"content":"Examples:","lastModifiedDate":"2021-10-24"},{"lineNumber":178,"author":{"gitId":"yongxiangng"},"content":"* `event Dinner Event`","lastModifiedDate":"2021-10-24"},{"lineNumber":179,"author":{"gitId":"yongxiangng"},"content":"* `event Skating Event`","lastModifiedDate":"2021-10-24"},{"lineNumber":180,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":181,"author":{"gitId":"ryanongra"},"content":"### Adding person to an event : `addPersonToEvent`","lastModifiedDate":"2021-10-27"},{"lineNumber":182,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":183,"author":{"gitId":"yongxiangng"},"content":"Adds a person in the application to an event in the application. Upon execution of this command, all `Person` and `Event` will be displayed.","lastModifiedDate":"2021-10-30"},{"lineNumber":184,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":185,"author":{"gitId":"yongxiangng"},"content":"Format: `addPersonToEvent n/NAME ev/EVENT_NAME`","lastModifiedDate":"2021-10-24"},{"lineNumber":186,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":187,"author":{"gitId":"yongxiangng"},"content":"* Both the `Person` and `Event` must exist in the application.","lastModifiedDate":"2021-10-30"},{"lineNumber":188,"author":{"gitId":"yongxiangng"},"content":"* Removing the `Person` associated to the event in the application does not remove the `Person` name from the `Event`. The `Person` may have left the interest group, but it remains a fact that they have attended the `Event`.","lastModifiedDate":"2021-10-30"},{"lineNumber":189,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":190,"author":{"gitId":"yongxiangng"},"content":"Examples:","lastModifiedDate":"2021-10-24"},{"lineNumber":191,"author":{"gitId":"yongxiangng"},"content":"* `addPersonToEvent n/John Doe ev/Dinner Event`","lastModifiedDate":"2021-10-24"},{"lineNumber":192,"author":{"gitId":"yongxiangng"},"content":"* `addPersonToEvent n/Jane Doe ev/Skating Event`","lastModifiedDate":"2021-10-24"},{"lineNumber":193,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":194,"author":{"gitId":"ryanongra"},"content":"### Removing person from an event : `removePersonFromEvent`","lastModifiedDate":"2021-10-27"},{"lineNumber":195,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":196,"author":{"gitId":"yongxiangng"},"content":"Removes a person from an event in the application.","lastModifiedDate":"2021-10-30"},{"lineNumber":197,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":198,"author":{"gitId":"ryanongra"},"content":"Format: `removePersonFromEvent n/NAME ev/EVENT_NAME`","lastModifiedDate":"2021-10-27"},{"lineNumber":199,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":200,"author":{"gitId":"yongxiangng"},"content":"* `Event` must exist in the application.","lastModifiedDate":"2021-10-30"},{"lineNumber":201,"author":{"gitId":"ryanongra"},"content":"* `Person` must exist in the specified event.","lastModifiedDate":"2021-10-27"},{"lineNumber":202,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":203,"author":{"gitId":"ryanongra"},"content":"Examples:","lastModifiedDate":"2021-10-27"},{"lineNumber":204,"author":{"gitId":"ryanongra"},"content":"* `removePersonFromEvent n/John Doe ev/Dinner Event`","lastModifiedDate":"2021-10-27"},{"lineNumber":205,"author":{"gitId":"ryanongra"},"content":"* `removePersonFromEvent n/Jane Doe ev/Skating Event`","lastModifiedDate":"2021-10-27"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":207,"author":{"gitId":"ryanongra"},"content":"### Renaming an event : `renameEvent`","lastModifiedDate":"2021-10-27"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":209,"author":{"gitId":"yongxiangng"},"content":"Changes the name of an event in the application.","lastModifiedDate":"2021-10-30"},{"lineNumber":210,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":211,"author":{"gitId":"ryanongra"},"content":"Format: `renameEvent INDEX ev/NEW_EVENT_NAME`","lastModifiedDate":"2021-10-27"},{"lineNumber":212,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":213,"author":{"gitId":"ryanongra"},"content":"* `INDEX` refers to the index of the event in the events list.","lastModifiedDate":"2021-10-27"},{"lineNumber":214,"author":{"gitId":"ryanongra"},"content":"* `INDEX` must be a valid index for an existing event.","lastModifiedDate":"2021-10-27"},{"lineNumber":215,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":216,"author":{"gitId":"ryanongra"},"content":"Examples:","lastModifiedDate":"2021-10-27"},{"lineNumber":217,"author":{"gitId":"ryanongra"},"content":"* `renameEvent 1 ev/Dinner Event`","lastModifiedDate":"2021-10-27"},{"lineNumber":218,"author":{"gitId":"ryanongra"},"content":"* `renameEvent 2 ev/Skating Event`","lastModifiedDate":"2021-10-27"},{"lineNumber":219,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":220,"author":{"gitId":"IceWizard4902"},"content":"### Clearing entries : `clear`","lastModifiedDate":"2021-10-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"IceWizard4902"},"content":"Clears entries from either the member list or the event list of the Interest Group.","lastModifiedDate":"2021-10-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"IceWizard4902"},"content":"Format: `clear FLAG RANGE`","lastModifiedDate":"2021-10-28"},{"lineNumber":225,"author":{"gitId":"IceWizard4902"},"content":"* `FLAG` can either be `-p` for clearing the member list or `-e` for clearing the event list.","lastModifiedDate":"2021-10-31"},{"lineNumber":226,"author":{"gitId":"IceWizard4902"},"content":"* `RANGE` the range for clearing either the member or event list (specified by the flag used).","lastModifiedDate":"2021-10-31"},{"lineNumber":227,"author":{"gitId":"IceWizard4902"},"content":"* There are 2 modes to clear entries: `all` - clear every entry or `begin-end` (one-based index) to clear entry in the specified range (inclusive)","lastModifiedDate":"2021-10-31"},{"lineNumber":228,"author":{"gitId":"IceWizard4902"},"content":"* For the range specified as `begin-end`, both `begin` and `end` must be integers. The range must be valid - there should exist entries from `begin` to `end` inclusively.","lastModifiedDate":"2021-10-31"},{"lineNumber":229,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":230,"author":{"gitId":"dannytayjy"},"content":"Examples:","lastModifiedDate":"2021-09-28"},{"lineNumber":231,"author":{"gitId":"IceWizard4902"},"content":"* `clear -p all`","lastModifiedDate":"2021-10-28"},{"lineNumber":232,"author":{"gitId":"IceWizard4902"},"content":"* `clear -e 1-3`","lastModifiedDate":"2021-10-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"nzixuan"},"content":"### Chaining commands : `\u0026\u0026`","lastModifiedDate":"2021-10-19"},{"lineNumber":241,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":242,"author":{"gitId":"nzixuan"},"content":"Chains multiple commands together.","lastModifiedDate":"2021-10-14"},{"lineNumber":243,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":244,"author":{"gitId":"nzixuan"},"content":"Format: `COMMAND \u0026\u0026 COMMAND`","lastModifiedDate":"2021-10-14"},{"lineNumber":245,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":246,"author":{"gitId":"nzixuan"},"content":"Examples:","lastModifiedDate":"2021-10-14"},{"lineNumber":247,"author":{"gitId":"nzixuan"},"content":"* `find Jon \u0026\u0026 delete 1` will:","lastModifiedDate":"2021-10-14"},{"lineNumber":248,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":249,"author":{"gitId":"nzixuan"},"content":"Execute `find Jon` and then execute `delete 1`","lastModifiedDate":"2021-10-14"},{"lineNumber":250,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":251,"author":{"gitId":"nzixuan"},"content":"### Setting alias : `alias`","lastModifiedDate":"2021-10-19"},{"lineNumber":252,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":253,"author":{"gitId":"nzixuan"},"content":"Temporarily sets a command to a specified alias as a shortcut","lastModifiedDate":"2021-10-19"},{"lineNumber":254,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":255,"author":{"gitId":"nzixuan"},"content":"Format: `alias a/ALIAS c/COMMAND`","lastModifiedDate":"2021-10-19"},{"lineNumber":256,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":257,"author":{"gitId":"nzixuan"},"content":"* Alias will be set until the program is restarted.","lastModifiedDate":"2021-10-19"},{"lineNumber":258,"author":{"gitId":"nzixuan"},"content":"* Setting an alias to an existing command word will not override existing commands.","lastModifiedDate":"2021-10-19"},{"lineNumber":259,"author":{"gitId":"nzixuan"},"content":"* Chaining multiple commands using `\u0026\u0026` is not supported by alias.","lastModifiedDate":"2021-10-19"},{"lineNumber":260,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":261,"author":{"gitId":"nzixuan"},"content":"Examples:","lastModifiedDate":"2021-10-19"},{"lineNumber":262,"author":{"gitId":"nzixuan"},"content":" `alias a/d1 c/details 1` will set `d1` to `details 1`","lastModifiedDate":"2021-10-19"},{"lineNumber":263,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":264,"author":{"gitId":"nzixuan"},"content":"Executing `d1` will be equivalent to executing `details 1`.","lastModifiedDate":"2021-10-19"},{"lineNumber":265,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":266,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"IceWizard4902"},"content":"ForYourInterest data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-10-30"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":272,"author":{"gitId":"IceWizard4902"},"content":"ForYourInterest data are saved as a JSON file `[JAR file location]/data/foryourinterest.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-10-30"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":274,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":275,"author":{"gitId":"yongxiangng"},"content":"If your changes to the data file makes its format invalid, ForYourInterest will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-10-30"},{"lineNumber":276,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":278,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"yongxiangng"},"content":"### Tabbing command `[coming in v2.0]`","lastModifiedDate":"2021-10-30"},{"lineNumber":283,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":284,"author":{"gitId":"yongxiangng"},"content":"Users can use `ctrl + tab` to switch between tabs for now and `tab` to reach the input box. Note that the user may have to tab a few times to tab out of the input box first.","lastModifiedDate":"2021-10-30"},{"lineNumber":285,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":286,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"yongxiangng"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous ForYourInterest home folder.","lastModifiedDate":"2021-10-30"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2021-10-26"},{"lineNumber":300,"author":{"gitId":"ryanongra"},"content":"**Add** | `add n/NAME [p/PHONE_NUMBER] [e/EMAIL] [t/TELEGTAM_HANDLE] [tag/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com t/jameshoho tag/friend tag/colleague`","lastModifiedDate":"2021-10-30"},{"lineNumber":301,"author":{"gitId":"yongxiangng"},"content":"**List** | `list`","lastModifiedDate":"2021-10-26"},{"lineNumber":302,"author":{"gitId":"ryanongra"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [t/TELEGRAM_HANDLE] [tag/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2021-10-30"},{"lineNumber":303,"author":{"gitId":"yongxiangng"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find Alex Yeoh`","lastModifiedDate":"2021-10-30"},{"lineNumber":304,"author":{"gitId":"yongxiangng"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2021-10-26"},{"lineNumber":305,"author":{"gitId":"yongxiangng"},"content":"**Details** | `details NAME` or `details INDEX` \u003cbr\u003e e.g., `details Alex Yeoh` or `details 1`","lastModifiedDate":"2021-10-30"},{"lineNumber":306,"author":{"gitId":"yongxiangng"},"content":"**Event** | `event EVENT_NAME` \u003cbr\u003e e.g., `event Dinner Event`","lastModifiedDate":"2021-10-26"},{"lineNumber":307,"author":{"gitId":"yongxiangng"},"content":"**Add Person To Event** | `addPersonToEvent n/NAME ev/EVENT_NAME` \u003cbr\u003e e.g., `addPersonToEvent n/John Doe ev/Dinner Event`","lastModifiedDate":"2021-10-26"},{"lineNumber":308,"author":{"gitId":"IceWizard4902"},"content":"**Clear** | `clear FLAG RANGE` \u003cbr\u003ee.g.,`clear -p all` \u003cbr\u003ee.g.,`clear -e 1-3`","lastModifiedDate":"2021-10-31"},{"lineNumber":309,"author":{"gitId":"yongxiangng"},"content":"**Exit** | `exit`","lastModifiedDate":"2021-10-26"},{"lineNumber":310,"author":{"gitId":"yongxiangng"},"content":"**\u0026\u0026** | `COMMAND \u0026\u0026 COMMAND` \u003cbr\u003e e.g., `find Jon \u0026\u0026 delete 1`","lastModifiedDate":"2021-10-26"},{"lineNumber":311,"author":{"gitId":"yongxiangng"},"content":"**Alias** | `alias a/ALIAS c/COMMAND` \u003cbr\u003e e.g., `alias a/d1 c/details 1`","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"IceWizard4902":17,"yongxiangng":71,"dannytayjy":2,"ryanongra":40,"nzixuan":34,"-":147}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"yongxiangng"},"content":"    content: \"ForYourInterest\";","lastModifiedDate":"2021-09-22"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"yongxiangng":1,"-":294}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"package Person {}","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"package Event {}","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"AddressBook *-down-\u003e \"1\" UniqueEventList","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"UniqueTagList *-right-\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"UniqueEventList *-down-\u003e Event","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"yongxiangng":5,"-":16}},{"path":"docs/diagrams/ChainCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nzixuan"},"content":"@startuml","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"nzixuan"},"content":"!include style.puml","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"nzixuan"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"nzixuan"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"nzixuan"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"nzixuan"},"content":"participant \"chain:ChainCommand\" as ChainCommand LOGIC_COLOR","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"nzixuan"},"content":"participant \"left:Command\" as LeftCommand LOGIC_COLOR","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"nzixuan"},"content":"participant \"right:Command\" as RightCommand LOGIC_COLOR","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"nzixuan"},"content":"end box","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"nzixuan"},"content":"[-\u003e LogicManager : execute","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"nzixuan"},"content":"activate LogicManager","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"nzixuan"},"content":"LogicManager-\u003e AddressBookParser : parseCommand(leftCommandInput \\n        \u0026\u0026 rightCommandInput)","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"nzixuan"},"content":"activate AddressBookParser","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"nzixuan"},"content":"AddressBookParser -\u003e AddressBookParser ++ : parseCommand(leftCommandInput)","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"nzixuan"},"content":"create LeftCommand","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"nzixuan"},"content":"AddressBookParser -\u003e LeftCommand ++","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"nzixuan"},"content":"LeftCommand --\u003e AddressBookParser --","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"nzixuan"},"content":"return left","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"nzixuan"},"content":"AddressBookParser -\u003e AddressBookParser : parseCommand(rightCommandInput)","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"nzixuan"},"content":"activate AddressBookParser","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"nzixuan"},"content":"create RightCommand","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"nzixuan"},"content":"AddressBookParser -\u003e RightCommand ++","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"nzixuan"},"content":"RightCommand --\u003e AddressBookParser --","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"nzixuan"},"content":"return right","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"nzixuan"},"content":"create ChainCommand","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"nzixuan"},"content":"AddressBookParser -\u003e ChainCommand ++ : left, right","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"nzixuan"},"content":"ChainCommand --\u003e AddressBookParser --","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"nzixuan"},"content":"return chain","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"nzixuan"},"content":"LogicManager -\u003e ChainCommand : execute","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"nzixuan"},"content":"activate ChainCommand","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"nzixuan"},"content":"ChainCommand -\u003e LeftCommand : execute","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"nzixuan"},"content":"activate LeftCommand","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"nzixuan"},"content":"return leftResult","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"nzixuan"},"content":"ChainCommand -\u003e RightCommand : execute","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"nzixuan"},"content":"activate RightCommand","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"nzixuan"},"content":"return rightResult","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"nzixuan"},"content":"return result","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"nzixuan"},"content":"return","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"nzixuan"},"content":"@enduml","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"nzixuan":53}},{"path":"docs/diagrams/EventClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"@startuml","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"!include style.puml","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"Package Event \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"class UniqueEventList","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"class Event","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"class EventName","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"package Person {}","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"UniqueEventList --\u003e \"*\" Event","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"Event *--\u003e \"1\" EventName","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"Event --\u003e \"*\" Person :\u003e attendees","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"@enduml","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"yongxiangng":18}},{"path":"docs/diagrams/EventUiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"@startuml","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"!include style.puml","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"skinparam arrowColor UI_COLOR","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"Package EventUI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"Class EventListPanel","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"Class EventCard","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"Package MemberUI {}","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"Package Model {}","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"HiddenOutside ..\u003e EventListPanel","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"EventListPanel --\u003e \"*\" EventCard","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"EventCard ..\u003e Model","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"EventCard --\u003e MemberUI","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"@enduml","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"yongxiangng":22}},{"path":"docs/diagrams/MemberUiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"@startuml","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"!include style.puml","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"skinparam arrowColor UI_COLOR","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"Package MemberUI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"Class PersonListPanel","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"Class PersonCard","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"Class PersonDetailsCard","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"Package Model {}","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"HiddenOutside ..\u003e PersonListPanel","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"PersonListPanel --\u003e \"*\" PersonCard :\u003e exclusively","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"PersonListPanel --\u003e \"0..1\" PersonDetailsCard :\u003e exclusively","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"PersonDetailsCard ..\u003e Model","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"@enduml","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"yongxiangng":23}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface ReadOnlyAddressBook \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface ReadOnlyUserPrefs \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-05-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"package Event {}","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"package Person {}","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"yongxiangng"},"content":"AddressBook --\u003e\"~* all\" Event","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"AddressBook --\u003e\"~* all\" Person","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"yongxiangng"},"content":"ModelManager ---\u003e\"~* filtered\" Event","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"ModelManager --\u003e\"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"yongxiangng":6,"-":34}},{"path":"docs/diagrams/PersonClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"@startuml","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"!include style.puml","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"Package Person \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"class UniquePersonList","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"class Person","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"class Name","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"class Phone","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"class Email","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"class Telegram","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"class Tag","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"UniquePersonList --\u003e \"*\" Person","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"Person *--\u003e \"1\" Name","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"Person *--\u003e \"0...1\" Phone","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"Person *--\u003e \"0...1\" Email","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"Person *--\u003e \"0...1\" Telegram","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"Phone -[hidden]right-\u003e Telegram","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"Telegram -[hidden]right-\u003e Email","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"yongxiangng"},"content":"@enduml","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"yongxiangng":21,"ryanongra":6}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"package MemberUI {}","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"package EventUI {}","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"MainWindow *-down-\u003e \"1\" EventUI","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"yongxiangng"},"content":"MainWindow *-down-\u003e \"1\" MemberUI","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"yongxiangng"},"content":"EventUI --|\u003e UiPart","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"yongxiangng"},"content":"MemberUI --|\u003e UiPart","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"yongxiangng"},"content":"EventUI ...\u003e Model","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"yongxiangng"},"content":"MemberUI ...\u003e Model","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"yongxiangng"},"content":"EventUI -[hidden]left- MemberUI","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"yongxiangng"},"content":"MemberUI -[hidden]left- HelpWindow","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"yongxiangng":10,"-":51}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"title: ForYourInterest","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103-T16-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103-T16-4/tp/actions)","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103-T16-4/tp/branch/master/graph/badge.svg?token\u003dT8S6E582CP)](https://codecov.io/gh/AY2122S1-CS2103-T16-4/tp)","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"**ForYourInterest is a desktop application for managing members in university clubs/societies.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"* If you are interested in using ForYourInterest, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"* If you are interested about developing ForYourInterest, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"yongxiangng":4,"-":15}},{"path":"docs/team/dannytayjy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"---","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"dannytayjy"},"content":"layout: page","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"title: Tay Jun Yang\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"---","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"dannytayjy"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"dannytayjy"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"dannytayjy"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"dannytayjy"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"dannytayjy"},"content":"* **Project management**:","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"dannytayjy"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"dannytayjy"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"dannytayjy"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"dannytayjy"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"dannytayjy"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"  * User Guide:","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"dannytayjy"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"dannytayjy"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"dannytayjy"},"content":"  * Developer Guide:","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"dannytayjy"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"dannytayjy"},"content":"* **Community**:","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"dannytayjy"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"dannytayjy"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"dannytayjy"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"dannytayjy"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"dannytayjy"},"content":"* **Tools**:","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"dannytayjy"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"dannytayjy"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"dannytayjy"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"dannytayjy":46}},{"path":"docs/team/icewizard4902.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"IceWizard4902"},"content":"---","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"IceWizard4902"},"content":"layout: page","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"IceWizard4902"},"content":"title: Nguyen Quang Vinh\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"IceWizard4902"},"content":"---","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"IceWizard4902"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"IceWizard4902"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"IceWizard4902"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"IceWizard4902"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"IceWizard4902"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"IceWizard4902"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"IceWizard4902"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"IceWizard4902"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"IceWizard4902"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"IceWizard4902"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"IceWizard4902"},"content":"* **Project management**:","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"IceWizard4902"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"IceWizard4902"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"IceWizard4902"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"IceWizard4902"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"IceWizard4902"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"IceWizard4902"},"content":"    * User Guide:","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"IceWizard4902"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"IceWizard4902"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"IceWizard4902"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"IceWizard4902"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"IceWizard4902"},"content":"* **Community**:","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"IceWizard4902"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"IceWizard4902"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"IceWizard4902"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"IceWizard4902"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"IceWizard4902"},"content":"* **Tools**:","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"IceWizard4902"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"IceWizard4902"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"IceWizard4902"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"IceWizard4902":46}},{"path":"docs/team/nzixuan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nzixuan"},"content":"---","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"nzixuan"},"content":"layout: page","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"nzixuan"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"nzixuan"},"content":"---","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"nzixuan"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"nzixuan"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"nzixuan"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"nzixuan"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"nzixuan"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"nzixuan"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"nzixuan"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"nzixuan"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"nzixuan"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"nzixuan"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"nzixuan"},"content":"* **Project management**:","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"nzixuan"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"nzixuan"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"nzixuan"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"nzixuan"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"nzixuan"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"nzixuan"},"content":"  * User Guide:","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"nzixuan"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"nzixuan"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"nzixuan"},"content":"  * Developer Guide:","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"nzixuan"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"nzixuan"},"content":"* **Community**:","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"nzixuan"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"nzixuan"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"nzixuan"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"nzixuan"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"nzixuan"},"content":"* **Tools**:","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"nzixuan"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"nzixuan"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"nzixuan"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"nzixuan":46}},{"path":"docs/team/ryanongra.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"---","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"layout: page","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"title: Ryan Ong\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"---","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"### Project: For Your Interest","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"* **Project management**:","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"    * User Guide:","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"* **Community**:","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"ryanongra"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"ryanongra"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"* **Tools**:","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"ryanongra":46}},{"path":"docs/team/yongxiangng.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"---","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"layout: page","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"title: Ng Yong Xiang\u0027s Project Portfolio Page","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"---","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"### Project: ForYourInterest","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"ForYourInterest - ForYourInterest is a desktop app for managing members in university clubs/societies, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"* **New Feature**: Added the details command.","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"  * What it does: Allows the user to view the details of a member.","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"  * Justification: This feature improves the product significantly the user is able to view the details of a member when needed. This declutters the other views which improves the product.","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"  * Highlights: This feature required a UI modification. I was able to implement the feature while adhering to most of the components used in the original code by creating a detailed version of the person card component in the UI.","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"* **New Feature**: Added event tracking features (`event` command and `addPersonToEvent` command).","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"  * What it does: Allows the user to create an event and add members into the attendee list.","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"  * Justification: This is a key feature of our application. This allows for member management when the members attend an event.","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"  * Highlights: This feature touched many components of the code base (`model`, `ui`, `logic` involved). It required the application to store a list of events, and a new view for the list of events.","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026tabAuthor\u003dyongxiangng\u0026tabRepo\u003dAY2122S1-CS2103-T16-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"* **Project management**:","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":"  * Managed releases `v1.1` - `v1.3` (4 releases) on GitHub","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"yongxiangng"},"content":"  * Managed opening and closing of milestones `v1.1` - `v1.3` (3 milestones) on GitHub","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"yongxiangng"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"yongxiangng"},"content":"  * Added a tabbing feature [\\#50](https://github.com/AY2122S1-CS2103-T16-4/tp/pull/50)","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"yongxiangng"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"yongxiangng"},"content":"  * User Guide:","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"yongxiangng"},"content":"    * Added documentation for the features `details`, `event` and `addPersonToEvent` [\\#79](https://github.com/AY2122S1-CS2103-T16-4/tp/pull/79)","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"yongxiangng"},"content":"    * Did cosmetic tweaks to existing documentation of command summary [\\#85](https://github.com/AY2122S1-CS2103-T16-4/tp/pull/85)","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"  * Developer Guide:","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"yongxiangng"},"content":"    * Added implementation details of the `event` feature [\\#64](https://github.com/AY2122S1-CS2103-T16-4/tp/pull/64)","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"yongxiangng"},"content":"* **Community**:","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"yongxiangng"},"content":"  * PRs reviewed with non-trivial review comments [\\#45](https://github.com/AY2122S1-CS2103-T16-4/tp/pull/45), [\\#46](https://github.com/AY2122S1-CS2103-T16-4/tp/pull/46), [\\#65](https://github.com/AY2122S1-CS2103-T16-4/tp/pull/65), [\\#84](https://github.com/AY2122S1-CS2103-T16-4/tp/pull/84)","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"yongxiangng"},"content":"  * Proactively help teammate to find cause of their own bugs [\\#30](https://github.com/AY2122S1-CS2103-T16-4/tp/pull/30)","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"yongxiangng"},"content":"  * Provided technical help in [forum discussions](https://github.com/nus-cs2103-AY2122S1/forum/issues/134#issuecomment-908405186)","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"yongxiangng"},"content":"  * Notified Team F10-3 and Team T16-2 that they have set up their organisation repo under the wrong name.","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"yongxiangng"},"content":"* **Tools**:","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"yongxiangng"},"content":"  * Set up GitHub pages","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"yongxiangng"},"content":"  * Set up GitHub actions with codecov","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"yongxiangng"},"content":"* **Team tasks**:","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"yongxiangng"},"content":"  * Set up organisation repo","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"yongxiangng"},"content":"  * Set up issues tracker","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"yongxiangng"},"content":"  * Added screenshots for v1.3","lastModifiedDate":"2021-10-30"}],"authorContributionMap":{"yongxiangng":51}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47).","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done.","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508).","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"yongxiangng"},"content":"Simply add the following to [`seedu.address.ui.memberui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe).","lastModifiedDate":"2021-10-24"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71).","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2021-08-01"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9).","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"yongxiangng":1,"-":400}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `telegram` field from `Person` class.","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `telegram` field can be done similarly.","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"The `telegram` field in `Person` is actually an instance of the `seedu.address.model.person.Telegrams` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"1. Safe delete the field `telegram` in `EditPersonDescriptor`.","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"ryanongra"},"content":"1. Remove the usages of `telegram` and select `Do refactor` when you are done.","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"ryanongra"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `telegram` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"ryanongra"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `telegram` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"ryanongra"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$telegram` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"ryanongra"},"content":"![$telegram](../images/remove/$telegram.png)","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"ryanongra"},"content":"private Label telegram;","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"ryanongra"},"content":"\u003cLabel fx:id\u003d\"telegram\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$telegram\" /\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"ryanongra"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `telegram` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"ryanongra"},"content":"    \"telegram\": \"@haaaaans\"","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"ryanongra"},"content":"You can go through each individual `json` file and manually remove the `telegram` field.","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"ryanongra":14,"-":98}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.telegram.logic.Logic`.","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"ryanongra"},"content":"A quick look at the `seedu.telegram.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2021-10-12"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"ryanongra":2,"-":299}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"yongxiangng"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, true);","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"nzixuan"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing For Your Interest ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"nzixuan"},"content":"        logger.info(\"Starting For Your Interest \" + MainApp.VERSION);","lastModifiedDate":"2021-10-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"nzixuan"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping For Your Interest ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-10-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yongxiangng":1,"nzixuan":3,"-":179}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"    public static final String MESSAGE_INVALID_EVENT_DISPLAYED_INDEX \u003d \"The event index provided is invalid\";","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"IceWizard4902"},"content":"    public static final String MESSAGE_INVALID_RANGE \u003d \"The range given is invalid\";","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"    public static final String MESSAGE_PERSON_DETAILS_FOUND \u003d \"Showing details of %1$s\";","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"    public static final String MESSAGE_PERSON_DETAILS_NOT_FOUND \u003d \"Person with name %1$s not found!\";","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"    public static final String MESSAGE_EVENT_DETAILS_NOT_FOUND \u003d \"Event with name %1$s not found!\";","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"IceWizard4902":1,"yongxiangng":3,"ryanongra":1,"-":12}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"yongxiangng"},"content":"     * Returns an unmodifiable view of the filtered list of events.","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"yongxiangng"},"content":"     * @return Unmodifiable list of events.","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"yongxiangng"},"content":"    ObservableList\u003cEvent\u003e getFilteredEventList();","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"yongxiangng":8,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":68,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"yongxiangng"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"yongxiangng"},"content":"        return model.getFilteredEventList();","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"yongxiangng":6,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book.\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE ] \"","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL ] \"","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"            + \"[\" + PREFIX_TELEGRAM + \"TELEGRAM ] \"","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"            + PREFIX_TELEGRAM + \"@johndoedoe \"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yongxiangng":1,"ryanongra":5,"-":61}},{"path":"src/main/java/seedu/address/logic/commands/AddPersonToEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_EVENT_DETAILS_NOT_FOUND;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSON_DETAILS_NOT_FOUND;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_NAME;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.event.EventNameEqualKeywordPredicate;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.person.NameEqualKeywordPredicate;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":" * Adds a person to the address book.","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"public class AddPersonToEventCommand extends Command {","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"    public static final String COMMAND_WORD \u003d \"addPersonToEvent\";","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a existing person in the address book \"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"yongxiangng"},"content":"            + \"to the Event specified.\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"yongxiangng"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"yongxiangng"},"content":"            + PREFIX_NAME + \"PERSON_NAME \"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"yongxiangng"},"content":"            + PREFIX_EVENT_NAME + \"EVENT_NAME \\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"yongxiangng"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"yongxiangng"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"yongxiangng"},"content":"            + PREFIX_EVENT_NAME + \"Great Party Event\";","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"yongxiangng"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Person %1$s added to %2$s\";","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the Event\";","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"yongxiangng"},"content":"    private final NameEqualKeywordPredicate personPredicate;","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"yongxiangng"},"content":"    private final EventNameEqualKeywordPredicate eventPredicate;","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":"     * Creates an AddPersonToEventCommand to add the specified {@code Person} matched by the name predicate","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"     * to the event matched by the event name predicate.","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"yongxiangng"},"content":"     * @param personPredicate The predicate matching the person name.","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"yongxiangng"},"content":"     * @param eventPredicate The predicate matching the event name.","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"yongxiangng"},"content":"    public AddPersonToEventCommand(NameEqualKeywordPredicate personPredicate,","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"yongxiangng"},"content":"                                   EventNameEqualKeywordPredicate eventPredicate) {","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"yongxiangng"},"content":"        requireAllNonNull(personPredicate, eventPredicate);","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"yongxiangng"},"content":"        this.personPredicate \u003d personPredicate;","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"yongxiangng"},"content":"        this.eventPredicate \u003d eventPredicate;","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"yongxiangng"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"yongxiangng"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"yongxiangng"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"yongxiangng"},"content":"            model.addPersonToEvent(personPredicate, eventPredicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"yongxiangng"},"content":"        } catch (PersonNotFoundException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"yongxiangng"},"content":"            throw new CommandException(String.format(MESSAGE_PERSON_DETAILS_NOT_FOUND, personPredicate));","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"yongxiangng"},"content":"        } catch (EventNotFoundException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"yongxiangng"},"content":"            throw new CommandException(String.format(MESSAGE_EVENT_DETAILS_NOT_FOUND, eventPredicate));","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"yongxiangng"},"content":"        } catch (DuplicatePersonException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"yongxiangng"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"yongxiangng"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, personPredicate, eventPredicate));","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"yongxiangng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"yongxiangng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"yongxiangng"},"content":"                || (other instanceof AddPersonToEventCommand // instanceof handles nulls","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"yongxiangng"},"content":"                \u0026\u0026 personPredicate.equals(((AddPersonToEventCommand) other).personPredicate)","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"yongxiangng"},"content":"                \u0026\u0026 eventPredicate.equals(((AddPersonToEventCommand) other).eventPredicate));","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"yongxiangng":76,"ryanongra":2}},{"path":"src/main/java/seedu/address/logic/commands/AliasCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nzixuan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"nzixuan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"nzixuan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ALIAS;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"nzixuan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMAND;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"nzixuan"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"nzixuan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"nzixuan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"nzixuan"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"nzixuan"},"content":" * Adds specified alias to the parser.","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"nzixuan"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"nzixuan"},"content":"public class AliasCommand extends Command {","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"nzixuan"},"content":"    public static final String COMMAND_WORD \u003d \"alias\";","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"nzixuan"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Alias \\\"%1$s\\\" \u003d \\\"%2$s\\\" has been added!\";","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"nzixuan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"nzixuan"},"content":"            + \": Adds an alias to the system.\\n\"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"nzixuan"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"nzixuan"},"content":"            + PREFIX_ALIAS + \"ALIAS \"","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"nzixuan"},"content":"            + PREFIX_COMMAND + \"COMMAND \"","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"nzixuan"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"nzixuan"},"content":"            + PREFIX_ALIAS + \"l \"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"nzixuan"},"content":"            + PREFIX_COMMAND + \"list\";","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"nzixuan"},"content":"    private final String alias;","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"nzixuan"},"content":"    private final String command;","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"nzixuan"},"content":"    private HashMap\u003cString, String\u003e aliasMap;","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"nzixuan"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"nzixuan"},"content":"     * Creates an AliasCommand to add the specified alias, command pair to the alias map.","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"nzixuan"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"nzixuan"},"content":"    public AliasCommand(String alias, String command) {","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"nzixuan"},"content":"        this.alias \u003d alias;","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"nzixuan"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"nzixuan"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"nzixuan"},"content":"     * Set the Alias Map of the command.","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"nzixuan"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"nzixuan"},"content":"     * @param aliasMap Hashmap of alias in the parser","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"nzixuan"},"content":"     * @return AliasCommand with aliasMap set","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"nzixuan"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"nzixuan"},"content":"    public Command setMap(HashMap\u003cString, String\u003e aliasMap) {","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"nzixuan"},"content":"        this.aliasMap \u003d aliasMap;","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"nzixuan"},"content":"        return this;","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"nzixuan"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"nzixuan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"nzixuan"},"content":"        requireNonNull(aliasMap);","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"nzixuan"},"content":"        aliasMap.put(alias, command);","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"nzixuan"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, alias, command));","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"nzixuan"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"nzixuan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"nzixuan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"nzixuan"},"content":"                || (other instanceof AliasCommand // instanceof handles nulls","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"nzixuan"},"content":"                \u0026\u0026 alias.equals(((AliasCommand) other).alias)","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"nzixuan"},"content":"                \u0026\u0026 command.equals(((AliasCommand) other).command)); // state check","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"nzixuan"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"nzixuan":65}},{"path":"src/main/java/seedu/address/logic/commands/ChainCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nzixuan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"nzixuan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"nzixuan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"nzixuan"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"nzixuan"},"content":" * Chains two commands together.","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"nzixuan"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"nzixuan"},"content":"public class ChainCommand extends Command {","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"nzixuan"},"content":"    private final Command leftCommand;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"nzixuan"},"content":"    private final Command rightCommand;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"nzixuan"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"nzixuan"},"content":"     * Constructor for Chain Command.","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"nzixuan"},"content":"     * @param leftCommand Command on the left to be executed first","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"nzixuan"},"content":"     * @param rightCommand Command on the right to be executed second","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"nzixuan"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"nzixuan"},"content":"    public ChainCommand(Command leftCommand, Command rightCommand) {","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"nzixuan"},"content":"        this.leftCommand \u003d leftCommand;","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"nzixuan"},"content":"        this.rightCommand \u003d rightCommand;","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"nzixuan"},"content":"    @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"nzixuan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"nzixuan"},"content":"        CommandResult leftCommandResult \u003d leftCommand.execute(model);","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"nzixuan"},"content":"        CommandResult rightCommandResult \u003d rightCommand.execute(model);","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"nzixuan"},"content":"        return new CommandResult(leftCommandResult.getFeedbackToUser() + \"\\n\"","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"nzixuan"},"content":"                + rightCommandResult.getFeedbackToUser(),","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"nzixuan"},"content":"                leftCommandResult.isShowHelp() || rightCommandResult.isShowHelp(),","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"nzixuan"},"content":"                leftCommandResult.isExit() || rightCommandResult.isExit(),","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"nzixuan"},"content":"                rightCommandResult.isShowDetails());","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"nzixuan"},"content":"    @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"nzixuan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"nzixuan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"nzixuan"},"content":"                || (other instanceof ChainCommand // instanceof handles nulls","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"nzixuan"},"content":"                \u0026\u0026 leftCommand.equals(((ChainCommand) other).leftCommand))","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"nzixuan"},"content":"                \u0026\u0026 rightCommand.equals(((ChainCommand) other).rightCommand); // state check","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"nzixuan"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"nzixuan":42}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"IceWizard4902"},"content":"import java.util.List;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"IceWizard4902"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":8,"author":{"gitId":"IceWizard4902"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"IceWizard4902"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"IceWizard4902"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"IceWizard4902"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"IceWizard4902"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"IceWizard4902"},"content":" * Clears the address book with the given range.","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"IceWizard4902"},"content":"    public static final String MESSAGE_CLEAR_PERSON_SUCCESS \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"IceWizard4902"},"content":"            \"The member list has been cleared with the given range!\";","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"IceWizard4902"},"content":"    public static final String MESSAGE_CLEAR_EVENT_SUCCESS \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"IceWizard4902"},"content":"            \"The event list has been cleared with the given range!\";","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"IceWizard4902"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"IceWizard4902"},"content":"            + \": Clears the person or event list with the given index range used in the displayed list \\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"IceWizard4902"},"content":"            + \"Parameters: \" + \"[flag] (can be [-p] for member list and [-e] for event)\"","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"IceWizard4902"},"content":"            + \"RANGE (must either be all or a valid range like 1-3) \\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"IceWizard4902"},"content":"            + \"Example - clearing all entries in member list: \" + COMMAND_WORD + \"-p all \\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"IceWizard4902"},"content":"            + \"Example - clearing entries from index 1 to 3 (inclusive) in event list: \"","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"IceWizard4902"},"content":"            + COMMAND_WORD + \"-e 1-3 \\n\";","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"IceWizard4902"},"content":"    public static final int PERSON_FLAG \u003d 0;","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"IceWizard4902"},"content":"    public static final int EVENT_FLAG \u003d 1;","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"IceWizard4902"},"content":"    public static final int MODE_ALL \u003d 0;","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"IceWizard4902"},"content":"    public static final int MODE_RANGE \u003d 1;","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"IceWizard4902"},"content":"    private final int flag;","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"IceWizard4902"},"content":"    private final int mode;","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"IceWizard4902"},"content":"    private final Index begin;","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"IceWizard4902"},"content":"    private final Index end;","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"IceWizard4902"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"IceWizard4902"},"content":"     * Constructor for delete command for person.","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"IceWizard4902"},"content":"     * @param flag which list to operate on, 0 for Person and 1 for Event","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"IceWizard4902"},"content":"     * @param mode which mode to operate, 0 for clearing all and 1 for clearing in a specified range","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"IceWizard4902"},"content":"     * @param begin The beginning index (inclusive) for clearing in a specified range","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"IceWizard4902"},"content":"     * @param end The ending index (inclusive) for clearing in a specified range","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"IceWizard4902"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"IceWizard4902"},"content":"    public ClearCommand(int flag, int mode, Index begin, Index end) {","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"IceWizard4902"},"content":"        this.flag \u003d flag;","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"IceWizard4902"},"content":"        this.mode \u003d mode;","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"IceWizard4902"},"content":"        this.begin \u003d begin;","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"IceWizard4902"},"content":"        this.end \u003d end;","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"IceWizard4902"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"IceWizard4902"},"content":"    private CommandResult executePersonClear(Model model) throws CommandException {","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"IceWizard4902"},"content":"        int beginIndex;","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"IceWizard4902"},"content":"        int endIndex;","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"IceWizard4902"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"IceWizard4902"},"content":"        if (mode \u003d\u003d MODE_ALL) {","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"IceWizard4902"},"content":"            beginIndex \u003d 0;","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"IceWizard4902"},"content":"            endIndex \u003d lastShownList.size() - 1;","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"IceWizard4902"},"content":"        } else {","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"IceWizard4902"},"content":"            if (end.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"IceWizard4902"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"IceWizard4902"},"content":"            }","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"IceWizard4902"},"content":"            if (begin.getZeroBased() \u003e end.getZeroBased()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"IceWizard4902"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_RANGE);","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"IceWizard4902"},"content":"            }","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"IceWizard4902"},"content":"            beginIndex \u003d begin.getZeroBased();","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"IceWizard4902"},"content":"            endIndex \u003d end.getZeroBased();","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"IceWizard4902"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"IceWizard4902"},"content":"        for (int i \u003d endIndex; i \u003e\u003d beginIndex; i--) {","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"IceWizard4902"},"content":"            Person personToDelete \u003d lastShownList.get(i);","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"IceWizard4902"},"content":"            model.deletePerson(personToDelete);","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"IceWizard4902"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"IceWizard4902"},"content":"        return new CommandResult(MESSAGE_CLEAR_PERSON_SUCCESS);","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"IceWizard4902"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"IceWizard4902"},"content":"    private CommandResult executeEventClear(Model model) throws CommandException {","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"IceWizard4902"},"content":"        int beginIndex;","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"IceWizard4902"},"content":"        int endIndex;","lastModifiedDate":"2021-10-28"},{"lineNumber":86,"author":{"gitId":"IceWizard4902"},"content":"        List\u003cEvent\u003e lastShownList \u003d model.getFilteredEventList();","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"IceWizard4902"},"content":"        if (mode \u003d\u003d MODE_ALL) {","lastModifiedDate":"2021-10-28"},{"lineNumber":88,"author":{"gitId":"IceWizard4902"},"content":"            beginIndex \u003d 0;","lastModifiedDate":"2021-10-28"},{"lineNumber":89,"author":{"gitId":"IceWizard4902"},"content":"            endIndex \u003d lastShownList.size() - 1;","lastModifiedDate":"2021-10-28"},{"lineNumber":90,"author":{"gitId":"IceWizard4902"},"content":"        } else {","lastModifiedDate":"2021-10-28"},{"lineNumber":91,"author":{"gitId":"IceWizard4902"},"content":"            if (end.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":92,"author":{"gitId":"IceWizard4902"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-28"},{"lineNumber":93,"author":{"gitId":"IceWizard4902"},"content":"            }","lastModifiedDate":"2021-10-28"},{"lineNumber":94,"author":{"gitId":"IceWizard4902"},"content":"            if (begin.getZeroBased() \u003e end.getZeroBased()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":95,"author":{"gitId":"IceWizard4902"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_RANGE);","lastModifiedDate":"2021-10-28"},{"lineNumber":96,"author":{"gitId":"IceWizard4902"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"IceWizard4902"},"content":"            beginIndex \u003d begin.getZeroBased();","lastModifiedDate":"2021-10-28"},{"lineNumber":98,"author":{"gitId":"IceWizard4902"},"content":"            endIndex \u003d end.getZeroBased();","lastModifiedDate":"2021-10-28"},{"lineNumber":99,"author":{"gitId":"IceWizard4902"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"IceWizard4902"},"content":"        for (int i \u003d endIndex; i \u003e\u003d beginIndex; i--) {","lastModifiedDate":"2021-10-28"},{"lineNumber":102,"author":{"gitId":"IceWizard4902"},"content":"            Event eventToDelete \u003d lastShownList.get(i);","lastModifiedDate":"2021-10-28"},{"lineNumber":103,"author":{"gitId":"IceWizard4902"},"content":"            model.deleteEvent(eventToDelete);","lastModifiedDate":"2021-10-28"},{"lineNumber":104,"author":{"gitId":"IceWizard4902"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":105,"author":{"gitId":"IceWizard4902"},"content":"        return new CommandResult(MESSAGE_CLEAR_EVENT_SUCCESS);","lastModifiedDate":"2021-10-28"},{"lineNumber":106,"author":{"gitId":"IceWizard4902"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"IceWizard4902"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":109,"author":{"gitId":"IceWizard4902"},"content":"     * Get the beginning index of the specified range.","lastModifiedDate":"2021-10-28"},{"lineNumber":110,"author":{"gitId":"IceWizard4902"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":111,"author":{"gitId":"IceWizard4902"},"content":"     * @return The beginning index","lastModifiedDate":"2021-10-28"},{"lineNumber":112,"author":{"gitId":"IceWizard4902"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":113,"author":{"gitId":"IceWizard4902"},"content":"    public Index getBegin() {","lastModifiedDate":"2021-10-28"},{"lineNumber":114,"author":{"gitId":"IceWizard4902"},"content":"        return begin;","lastModifiedDate":"2021-10-28"},{"lineNumber":115,"author":{"gitId":"IceWizard4902"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":117,"author":{"gitId":"IceWizard4902"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":118,"author":{"gitId":"IceWizard4902"},"content":"     * Get the ending index of the specified range.","lastModifiedDate":"2021-10-28"},{"lineNumber":119,"author":{"gitId":"IceWizard4902"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":120,"author":{"gitId":"IceWizard4902"},"content":"     * @return The ending index","lastModifiedDate":"2021-10-28"},{"lineNumber":121,"author":{"gitId":"IceWizard4902"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":122,"author":{"gitId":"IceWizard4902"},"content":"    public Index getEnd() {","lastModifiedDate":"2021-10-28"},{"lineNumber":123,"author":{"gitId":"IceWizard4902"},"content":"        return end;","lastModifiedDate":"2021-10-28"},{"lineNumber":124,"author":{"gitId":"IceWizard4902"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":125,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":126,"author":{"gitId":"IceWizard4902"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":127,"author":{"gitId":"IceWizard4902"},"content":"     * Get the command\u0027s flag.","lastModifiedDate":"2021-10-28"},{"lineNumber":128,"author":{"gitId":"IceWizard4902"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":129,"author":{"gitId":"IceWizard4902"},"content":"     * @return The command\u0027s flag","lastModifiedDate":"2021-10-28"},{"lineNumber":130,"author":{"gitId":"IceWizard4902"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":131,"author":{"gitId":"IceWizard4902"},"content":"    public int getFlag() {","lastModifiedDate":"2021-10-28"},{"lineNumber":132,"author":{"gitId":"IceWizard4902"},"content":"        return flag;","lastModifiedDate":"2021-10-28"},{"lineNumber":133,"author":{"gitId":"IceWizard4902"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":134,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":135,"author":{"gitId":"IceWizard4902"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":136,"author":{"gitId":"IceWizard4902"},"content":"     * Get the command\u0027s operation mode.","lastModifiedDate":"2021-10-28"},{"lineNumber":137,"author":{"gitId":"IceWizard4902"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":138,"author":{"gitId":"IceWizard4902"},"content":"     * @return The command\u0027s operation mode","lastModifiedDate":"2021-10-28"},{"lineNumber":139,"author":{"gitId":"IceWizard4902"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":140,"author":{"gitId":"IceWizard4902"},"content":"    public int getMode() {","lastModifiedDate":"2021-10-28"},{"lineNumber":141,"author":{"gitId":"IceWizard4902"},"content":"        return mode;","lastModifiedDate":"2021-10-28"},{"lineNumber":142,"author":{"gitId":"IceWizard4902"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"IceWizard4902"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-28"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":147,"author":{"gitId":"IceWizard4902"},"content":"        if (flag \u003d\u003d PERSON_FLAG) {","lastModifiedDate":"2021-10-25"},{"lineNumber":148,"author":{"gitId":"IceWizard4902"},"content":"            return executePersonClear(model);","lastModifiedDate":"2021-10-28"},{"lineNumber":149,"author":{"gitId":"IceWizard4902"},"content":"        } else {","lastModifiedDate":"2021-10-25"},{"lineNumber":150,"author":{"gitId":"IceWizard4902"},"content":"            return executeEventClear(model);","lastModifiedDate":"2021-10-28"},{"lineNumber":151,"author":{"gitId":"IceWizard4902"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":153,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":154,"author":{"gitId":"nzixuan"},"content":"    @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":155,"author":{"gitId":"nzixuan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-14"},{"lineNumber":156,"author":{"gitId":"IceWizard4902"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-28"},{"lineNumber":157,"author":{"gitId":"IceWizard4902"},"content":"            return true;","lastModifiedDate":"2021-10-28"},{"lineNumber":158,"author":{"gitId":"IceWizard4902"},"content":"        } else if (other instanceof ClearCommand) {","lastModifiedDate":"2021-10-28"},{"lineNumber":159,"author":{"gitId":"IceWizard4902"},"content":"            ClearCommand c \u003d (ClearCommand) other;","lastModifiedDate":"2021-10-28"},{"lineNumber":160,"author":{"gitId":"IceWizard4902"},"content":"            boolean isFlagEqual \u003d (flag \u003d\u003d c.getFlag());","lastModifiedDate":"2021-10-28"},{"lineNumber":161,"author":{"gitId":"IceWizard4902"},"content":"            boolean isModeEqual \u003d (mode \u003d\u003d c.getMode());","lastModifiedDate":"2021-10-28"},{"lineNumber":162,"author":{"gitId":"IceWizard4902"},"content":"            return isFlagEqual \u0026\u0026 isModeEqual","lastModifiedDate":"2021-10-28"},{"lineNumber":163,"author":{"gitId":"IceWizard4902"},"content":"                    \u0026\u0026 Objects.equals(begin, c.getBegin())","lastModifiedDate":"2021-10-28"},{"lineNumber":164,"author":{"gitId":"IceWizard4902"},"content":"                    \u0026\u0026 Objects.equals(end, c.getEnd());","lastModifiedDate":"2021-10-28"},{"lineNumber":165,"author":{"gitId":"IceWizard4902"},"content":"        } else {","lastModifiedDate":"2021-10-28"},{"lineNumber":166,"author":{"gitId":"IceWizard4902"},"content":"            return false;","lastModifiedDate":"2021-10-28"},{"lineNumber":167,"author":{"gitId":"IceWizard4902"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"IceWizard4902":145,"nzixuan":3,"-":21}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"    /** The application should show the details component in the ui. */","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"    private final boolean isShowDetails;","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"yongxiangng"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, boolean isShowDetails) {","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"yongxiangng"},"content":"        this.isShowDetails \u003d isShowDetails;","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"yongxiangng"},"content":"        this(feedbackToUser, false, false, false);","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"yongxiangng"},"content":"     * Returns true if the command result is a show details result.","lastModifiedDate":"2021-10-30"},{"lineNumber":55,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":56,"author":{"gitId":"yongxiangng"},"content":"     * @return true if the command result is a show details result.","lastModifiedDate":"2021-10-30"},{"lineNumber":57,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":58,"author":{"gitId":"yongxiangng"},"content":"    public boolean isShowDetails() {","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"yongxiangng"},"content":"        return isShowDetails;","lastModifiedDate":"2021-10-30"},{"lineNumber":60,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yongxiangng":15,"-":69}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"nzixuan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_FLAG;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"nzixuan"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"nzixuan"},"content":" * Deletes a person or event identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"nzixuan"},"content":"            + \": Deletes the person or event identified by the index number used in the displayed list.\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"nzixuan"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"nzixuan"},"content":"            + \"[\" + PREFIX_EVENT_FLAG + \"] \"","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"nzixuan"},"content":"            + \"INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"nzixuan"},"content":"            + \"Example: \" + COMMAND_WORD + \" -e 1\";","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"nzixuan"},"content":"    public static final String MESSAGE_DELETE_EVENT_SUCCESS \u003d \"Deleted Event: %1$s\";","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"nzixuan"},"content":"    private final boolean isEventFlag;","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"nzixuan"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"nzixuan"},"content":"     * Constructor for delete command for person.","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"nzixuan"},"content":"     * @param targetIndex index to be deleted","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"nzixuan"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"nzixuan"},"content":"        this(targetIndex, false);","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"nzixuan"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"nzixuan"},"content":"     * Constructor for delete command.","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"nzixuan"},"content":"     * @param targetIndex index to be deleted","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"nzixuan"},"content":"     * @param isEventFlag flag event deletion","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"nzixuan"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"nzixuan"},"content":"    public DeleteCommand(Index targetIndex, boolean isEventFlag) {","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"nzixuan"},"content":"        this.isEventFlag \u003d isEventFlag;","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"nzixuan"},"content":"        if (isEventFlag) {","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"nzixuan"},"content":"            return executeEventDelete(model);","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"nzixuan"},"content":"        } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"nzixuan"},"content":"            return executePersonDelete(model);","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"nzixuan"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"nzixuan"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"nzixuan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"nzixuan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"nzixuan"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"nzixuan"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"nzixuan"},"content":"                \u0026\u0026 isEventFlag \u003d\u003d ((DeleteCommand) other).isEventFlag); // state check","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"nzixuan"},"content":"    private CommandResult executePersonDelete(Model model) throws CommandException {","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":82,"author":{"gitId":"nzixuan"},"content":"    private CommandResult executeEventDelete(Model model) throws CommandException {","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"nzixuan"},"content":"        List\u003cEvent\u003e lastShownList \u003d model.getFilteredEventList();","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"nzixuan"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"nzixuan"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"nzixuan"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"nzixuan"},"content":"        Event eventToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"nzixuan"},"content":"        model.deleteEvent(eventToDelete);","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"nzixuan"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_EVENT_SUCCESS, eventToDelete));","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nzixuan":50,"-":42}},{"path":"src/main/java/seedu/address/logic/commands/DetailsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"import java.util.List;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.person.NameEqualKeywordPredicate;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":" * Finds and displays the details of person whose name matches the keyword exactly.","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":" * Keyword matching is exact and case sensitive.","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"public class DetailsCommand extends Command {","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"    public static final String COMMAND_WORD \u003d \"details\";","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Displays the details of a member from the \"","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"            + \"specified keywords (case-sensitive and exact match of name) or index (must be a positive integer).\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"            + \"Parameters: NAME (case-sensitive) or INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":"            + \"Example: \" + COMMAND_WORD + \" Xiao Ming\";","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"yongxiangng"},"content":"    private NameEqualKeywordPredicate predicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"yongxiangng"},"content":"    private Index targetIndex;","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"yongxiangng"},"content":"     * Creates a DetailsCommand to display details.","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"yongxiangng"},"content":"     * @param predicate The predicate matching name of Person to find.","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"    public DetailsCommand(NameEqualKeywordPredicate predicate) {","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"yongxiangng"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"yongxiangng"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"yongxiangng"},"content":"     * Creates a DetailsCommand to display details.","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"yongxiangng"},"content":"     * @param targetIndex The index of the Person in the list.","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"yongxiangng"},"content":"    public DetailsCommand(Index targetIndex) {","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"yongxiangng"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"yongxiangng"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"yongxiangng"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"yongxiangng"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"yongxiangng"},"content":"        convertIndexToPredicate(model);","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"yongxiangng"},"content":"        return executePredicate(model);","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"yongxiangng"},"content":"    private void convertIndexToPredicate(Model model) throws CommandException {","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"yongxiangng"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"yongxiangng"},"content":"        if (targetIndex !\u003d null) {","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"yongxiangng"},"content":"            List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"yongxiangng"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"yongxiangng"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"yongxiangng"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"yongxiangng"},"content":"            Person personToDisplay \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"yongxiangng"},"content":"            predicate \u003d new NameEqualKeywordPredicate(personToDisplay.getName());","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"yongxiangng"},"content":"    private CommandResult executePredicate(Model model) {","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"yongxiangng"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"yongxiangng"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"yongxiangng"},"content":"        assert model.getFilteredPersonList().size() \u003c 2;","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"yongxiangng"},"content":"        if (model.getFilteredPersonList().size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"yongxiangng"},"content":"            return new CommandResult(","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"yongxiangng"},"content":"                    String.format(Messages.MESSAGE_PERSON_DETAILS_NOT_FOUND, predicate),","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"yongxiangng"},"content":"                    false, false, true);","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"yongxiangng"},"content":"        } else {","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"yongxiangng"},"content":"            return new CommandResult(","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"yongxiangng"},"content":"                    String.format(Messages.MESSAGE_PERSON_DETAILS_FOUND, predicate),","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"yongxiangng"},"content":"                    false, false, true);","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"yongxiangng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"yongxiangng"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"yongxiangng"},"content":"            return true;","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"yongxiangng"},"content":"        if (!(other instanceof DetailsCommand)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"yongxiangng"},"content":"            return false;","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"yongxiangng"},"content":"        DetailsCommand o \u003d (DetailsCommand) other;","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"yongxiangng"},"content":"        if (predicate \u003d\u003d null) {","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"yongxiangng"},"content":"            return o.predicate \u003d\u003d null \u0026\u0026 targetIndex.equals(o.targetIndex);","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"yongxiangng"},"content":"        if (targetIndex \u003d\u003d null) {","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"yongxiangng"},"content":"            return o.targetIndex \u003d\u003d null \u0026\u0026 predicate.equals(o.predicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"yongxiangng"},"content":"        return targetIndex.equals(o.targetIndex) \u0026\u0026 predicate.equals(o.predicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"yongxiangng":101}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"            + \"[\" + PREFIX_TELEGRAM + \"TELEGRAM] \"","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"ryanongra"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"ryanongra"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"ryanongra"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"ryanongra"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"ryanongra"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"ryanongra"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"ryanongra"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"ryanongra"},"content":"        Telegram updatedTelegram \u003d editPersonDescriptor.getTelegram().orElse(personToEdit.getTelegram());","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"ryanongra"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"ryanongra"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedTelegram, updatedTags);","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"ryanongra"},"content":"        private Telegram telegram;","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":144,"author":{"gitId":"ryanongra"},"content":"            setTelegram(toCopy.telegram);","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"ryanongra"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, telegram, tags);","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"ryanongra"},"content":"        public void setName(Name name) {","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"ryanongra"},"content":"            this.name \u003d name;","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"ryanongra"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"ryanongra"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"ryanongra"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"ryanongra"},"content":"            this.email \u003d email;","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"ryanongra"},"content":"        public Optional\u003cTelegram\u003e getTelegram() {","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"ryanongra"},"content":"            return Optional.ofNullable(telegram);","lastModifiedDate":"2021-10-10"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"ryanongra"},"content":"        public void setTelegram(Telegram telegram) {","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"ryanongra"},"content":"            this.telegram \u003d telegram;","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":196,"author":{"gitId":"ryanongra"},"content":"        /**","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"ryanongra"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"ryanongra"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-10-12"},{"lineNumber":199,"author":{"gitId":"ryanongra"},"content":"         */","lastModifiedDate":"2021-10-12"},{"lineNumber":200,"author":{"gitId":"ryanongra"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-12"},{"lineNumber":201,"author":{"gitId":"ryanongra"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2021-10-12"},{"lineNumber":202,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":203,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"ryanongra"},"content":"                    \u0026\u0026 getTelegram().equals(e.getTelegram())","lastModifiedDate":"2021-10-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"ryanongra":41,"-":185}},{"path":"src/main/java/seedu/address/logic/commands/EventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"/**","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":" * Adds an event to ForYourInterest.","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":" */","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an event to ForYourInterest. \"","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"            + \"Parameters: NAME\";","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New event created: %1$s\";","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"This event already exists in the address book\";","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"    private final Event toAdd;","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":"     * Creates an EventCommand to add the specified {@code Event}.","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"yongxiangng"},"content":"     * @param event The event to create.","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"yongxiangng"},"content":"    public EventCommand(Event event) {","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"yongxiangng"},"content":"        requireNonNull(event);","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"yongxiangng"},"content":"        toAdd \u003d event;","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"yongxiangng"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"yongxiangng"},"content":"        if (model.hasEvent(toAdd)) {","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"yongxiangng"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"yongxiangng"},"content":"        model.addEvent(toAdd);","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"yongxiangng"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"yongxiangng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"yongxiangng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"yongxiangng"},"content":"                || (other instanceof EventCommand // instanceof handles nulls","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"yongxiangng"},"content":"                \u0026\u0026 toAdd.equals(((EventCommand) other).toAdd));","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"yongxiangng":52}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false);","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"nzixuan"},"content":"    @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"nzixuan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"nzixuan"},"content":"        return (other instanceof ExitCommand);","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"yongxiangng":1,"nzixuan":4,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"import seedu.address.model.person.MatchesKeywordsPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"dannytayjy"},"content":"    private final MatchesKeywordsPredicate predicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"dannytayjy"},"content":"    public FindCommand(MatchesKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"dannytayjy":3,"-":39}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"nzixuan"},"content":"    @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"nzixuan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"nzixuan"},"content":"        return (other instanceof HelpCommand);","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yongxiangng":1,"nzixuan":4,"-":21}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"nzixuan"},"content":"    @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"nzixuan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"nzixuan"},"content":"        return (other instanceof ListCommand);","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nzixuan":5,"-":24}},{"path":"src/main/java/seedu/address/logic/commands/RemovePersonFromEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_EVENT_DETAILS_NOT_FOUND;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSON_DETAILS_NOT_FOUND;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_NAME;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_EVENTS;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"import java.util.List;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"import seedu.address.model.event.EventNameEqualKeywordPredicate;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"import seedu.address.model.person.NameEqualKeywordPredicate;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"public class RemovePersonFromEventCommand extends Command {","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"    public static final String COMMAND_WORD \u003d \"removePersonFromEvent\";","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"            + \": Removes the Person specified from the Event specified. \\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"            + PREFIX_NAME + \"PERSON_NAME \"","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"            + PREFIX_EVENT_NAME + \"EVENT_NAME\"","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"            + PREFIX_EVENT_NAME + \"Training Week 10 Thursday\";","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Person %1$s removed from event %2$s\";","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"    private final NameEqualKeywordPredicate personPredicate;","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"    private final EventNameEqualKeywordPredicate eventPredicate;","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":"     * Creates a RemovePersonFromEventCommand to remove the specified {@code Person} matched by the name predicate","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"     * from the event matched by the event name predicate.","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"    public RemovePersonFromEventCommand(NameEqualKeywordPredicate personPredicate,","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"                                   EventNameEqualKeywordPredicate eventPredicate) {","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"        requireAllNonNull(personPredicate, eventPredicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"ryanongra"},"content":"        this.personPredicate \u003d personPredicate;","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"ryanongra"},"content":"        this.eventPredicate \u003d eventPredicate;","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"ryanongra"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"ryanongra"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"ryanongra"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"ryanongra"},"content":"        List\u003cEvent\u003e eventsMatched \u003d model.getEvents(eventPredicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"ryanongra"},"content":"        assert eventsMatched.size() \u003c 2;","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"ryanongra"},"content":"        if (eventsMatched.isEmpty()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"ryanongra"},"content":"            throw new CommandException(String.format(MESSAGE_EVENT_DETAILS_NOT_FOUND, eventPredicate));","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"ryanongra"},"content":"        Event target \u003d eventsMatched.get(0);","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"ryanongra"},"content":"        UniquePersonList personsMatched \u003d target.getAttendees();","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"ryanongra"},"content":"        assert personsMatched.size() \u003c 2;","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"ryanongra"},"content":"        if (personsMatched.isEmpty()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"ryanongra"},"content":"            throw new CommandException(String.format(MESSAGE_PERSON_DETAILS_NOT_FOUND, personPredicate));","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"ryanongra"},"content":"        FilteredList\u003cPerson\u003e toRemoveAsList \u003d personsMatched.asUnmodifiableObservableList().filtered(personPredicate);","lastModifiedDate":"2021-10-30"},{"lineNumber":69,"author":{"gitId":"ryanongra"},"content":"        if (toRemoveAsList.isEmpty()) {","lastModifiedDate":"2021-10-30"},{"lineNumber":70,"author":{"gitId":"ryanongra"},"content":"            throw new CommandException(String.format(MESSAGE_PERSON_DETAILS_NOT_FOUND, personPredicate));","lastModifiedDate":"2021-10-30"},{"lineNumber":71,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":72,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":73,"author":{"gitId":"ryanongra"},"content":"        Person toRemove \u003d toRemoveAsList.get(0);","lastModifiedDate":"2021-10-30"},{"lineNumber":74,"author":{"gitId":"ryanongra"},"content":"        target.removePerson(toRemove);","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":76,"author":{"gitId":"ryanongra"},"content":"        model.updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"ryanongra"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toRemove.getName(), target.getEventName()));","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"ryanongra"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"ryanongra"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"ryanongra"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"ryanongra"},"content":"                || (other instanceof RemovePersonFromEventCommand // instanceof handles nulls","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"ryanongra"},"content":"                \u0026\u0026 personPredicate.equals(((RemovePersonFromEventCommand) other).personPredicate)","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"ryanongra"},"content":"                \u0026\u0026 eventPredicate.equals(((RemovePersonFromEventCommand) other).eventPredicate));","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"ryanongra":89}},{"path":"src/main/java/seedu/address/logic/commands/RenameEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_NAME;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_EVENTS;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":" * Changes the name of an event","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"public class RenameEventCommand extends Command {","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"    public static final String COMMAND_WORD \u003d \"renameEvent\";","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Renames an existing event \"","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"            + \"by the index number used in the event list. \\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"            + PREFIX_EVENT_NAME + \"NEW_NAME \\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"            + PREFIX_EVENT_NAME + \"Training Week 10 Thursday\";","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"    public static final String MESSAGE_RENAME_EVENT_SUCCESS \u003d \"Renamed Event %1$s into %2$s\";","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"    public static final String MESSAGE_NOT_RENAMED \u003d \"The new name must be provided.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"This event already exists in the address book.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"    private final Index index;","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"ryanongra"},"content":"    private final RenameEventDescriptor renameEventDescriptor;","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"     * @param index of the event in the event list to be renamed","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"     * @param renameEventDescriptor details to rename the event with","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"    public RenameEventCommand(Index index, RenameEventDescriptor renameEventDescriptor) {","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"ryanongra"},"content":"        requireNonNull(renameEventDescriptor);","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"ryanongra"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"ryanongra"},"content":"        this.renameEventDescriptor \u003d new RenameEventDescriptor(renameEventDescriptor);","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"ryanongra"},"content":"    private static Event createRenamedEvent(Event eventToRename, RenameEventDescriptor renameEventDescriptor) {","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"ryanongra"},"content":"        assert eventToRename !\u003d null;","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"ryanongra"},"content":"        EventName updatedEventName \u003d renameEventDescriptor.getEventName().orElse(eventToRename.getEventName());","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"ryanongra"},"content":"        UniquePersonList attendees \u003d renameEventDescriptor.getAttendees().orElse(eventToRename.getAttendees());","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"ryanongra"},"content":"        return new Event(updatedEventName, attendees);","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"ryanongra"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"ryanongra"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"ryanongra"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"ryanongra"},"content":"        List\u003cEvent\u003e lastShownEventList \u003d model.getFilteredEventList();","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"ryanongra"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownEventList.size()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"ryanongra"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"ryanongra"},"content":"        Event eventToRename \u003d lastShownEventList.get(index.getZeroBased());","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"ryanongra"},"content":"        Event renamedEvent \u003d createRenamedEvent(eventToRename, renameEventDescriptor);","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"ryanongra"},"content":"        if (!eventToRename.isSameEvent(renamedEvent) \u0026\u0026 model.hasEvent(renamedEvent)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"ryanongra"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"ryanongra"},"content":"        model.setEvent(eventToRename, renamedEvent);","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"ryanongra"},"content":"        model.updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"ryanongra"},"content":"        return new CommandResult(String.format(MESSAGE_RENAME_EVENT_SUCCESS, eventToRename.getEventName(),","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"ryanongra"},"content":"                renamedEvent.getEventName()));","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"ryanongra"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"ryanongra"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"ryanongra"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"ryanongra"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"ryanongra"},"content":"            return true;","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"ryanongra"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"ryanongra"},"content":"        if (!(other instanceof RenameEventCommand)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"ryanongra"},"content":"            return false;","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"ryanongra"},"content":"        // state check","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"ryanongra"},"content":"        RenameEventCommand e \u003d (RenameEventCommand) other;","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"ryanongra"},"content":"        return index.equals(e.index)","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"ryanongra"},"content":"                \u0026\u0026 renameEventDescriptor.equals(e.renameEventDescriptor);","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"ryanongra"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"ryanongra"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"ryanongra"},"content":"    public static class RenameEventDescriptor {","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"ryanongra"},"content":"        private EventName eventName;","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"ryanongra"},"content":"        private UniquePersonList attendees;","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":110,"author":{"gitId":"ryanongra"},"content":"        public RenameEventDescriptor() {}","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"ryanongra"},"content":"        /**","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"ryanongra"},"content":"         * Copy constructor.","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"ryanongra"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"ryanongra"},"content":"         */","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"ryanongra"},"content":"        public RenameEventDescriptor(RenameEventCommand.RenameEventDescriptor toCopy) {","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"ryanongra"},"content":"            setEventName(toCopy.eventName);","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"ryanongra"},"content":"            setAttendees(toCopy.attendees);","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"ryanongra"},"content":"        /**","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"ryanongra"},"content":"         * Returns true if the event name has been edited.","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"ryanongra"},"content":"         */","lastModifiedDate":"2021-10-26"},{"lineNumber":124,"author":{"gitId":"ryanongra"},"content":"        public boolean isEventNameRenamed() {","lastModifiedDate":"2021-10-26"},{"lineNumber":125,"author":{"gitId":"ryanongra"},"content":"            return CollectionUtil.isAnyNonNull(eventName);","lastModifiedDate":"2021-10-26"},{"lineNumber":126,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":127,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":128,"author":{"gitId":"ryanongra"},"content":"        public Optional\u003cEventName\u003e getEventName() {","lastModifiedDate":"2021-10-26"},{"lineNumber":129,"author":{"gitId":"ryanongra"},"content":"            return Optional.ofNullable(eventName);","lastModifiedDate":"2021-10-26"},{"lineNumber":130,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":131,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":132,"author":{"gitId":"ryanongra"},"content":"        public void setEventName(EventName eventName) {","lastModifiedDate":"2021-10-26"},{"lineNumber":133,"author":{"gitId":"ryanongra"},"content":"            this.eventName \u003d eventName;","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":135,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"ryanongra"},"content":"        public Optional\u003cUniquePersonList\u003e getAttendees() {","lastModifiedDate":"2021-10-26"},{"lineNumber":137,"author":{"gitId":"ryanongra"},"content":"            return Optional.ofNullable(attendees);","lastModifiedDate":"2021-10-26"},{"lineNumber":138,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":139,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":140,"author":{"gitId":"ryanongra"},"content":"        public void setAttendees(UniquePersonList attendees) {","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"ryanongra"},"content":"            this.attendees \u003d attendees;","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":143,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":144,"author":{"gitId":"ryanongra"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"ryanongra"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-10-26"},{"lineNumber":146,"author":{"gitId":"ryanongra"},"content":"            // short circuit if same object","lastModifiedDate":"2021-10-26"},{"lineNumber":147,"author":{"gitId":"ryanongra"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-26"},{"lineNumber":148,"author":{"gitId":"ryanongra"},"content":"                return true;","lastModifiedDate":"2021-10-26"},{"lineNumber":149,"author":{"gitId":"ryanongra"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":150,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":151,"author":{"gitId":"ryanongra"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-10-26"},{"lineNumber":152,"author":{"gitId":"ryanongra"},"content":"            if (!(other instanceof RenameEventCommand.RenameEventDescriptor)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":153,"author":{"gitId":"ryanongra"},"content":"                return false;","lastModifiedDate":"2021-10-26"},{"lineNumber":154,"author":{"gitId":"ryanongra"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":155,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":156,"author":{"gitId":"ryanongra"},"content":"            // state check","lastModifiedDate":"2021-10-26"},{"lineNumber":157,"author":{"gitId":"ryanongra"},"content":"            RenameEventCommand.RenameEventDescriptor e \u003d (RenameEventCommand.RenameEventDescriptor) other;","lastModifiedDate":"2021-10-26"},{"lineNumber":158,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":159,"author":{"gitId":"ryanongra"},"content":"            return getEventName().equals(e.getEventName())","lastModifiedDate":"2021-10-26"},{"lineNumber":160,"author":{"gitId":"ryanongra"},"content":"                    \u0026\u0026 getAttendees().equals(e.getAttendees());","lastModifiedDate":"2021-10-26"},{"lineNumber":161,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":162,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":163,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"ryanongra":163}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TELEGRAM, PREFIX_TAG);","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME)","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":"        String newName \u003d extractValue(argMultimap, PREFIX_NAME);","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"        String newPhone \u003d extractValue(argMultimap, PREFIX_PHONE);","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"        String newEmail \u003d extractValue(argMultimap, PREFIX_EMAIL);","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"        String newTelegram \u003d extractValue(argMultimap, PREFIX_TELEGRAM);","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"        Name name \u003d ParserUtil.parseName(newName);","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"ryanongra"},"content":"        Phone phone \u003d ParserUtil.parsePhone(newPhone);","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"ryanongra"},"content":"        Email email \u003d ParserUtil.parseEmail(newEmail);","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"ryanongra"},"content":"        Telegram telegram \u003d ParserUtil.parseTelegram(newTelegram);","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"ryanongra"},"content":"        Person person \u003d new Person(name, phone, email, telegram, tagList);","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"ryanongra"},"content":"     * Extracts the value of the given Prefix from a given ArgumentMultiMap.","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"ryanongra"},"content":"     * Returns null if prefix does not exist.","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"ryanongra"},"content":"     * @param map ArgumentMultiMap to be searched.","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"ryanongra"},"content":"     * @param prefix Prefix to search for.","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"ryanongra"},"content":"     * @return Return value if found, otherwise null.","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"ryanongra"},"content":"    private String extractValue(ArgumentMultimap map, Prefix prefix) {","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"ryanongra"},"content":"        if (!arePrefixesPresent(map, prefix)","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"ryanongra"},"content":"                || !map.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"ryanongra"},"content":"            return null;","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"ryanongra"},"content":"        } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"ryanongra"},"content":"            return map.getValue(prefix).get();","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"ryanongra":30,"-":51}},{"path":"src/main/java/seedu/address/logic/parser/AddPersonToEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_NAME;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.logic.commands.AddPersonToEventCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.event.EventNameEqualKeywordPredicate;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.person.NameEqualKeywordPredicate;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":" * Parses input arguments and creates a new AddPersonToEventCommand object","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"public class AddPersonToEventCommandParser implements Parser\u003cAddPersonToEventCommand\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"     * Parses the given {@code String} of arguments in the context of the AddPersonToEventCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"     * and returns an AddPersonToEventCommand object for execution.","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"yongxiangng"},"content":"     * @param args The arguments to be parsed.","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"yongxiangng"},"content":"     * @return Command created with arguments parsed.","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"yongxiangng"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"yongxiangng"},"content":"    public AddPersonToEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"yongxiangng"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_EVENT_NAME);","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"yongxiangng"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_EVENT_NAME)","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"yongxiangng"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"yongxiangng"},"content":"                    AddPersonToEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"yongxiangng"},"content":"        Name personName \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"yongxiangng"},"content":"        EventName eventName \u003d ParserUtil.parseEventName(argMultimap.getValue(PREFIX_EVENT_NAME).get());","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"yongxiangng"},"content":"        return new AddPersonToEventCommand(new NameEqualKeywordPredicate(personName),","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"yongxiangng"},"content":"                new EventNameEqualKeywordPredicate(eventName));","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"yongxiangng"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"yongxiangng"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"yongxiangng"},"content":"     * @param argumentMultimap Argument multimap involved in parsing.","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"yongxiangng"},"content":"     * @param prefixes The prefixes used.","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"yongxiangng"},"content":"     * @return true if prefixes are present.","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"yongxiangng"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"yongxiangng"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"yongxiangng":58}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"nzixuan"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.logic.commands.AddPersonToEventCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"nzixuan"},"content":"import seedu.address.logic.commands.AliasCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"nzixuan"},"content":"import seedu.address.logic.commands.ChainCommand;","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.logic.commands.DetailsCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.logic.commands.EventCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"import seedu.address.logic.commands.RemovePersonFromEventCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"import seedu.address.logic.commands.RenameEventCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"nzixuan"},"content":"    private static final Pattern ADVANCED_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003cleftCommandString\u003e.*)\"","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"nzixuan"},"content":"            + \"\u0026\u0026(?\u003crightCommandString\u003e.*)\");","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"nzixuan"},"content":"    private final HashMap\u003cString, String\u003e aliasMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"nzixuan"},"content":"        final Matcher basicMatcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"nzixuan"},"content":"        final Matcher advancedMatcher \u003d ADVANCED_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"nzixuan"},"content":"        if (advancedMatcher.matches()) {","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"nzixuan"},"content":"            final String leftCommandString \u003d advancedMatcher.group(\"leftCommandString\");","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"nzixuan"},"content":"            final String rightCommandString \u003d advancedMatcher.group(\"rightCommandString\");","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"nzixuan"},"content":"            Command leftCommand \u003d this.parseCommand(leftCommandString);","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"nzixuan"},"content":"            Command rightCommand \u003d this.parseCommand(rightCommandString);","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"nzixuan"},"content":"            return new ChainCommand(leftCommand, rightCommand);","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"nzixuan"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"nzixuan"},"content":"        if (!basicMatcher.matches()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"nzixuan"},"content":"        final String commandWord \u003d basicMatcher.group(\"commandWord\");","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"nzixuan"},"content":"        final String arguments \u003d basicMatcher.group(\"arguments\");","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"yongxiangng"},"content":"        case AddPersonToEventCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"yongxiangng"},"content":"            return new AddPersonToEventCommandParser().parse(arguments);","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"ryanongra"},"content":"        case RemovePersonFromEventCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"ryanongra"},"content":"            return new RemovePersonFromEventCommandParser().parse(arguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"yongxiangng"},"content":"        case EventCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"yongxiangng"},"content":"            return new EventCommandParser().parse(arguments);","lastModifiedDate":"2021-10-16"},{"lineNumber":79,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":80,"author":{"gitId":"ryanongra"},"content":"        case RenameEventCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"ryanongra"},"content":"            return new RenameEventCommandParser().parse(arguments);","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"yongxiangng"},"content":"        case DetailsCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"yongxiangng"},"content":"            return new DetailsCommandParser().parse(arguments);","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"IceWizard4902"},"content":"            return new ClearCommandParser().parse(arguments);","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":107,"author":{"gitId":"nzixuan"},"content":"        case AliasCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-18"},{"lineNumber":108,"author":{"gitId":"nzixuan"},"content":"            return new AliasCommandParser().parse(arguments).setMap(aliasMap);","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":111,"author":{"gitId":"nzixuan"},"content":"            if (aliasMap.containsKey(commandWord)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"nzixuan"},"content":"                return parseCommand(aliasMap.get(commandWord) + \" \" + arguments);","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"nzixuan"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"IceWizard4902":2,"yongxiangng":11,"nzixuan":26,"ryanongra":8,"-":71}},{"path":"src/main/java/seedu/address/logic/parser/AliasCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nzixuan"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"nzixuan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"nzixuan"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"nzixuan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ALIAS;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"nzixuan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMAND;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"nzixuan"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"nzixuan"},"content":"import seedu.address.logic.commands.AliasCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"nzixuan"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"nzixuan"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"nzixuan"},"content":" * Parses input arguments and creates a new AliasCommand object","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"nzixuan"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"nzixuan"},"content":"public class AliasCommandParser implements Parser\u003cAliasCommand\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"nzixuan"},"content":"    public static final String MESSAGE_ALIAS_CONSTRAINTS \u003d \"Alias cannot be empty or contain whitespace!\";","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"nzixuan"},"content":"    public static final String MESSAGE_COMMAND_CONSTRAINTS \u003d \"Command cannot be empty!\";","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"nzixuan"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"nzixuan"},"content":"     * Parses the given {@code String} of arguments in the context of the AliasCommand","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"nzixuan"},"content":"     * and returns an AliasCommand object for execution.","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"nzixuan"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"nzixuan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"nzixuan"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"nzixuan"},"content":"    public AliasCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"nzixuan"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"nzixuan"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ALIAS, PREFIX_COMMAND);","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"nzixuan"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_ALIAS, PREFIX_COMMAND)","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"nzixuan"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"nzixuan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AliasCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"nzixuan"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"nzixuan"},"content":"        String alias \u003d argMultimap.getValue(PREFIX_ALIAS).get();","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"nzixuan"},"content":"        String command \u003d argMultimap.getValue(PREFIX_COMMAND).get();","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"nzixuan"},"content":"        requireNonNull(alias);","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"nzixuan"},"content":"        requireNonNull(command);","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"nzixuan"},"content":"        alias \u003d alias.trim();","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"nzixuan"},"content":"        command \u003d command.trim();","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"nzixuan"},"content":"        if (alias.isEmpty() || alias.contains(\" \")) {","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"nzixuan"},"content":"            throw new ParseException(MESSAGE_ALIAS_CONSTRAINTS);","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"nzixuan"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"nzixuan"},"content":"        if (command.isEmpty()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"nzixuan"},"content":"            throw new ParseException(MESSAGE_COMMAND_CONSTRAINTS);","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"nzixuan"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"nzixuan"},"content":"        return new AliasCommand(alias, command);","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"nzixuan"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"nzixuan"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"nzixuan"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"nzixuan"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"nzixuan"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"nzixuan"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"nzixuan"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"nzixuan":59}},{"path":"src/main/java/seedu/address/logic/parser/ClearCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IceWizard4902"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"IceWizard4902"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"IceWizard4902"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_FLAG;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"IceWizard4902"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON_FLAG;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"IceWizard4902"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"IceWizard4902"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"IceWizard4902"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"IceWizard4902"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"IceWizard4902"},"content":"public class ClearCommandParser implements Parser\u003cClearCommand\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"IceWizard4902"},"content":"    private static final int PERSON_FLAG \u003d 0;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"IceWizard4902"},"content":"    private static final int EVENT_FLAG \u003d 1;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"IceWizard4902"},"content":"    private static final String VALIDATION_REGEX \u003d \"^all$|^[0-9]*-[0-9]*$\";","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"IceWizard4902"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"IceWizard4902"},"content":"     * Parses the given {@code String} of arguments in the context of the ClearCommand","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"IceWizard4902"},"content":"     * and returns an ClearCommand object for execution.","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"IceWizard4902"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"IceWizard4902"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"IceWizard4902"},"content":"    public ClearCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"IceWizard4902"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"IceWizard4902"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_PERSON_FLAG, PREFIX_EVENT_FLAG);","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"IceWizard4902"},"content":"        boolean isClearingPerson \u003d arePrefixesPresent(argMultimap, PREFIX_PERSON_FLAG);","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"IceWizard4902"},"content":"        boolean isClearingEvent \u003d arePrefixesPresent(argMultimap, PREFIX_EVENT_FLAG);","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"IceWizard4902"},"content":"        assert(!(isClearingEvent \u0026\u0026 isClearingPerson));","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"IceWizard4902"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"IceWizard4902"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ClearCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"IceWizard4902"},"content":"        } else if (isClearingPerson \u0026\u0026 isClearingEvent) {","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"IceWizard4902"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ClearCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"IceWizard4902"},"content":"        } else if (!isClearingPerson \u0026\u0026 !isClearingEvent) {","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"IceWizard4902"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ClearCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"IceWizard4902"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"IceWizard4902"},"content":"        String clearRange;","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"IceWizard4902"},"content":"        int flag;","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"IceWizard4902"},"content":"        if (isClearingPerson) {","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"IceWizard4902"},"content":"            flag \u003d PERSON_FLAG;","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"IceWizard4902"},"content":"            clearRange \u003d argMultimap.getValue(PREFIX_PERSON_FLAG).get();","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"IceWizard4902"},"content":"        } else {","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"IceWizard4902"},"content":"            flag \u003d EVENT_FLAG;","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"IceWizard4902"},"content":"            clearRange \u003d argMultimap.getValue(PREFIX_EVENT_FLAG).get();","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"IceWizard4902"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"IceWizard4902"},"content":"        if (!clearRange.matches(VALIDATION_REGEX)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"IceWizard4902"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ClearCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"IceWizard4902"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"IceWizard4902"},"content":"        if (clearRange.equals(\"all\")) {","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"IceWizard4902"},"content":"            return new ClearCommand(flag, 0, null, null);","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"IceWizard4902"},"content":"        } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"IceWizard4902"},"content":"            String[] range \u003d clearRange.split(\"-\");","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"IceWizard4902"},"content":"            assert(range.length \u003d\u003d 2);","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"IceWizard4902"},"content":"            Index begin \u003d ParserUtil.parseIndex(range[0]);","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"IceWizard4902"},"content":"            Index end \u003d ParserUtil.parseIndex(range[1]);","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"IceWizard4902"},"content":"            return new ClearCommand(flag, 1, begin, end);","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"IceWizard4902"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"IceWizard4902"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"IceWizard4902"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"IceWizard4902"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"IceWizard4902"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"IceWizard4902"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"IceWizard4902"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"IceWizard4902"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"IceWizard4902"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"IceWizard4902"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"IceWizard4902":75}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"    public static final Prefix PREFIX_EVENT_NAME \u003d new Prefix(\"ev/\");","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"    public static final Prefix PREFIX_TELEGRAM \u003d new Prefix(\"t/\");","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"tag/\");","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"nzixuan"},"content":"    public static final Prefix PREFIX_ALIAS \u003d new Prefix(\"a/\");","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"nzixuan"},"content":"    public static final Prefix PREFIX_COMMAND \u003d new Prefix(\"c/\");","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"nzixuan"},"content":"    public static final Prefix PREFIX_EVENT_FLAG \u003d new Prefix(\"-e \");","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"IceWizard4902"},"content":"    public static final Prefix PREFIX_PERSON_FLAG \u003d new Prefix(\"-p \");","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"IceWizard4902":1,"yongxiangng":1,"ryanongra":2,"nzixuan":3,"-":12}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"nzixuan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"nzixuan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_FLAG;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"nzixuan"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"nzixuan"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"nzixuan"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_EVENT_FLAG);","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"nzixuan"},"content":"        String indexString \u003d args;","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"nzixuan"},"content":"        Boolean isEventFlag \u003d argMultimap.getValue(PREFIX_EVENT_FLAG).isPresent();","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"nzixuan"},"content":"        if (isEventFlag) {","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"nzixuan"},"content":"            String eventString \u003d argMultimap.getValue(PREFIX_EVENT_FLAG).get();","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"nzixuan"},"content":"            String preamble \u003d argMultimap.getPreamble();","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"nzixuan"},"content":"            if ((!eventString.isBlank() \u0026\u0026 !preamble.isBlank()) || (eventString.isBlank() \u0026\u0026 preamble.isBlank())) {","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"nzixuan"},"content":"                throw new ParseException(","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"nzixuan"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"nzixuan"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"nzixuan"},"content":"            if (!preamble.isBlank()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"nzixuan"},"content":"                indexString \u003d preamble;","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"nzixuan"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"nzixuan"},"content":"            if (!eventString.isBlank()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"nzixuan"},"content":"                indexString \u003d eventString;","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"nzixuan"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"nzixuan"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"nzixuan"},"content":"            System.out.println(indexString);","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"nzixuan"},"content":"            Index index \u003d ParserUtil.parseIndex(indexString);","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"nzixuan"},"content":"            return new DeleteCommand(index, isEventFlag);","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"nzixuan":28,"-":27}},{"path":"src/main/java/seedu/address/logic/parser/DetailsCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.logic.commands.DetailsCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.person.NameEqualKeywordPredicate;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":" * Parses input arguments and creates a new DetailsCommand object","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"public class DetailsCommandParser implements Parser\u003cDetailsCommand\u003e {","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"     * Parses the given {@code String} of arguments in the context of the DetailsCommand","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"     * and returns a DetailsCommand object for execution.","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"     * @param args The arguments parsed.","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"     * @return Command created from the arguments parsed.","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"    public DetailsCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":"        if (args.trim().equals(\"\")) {","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"yongxiangng"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"yongxiangng"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DetailsCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"yongxiangng"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"yongxiangng"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"yongxiangng"},"content":"            return new DetailsCommand(index);","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"yongxiangng"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"yongxiangng"},"content":"            Name name \u003d ParserUtil.parseName(args);","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"            return new DetailsCommand(new NameEqualKeywordPredicate(name));","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"yongxiangng":39}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TELEGRAM, PREFIX_TAG);","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"ryanongra"},"content":"        if (argMultimap.getValue(PREFIX_TELEGRAM).isPresent()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"ryanongra"},"content":"            editPersonDescriptor.setTelegram(ParserUtil.parseTelegram(argMultimap.getValue(PREFIX_TELEGRAM).get()));","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"ryanongra":5,"-":77}},{"path":"src/main/java/seedu/address/logic/parser/EventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.logic.commands.EventCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"/**","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":" * Parses input arguments and creates a new EventCommand object","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":" */","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"public class EventCommandParser implements Parser\u003cEventCommand\u003e {","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"     * Parses the given {@code String} of arguments in the context of the EventCommand","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"     * and returns an EventCommand object for execution.","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"     * @param args The arguments parsed.","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"     * @return Command created from the arguments parsed.","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"    public EventCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"        if (args.trim().equals(\"\")) {","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EventCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"yongxiangng"},"content":"        EventName eventName \u003d ParserUtil.parseEventName(args);","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"yongxiangng"},"content":"        Event event \u003d new Event(eventName);","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"yongxiangng"},"content":"        return new EventCommand(event);","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"yongxiangng":31}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":"import seedu.address.model.person.MatchesKeywordsPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"dannytayjy"},"content":"        String[] keywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"        return new FindCommand(new MatchesKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"dannytayjy":3,"-":30}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"import static java.util.Objects.isNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"ryanongra"},"content":"        if (isNull(phone)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"ryanongra"},"content":"            return new Phone(Phone.UNSPECIFIED_INPUT);","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"ryanongra"},"content":"     * Parses a {@code String address} into an {@code Telegram}.","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"ryanongra"},"content":"     * @throws ParseException if the given {@code telegram} is invalid.","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"ryanongra"},"content":"    public static Telegram parseTelegram(String telegram) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"ryanongra"},"content":"        if (isNull(telegram)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"ryanongra"},"content":"            return new Telegram(Telegram.UNSPECIFIED_INPUT);","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"ryanongra"},"content":"        String trimmedTelegram \u003d telegram.trim();","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"ryanongra"},"content":"        if (!Telegram.isValidTelegram(trimmedTelegram)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"ryanongra"},"content":"            throw new ParseException(Telegram.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"ryanongra"},"content":"        return new Telegram(trimmedTelegram);","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":97,"author":{"gitId":"ryanongra"},"content":"        if (isNull(email)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"ryanongra"},"content":"            return new Email(Email.UNSPECIFIED_INPUT);","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":133,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":134,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":135,"author":{"gitId":"yongxiangng"},"content":"     * Parses a {@code String eventName} into a {@code name}.","lastModifiedDate":"2021-10-16"},{"lineNumber":136,"author":{"gitId":"yongxiangng"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-16"},{"lineNumber":137,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":138,"author":{"gitId":"yongxiangng"},"content":"     * @param eventName The event name to be parsed.","lastModifiedDate":"2021-10-30"},{"lineNumber":139,"author":{"gitId":"yongxiangng"},"content":"     * @return EventName object.","lastModifiedDate":"2021-10-30"},{"lineNumber":140,"author":{"gitId":"yongxiangng"},"content":"     * @throws ParseException if the given {@code eventName} is invalid.","lastModifiedDate":"2021-10-16"},{"lineNumber":141,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":142,"author":{"gitId":"yongxiangng"},"content":"    public static EventName parseEventName(String eventName) throws ParseException {","lastModifiedDate":"2021-10-16"},{"lineNumber":143,"author":{"gitId":"yongxiangng"},"content":"        requireNonNull(eventName);","lastModifiedDate":"2021-10-16"},{"lineNumber":144,"author":{"gitId":"yongxiangng"},"content":"        String trimmedEventName \u003d eventName.trim();","lastModifiedDate":"2021-10-16"},{"lineNumber":145,"author":{"gitId":"yongxiangng"},"content":"        if (!EventName.isValidEventName(trimmedEventName)) {","lastModifiedDate":"2021-10-16"},{"lineNumber":146,"author":{"gitId":"yongxiangng"},"content":"            throw new ParseException(EventName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-16"},{"lineNumber":147,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":148,"author":{"gitId":"yongxiangng"},"content":"        return new EventName(trimmedEventName);","lastModifiedDate":"2021-10-16"},{"lineNumber":149,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"yongxiangng":18,"ryanongra":19,"-":113}},{"path":"src/main/java/seedu/address/logic/parser/RemovePersonFromEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_NAME;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"import seedu.address.logic.commands.RemovePersonFromEventCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"import seedu.address.model.event.EventNameEqualKeywordPredicate;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"import seedu.address.model.person.NameEqualKeywordPredicate;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":" * Parses input arguments and creates a new RemovePersonFromEventCommand object","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"public class RemovePersonFromEventCommandParser implements Parser\u003cRemovePersonFromEventCommand\u003e {","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"     * Parses the given {@code String} of arguments in the context of the RemovePersonFromEventCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"     * and returns an RemovePersonFromEventCommand object for execution.","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"    public RemovePersonFromEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_EVENT_NAME);","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_EVENT_NAME)","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"                    RemovePersonFromEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"        Name personName \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"        EventName eventName \u003d ParserUtil.parseEventName(argMultimap.getValue(PREFIX_EVENT_NAME).get());","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"        return new RemovePersonFromEventCommand(new NameEqualKeywordPredicate(personName),","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"ryanongra"},"content":"                new EventNameEqualKeywordPredicate(eventName));","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"ryanongra"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"ryanongra":49}},{"path":"src/main/java/seedu/address/logic/parser/RenameEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_NAME;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"import seedu.address.logic.commands.RenameEventCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":" * Parses input arguments and creates a new RenameEventCommand object","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"public class RenameEventCommandParser implements Parser\u003cRenameEventCommand\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"     * Parses the given {@code String} of arguments in the context of the RenameEventCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"     * and returns a RenameEventCommand object for execution.","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"    public RenameEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"        ArgumentMultimap argMultiMap \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_EVENT_NAME);","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"        Index index;","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"        try {","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"            index \u003d ParserUtil.parseIndex(argMultiMap.getPreamble());","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"                    RenameEventCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"        RenameEventCommand.RenameEventDescriptor renameEventDescriptor \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"                new RenameEventCommand.RenameEventDescriptor();","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"        if (argMultiMap.getValue(PREFIX_EVENT_NAME).isPresent()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"            renameEventDescriptor.setEventName(ParserUtil.parseEventName(argMultiMap","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"ryanongra"},"content":"                    .getValue(PREFIX_EVENT_NAME)","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"ryanongra"},"content":"                    .get()));","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"        if (!renameEventDescriptor.isEventNameRenamed()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"            throw new ParseException(RenameEventCommand.MESSAGE_NOT_RENAMED);","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"ryanongra"},"content":"        return new RenameEventCommand(index, renameEventDescriptor);","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"ryanongra":49}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.event.UniqueEventList;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"    private final UniqueEventList events;","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":33,"author":{"gitId":"yongxiangng"},"content":"        events \u003d new UniqueEventList();","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"yongxiangng"},"content":"     * Replaces the contents of the event list with {@code events}.","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"yongxiangng"},"content":"     * {@code events} must not contain duplicate events.","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"yongxiangng"},"content":"     * @param events The events used to replace the current events.","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"yongxiangng"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"yongxiangng"},"content":"        this.events.setEvents(events);","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":72,"author":{"gitId":"yongxiangng"},"content":"        setEvents(newData.getEventList());","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"yongxiangng"},"content":"    //// event-level operations","lastModifiedDate":"2021-10-16"},{"lineNumber":114,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":115,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":116,"author":{"gitId":"yongxiangng"},"content":"     * Returns true if an event with the same identity as {@code event} exists.","lastModifiedDate":"2021-10-16"},{"lineNumber":117,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":118,"author":{"gitId":"yongxiangng"},"content":"     * @param event The event to check.","lastModifiedDate":"2021-10-30"},{"lineNumber":119,"author":{"gitId":"yongxiangng"},"content":"     * @return true if list of events contains the event.","lastModifiedDate":"2021-10-30"},{"lineNumber":120,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":121,"author":{"gitId":"yongxiangng"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2021-10-16"},{"lineNumber":122,"author":{"gitId":"yongxiangng"},"content":"        requireNonNull(event);","lastModifiedDate":"2021-10-16"},{"lineNumber":123,"author":{"gitId":"yongxiangng"},"content":"        return events.contains(event);","lastModifiedDate":"2021-10-16"},{"lineNumber":124,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":125,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":126,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":127,"author":{"gitId":"yongxiangng"},"content":"     * Adds an event.","lastModifiedDate":"2021-10-16"},{"lineNumber":128,"author":{"gitId":"yongxiangng"},"content":"     * The event must not already exist.","lastModifiedDate":"2021-10-16"},{"lineNumber":129,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":130,"author":{"gitId":"yongxiangng"},"content":"     * @param e The event to be added.","lastModifiedDate":"2021-10-30"},{"lineNumber":131,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":132,"author":{"gitId":"yongxiangng"},"content":"    public void addEvent(Event e) {","lastModifiedDate":"2021-10-16"},{"lineNumber":133,"author":{"gitId":"yongxiangng"},"content":"        events.add(e);","lastModifiedDate":"2021-10-16"},{"lineNumber":134,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":135,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":136,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":137,"author":{"gitId":"yongxiangng"},"content":"     * Sets an event.","lastModifiedDate":"2021-10-30"},{"lineNumber":138,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":139,"author":{"gitId":"yongxiangng"},"content":"     * @param target The target event.","lastModifiedDate":"2021-10-30"},{"lineNumber":140,"author":{"gitId":"yongxiangng"},"content":"     * @param editedEvent The edited event.","lastModifiedDate":"2021-10-30"},{"lineNumber":141,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":142,"author":{"gitId":"yongxiangng"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2021-10-16"},{"lineNumber":143,"author":{"gitId":"yongxiangng"},"content":"        requireNonNull(editedEvent);","lastModifiedDate":"2021-10-16"},{"lineNumber":144,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":145,"author":{"gitId":"yongxiangng"},"content":"        events.setEvent(target, editedEvent);","lastModifiedDate":"2021-10-16"},{"lineNumber":146,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":147,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":148,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":149,"author":{"gitId":"yongxiangng"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2021-10-16"},{"lineNumber":150,"author":{"gitId":"yongxiangng"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2021-10-16"},{"lineNumber":151,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":152,"author":{"gitId":"yongxiangng"},"content":"     * @param key The event to remove.","lastModifiedDate":"2021-10-30"},{"lineNumber":153,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":154,"author":{"gitId":"yongxiangng"},"content":"    public void removeEvent(Event key) {","lastModifiedDate":"2021-10-16"},{"lineNumber":155,"author":{"gitId":"yongxiangng"},"content":"        events.remove(key);","lastModifiedDate":"2021-10-16"},{"lineNumber":156,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":157,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":158,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":159,"author":{"gitId":"yongxiangng"},"content":"     * Clears every entry from this {@code AddressBook}.","lastModifiedDate":"2021-10-30"},{"lineNumber":160,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":161,"author":{"gitId":"yongxiangng"},"content":"    public void clearAllEvents() {","lastModifiedDate":"2021-10-16"},{"lineNumber":162,"author":{"gitId":"yongxiangng"},"content":"        events.clearAllEvent();","lastModifiedDate":"2021-10-16"},{"lineNumber":163,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":164,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"yongxiangng"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\"","lastModifiedDate":"2021-10-16"},{"lineNumber":170,"author":{"gitId":"yongxiangng"},"content":"                + events.asUnmodifiableObservableList().size() + \" events\";","lastModifiedDate":"2021-10-16"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":175,"author":{"gitId":"yongxiangng"},"content":"    public List\u003cEvent\u003e getEvents(Predicate\u003cEvent\u003e eventPredicate) {","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"yongxiangng"},"content":"        return events.getEvents(eventPredicate);","lastModifiedDate":"2021-10-21"},{"lineNumber":177,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":178,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":179,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":180,"author":{"gitId":"yongxiangng"},"content":"    public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2021-10-16"},{"lineNumber":181,"author":{"gitId":"yongxiangng"},"content":"        return events.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-16"},{"lineNumber":182,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":183,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":184,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":185,"author":{"gitId":"yongxiangng"},"content":"    public List\u003cPerson\u003e getPersons(Predicate\u003cPerson\u003e personPredicate) {","lastModifiedDate":"2021-10-21"},{"lineNumber":186,"author":{"gitId":"yongxiangng"},"content":"        return persons.getPersons(personPredicate);","lastModifiedDate":"2021-10-21"},{"lineNumber":187,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":188,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":198,"author":{"gitId":"yongxiangng"},"content":"                \u0026\u0026 events.equals(((AddressBook) other).events)","lastModifiedDate":"2021-10-16"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":204,"author":{"gitId":"yongxiangng"},"content":"        return Objects.hash(events, persons);","lastModifiedDate":"2021-10-16"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yongxiangng":88,"-":118}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.event.EventNameEqualKeywordPredicate;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.person.NameEqualKeywordPredicate;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"    Predicate\u003cEvent\u003e PREDICATE_SHOW_ALL_EVENTS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"yongxiangng"},"content":"     * Returns a list of persons matching the person predicate passed.","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":90,"author":{"gitId":"yongxiangng"},"content":"     * @param personPredicate The predicate used to match persons retrieved.","lastModifiedDate":"2021-10-30"},{"lineNumber":91,"author":{"gitId":"yongxiangng"},"content":"     * @return List of person matching the predicate.","lastModifiedDate":"2021-10-30"},{"lineNumber":92,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"yongxiangng"},"content":"    List\u003cPerson\u003e getPersons(Predicate\u003cPerson\u003e personPredicate);","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":104,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":105,"author":{"gitId":"yongxiangng"},"content":"     * Returns true if an event with the same identity as {@code event} exists.","lastModifiedDate":"2021-10-16"},{"lineNumber":106,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":107,"author":{"gitId":"yongxiangng"},"content":"     * @param event The event to check.","lastModifiedDate":"2021-10-30"},{"lineNumber":108,"author":{"gitId":"yongxiangng"},"content":"     * @return true if event exists.","lastModifiedDate":"2021-10-30"},{"lineNumber":109,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"yongxiangng"},"content":"    boolean hasEvent(Event event);","lastModifiedDate":"2021-10-16"},{"lineNumber":111,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":112,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":113,"author":{"gitId":"yongxiangng"},"content":"     * Deletes the given event.","lastModifiedDate":"2021-10-16"},{"lineNumber":114,"author":{"gitId":"yongxiangng"},"content":"     * The event must exist in the address book.","lastModifiedDate":"2021-10-16"},{"lineNumber":115,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":116,"author":{"gitId":"yongxiangng"},"content":"     * @param target The event to be deleted.","lastModifiedDate":"2021-10-30"},{"lineNumber":117,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":118,"author":{"gitId":"yongxiangng"},"content":"    void deleteEvent(Event target);","lastModifiedDate":"2021-10-16"},{"lineNumber":119,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":120,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":121,"author":{"gitId":"yongxiangng"},"content":"     * Clears all events from the address book.","lastModifiedDate":"2021-10-16"},{"lineNumber":122,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":123,"author":{"gitId":"yongxiangng"},"content":"    void clearAllEvent();","lastModifiedDate":"2021-10-16"},{"lineNumber":124,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":125,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":126,"author":{"gitId":"yongxiangng"},"content":"     * Adds the given event.","lastModifiedDate":"2021-10-16"},{"lineNumber":127,"author":{"gitId":"yongxiangng"},"content":"     * {@code event} must not already exist in the address book.","lastModifiedDate":"2021-10-16"},{"lineNumber":128,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":129,"author":{"gitId":"yongxiangng"},"content":"     * @param event The event to be added.","lastModifiedDate":"2021-10-30"},{"lineNumber":130,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":131,"author":{"gitId":"yongxiangng"},"content":"    void addEvent(Event event);","lastModifiedDate":"2021-10-16"},{"lineNumber":132,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":133,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":134,"author":{"gitId":"yongxiangng"},"content":"     * Replaces the given {@code target} with {@code editedEvent}.","lastModifiedDate":"2021-10-16"},{"lineNumber":135,"author":{"gitId":"yongxiangng"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-10-16"},{"lineNumber":136,"author":{"gitId":"yongxiangng"},"content":"     * The event identity of {@code editedEvent} must not be the same as another existing event in the address book.","lastModifiedDate":"2021-10-16"},{"lineNumber":137,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":138,"author":{"gitId":"yongxiangng"},"content":"     * @param target The target event.","lastModifiedDate":"2021-10-30"},{"lineNumber":139,"author":{"gitId":"yongxiangng"},"content":"     * @param editedEvent The edited event.","lastModifiedDate":"2021-10-30"},{"lineNumber":140,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":141,"author":{"gitId":"yongxiangng"},"content":"    void setEvent(Event target, Event editedEvent);","lastModifiedDate":"2021-10-16"},{"lineNumber":142,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":143,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"yongxiangng"},"content":"     * Returns a list of events matching the event predicate passed.","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":146,"author":{"gitId":"yongxiangng"},"content":"     * @param eventPredicate The predicate used to match events retrieved.","lastModifiedDate":"2021-10-30"},{"lineNumber":147,"author":{"gitId":"yongxiangng"},"content":"     * @return List of events matching the predicate.","lastModifiedDate":"2021-10-30"},{"lineNumber":148,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"yongxiangng"},"content":"    List\u003cEvent\u003e getEvents(Predicate\u003cEvent\u003e eventPredicate);","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":151,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":152,"author":{"gitId":"yongxiangng"},"content":"     * Returns an unmodifiable view of the filtered event list","lastModifiedDate":"2021-10-30"},{"lineNumber":153,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":154,"author":{"gitId":"yongxiangng"},"content":"     * @return Filtered event list.","lastModifiedDate":"2021-10-30"},{"lineNumber":155,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":156,"author":{"gitId":"yongxiangng"},"content":"    ObservableList\u003cEvent\u003e getFilteredEventList();","lastModifiedDate":"2021-10-16"},{"lineNumber":157,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":158,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":159,"author":{"gitId":"yongxiangng"},"content":"     * Updates the filter of the filtered event list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-16"},{"lineNumber":160,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":161,"author":{"gitId":"yongxiangng"},"content":"     * @param predicate The predicate to filter with.","lastModifiedDate":"2021-10-30"},{"lineNumber":162,"author":{"gitId":"yongxiangng"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-10-16"},{"lineNumber":163,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":164,"author":{"gitId":"yongxiangng"},"content":"    void updateFilteredEventList(Predicate\u003cEvent\u003e predicate);","lastModifiedDate":"2021-10-16"},{"lineNumber":165,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":166,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":167,"author":{"gitId":"yongxiangng"},"content":"     * Adds a person to a specified event. Since event name and name are unique, there should only be 1 event and","lastModifiedDate":"2021-10-27"},{"lineNumber":168,"author":{"gitId":"yongxiangng"},"content":"     * name matched.","lastModifiedDate":"2021-10-27"},{"lineNumber":169,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":170,"author":{"gitId":"yongxiangng"},"content":"     * @param personPredicate Person predicate to match Person.","lastModifiedDate":"2021-10-30"},{"lineNumber":171,"author":{"gitId":"yongxiangng"},"content":"     * @param eventPredicate Event predicate to match event.","lastModifiedDate":"2021-10-30"},{"lineNumber":172,"author":{"gitId":"yongxiangng"},"content":"     * @throws PersonNotFoundException if {@code Person} does not exist in address book.","lastModifiedDate":"2021-10-27"},{"lineNumber":173,"author":{"gitId":"yongxiangng"},"content":"     * @throws EventNotFoundException if {@code Event} does not exist in address book.","lastModifiedDate":"2021-10-27"},{"lineNumber":174,"author":{"gitId":"yongxiangng"},"content":"     * @throws DuplicatePersonException if {@code Person} already exists in event.","lastModifiedDate":"2021-10-27"},{"lineNumber":175,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":176,"author":{"gitId":"yongxiangng"},"content":"    void addPersonToEvent(NameEqualKeywordPredicate personPredicate, EventNameEqualKeywordPredicate eventPredicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"yongxiangng":90,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.event.EventNameEqualKeywordPredicate;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.person.NameEqualKeywordPredicate;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"yongxiangng"},"content":"    private final FilteredList\u003cEvent\u003e filteredEvents;","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"yongxiangng"},"content":"        filteredEvents \u003d new FilteredList\u003c\u003e(this.addressBook.getEventList());","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":124,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"yongxiangng"},"content":"    public List\u003cPerson\u003e getPersons(Predicate\u003cPerson\u003e personPredicate) {","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"yongxiangng"},"content":"        return this.addressBook.getPersons(personPredicate);","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":130,"author":{"gitId":"yongxiangng"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2021-10-16"},{"lineNumber":131,"author":{"gitId":"yongxiangng"},"content":"        requireNonNull(event);","lastModifiedDate":"2021-10-16"},{"lineNumber":132,"author":{"gitId":"yongxiangng"},"content":"        return addressBook.hasEvent(event);","lastModifiedDate":"2021-10-16"},{"lineNumber":133,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":134,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":135,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":136,"author":{"gitId":"yongxiangng"},"content":"    public void deleteEvent(Event target) {","lastModifiedDate":"2021-10-16"},{"lineNumber":137,"author":{"gitId":"yongxiangng"},"content":"        addressBook.removeEvent(target);","lastModifiedDate":"2021-10-16"},{"lineNumber":138,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":139,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":140,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":141,"author":{"gitId":"yongxiangng"},"content":"    public void clearAllEvent() {","lastModifiedDate":"2021-10-16"},{"lineNumber":142,"author":{"gitId":"yongxiangng"},"content":"        addressBook.clearAllEvents();","lastModifiedDate":"2021-10-16"},{"lineNumber":143,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":144,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":145,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":146,"author":{"gitId":"yongxiangng"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2021-10-16"},{"lineNumber":147,"author":{"gitId":"yongxiangng"},"content":"        addressBook.addEvent(event);","lastModifiedDate":"2021-10-16"},{"lineNumber":148,"author":{"gitId":"yongxiangng"},"content":"        updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2021-10-16"},{"lineNumber":149,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":150,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":151,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":152,"author":{"gitId":"yongxiangng"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2021-10-16"},{"lineNumber":153,"author":{"gitId":"yongxiangng"},"content":"        requireAllNonNull(target, editedEvent);","lastModifiedDate":"2021-10-16"},{"lineNumber":154,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":155,"author":{"gitId":"yongxiangng"},"content":"        addressBook.setEvent(target, editedEvent);","lastModifiedDate":"2021-10-16"},{"lineNumber":156,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":157,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":158,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"yongxiangng"},"content":"    public List\u003cEvent\u003e getEvents(Predicate\u003cEvent\u003e eventPredicate) {","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"yongxiangng"},"content":"        return this.addressBook.getEvents(eventPredicate);","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":180,"author":{"gitId":"yongxiangng"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Event List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":181,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":182,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":183,"author":{"gitId":"yongxiangng"},"content":"     * Returns an unmodifiable view of the list of {@code Event} backed by the internal list of","lastModifiedDate":"2021-10-16"},{"lineNumber":184,"author":{"gitId":"yongxiangng"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2021-10-16"},{"lineNumber":185,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":186,"author":{"gitId":"yongxiangng"},"content":"     * @return The filtered list of events.","lastModifiedDate":"2021-10-30"},{"lineNumber":187,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":188,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":189,"author":{"gitId":"yongxiangng"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2021-10-16"},{"lineNumber":190,"author":{"gitId":"yongxiangng"},"content":"        return filteredEvents;","lastModifiedDate":"2021-10-16"},{"lineNumber":191,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":192,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":193,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":194,"author":{"gitId":"yongxiangng"},"content":"    public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2021-10-16"},{"lineNumber":195,"author":{"gitId":"yongxiangng"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-16"},{"lineNumber":196,"author":{"gitId":"yongxiangng"},"content":"        filteredEvents.setPredicate(predicate);","lastModifiedDate":"2021-10-16"},{"lineNumber":197,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":198,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":199,"author":{"gitId":"yongxiangng"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Event and Person methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":200,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":201,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":202,"author":{"gitId":"yongxiangng"},"content":"    public void addPersonToEvent(NameEqualKeywordPredicate personPredicate,","lastModifiedDate":"2021-10-27"},{"lineNumber":203,"author":{"gitId":"yongxiangng"},"content":"                                 EventNameEqualKeywordPredicate eventPredicate) {","lastModifiedDate":"2021-10-27"},{"lineNumber":204,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":205,"author":{"gitId":"yongxiangng"},"content":"        List\u003cPerson\u003e personsMatched \u003d getPersons(personPredicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":206,"author":{"gitId":"yongxiangng"},"content":"        List\u003cEvent\u003e eventsMatched \u003d getEvents(eventPredicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":207,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":208,"author":{"gitId":"yongxiangng"},"content":"        assert personsMatched.size() \u003c 2;","lastModifiedDate":"2021-10-27"},{"lineNumber":209,"author":{"gitId":"yongxiangng"},"content":"        assert eventsMatched.size() \u003c 2;","lastModifiedDate":"2021-10-27"},{"lineNumber":210,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":211,"author":{"gitId":"yongxiangng"},"content":"        if (personsMatched.isEmpty()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":212,"author":{"gitId":"yongxiangng"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2021-10-27"},{"lineNumber":213,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":214,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":215,"author":{"gitId":"yongxiangng"},"content":"        if (eventsMatched.isEmpty()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":216,"author":{"gitId":"yongxiangng"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2021-10-27"},{"lineNumber":217,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":218,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":219,"author":{"gitId":"yongxiangng"},"content":"        Person toAdd \u003d personsMatched.get(0);","lastModifiedDate":"2021-10-27"},{"lineNumber":220,"author":{"gitId":"yongxiangng"},"content":"        Event target \u003d eventsMatched.get(0);","lastModifiedDate":"2021-10-27"},{"lineNumber":221,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":222,"author":{"gitId":"yongxiangng"},"content":"        if (target.hasPerson(toAdd)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":223,"author":{"gitId":"yongxiangng"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2021-10-27"},{"lineNumber":224,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":225,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":226,"author":{"gitId":"yongxiangng"},"content":"        target.addPerson(toAdd);","lastModifiedDate":"2021-10-27"},{"lineNumber":227,"author":{"gitId":"yongxiangng"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-27"},{"lineNumber":228,"author":{"gitId":"yongxiangng"},"content":"        updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2021-10-27"},{"lineNumber":229,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":230,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yongxiangng":99,"-":151}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"     * Returns a list of events matching the predicate given.","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"     * @param eventPredicate The predicate used to match the events.","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"     * @return The list of events.","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"    List\u003cEvent\u003e getEvents(Predicate\u003cEvent\u003e eventPredicate);","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"     * Returns an unmodifiable view of the events list.","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":"     * This list will not contain any duplicate events.","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"yongxiangng"},"content":"     * @return An observable list of events.","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"yongxiangng"},"content":"    ObservableList\u003cEvent\u003e getEventList();","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"yongxiangng"},"content":"     * Returns a list of persons matching the predicate given.","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"yongxiangng"},"content":"     * @param personPredicate The predicate used to match the persons.","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"     * @return The list of persons.","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"yongxiangng"},"content":"    List\u003cPerson\u003e getPersons(Predicate\u003cPerson\u003e personPredicate);","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yongxiangng":28,"-":17}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"IceWizard4902"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"foryourinterest.json\");","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"IceWizard4902":1,"-":86}},{"path":"src/main/java/seedu/address/model/event/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"/**","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":" * Represents an Event in ForYourInterest.","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":" * Guarantees: event name is not null.","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":" */","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"public class Event {","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"    // Identity fields","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"    private final EventName eventName;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"    // Data fields","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"    private final UniquePersonList attendees;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"     * Creates an event.","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"yongxiangng"},"content":"     * @param eventName the event name to be used.","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"yongxiangng"},"content":"    public Event(EventName eventName) {","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"yongxiangng"},"content":"        requireAllNonNull(eventName);","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"yongxiangng"},"content":"        this.eventName \u003d eventName;","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"yongxiangng"},"content":"        this.attendees \u003d new UniquePersonList();","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"     * Creates an event.","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"yongxiangng"},"content":"     * @param eventName the event name to be used.","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"yongxiangng"},"content":"     * @param attendees the attendees to be used.","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"yongxiangng"},"content":"    public Event(EventName eventName, UniquePersonList attendees) {","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"yongxiangng"},"content":"        requireAllNonNull(eventName, attendees);","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"yongxiangng"},"content":"        this.eventName \u003d eventName;","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"yongxiangng"},"content":"        this.attendees \u003d attendees;","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"yongxiangng"},"content":"     * Returns the event name.","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"yongxiangng"},"content":"     * @return The event name.","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"yongxiangng"},"content":"    public EventName getEventName() {","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"yongxiangng"},"content":"        requireAllNonNull(eventName);","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"yongxiangng"},"content":"        return eventName.copy();","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":57,"author":{"gitId":"yongxiangng"},"content":"     * Returns the attendee list as an unmodifiable observer list.","lastModifiedDate":"2021-10-30"},{"lineNumber":58,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":59,"author":{"gitId":"yongxiangng"},"content":"     * @return Unmodifiable observable list.","lastModifiedDate":"2021-10-30"},{"lineNumber":60,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":61,"author":{"gitId":"yongxiangng"},"content":"    public ObservableList\u003cPerson\u003e getAttendeesAsUnmodifiableObservableList() {","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"yongxiangng"},"content":"        requireAllNonNull(attendees);","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"yongxiangng"},"content":"        return attendees.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"yongxiangng"},"content":"     * Returns a copy of attendee list.","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":69,"author":{"gitId":"yongxiangng"},"content":"     * @return A copy of the attendee list.","lastModifiedDate":"2021-10-30"},{"lineNumber":70,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"yongxiangng"},"content":"    public UniquePersonList getAttendees() {","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"yongxiangng"},"content":"        requireAllNonNull(attendees);","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"yongxiangng"},"content":"        UniquePersonList newList \u003d new UniquePersonList();","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"yongxiangng"},"content":"        newList.setPersons(attendees);","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"yongxiangng"},"content":"        return newList;","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"yongxiangng"},"content":"     * Returns true if event contains and equivalent person as the given argument.","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":81,"author":{"gitId":"yongxiangng"},"content":"     * @param person The person to check.","lastModifiedDate":"2021-10-30"},{"lineNumber":82,"author":{"gitId":"yongxiangng"},"content":"     * @return true if event contains and equivalent person as the given argument.","lastModifiedDate":"2021-10-30"},{"lineNumber":83,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"yongxiangng"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"yongxiangng"},"content":"        requireAllNonNull(person);","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"yongxiangng"},"content":"        return attendees.contains(person);","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"yongxiangng"},"content":"     * Adds a {@code Person} as an attendee to the event.","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":92,"author":{"gitId":"yongxiangng"},"content":"     * @param person The person to be added.","lastModifiedDate":"2021-10-30"},{"lineNumber":93,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"yongxiangng"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"yongxiangng"},"content":"        requireAllNonNull(person);","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"yongxiangng"},"content":"        attendees.add(person);","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"yongxiangng"},"content":"     * Removes a {@code Person} as an attendee to the event.","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":102,"author":{"gitId":"yongxiangng"},"content":"     * @param person The person to be removed.","lastModifiedDate":"2021-10-30"},{"lineNumber":103,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"yongxiangng"},"content":"    public void removePerson(Person person) {","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"yongxiangng"},"content":"        requireAllNonNull(person);","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"yongxiangng"},"content":"        attendees.remove(person);","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"yongxiangng"},"content":"     * Returns true if both events have the same event name.","lastModifiedDate":"2021-10-16"},{"lineNumber":111,"author":{"gitId":"yongxiangng"},"content":"     * This defines a weaker notion of equality between two events.","lastModifiedDate":"2021-10-16"},{"lineNumber":112,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":113,"author":{"gitId":"yongxiangng"},"content":"     * @param otherEvent The other event to compare with.","lastModifiedDate":"2021-10-30"},{"lineNumber":114,"author":{"gitId":"yongxiangng"},"content":"     * @return true if both events have same event name.","lastModifiedDate":"2021-10-30"},{"lineNumber":115,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":116,"author":{"gitId":"yongxiangng"},"content":"    public boolean isSameEvent(Event otherEvent) {","lastModifiedDate":"2021-10-16"},{"lineNumber":117,"author":{"gitId":"yongxiangng"},"content":"        if (otherEvent \u003d\u003d this) {","lastModifiedDate":"2021-10-16"},{"lineNumber":118,"author":{"gitId":"yongxiangng"},"content":"            return true;","lastModifiedDate":"2021-10-16"},{"lineNumber":119,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":120,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":121,"author":{"gitId":"yongxiangng"},"content":"        return otherEvent !\u003d null","lastModifiedDate":"2021-10-16"},{"lineNumber":122,"author":{"gitId":"yongxiangng"},"content":"                \u0026\u0026 otherEvent.getEventName().equals(getEventName());","lastModifiedDate":"2021-10-16"},{"lineNumber":123,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":124,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":125,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":126,"author":{"gitId":"yongxiangng"},"content":"     * Returns true if both events have the same identity and data fields.","lastModifiedDate":"2021-10-16"},{"lineNumber":127,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":128,"author":{"gitId":"yongxiangng"},"content":"     * @param other The other object to compare with.","lastModifiedDate":"2021-10-30"},{"lineNumber":129,"author":{"gitId":"yongxiangng"},"content":"     * @return true if both events have the same identity and data fields.","lastModifiedDate":"2021-10-30"},{"lineNumber":130,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":131,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":132,"author":{"gitId":"yongxiangng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-16"},{"lineNumber":133,"author":{"gitId":"yongxiangng"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-16"},{"lineNumber":134,"author":{"gitId":"yongxiangng"},"content":"            return true;","lastModifiedDate":"2021-10-16"},{"lineNumber":135,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":136,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":137,"author":{"gitId":"yongxiangng"},"content":"        if (!(other instanceof Event)) {","lastModifiedDate":"2021-10-16"},{"lineNumber":138,"author":{"gitId":"yongxiangng"},"content":"            return false;","lastModifiedDate":"2021-10-16"},{"lineNumber":139,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":140,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":141,"author":{"gitId":"yongxiangng"},"content":"        Event otherEvent \u003d (Event) other;","lastModifiedDate":"2021-10-16"},{"lineNumber":142,"author":{"gitId":"yongxiangng"},"content":"        return otherEvent.getEventName().equals(getEventName())","lastModifiedDate":"2021-10-21"},{"lineNumber":143,"author":{"gitId":"yongxiangng"},"content":"                \u0026\u0026 otherEvent.getAttendees().equals(getAttendees());","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":145,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":146,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":147,"author":{"gitId":"yongxiangng"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-16"},{"lineNumber":148,"author":{"gitId":"yongxiangng"},"content":"        return Objects.hash(eventName, attendees);","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":150,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":151,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":152,"author":{"gitId":"yongxiangng"},"content":"    public String toString() {","lastModifiedDate":"2021-10-16"},{"lineNumber":153,"author":{"gitId":"yongxiangng"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-16"},{"lineNumber":154,"author":{"gitId":"yongxiangng"},"content":"        builder.append(getEventName());","lastModifiedDate":"2021-10-16"},{"lineNumber":155,"author":{"gitId":"yongxiangng"},"content":"        if (!attendees.isEmpty()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"yongxiangng"},"content":"            builder.append(\"; Attendees: \");","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"yongxiangng"},"content":"            attendees.forEach(builder::append);","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"yongxiangng"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-16"},{"lineNumber":160,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":161,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"yongxiangng":161}},{"path":"src/main/java/seedu/address/model/event/EventName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"/**","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":" * Represents an Event\u0027s name in the ForYourInterest.","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEventName(String)}","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":" */","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"public class EventName {","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"            \"Event names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"    /*","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"     * The first character of the event name must not be a whitespace,","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"    public final String eventName;","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"     * Constructs a {@code EventName}.","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"yongxiangng"},"content":"     * @param eventName A valid event name.","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"yongxiangng"},"content":"    public EventName(String eventName) {","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"yongxiangng"},"content":"        requireNonNull(eventName);","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"yongxiangng"},"content":"        checkArgument(isValidEventName(eventName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"yongxiangng"},"content":"        this.eventName \u003d eventName;","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"     * Returns a copy of the {@code EventName}.","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"yongxiangng"},"content":"     * @return A copy of the event name.","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"yongxiangng"},"content":"    public EventName copy() {","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"yongxiangng"},"content":"        return new EventName(eventName);","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"yongxiangng"},"content":"     * Returns true if a given string is a valid event name.","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"yongxiangng"},"content":"     * @param test The event name to test.","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"yongxiangng"},"content":"     * @return true if string is valid name.","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"yongxiangng"},"content":"    public static boolean isValidEventName(String test) {","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"yongxiangng"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"yongxiangng"},"content":"    public String toString() {","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"yongxiangng"},"content":"        return eventName;","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"yongxiangng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"yongxiangng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"yongxiangng"},"content":"                || (other instanceof EventName // instanceof handles nulls","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"yongxiangng"},"content":"                \u0026\u0026 eventName.equals(((EventName) other).eventName)); // state check","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"yongxiangng"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"yongxiangng"},"content":"        return eventName.hashCode();","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"yongxiangng":71}},{"path":"src/main/java/seedu/address/model/event/EventNameEqualKeywordPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":" * Tests that an {@code Event}\u0027s {@code EventName} matches the keyword given exactly.","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"public class EventNameEqualKeywordPredicate implements Predicate\u003cEvent\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"    private final EventName keyword;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"     * Creates a EventNameEqualKeywordPredicate object with the keyword.","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"     * @param keyword The keyword to be used in the predicate.","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"    public EventNameEqualKeywordPredicate(EventName keyword) {","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"    public boolean test(Event event) {","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"        return keyword.equals(event.getEventName());","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"yongxiangng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"yongxiangng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"yongxiangng"},"content":"                || (other instanceof EventNameEqualKeywordPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"yongxiangng"},"content":"                \u0026\u0026 keyword.equals(((EventNameEqualKeywordPredicate) other).keyword)); // state check","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"yongxiangng"},"content":"    public String toString() {","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"yongxiangng"},"content":"        return this.keyword.toString();","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"yongxiangng":37}},{"path":"src/main/java/seedu/address/model/event/UniqueEventList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"import java.util.List;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.event.exceptions.DuplicateEventException;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"/**","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":" * A list of events that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":" * An event is considered unique by comparing using {@code Event#isSameEvent(Event)}. As such, adding and updating of","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":" * events uses Event#isSameEvent(Event) for equality so as to ensure that the event being added or updated is","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":" * unique in terms of identity in the UniqueEventList. However, the removal of a event uses Event#equals(Object) so","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":" * as to ensure that the event with exactly the same fields will be removed.","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":" *","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":" *","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":" * @see Event#isSameEvent(Event)","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":" */","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"yongxiangng"},"content":"public class UniqueEventList implements Iterable\u003cEvent\u003e {","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"yongxiangng"},"content":"    private final ObservableList\u003cEvent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"yongxiangng"},"content":"    private final ObservableList\u003cEvent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"yongxiangng"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"yongxiangng"},"content":"     * Returns true if the list contains an equivalent event as the given argument.","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"     * @param toCheck The event to check.","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"yongxiangng"},"content":"     * @return true is list contains equivalent event.","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"yongxiangng"},"content":"    public boolean contains(Event toCheck) {","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"yongxiangng"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"yongxiangng"},"content":"        return internalList.stream().anyMatch(toCheck::isSameEvent);","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"yongxiangng"},"content":"     * Adds an event to the list. The event must not already exist in the list.","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"yongxiangng"},"content":"     * @param toAdd The event to add.","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"yongxiangng"},"content":"    public void add(Event toAdd) {","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"yongxiangng"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"yongxiangng"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"yongxiangng"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"yongxiangng"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"yongxiangng"},"content":"     * Replaces the event {@code target} in the list with {@code editedEvent}.","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"yongxiangng"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"yongxiangng"},"content":"     * The event identity of {@code editedEvent} must not be the same as another existing event in the list.","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":61,"author":{"gitId":"yongxiangng"},"content":"     * @param target The target event.","lastModifiedDate":"2021-10-30"},{"lineNumber":62,"author":{"gitId":"yongxiangng"},"content":"     * @param editedEvent The edited event.","lastModifiedDate":"2021-10-30"},{"lineNumber":63,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"yongxiangng"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"yongxiangng"},"content":"        requireAllNonNull(target, editedEvent);","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"yongxiangng"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"yongxiangng"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"yongxiangng"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"yongxiangng"},"content":"        if (!target.isSameEvent(editedEvent) \u0026\u0026 contains(editedEvent)) {","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"yongxiangng"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"yongxiangng"},"content":"        internalList.set(index, editedEvent);","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":79,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":80,"author":{"gitId":"yongxiangng"},"content":"     * Removes the equivalent event from the list.","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"yongxiangng"},"content":"     * The event must exist in the list.","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":83,"author":{"gitId":"yongxiangng"},"content":"     * @param toRemove The event to be removed from the list.","lastModifiedDate":"2021-10-30"},{"lineNumber":84,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"yongxiangng"},"content":"    public void remove(Event toRemove) {","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"yongxiangng"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"yongxiangng"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-16"},{"lineNumber":88,"author":{"gitId":"yongxiangng"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2021-10-16"},{"lineNumber":89,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":90,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":92,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"yongxiangng"},"content":"     * Clears every event from the list.","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"yongxiangng"},"content":"    public void clearAllEvent() {","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"yongxiangng"},"content":"        internalList.clear();","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":98,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":99,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":100,"author":{"gitId":"yongxiangng"},"content":"     * Sets the events in the list.","lastModifiedDate":"2021-10-30"},{"lineNumber":101,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":102,"author":{"gitId":"yongxiangng"},"content":"     * @param replacement The list of events to replace the current list.","lastModifiedDate":"2021-10-30"},{"lineNumber":103,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":104,"author":{"gitId":"yongxiangng"},"content":"    public void setEvents(UniqueEventList replacement) {","lastModifiedDate":"2021-10-16"},{"lineNumber":105,"author":{"gitId":"yongxiangng"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-16"},{"lineNumber":106,"author":{"gitId":"yongxiangng"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-16"},{"lineNumber":107,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":109,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"yongxiangng"},"content":"     * Replaces the content of the list with {@code events}. {@code events} must not contain duplicate events.","lastModifiedDate":"2021-10-30"},{"lineNumber":111,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":112,"author":{"gitId":"yongxiangng"},"content":"     * @param events The list of events to replace the current list.","lastModifiedDate":"2021-10-30"},{"lineNumber":113,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":114,"author":{"gitId":"yongxiangng"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2021-10-16"},{"lineNumber":115,"author":{"gitId":"yongxiangng"},"content":"        requireAllNonNull(events);","lastModifiedDate":"2021-10-16"},{"lineNumber":116,"author":{"gitId":"yongxiangng"},"content":"        if (!eventsAreUnique(events)) {","lastModifiedDate":"2021-10-16"},{"lineNumber":117,"author":{"gitId":"yongxiangng"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2021-10-16"},{"lineNumber":118,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":119,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":120,"author":{"gitId":"yongxiangng"},"content":"        internalList.setAll(events);","lastModifiedDate":"2021-10-16"},{"lineNumber":121,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":122,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":123,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":124,"author":{"gitId":"yongxiangng"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-16"},{"lineNumber":125,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":126,"author":{"gitId":"yongxiangng"},"content":"     * @return Unmodifiable observable list.","lastModifiedDate":"2021-10-30"},{"lineNumber":127,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":128,"author":{"gitId":"yongxiangng"},"content":"    public ObservableList\u003cEvent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-16"},{"lineNumber":129,"author":{"gitId":"yongxiangng"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-16"},{"lineNumber":130,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":131,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":132,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":133,"author":{"gitId":"yongxiangng"},"content":"     * Returns a list of events matching the predicate.","lastModifiedDate":"2021-10-30"},{"lineNumber":134,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":135,"author":{"gitId":"yongxiangng"},"content":"     * @param eventPredicate The predicate to match.","lastModifiedDate":"2021-10-30"},{"lineNumber":136,"author":{"gitId":"yongxiangng"},"content":"     * @return The list of events matching the predicate.","lastModifiedDate":"2021-10-30"},{"lineNumber":137,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":138,"author":{"gitId":"yongxiangng"},"content":"    public List\u003cEvent\u003e getEvents(Predicate\u003cEvent\u003e eventPredicate) {","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"yongxiangng"},"content":"        return internalUnmodifiableList.filtered(eventPredicate);","lastModifiedDate":"2021-10-21"},{"lineNumber":140,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":143,"author":{"gitId":"yongxiangng"},"content":"    public Iterator\u003cEvent\u003e iterator() {","lastModifiedDate":"2021-10-16"},{"lineNumber":144,"author":{"gitId":"yongxiangng"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-16"},{"lineNumber":145,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":146,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":147,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":148,"author":{"gitId":"yongxiangng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-16"},{"lineNumber":149,"author":{"gitId":"yongxiangng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-16"},{"lineNumber":150,"author":{"gitId":"yongxiangng"},"content":"                || (other instanceof UniqueEventList // instanceof handles nulls","lastModifiedDate":"2021-10-16"},{"lineNumber":151,"author":{"gitId":"yongxiangng"},"content":"                \u0026\u0026 internalList.equals(((UniqueEventList) other).internalList));","lastModifiedDate":"2021-10-16"},{"lineNumber":152,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":153,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":154,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":155,"author":{"gitId":"yongxiangng"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-16"},{"lineNumber":156,"author":{"gitId":"yongxiangng"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-16"},{"lineNumber":157,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":158,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":159,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":160,"author":{"gitId":"yongxiangng"},"content":"     * Returns true if {@code events} contains only unique events.","lastModifiedDate":"2021-10-16"},{"lineNumber":161,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":162,"author":{"gitId":"yongxiangng"},"content":"     * @param events List of events to check.","lastModifiedDate":"2021-10-30"},{"lineNumber":163,"author":{"gitId":"yongxiangng"},"content":"     * @return true if list contains unique events.","lastModifiedDate":"2021-10-30"},{"lineNumber":164,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":165,"author":{"gitId":"yongxiangng"},"content":"    private boolean eventsAreUnique(List\u003cEvent\u003e events) {","lastModifiedDate":"2021-10-16"},{"lineNumber":166,"author":{"gitId":"yongxiangng"},"content":"        for (int i \u003d 0; i \u003c events.size() - 1; i++) {","lastModifiedDate":"2021-10-16"},{"lineNumber":167,"author":{"gitId":"yongxiangng"},"content":"            for (int j \u003d i + 1; j \u003c events.size(); j++) {","lastModifiedDate":"2021-10-16"},{"lineNumber":168,"author":{"gitId":"yongxiangng"},"content":"                if (events.get(i).isSameEvent(events.get(j))) {","lastModifiedDate":"2021-10-16"},{"lineNumber":169,"author":{"gitId":"yongxiangng"},"content":"                    return false;","lastModifiedDate":"2021-10-16"},{"lineNumber":170,"author":{"gitId":"yongxiangng"},"content":"                }","lastModifiedDate":"2021-10-16"},{"lineNumber":171,"author":{"gitId":"yongxiangng"},"content":"            }","lastModifiedDate":"2021-10-16"},{"lineNumber":172,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":173,"author":{"gitId":"yongxiangng"},"content":"        return true;","lastModifiedDate":"2021-10-16"},{"lineNumber":174,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":175,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"yongxiangng":175}},{"path":"src/main/java/seedu/address/model/event/exceptions/DuplicateEventException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"package seedu.address.model.event.exceptions;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"/**","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":" * Signals that the operation will result in duplicate Events (Events are considered duplicates if they have the same","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":" * identity).","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":" */","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"public class DuplicateEventException extends RuntimeException {","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"    public DuplicateEventException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"        super(\"Operation would result in duplicate events\");","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"yongxiangng":11}},{"path":"src/main/java/seedu/address/model/event/exceptions/EventNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"package seedu.address.model.event.exceptions;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"/**","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":" * Signals that the operation is unable to find the specified event.","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":" */","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"public class EventNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"yongxiangng":6}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"    public static final String UNSPECIFIED_INPUT \u003d \"No email address specified\";","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"        if (email.equals(UNSPECIFIED_INPUT)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"            value \u003d UNSPECIFIED_INPUT;","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"        } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ryanongra":4,"-":72}},{"path":"src/main/java/seedu/address/model/person/MatchesKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dannytayjy"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"dannytayjy"},"content":"import java.util.List;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"dannytayjy"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"dannytayjy"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"dannytayjy"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"dannytayjy"},"content":" * Tests that a {@code Person}\u0027s {@code Name}, {@code Phone}, {@code Email} or","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"dannytayjy"},"content":" * {@code Telegram Handle} matches any of the keywords given.","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"dannytayjy"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"public class MatchesKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"dannytayjy"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"dannytayjy"},"content":"    public MatchesKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"dannytayjy"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"dannytayjy"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"dannytayjy"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"dannytayjy"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"dannytayjy"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().toString(), keyword)","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"dannytayjy"},"content":"                        || StringUtil.containsWordIgnoreCase(person.getPhone().toString(), keyword)","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"dannytayjy"},"content":"                        || StringUtil.containsWordIgnoreCase(person.getEmail().toString(), keyword)","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"dannytayjy"},"content":"                        || StringUtil.containsWordIgnoreCase(person.getTelegram().toString(), keyword));","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"dannytayjy"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"dannytayjy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"dannytayjy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"dannytayjy"},"content":"                || (other instanceof MatchesKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"dannytayjy"},"content":"                \u0026\u0026 keywords.equals(((MatchesKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"dannytayjy"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"dannytayjy"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"dannytayjy":35}},{"path":"src/main/java/seedu/address/model/person/NameEqualKeywordPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches the keyword given exactly.","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"public class NameEqualKeywordPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"    private final Name keyword;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"     * Creates a NameEqualsKeywordPredicate object with the keyword.","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"     * @param keyword The keyword to be used in the predicate.","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"    public NameEqualKeywordPredicate(Name keyword) {","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"        return keyword.equals(person.getName());","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"yongxiangng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"yongxiangng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"yongxiangng"},"content":"                || (other instanceof NameEqualKeywordPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"yongxiangng"},"content":"                \u0026\u0026 keyword.equals(((NameEqualKeywordPredicate) other).keyword)); // state check","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"yongxiangng"},"content":"    public String toString() {","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"yongxiangng"},"content":"        return this.keyword.toString();","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"yongxiangng":37}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":" * Represents a Person in the telegram book.","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"    private final Telegram telegram;","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"    public Person(Name name, Phone phone, Email email, Telegram telegram, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"        requireAllNonNull(name, phone, email, telegram, tags);","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"        this.telegram \u003d telegram;","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"ryanongra"},"content":"    public Telegram getTelegram() {","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"ryanongra"},"content":"        return telegram;","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":94,"author":{"gitId":"ryanongra"},"content":"                \u0026\u0026 otherPerson.getTelegram().equals(getTelegram())","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"ryanongra"},"content":"        return Objects.hash(name, phone, email, telegram, tags);","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"ryanongra"},"content":"                .append(\"; Telegram: \")","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"ryanongra"},"content":"                .append(getTelegram());","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ryanongra":11,"-":112}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"    public static final String UNSPECIFIED_INPUT \u003d \"No phone number specified\";","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"        if (phone.equals(UNSPECIFIED_INPUT)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"            value \u003d UNSPECIFIED_INPUT;","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"        } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ryanongra":6,"-":54}},{"path":"src/main/java/seedu/address/model/person/Telegram.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTelegram(String)}","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"public class Telegram {","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Telegram handles can take any values, and it should not be \"","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"            + \"blank or contain any whitespace.\";","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"    public static final String UNSPECIFIED_INPUT \u003d \"No telegram handle specified\";","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"     * Constructs an {@code Telegram}.","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"     * @param telegram A valid telegram handle.","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"    public Telegram(String telegram) {","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"        requireNonNull(telegram);","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"        if (telegram.equals(UNSPECIFIED_INPUT)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"            value \u003d UNSPECIFIED_INPUT;","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"        } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"            checkArgument(isValidTelegram(telegram), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"            value \u003d telegram.charAt(0) \u003d\u003d \u0027@\u0027 ? telegram : \"@\" + telegram;","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"    public static boolean isValidTelegram(String test) {","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 !test.contains(\" \");","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"ryanongra"},"content":"                || (other instanceof Telegram // instanceof handles nulls","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"ryanongra"},"content":"                \u0026\u0026 value.equals(((Telegram) other).value)); // state check","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ryanongra":20,"-":44}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":"     * Returns the number of people in the UniquePersonList.","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"    public int size() {","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"        return internalList.size();","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"IceWizard4902"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"IceWizard4902"},"content":"     * Clears every person from the list.","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"IceWizard4902"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"IceWizard4902"},"content":"    public void clearAllPerson() {","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"IceWizard4902"},"content":"        internalList.clear();","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"IceWizard4902"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":122,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":123,"author":{"gitId":"yongxiangng"},"content":"     * Returns a list of persons matching the predicate passed.","lastModifiedDate":"2021-10-30"},{"lineNumber":124,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":125,"author":{"gitId":"yongxiangng"},"content":"     * @param personPredicate The predicate to be used to get the list of persons.","lastModifiedDate":"2021-10-30"},{"lineNumber":126,"author":{"gitId":"yongxiangng"},"content":"     * @return The list of persons retrieved.","lastModifiedDate":"2021-10-30"},{"lineNumber":127,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":128,"author":{"gitId":"yongxiangng"},"content":"    public List\u003cPerson\u003e getPersons(Predicate\u003cPerson\u003e personPredicate) {","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"yongxiangng"},"content":"        return internalUnmodifiableList.filtered(personPredicate);","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-30"},{"lineNumber":133,"author":{"gitId":"yongxiangng"},"content":"     * Returns true if the list is empty.","lastModifiedDate":"2021-10-30"},{"lineNumber":134,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":135,"author":{"gitId":"yongxiangng"},"content":"     * @return true if list is empty.","lastModifiedDate":"2021-10-30"},{"lineNumber":136,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-30"},{"lineNumber":137,"author":{"gitId":"yongxiangng"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-10-21"},{"lineNumber":138,"author":{"gitId":"yongxiangng"},"content":"        return internalUnmodifiableList.size() \u003d\u003d 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":140,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"IceWizard4902":7,"yongxiangng":20,"ryanongra":7,"-":137}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"                new Telegram(\"@alexyeoh\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"                new Telegram(\"@berniceee\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"                new Telegram(\"@char\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"                new Telegram(\"dli123\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"                new Telegram(\"irfunny\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"                new Telegram(\"royoyoy\"),","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"ryanongra":7,"-":53}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IceWizard4902"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"IceWizard4902"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"IceWizard4902"},"content":"import java.util.List;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"IceWizard4902"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"IceWizard4902"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"IceWizard4902"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"IceWizard4902"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"IceWizard4902"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"IceWizard4902"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"IceWizard4902"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"IceWizard4902"},"content":"public class JsonAdaptedEvent {","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"IceWizard4902"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Event\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"IceWizard4902"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Event contains duplicate person(s).\";","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"IceWizard4902"},"content":"    private final String eventName;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"IceWizard4902"},"content":"    private final List\u003cJsonAdaptedPerson\u003e attendees \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"IceWizard4902"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"IceWizard4902"},"content":"     * Constructs a {@code JsonAdaptedEvent} with the given event details.","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"IceWizard4902"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"IceWizard4902"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"IceWizard4902"},"content":"    public JsonAdaptedEvent(@JsonProperty(\"eventName\") String eventName,","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"IceWizard4902"},"content":"                            @JsonProperty(\"attendees\") List\u003cJsonAdaptedPerson\u003e attendees) {","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"IceWizard4902"},"content":"        this.eventName \u003d eventName;","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"IceWizard4902"},"content":"        this.attendees.addAll(attendees);","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"IceWizard4902"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"IceWizard4902"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"IceWizard4902"},"content":"     * Converts a given {@code Event} into this class for Jackson use.","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"IceWizard4902"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"IceWizard4902"},"content":"    public JsonAdaptedEvent(Event source) {","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"IceWizard4902"},"content":"        eventName \u003d source.getEventName().toString();","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"IceWizard4902"},"content":"        attendees.addAll(source.getAttendeesAsUnmodifiableObservableList()","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"IceWizard4902"},"content":"                .stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"IceWizard4902"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"IceWizard4902"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"IceWizard4902"},"content":"     * Converts this Jackson-friendly adapted event object into the model\u0027s {@code Event} object.","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"IceWizard4902"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"IceWizard4902"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted event.","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"IceWizard4902"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"IceWizard4902"},"content":"    public Event toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"IceWizard4902"},"content":"        if (eventName \u003d\u003d null) {","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"IceWizard4902"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"IceWizard4902"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, EventName.class.getSimpleName()));","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"IceWizard4902"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"IceWizard4902"},"content":"        if (!EventName.isValidEventName(eventName)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"IceWizard4902"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"IceWizard4902"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, EventName.class.getSimpleName()));","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"IceWizard4902"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"IceWizard4902"},"content":"        EventName tempEventName \u003d new EventName(eventName);","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"IceWizard4902"},"content":"        Event event \u003d new Event(tempEventName);","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"IceWizard4902"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : attendees) {","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"IceWizard4902"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"IceWizard4902"},"content":"            if (event.hasPerson(person)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"IceWizard4902"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"IceWizard4902"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"IceWizard4902"},"content":"            event.addPerson(person);","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"IceWizard4902"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"IceWizard4902"},"content":"        return event;","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"IceWizard4902"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"IceWizard4902"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"IceWizard4902":67}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"    private final String telegram;","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"        this.telegram \u003d address;","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"ryanongra"},"content":"        telegram \u003d source.getTelegram().value;","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"ryanongra"},"content":"        if (!Phone.isValidPhone(phone) \u0026\u0026 !phone.equals(Phone.UNSPECIFIED_INPUT)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"ryanongra"},"content":"        if (!Email.isValidEmail(email) \u0026\u0026 !email.equals(Email.UNSPECIFIED_INPUT)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"ryanongra"},"content":"        if (telegram \u003d\u003d null) {","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"ryanongra"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"ryanongra"},"content":"                    Telegram.class.getSimpleName()));","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"ryanongra"},"content":"        if (!Telegram.isValidTelegram(telegram) \u0026\u0026 !telegram.equals(Telegram.UNSPECIFIED_INPUT)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"ryanongra"},"content":"            throw new IllegalValueException(Telegram.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"ryanongra"},"content":"        final Telegram modelTelegram \u003d new Telegram(telegram);","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"ryanongra"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelTelegram, modelTags);","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ryanongra":14,"-":97}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"IceWizard4902"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"IceWizard4902"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"Event list contains duplicate event(s).\";","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"IceWizard4902"},"content":"    private final List\u003cJsonAdaptedEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"IceWizard4902"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"IceWizard4902"},"content":"                                       @JsonProperty(\"events\") List\u003cJsonAdaptedEvent\u003e events) {","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"IceWizard4902"},"content":"        this.events.addAll(events);","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"IceWizard4902"},"content":"        events.addAll(source.getEventList().stream().map(JsonAdaptedEvent::new).collect(Collectors.toList()));","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"IceWizard4902"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"IceWizard4902"},"content":"        for (JsonAdaptedEvent jsonAdaptedEvent : events) {","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"IceWizard4902"},"content":"            Event event \u003d jsonAdaptedEvent.toModelType();","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"IceWizard4902"},"content":"            if (addressBook.hasEvent(event)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"IceWizard4902"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"IceWizard4902"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"IceWizard4902"},"content":"            addressBook.addEvent(event);","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"IceWizard4902"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"IceWizard4902":15,"-":59}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"nzixuan"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s1-cs2103-t16-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"nzixuan":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.ui.eventui.EventListPanel;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.ui.memberui.PersonListPanel;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"yongxiangng"},"content":"    private EventListPanel eventListPanel;","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"yongxiangng"},"content":"    @FXML","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"yongxiangng"},"content":"    private StackPane eventListPanelPlaceholder;","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"yongxiangng"},"content":"        eventListPanel \u003d new EventListPanel(logic.getFilteredEventList());","lastModifiedDate":"2021-10-16"},{"lineNumber":123,"author":{"gitId":"yongxiangng"},"content":"        eventListPanelPlaceholder.getChildren().add(eventListPanel.getRoot());","lastModifiedDate":"2021-10-16"},{"lineNumber":124,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"yongxiangng"},"content":"            personListPanel.setShowDetails(commandResult.isShowDetails());","lastModifiedDate":"2021-10-06"},{"lineNumber":199,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"yongxiangng":11,"-":196}},{"path":"src/main/java/seedu/address/ui/eventui/EventCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"package seedu.address.ui.eventui;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.ui.memberui.PersonListPanel;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"/**","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":" */","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"public class EventCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"    private static final String FXML \u003d \"EventListCard.fxml\";","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"yongxiangng"},"content":"    public final Event event;","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"yongxiangng"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"yongxiangng"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"yongxiangng"},"content":"    @FXML","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"yongxiangng"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"yongxiangng"},"content":"    @FXML","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"yongxiangng"},"content":"    private Label id;","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"    @FXML","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"yongxiangng"},"content":"    private Label eventName;","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"yongxiangng"},"content":"    @FXML","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"yongxiangng"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"yongxiangng"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"yongxiangng"},"content":"     * @param event The event we are showing.","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"yongxiangng"},"content":"     * @param displayedIndex The index of the event in the list.","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"yongxiangng"},"content":"    public EventCard(Event event, int displayedIndex) {","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"yongxiangng"},"content":"        super(FXML);","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"yongxiangng"},"content":"        this.event \u003d event;","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"yongxiangng"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"yongxiangng"},"content":"        eventName.setText(event.getEventName().eventName);","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"yongxiangng"},"content":"        personListPanel \u003d new PersonListPanel(event.getAttendeesAsUnmodifiableObservableList());","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"yongxiangng"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"yongxiangng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"yongxiangng"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"yongxiangng"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"yongxiangng"},"content":"            return true;","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"yongxiangng"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"yongxiangng"},"content":"        if (!(other instanceof EventCard)) {","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"yongxiangng"},"content":"            return false;","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"yongxiangng"},"content":"        // state check","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"yongxiangng"},"content":"        EventCard card \u003d (EventCard) other;","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"yongxiangng"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"yongxiangng"},"content":"                \u0026\u0026 event.equals(card.event);","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"yongxiangng":73}},{"path":"src/main/java/seedu/address/ui/eventui/EventListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"package seedu.address.ui.eventui;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"/**","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":" * Panel containing the list of events.","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":" */","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"public class EventListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"    private static final String FXML \u003d \"EventListPanel.fxml\";","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(EventListPanel.class);","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"    @FXML","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"    private ListView\u003cEvent\u003e eventListView;","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":"     * Creates a {@code EventListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"yongxiangng"},"content":"     * @param eventList The list of events used to create the list panel.","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"yongxiangng"},"content":"    public EventListPanel(ObservableList\u003cEvent\u003e eventList) {","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"yongxiangng"},"content":"        super(FXML);","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"yongxiangng"},"content":"        eventListView.setItems(eventList);","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"yongxiangng"},"content":"        eventListView.setCellFactory(listView -\u003e new EventListViewCell());","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"yongxiangng"},"content":"     * Refreshes the entire component.","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"yongxiangng"},"content":"    public void refresh() {","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"yongxiangng"},"content":"        logger.info(\"Refreshing event list panel\");","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"yongxiangng"},"content":"        eventListView.setItems(eventListView.getItems());","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"yongxiangng"},"content":"        eventListView.setCellFactory(listView -\u003e new EventListViewCell());","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"yongxiangng"},"content":"        eventListView.refresh();","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"yongxiangng"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Event} using a {@code EventCard}.","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"yongxiangng"},"content":"    class EventListViewCell extends ListCell\u003cEvent\u003e {","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"yongxiangng"},"content":"        @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"yongxiangng"},"content":"        protected void updateItem(Event event, boolean empty) {","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"yongxiangng"},"content":"            super.updateItem(event, empty);","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"yongxiangng"},"content":"            if (empty || event \u003d\u003d null) {","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"yongxiangng"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"yongxiangng"},"content":"                setText(null);","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"yongxiangng"},"content":"            } else {","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"yongxiangng"},"content":"                setGraphic(new EventCard(event, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"yongxiangng"},"content":"            }","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"yongxiangng":62}},{"path":"src/main/java/seedu/address/ui/memberui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"package seedu.address.ui.memberui;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"yongxiangng":2,"-":67}},{"path":"src/main/java/seedu/address/ui/memberui/PersonDetailsCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"package seedu.address.ui.memberui;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":" * An UI component that displays the detailed information of a {@code Person}.","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"public class PersonDetailsCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"    private static final String FXML \u003d \"PersonDetailsCard.fxml\";","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"yongxiangng"},"content":"    public final Person person;","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"yongxiangng"},"content":"    @FXML","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"yongxiangng"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"yongxiangng"},"content":"    @FXML","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"yongxiangng"},"content":"    private Label name;","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"yongxiangng"},"content":"    @FXML","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"    private Label phone;","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"yongxiangng"},"content":"    @FXML","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"    private Label telegram;","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"yongxiangng"},"content":"    @FXML","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"yongxiangng"},"content":"    private Label email;","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"yongxiangng"},"content":"    @FXML","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"yongxiangng"},"content":"    private FlowPane tags;","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"yongxiangng"},"content":"     * Creates a {@code PersonDetailsCard} with the given {@code Person}.","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"yongxiangng"},"content":"     * @param person The person we are displaying.","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"yongxiangng"},"content":"    public PersonDetailsCard(Person person) {","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"yongxiangng"},"content":"        super(FXML);","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"yongxiangng"},"content":"        this.person \u003d person;","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"yongxiangng"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"yongxiangng"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"ryanongra"},"content":"        telegram.setText(person.getTelegram().value);","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"yongxiangng"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"yongxiangng"},"content":"        person.getTags().stream()","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"yongxiangng"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"yongxiangng"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"yongxiangng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"yongxiangng"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"yongxiangng"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"yongxiangng"},"content":"            return true;","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"yongxiangng"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"yongxiangng"},"content":"        if (!(other instanceof PersonDetailsCard)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"yongxiangng"},"content":"            return false;","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"yongxiangng"},"content":"        // state check","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"yongxiangng"},"content":"        PersonDetailsCard card \u003d (PersonDetailsCard) other;","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"yongxiangng"},"content":"        return person.equals(card.person);","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"yongxiangng":74,"ryanongra":2}},{"path":"src/main/java/seedu/address/ui/memberui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"package seedu.address.ui.memberui;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"    private boolean isShowDetails \u003d false;","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":34,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"     * Sets the details field to parameter passed.","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"yongxiangng"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"yongxiangng"},"content":"     * @param isShowDetails boolean value to show details.","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"yongxiangng"},"content":"    public void setShowDetails(boolean isShowDetails) {","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"yongxiangng"},"content":"        this.isShowDetails \u003d isShowDetails;","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"yongxiangng"},"content":"        refresh();","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"yongxiangng"},"content":"     * Refreshes the entire component.","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"yongxiangng"},"content":"    public void refresh() {","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"yongxiangng"},"content":"        logger.info(\"Refreshing person list panel\");","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"yongxiangng"},"content":"        personListView.setItems(personListView.getItems());","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"yongxiangng"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"yongxiangng"},"content":"        personListView.refresh();","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"yongxiangng"},"content":"            } else if (isShowDetails) {","lastModifiedDate":"2021-10-30"},{"lineNumber":66,"author":{"gitId":"yongxiangng"},"content":"                setGraphic(new PersonDetailsCard(person).getRoot());","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"yongxiangng":25,"-":48}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"yongxiangng"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"yongxiangng"},"content":"    -fx-background-color: #383838;","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"yongxiangng"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"yongxiangng"},"content":"    -fx-padding: 0;","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"yongxiangng"},"content":"    -fx-border-width: 0 0 1px 0;","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"yongxiangng"},"content":"    -fx-border-color: #383838;","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"yongxiangng"},"content":".tab-pane .tab-header-area .tab-header-background {","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"yongxiangng"},"content":"    -fx-opacity: 0;","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"yongxiangng"},"content":".tab-pane .tab {","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"yongxiangng"},"content":"    -fx-background-color: #383838;","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"yongxiangng"},"content":"    -fx-border-width: 0 0 3px 0;","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"yongxiangng"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"yongxiangng"},"content":"    -fx-faint-focus-color: transparent;","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"yongxiangng"},"content":"    -fx-focus-color: transparent;","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"yongxiangng"},"content":"    -fx-padding: 5px 10px;","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"yongxiangng"},"content":".tab-pane .tab:selected {","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"yongxiangng"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"yongxiangng"},"content":".tab-pane .tab .tab-label {","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"yongxiangng"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"yongxiangng"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"yongxiangng"},"content":"    -fx-alignment: center;","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"yongxiangng"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":137,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":141,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":145,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":150,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":220,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":228,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":319,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":322,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":324,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":327,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":329,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":331,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":333,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":335,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":337,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":339,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":346,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":349,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":351,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":360,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":362,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":364,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":366,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":369,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":371,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":374,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":376,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":383,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"yongxiangng":32,"-":351}},{"path":"src/main/resources/view/EventListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"45.0\" maxHeight\u003d\"170.0\" prefWidth\u003d\"150.0\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"yongxiangng"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"yongxiangng"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"yongxiangng"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"yongxiangng"},"content":"        \u003cLabel fx:id\u003d\"eventName\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$eventName\" /\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"yongxiangng"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"yongxiangng"},"content":"      \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" maxHeight\u003d\"160\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"yongxiangng"},"content":"        \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"yongxiangng"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"yongxiangng"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"yongxiangng"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"yongxiangng":37}},{"path":"src/main/resources/view/EventListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"  \u003cListView fx:id\u003d\"eventListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"yongxiangng":8}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"\u003c?import javafx.scene.control.TabPane?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"\u003c?import javafx.scene.control.Tab?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"nzixuan"},"content":"         title\u003d\"For Your Interest\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":39,"author":{"gitId":"yongxiangng"},"content":"        \u003cTabPane fx:id\u003d\"tabPane\" tabClosingPolicy\u003d\"UNAVAILABLE\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"yongxiangng"},"content":"          \u003cTab fx:id\u003d\"members\" text\u003d\"Members\"\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"yongxiangng"},"content":"            \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"yongxiangng"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"yongxiangng"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"yongxiangng"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"yongxiangng"},"content":"              \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"yongxiangng"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"yongxiangng"},"content":"          \u003c/Tab\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"yongxiangng"},"content":"          \u003cTab fx:id\u003d\"events\" text\u003d\"Events\"\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"yongxiangng"},"content":"            \u003cVBox fx:id\u003d\"eventList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"yongxiangng"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"yongxiangng"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"yongxiangng"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"yongxiangng"},"content":"              \u003cStackPane fx:id\u003d\"eventListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"yongxiangng"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"yongxiangng"},"content":"          \u003c/Tab\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"yongxiangng"},"content":"        \u003c/TabPane\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"yongxiangng":22,"nzixuan":1,"-":53}},{"path":"src/main/resources/view/PersonDetailsCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\" text\u003d\"details\"\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"yongxiangng"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"yongxiangng"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"yongxiangng"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"yongxiangng"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"yongxiangng"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"yongxiangng"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"yongxiangng"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"      \u003cLabel fx:id\u003d\"telegram\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$telegram\" /\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"yongxiangng"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"yongxiangng"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"yongxiangng"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"yongxiangng"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"yongxiangng"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"yongxiangng"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"yongxiangng":39,"ryanongra":1}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"nzixuan"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"45.0\" prefHeight\u003d\"62.0\" prefWidth\u003d\"150.0\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"nzixuan"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"nzixuan"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"nzixuan"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nzixuan":4,"-":29}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidAndValidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Valid Person\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \"name\": \"Person With Invalid Phone Field\",","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \"phone\": \"948asdf2424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"IceWizard4902"},"content":"  } ],","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"IceWizard4902"},"content":"  \"events\": []","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"IceWizard4902":2,"-":12}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"IceWizard4902"},"content":"  } ],","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"IceWizard4902"},"content":"  \"events\": []","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"IceWizard4902":2,"-":7}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicatePersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"    \"telegram\": \"@alicepauline\",","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"tagged\": [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"email\": \"pauline@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"    \"address\": \"paulinealice\"","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"IceWizard4902"},"content":"  } ],","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"IceWizard4902"},"content":"  \"events\": []","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"IceWizard4902":2,"ryanongra":2,"-":11}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Hans Muster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"invalid@email!3e\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"    \"telegram\": \"@invalid telegram\"","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"IceWizard4902"},"content":"  } ],","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"IceWizard4902"},"content":"  \"events\": []","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"IceWizard4902":2,"ryanongra":1,"-":6}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalPersonsAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"_comment\": \"AddressBook save file which contains the same Person values as in TypicalPersons#getTypicalAddressBook()\",","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \"persons\" : [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\" : \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"    \"telegram\" : \"@aliceinwonderland\",","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"email\" : \"johnd@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"    \"telegram\" : \"@sonben\",","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"owesMoney\", \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \"phone\" : \"95352563\",","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \"email\" : \"heinz@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"    \"telegram\" : \"@caaarl\",","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \"email\" : \"cornelia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"    \"telegram\" : \"@dannyyyyy\",","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482224\",","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \"email\" : \"werner@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"    \"telegram\" : \"@theletterl\",","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482427\",","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \"email\" : \"lydia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"    \"telegram\" : \"@princessshrek\",","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482442\",","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \"email\" : \"anna@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"    \"telegram\" : \"@georgebestest\",","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"IceWizard4902"},"content":"  } ],","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"IceWizard4902"},"content":"  \"events\": []","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"IceWizard4902":2,"ryanongra":7,"-":38}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_DESC_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"ryanongra"},"content":"                + TELEGRAM_DESC_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":95,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":96,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":97,"author":{"gitId":"yongxiangng"},"content":"    public void getFilteredEventList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-17"},{"lineNumber":98,"author":{"gitId":"yongxiangng"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredEventList().remove(0));","lastModifiedDate":"2021-10-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"yongxiangng":5,"ryanongra":2,"-":160}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.testutil.ModelStub;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"yongxiangng":1,"-":113}},{"path":"src/test/java/seedu/address/logic/commands/AddPersonToEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.event.EventNameEqualKeywordPredicate;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.person.NameEqualKeywordPredicate;","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"yongxiangng"},"content":"class AddPersonToEventCommandTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"yongxiangng"},"content":"    private final EventNameEqualKeywordPredicate eventPredicate \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"yongxiangng"},"content":"            new EventNameEqualKeywordPredicate(new EventName(\"Dinner Event\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"yongxiangng"},"content":"    private final NameEqualKeywordPredicate personPredicate \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"yongxiangng"},"content":"            new NameEqualKeywordPredicate(new Name(\"Alice Pauline\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"    public void constructor_nullPersonNullEvent_throwsNullPointerException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"yongxiangng"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddPersonToEventCommand(null, null));","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"yongxiangng"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"yongxiangng"},"content":"        assertThrows(NullPointerException.class, ()","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"yongxiangng"},"content":"            -\u003e new AddPersonToEventCommand(null, eventPredicate));","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"yongxiangng"},"content":"    public void constructor_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"yongxiangng"},"content":"        assertThrows(NullPointerException.class, ()","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"yongxiangng"},"content":"            -\u003e new AddPersonToEventCommand(personPredicate, null));","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"yongxiangng"},"content":"    public void execute_personAcceptedByEvent_addSuccessful() throws Exception {","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"yongxiangng"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"yongxiangng"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"yongxiangng"},"content":"        EventStub validEvent \u003d new EventStub(new EventName(\"Very nice event\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"yongxiangng"},"content":"        model.addPerson(validPerson);","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"yongxiangng"},"content":"        model.addEvent(validEvent);","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"yongxiangng"},"content":"        AddPersonToEventCommand command \u003d new AddPersonToEventCommand(","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"yongxiangng"},"content":"                new NameEqualKeywordPredicate(validPerson.getName()),","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"yongxiangng"},"content":"                new EventNameEqualKeywordPredicate(validEvent.getEventName()));","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"yongxiangng"},"content":"        CommandResult commandResult \u003d command.execute(model);","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"yongxiangng"},"content":"        assertEquals(String.format(AddPersonToEventCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"yongxiangng"},"content":"                validPerson.getName(), validEvent.getEventName()),","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"yongxiangng"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"yongxiangng"},"content":"        assertEquals(Arrays.asList(validPerson), validEvent.personsAdded);","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"yongxiangng"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"yongxiangng"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"yongxiangng"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"yongxiangng"},"content":"        EventStub validEvent \u003d new EventStub(new EventName(\"Very nice event\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"yongxiangng"},"content":"        validEvent.addPerson(validPerson);","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"yongxiangng"},"content":"        model.addPerson(validPerson);","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"yongxiangng"},"content":"        model.addEvent(validEvent);","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"yongxiangng"},"content":"        AddPersonToEventCommand command \u003d new AddPersonToEventCommand(","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"yongxiangng"},"content":"                new NameEqualKeywordPredicate(validPerson.getName()),","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"yongxiangng"},"content":"                new EventNameEqualKeywordPredicate(validEvent.getEventName()));","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"yongxiangng"},"content":"        assertThrows(CommandException.class, AddPersonToEventCommand.MESSAGE_DUPLICATE_PERSON, ()","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"yongxiangng"},"content":"            -\u003e command.execute(model));","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"yongxiangng"},"content":"    private class EventStub extends Event {","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"yongxiangng"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"yongxiangng"},"content":"        public EventStub(EventName eventName) {","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"yongxiangng"},"content":"            super(eventName);","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"yongxiangng"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"yongxiangng"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"yongxiangng"},"content":"            requireNonNull(person);","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"yongxiangng"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"yongxiangng"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"yongxiangng"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"yongxiangng"},"content":"            requireNonNull(person);","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"yongxiangng"},"content":"            personsAdded.add(person);","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"yongxiangng"},"content":"    public void equals() {","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"yongxiangng"},"content":"        NameEqualKeywordPredicate alice \u003d new NameEqualKeywordPredicate(new Name(\"Alice\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"yongxiangng"},"content":"        NameEqualKeywordPredicate bob \u003d new NameEqualKeywordPredicate(new Name(\"Bob\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"yongxiangng"},"content":"        EventNameEqualKeywordPredicate lunch \u003d new EventNameEqualKeywordPredicate(new EventName(\"Lunch\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"yongxiangng"},"content":"        EventNameEqualKeywordPredicate dinner \u003d new EventNameEqualKeywordPredicate(new EventName(\"Dinner\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"yongxiangng"},"content":"        AddPersonToEventCommand aliceLunch \u003d new AddPersonToEventCommand(alice, lunch);","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"yongxiangng"},"content":"        AddPersonToEventCommand bobLunch \u003d new AddPersonToEventCommand(bob, lunch);","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"yongxiangng"},"content":"        AddPersonToEventCommand aliceDinner \u003d new AddPersonToEventCommand(alice, dinner);","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"yongxiangng"},"content":"        AddPersonToEventCommand bobDinner \u003d new AddPersonToEventCommand(bob, dinner);","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"yongxiangng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"yongxiangng"},"content":"        assertTrue(aliceLunch.equals(aliceLunch));","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"yongxiangng"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"yongxiangng"},"content":"        AddPersonToEventCommand aliceLunchCopy \u003d new AddPersonToEventCommand(alice, lunch);","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"yongxiangng"},"content":"        assertTrue(aliceLunch.equals(aliceLunchCopy));","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"yongxiangng"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"yongxiangng"},"content":"        assertFalse(aliceLunch.equals(1));","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"yongxiangng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"yongxiangng"},"content":"        assertFalse(aliceLunch.equals(null));","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":136,"author":{"gitId":"yongxiangng"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"yongxiangng"},"content":"        assertFalse(aliceLunch.equals(bobLunch));","lastModifiedDate":"2021-10-21"},{"lineNumber":138,"author":{"gitId":"yongxiangng"},"content":"        assertFalse(aliceLunch.equals(aliceDinner));","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"yongxiangng"},"content":"        assertFalse(aliceLunch.equals(bobDinner));","lastModifiedDate":"2021-10-21"},{"lineNumber":140,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"yongxiangng":141}},{"path":"src/test/java/seedu/address/logic/commands/AliasCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nzixuan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"nzixuan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"nzixuan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"nzixuan"},"content":"import static org.junit.jupiter.api.Assertions.assertSame;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"nzixuan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"nzixuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ALIAS_D1;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"nzixuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ALIAS_L;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"nzixuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMMAND_D1;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"nzixuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMMAND_L;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"nzixuan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"nzixuan"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"nzixuan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"nzixuan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"nzixuan"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"nzixuan"},"content":"public class AliasCommandTest {","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"nzixuan"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"nzixuan"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"nzixuan"},"content":"    public void setAliasMap_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"nzixuan"},"content":"        AliasCommand command \u003d new AliasCommand(VALID_ALIAS_L, VALID_COMMAND_L);","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"nzixuan"},"content":"        command.setMap(null);","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"nzixuan"},"content":"        assertThrows(NullPointerException.class, () -\u003e command.execute(model));","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"nzixuan"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"nzixuan"},"content":"    public void execute_validInputs_addSuccessful() throws Exception {","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"nzixuan"},"content":"        HashMap\u003cString, String\u003e aliasMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"nzixuan"},"content":"        AliasCommand command \u003d new AliasCommand(VALID_ALIAS_L, VALID_COMMAND_L);","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"nzixuan"},"content":"        command.setMap(aliasMap);","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"nzixuan"},"content":"        CommandResult commandResult \u003d command.execute(model);","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"nzixuan"},"content":"        assertEquals(String.format(AliasCommand.MESSAGE_SUCCESS, VALID_ALIAS_L, VALID_COMMAND_L),","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"nzixuan"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"nzixuan"},"content":"        assertSame(VALID_COMMAND_L, aliasMap.get(VALID_ALIAS_L));","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"nzixuan"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"nzixuan"},"content":"    public void equals() {","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"nzixuan"},"content":"        AliasCommand lCommand \u003d new AliasCommand(VALID_ALIAS_L, VALID_COMMAND_L);","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"nzixuan"},"content":"        AliasCommand d1Command \u003d new AliasCommand(VALID_ALIAS_D1, VALID_COMMAND_D1);","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"nzixuan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"nzixuan"},"content":"        assertTrue(lCommand.equals(lCommand));","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"nzixuan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"nzixuan"},"content":"        AliasCommand lCommandcopy \u003d new AliasCommand(VALID_ALIAS_L, VALID_COMMAND_L);","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"nzixuan"},"content":"        assertTrue(lCommand.equals(lCommandcopy));","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"nzixuan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"nzixuan"},"content":"        assertFalse(lCommand.equals(1));","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"nzixuan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"nzixuan"},"content":"        assertFalse(lCommand.equals(null));","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"nzixuan"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"nzixuan"},"content":"        assertFalse(lCommand.equals(d1Command));","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"nzixuan"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"nzixuan":64}},{"path":"src/test/java/seedu/address/logic/commands/ChainCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nzixuan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"nzixuan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"nzixuan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"nzixuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"nzixuan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"nzixuan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"nzixuan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"nzixuan"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"nzixuan"},"content":"public class ChainCommandTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"nzixuan"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"nzixuan"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"nzixuan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"nzixuan"},"content":"    public void equals() throws Exception {","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"nzixuan"},"content":"        ChainCommand chainStubCommand \u003d new ChainCommand(new BasicCommandStub(1), new BasicCommandStub(2));","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"nzixuan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"nzixuan"},"content":"        assertTrue(chainStubCommand.equals(chainStubCommand));","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"nzixuan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"nzixuan"},"content":"        ChainCommand chainStubCommandCopy \u003d new ChainCommand(new BasicCommandStub(1), new BasicCommandStub(2));","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"nzixuan"},"content":"        assertTrue(chainStubCommand.equals(chainStubCommandCopy));","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"nzixuan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"nzixuan"},"content":"        assertFalse(chainStubCommand.equals(1));","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"nzixuan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"nzixuan"},"content":"        assertFalse(chainStubCommand.equals(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"nzixuan"},"content":"        ChainCommand chainStubCommandDiff \u003d new ChainCommand(new BasicCommandStub(2), new BasicCommandStub(1));","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"nzixuan"},"content":"        // different commands -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"nzixuan"},"content":"        assertFalse(chainStubCommand.equals(chainStubCommandDiff));","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"nzixuan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"nzixuan"},"content":"    public void executeCommands() {","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"nzixuan"},"content":"        //execute 2 commands","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"nzixuan"},"content":"        ChainCommand chainStubCommand \u003d new ChainCommand(new BasicCommandStub(1), new BasicCommandStub(2));","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"nzixuan"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(BasicCommandStub.STUB_MESSAGE + \"1\\n\"","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"nzixuan"},"content":"                + BasicCommandStub.STUB_MESSAGE + \"2\", true, false, false);","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"nzixuan"},"content":"        assertCommandSuccess(chainStubCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"nzixuan"},"content":"        //execute 3 commands","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"nzixuan"},"content":"        ChainCommand tripleChainStubCommand \u003d new ChainCommand(chainStubCommand, new BasicCommandStub(3));","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"nzixuan"},"content":"        expectedCommandResult \u003d new CommandResult(BasicCommandStub.STUB_MESSAGE + \"1\\n\"","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"nzixuan"},"content":"                + BasicCommandStub.STUB_MESSAGE + \"2\\n\"","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"nzixuan"},"content":"                + BasicCommandStub.STUB_MESSAGE + \"3\", true, false, false);","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"nzixuan"},"content":"        assertCommandSuccess(tripleChainStubCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"nzixuan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"nzixuan"},"content":"     * A Basic Command stub.","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"nzixuan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"nzixuan"},"content":"    private class BasicCommandStub extends Command {","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"nzixuan"},"content":"        public static final String STUB_MESSAGE \u003d \"STUB MESSAGE\";","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"nzixuan"},"content":"        public final int stubIndex;","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"nzixuan"},"content":"        public BasicCommandStub(int stubIndex) {","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"nzixuan"},"content":"            this.stubIndex \u003d stubIndex;","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"nzixuan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"nzixuan"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"nzixuan"},"content":"        public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"nzixuan"},"content":"            return new CommandResult(STUB_MESSAGE + stubIndex, true, false, false);","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"nzixuan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"nzixuan"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"nzixuan"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"nzixuan"},"content":"            return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"nzixuan"},"content":"                    || (other instanceof BasicCommandStub // instanceof handles nulls","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"nzixuan"},"content":"                    \u0026\u0026 stubIndex \u003d\u003d ((BasicCommandStub) other).stubIndex); // state","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"nzixuan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"nzixuan"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"nzixuan":80}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"nzixuan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"nzixuan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"IceWizard4902"},"content":"        assertCommandSuccess(new ClearCommand(0, 0, null, null),","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"IceWizard4902"},"content":"                model, ClearCommand.MESSAGE_CLEAR_PERSON_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"IceWizard4902"},"content":"        assertCommandSuccess(new ClearCommand(0, 0, null, null),","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"IceWizard4902"},"content":"                model, ClearCommand.MESSAGE_CLEAR_PERSON_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":36,"author":{"gitId":"nzixuan"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"nzixuan"},"content":"    public void equals() {","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"IceWizard4902"},"content":"        ClearCommand clearCommand \u003d new ClearCommand(0, 0, null, null);","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"nzixuan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"nzixuan"},"content":"        assertTrue(clearCommand.equals(clearCommand));","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"nzixuan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"IceWizard4902"},"content":"        ClearCommand clearCommandcopy \u003d new ClearCommand(0, 0, null, null);","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"nzixuan"},"content":"        assertTrue(clearCommand.equals(clearCommandcopy));","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"nzixuan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"nzixuan"},"content":"        assertFalse(clearCommand.equals(1));","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"nzixuan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"nzixuan"},"content":"        assertFalse(clearCommand.equals(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"IceWizard4902":6,"nzixuan":16,"-":30}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, false)));","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"yongxiangng"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false, false)));","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true, false)));","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"yongxiangng"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false, false).hashCode());","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"yongxiangng"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true, false).hashCode());","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"yongxiangng":5,"-":49}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"nzixuan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ALIAS;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"nzixuan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMAND;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_NAME;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"dannytayjy"},"content":"import seedu.address.model.person.MatchesKeywordsPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"yongxiangng"},"content":"    public static final String VALID_EVENT_NAME_PARTY \u003d \"Party Event\";","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"yongxiangng"},"content":"    public static final String VALID_EVENT_NAME_DINNER \u003d \"Dinner Event\";","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"    public static final String EVENT_NAME_DESC_PARTY \u003d \" \" + PREFIX_EVENT_NAME + VALID_EVENT_NAME_PARTY;","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"    public static final String VALID_TELEGRAM_AMY \u003d \"@amyamyamy\";","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"    public static final String VALID_TELEGRAM_BOB \u003d \"@heresbobby\";","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"nzixuan"},"content":"    public static final String VALID_ALIAS_L \u003d \"l\";","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"nzixuan"},"content":"    public static final String VALID_ALIAS_D1 \u003d \"d1\";","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"nzixuan"},"content":"    public static final String VALID_COMMAND_L \u003d \"list\";","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"nzixuan"},"content":"    public static final String VALID_COMMAND_D1 \u003d \"details 1\";","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"ryanongra"},"content":"    public static final String TELEGRAM_DESC_AMY \u003d \" \" + PREFIX_TELEGRAM + VALID_TELEGRAM_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"ryanongra"},"content":"    public static final String TELEGRAM_DESC_BOB \u003d \" \" + PREFIX_TELEGRAM + VALID_TELEGRAM_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"nzixuan"},"content":"    public static final String ALIAS_DESC_L \u003d \" \" + PREFIX_ALIAS + VALID_ALIAS_L;","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"nzixuan"},"content":"    public static final String ALIAS_DESC_D1 \u003d \" \" + PREFIX_ALIAS + VALID_ALIAS_D1;","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"nzixuan"},"content":"    public static final String COMMAND_DESC_L \u003d \" \" + PREFIX_COMMAND + VALID_COMMAND_L;","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"nzixuan"},"content":"    public static final String COMMAND_DESC_D1 \u003d \" \" + PREFIX_COMMAND + VALID_COMMAND_D1;","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"yongxiangng"},"content":"    public static final String INVALID_EVENT_NAME \u003d \"WoHoO#$\";","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"ryanongra"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_TELEGRAM; // empty string not allowed for telegram","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"nzixuan"},"content":"    public static final String INVALID_ALIAS_DESC \u003d \" \" + PREFIX_ALIAS + \"l s\"; // whitespaces not allowed in alias","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"nzixuan"},"content":"    public static final String INVALID_EMPTY_ALIAS_DESC \u003d \" \" + PREFIX_ALIAS; // empty string not allowed for alias","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"nzixuan"},"content":"    public static final String INVALID_COMMAND_DESC \u003d \" \" + PREFIX_COMMAND; // empty string not allowed for command","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"ryanongra"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withTelegram(VALID_TELEGRAM_AMY)","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"ryanongra"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withTelegram(VALID_TELEGRAM_BOB)","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":143,"author":{"gitId":"dannytayjy"},"content":"        model.updateFilteredPersonList(new MatchesKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-10-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"yongxiangng":4,"dannytayjy":2,"nzixuan":13,"ryanongra":10,"-":119}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"nzixuan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ITEM;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"nzixuan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_ITEM;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"nzixuan"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"nzixuan"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":33,"author":{"gitId":"nzixuan"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_ITEM.getZeroBased());","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"nzixuan"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_ITEM);","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"nzixuan"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"nzixuan"},"content":"    public void execute_validEventIndexUnfilteredList_success() {","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"nzixuan"},"content":"        Event validEvent \u003d new EventBuilder().build();","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"nzixuan"},"content":"        model.addEvent(validEvent);","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"nzixuan"},"content":"        Event eventToDelete \u003d model.getFilteredEventList().get(INDEX_FIRST_ITEM.getZeroBased());","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"nzixuan"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_ITEM, true);","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"nzixuan"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_EVENT_SUCCESS, eventToDelete);","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"nzixuan"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"nzixuan"},"content":"        expectedModel.deleteEvent(eventToDelete);","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"nzixuan"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"nzixuan"},"content":"        showPersonAtIndex(model, INDEX_FIRST_ITEM);","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"nzixuan"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_ITEM.getZeroBased());","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"nzixuan"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_ITEM);","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"nzixuan"},"content":"        showPersonAtIndex(model, INDEX_FIRST_ITEM);","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"nzixuan"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_ITEM;","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"nzixuan"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_ITEM);","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"nzixuan"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_ITEM);","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"nzixuan"},"content":"        DeleteCommand deleteThirdCommand \u003d new DeleteCommand(INDEX_SECOND_ITEM, true);","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"nzixuan"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_ITEM);","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"nzixuan"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"nzixuan"},"content":"        // different flags -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"nzixuan"},"content":"        assertFalse(deleteFirstCommand.equals(deleteThirdCommand));","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"nzixuan":35,"-":96}},{"path":"src/test/java/seedu/address/logic/commands/DetailsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSON_DETAILS_FOUND;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSON_DETAILS_NOT_FOUND;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"nzixuan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ITEM;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"nzixuan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_ITEM;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.person.NameEqualKeywordPredicate;","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"yongxiangng"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"yongxiangng"},"content":" * Contains integration tests (interaction with the Model) for {@code DetailsCommand}.","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"yongxiangng"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"yongxiangng"},"content":"class DetailsCommandTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"yongxiangng"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"yongxiangng"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"yongxiangng"},"content":"    public void equals() {","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"yongxiangng"},"content":"        NameEqualKeywordPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"yongxiangng"},"content":"                new NameEqualKeywordPredicate(new Name(\"first\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"yongxiangng"},"content":"        NameEqualKeywordPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"yongxiangng"},"content":"                new NameEqualKeywordPredicate(new Name(\"second\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"yongxiangng"},"content":"        DetailsCommand detailsFirstCommand \u003d new DetailsCommand(firstPredicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"yongxiangng"},"content":"        DetailsCommand detailsSecondCommand \u003d new DetailsCommand(secondPredicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"yongxiangng"},"content":"        DetailsCommand detailsThirdCommand \u003d new DetailsCommand(Index.fromOneBased(1));","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"yongxiangng"},"content":"        DetailsCommand detailsFourthCommand \u003d new DetailsCommand(Index.fromOneBased(2));","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"yongxiangng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"yongxiangng"},"content":"        assertTrue(detailsFirstCommand.equals(detailsFirstCommand));","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"yongxiangng"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"yongxiangng"},"content":"        DetailsCommand detailsFirstCommandCopy \u003d new DetailsCommand(firstPredicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"yongxiangng"},"content":"        assertTrue(detailsFirstCommand.equals(detailsFirstCommandCopy));","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"yongxiangng"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"yongxiangng"},"content":"        assertFalse(detailsFirstCommand.equals(1));","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"yongxiangng"},"content":"        assertFalse(detailsThirdCommand.equals(1));","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"yongxiangng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"yongxiangng"},"content":"        assertFalse(detailsFirstCommand.equals(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"yongxiangng"},"content":"        assertFalse(detailsThirdCommand.equals(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"yongxiangng"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"yongxiangng"},"content":"        assertFalse(detailsFirstCommand.equals(detailsSecondCommand));","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"yongxiangng"},"content":"        // same index -\u003e returns true","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"yongxiangng"},"content":"        assertTrue(detailsThirdCommand.equals(new DetailsCommand(Index.fromOneBased(1))));","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"yongxiangng"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"yongxiangng"},"content":"        assertFalse(detailsThirdCommand.equals(detailsFourthCommand));","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"yongxiangng"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"yongxiangng"},"content":"        String name \u003d \"cool name\";","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"yongxiangng"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSON_DETAILS_NOT_FOUND, name);","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"yongxiangng"},"content":"        NameEqualKeywordPredicate predicate \u003d new NameEqualKeywordPredicate(new Name(name));","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"yongxiangng"},"content":"        DetailsCommand command \u003d new DetailsCommand(predicate);","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"yongxiangng"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"yongxiangng"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"yongxiangng"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"yongxiangng"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"yongxiangng"},"content":"        Name name \u003d CARL.getName();","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"yongxiangng"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSON_DETAILS_FOUND, name);","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"yongxiangng"},"content":"        NameEqualKeywordPredicate predicate \u003d new NameEqualKeywordPredicate(name);","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"yongxiangng"},"content":"        DetailsCommand command \u003d new DetailsCommand(predicate);","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"yongxiangng"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"yongxiangng"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"yongxiangng"},"content":"        assertEquals(Collections.singletonList(CARL), model.getFilteredPersonList());","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"yongxiangng"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"nzixuan"},"content":"        Person personToDisplay \u003d model.getFilteredPersonList().get(INDEX_FIRST_ITEM.getZeroBased());","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"nzixuan"},"content":"        DetailsCommand detailsCommand \u003d new DetailsCommand(INDEX_FIRST_ITEM);","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"yongxiangng"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_PERSON_DETAILS_FOUND, personToDisplay.getName());","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"yongxiangng"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"yongxiangng"},"content":"        expectedModel.updateFilteredPersonList(x -\u003e x.getName().equals(personToDisplay.getName()));","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"yongxiangng"},"content":"        assertCommandSuccess(detailsCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"yongxiangng"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"yongxiangng"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"yongxiangng"},"content":"        DetailsCommand detailsCommand \u003d new DetailsCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"yongxiangng"},"content":"        assertCommandFailure(detailsCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"yongxiangng"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2021-10-13"},{"lineNumber":118,"author":{"gitId":"nzixuan"},"content":"        showPersonAtIndex(model, INDEX_FIRST_ITEM);","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"nzixuan"},"content":"        Person personToDisplay \u003d model.getFilteredPersonList().get(INDEX_FIRST_ITEM.getZeroBased());","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"nzixuan"},"content":"        DetailsCommand detailsCommand \u003d new DetailsCommand(INDEX_FIRST_ITEM);","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":123,"author":{"gitId":"yongxiangng"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_PERSON_DETAILS_FOUND, personToDisplay.getName());","lastModifiedDate":"2021-10-13"},{"lineNumber":124,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"yongxiangng"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"yongxiangng"},"content":"        expectedModel.updateFilteredPersonList(x -\u003e x.getName().equals(personToDisplay.getName()));","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":128,"author":{"gitId":"yongxiangng"},"content":"        assertCommandSuccess(detailsCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":131,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":132,"author":{"gitId":"yongxiangng"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":133,"author":{"gitId":"nzixuan"},"content":"        showPersonAtIndex(model, INDEX_FIRST_ITEM);","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":135,"author":{"gitId":"nzixuan"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_ITEM;","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"yongxiangng"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-13"},{"lineNumber":137,"author":{"gitId":"yongxiangng"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2021-10-13"},{"lineNumber":138,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":139,"author":{"gitId":"yongxiangng"},"content":"        DetailsCommand detailsCommand \u003d new DetailsCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-13"},{"lineNumber":140,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":141,"author":{"gitId":"yongxiangng"},"content":"        assertCommandFailure(detailsCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-13"},{"lineNumber":142,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":143,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"yongxiangng":134,"nzixuan":9}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"nzixuan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ITEM;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"nzixuan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_ITEM;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"nzixuan"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_ITEM, descriptor);","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"nzixuan"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_ITEM, new EditPersonDescriptor());","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"nzixuan"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_ITEM.getZeroBased());","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"nzixuan"},"content":"        showPersonAtIndex(model, INDEX_FIRST_ITEM);","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"nzixuan"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_ITEM.getZeroBased());","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"nzixuan"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_ITEM,","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"nzixuan"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_ITEM.getZeroBased());","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"nzixuan"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_ITEM, descriptor);","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"nzixuan"},"content":"        showPersonAtIndex(model, INDEX_FIRST_ITEM);","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"nzixuan"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_ITEM.getZeroBased());","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"nzixuan"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_ITEM,","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"nzixuan"},"content":"        showPersonAtIndex(model, INDEX_FIRST_ITEM);","lastModifiedDate":"2021-10-26"},{"lineNumber":138,"author":{"gitId":"nzixuan"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_ITEM;","lastModifiedDate":"2021-10-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"nzixuan"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_ITEM, DESC_AMY);","lastModifiedDate":"2021-10-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"nzixuan"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_ITEM, copyDescriptor);","lastModifiedDate":"2021-10-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"IceWizard4902"},"content":"        assertFalse(standardCommand.equals(new ClearCommand(0, 0, null, null)));","lastModifiedDate":"2021-10-28"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"nzixuan"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_ITEM, DESC_AMY)));","lastModifiedDate":"2021-10-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"nzixuan"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_ITEM, DESC_BOB)));","lastModifiedDate":"2021-10-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"IceWizard4902":1,"nzixuan":19,"-":153}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"ryanongra"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTelegram(VALID_TELEGRAM_BOB).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"ryanongra":2,"-":56}},{"path":"src/test/java/seedu/address/logic/commands/EventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.testutil.ModelStub;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"class EventCommandTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"    public void constructor_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EventCommand(null));","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"yongxiangng"},"content":"    public void execute_eventAcceptedByModel_addEventSuccessful() throws Exception {","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"yongxiangng"},"content":"        ModelStubAcceptingEvent modelStub \u003d new ModelStubAcceptingEvent();","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"yongxiangng"},"content":"        Event validEvent \u003d new EventBuilder().build();","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"yongxiangng"},"content":"        CommandResult commandResult \u003d new EventCommand(validEvent).execute(modelStub);","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"        assertEquals(String.format(EventCommand.MESSAGE_SUCCESS, validEvent), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"yongxiangng"},"content":"        assertEquals(Arrays.asList(validEvent), modelStub.eventsAdded);","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"yongxiangng"},"content":"    public void execute_duplicateEvent_throwsCommandException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"yongxiangng"},"content":"        Event validEvent \u003d new EventBuilder().build();","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"yongxiangng"},"content":"        EventCommand eventCommand \u003d new EventCommand(validEvent);","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"yongxiangng"},"content":"        ModelStub modelStub \u003d new ModelStubWithEvent(validEvent);","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"yongxiangng"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"yongxiangng"},"content":"                EventCommand.MESSAGE_DUPLICATE_EVENT, () -\u003e eventCommand.execute(modelStub));","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"yongxiangng"},"content":"    public void equals() {","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"yongxiangng"},"content":"        Event partyEvent \u003d new EventBuilder().withEventName(\"Party\").build();","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"yongxiangng"},"content":"        Event dinnerEvent \u003d new EventBuilder().withEventName(\"Dinner\").build();","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"yongxiangng"},"content":"        EventCommand addPartyEvent \u003d new EventCommand(partyEvent);","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"yongxiangng"},"content":"        EventCommand addDinnerEvent \u003d new EventCommand(dinnerEvent);","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"yongxiangng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"yongxiangng"},"content":"        assertTrue(addPartyEvent.equals(addPartyEvent));","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"yongxiangng"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"yongxiangng"},"content":"        EventCommand addPartyEventCopy \u003d new EventCommand(partyEvent);","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"yongxiangng"},"content":"        assertTrue(addPartyEvent.equals(addPartyEventCopy));","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"yongxiangng"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"yongxiangng"},"content":"        assertFalse(addPartyEvent.equals(1));","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"yongxiangng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"yongxiangng"},"content":"        assertFalse(addPartyEvent.equals(null));","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"yongxiangng"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"yongxiangng"},"content":"        assertFalse(addPartyEvent.equals(addDinnerEvent));","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"yongxiangng"},"content":"     * A Model stub that contains a single event.","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"yongxiangng"},"content":"    private class ModelStubWithEvent extends ModelStub {","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"yongxiangng"},"content":"        private final Event event;","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":79,"author":{"gitId":"yongxiangng"},"content":"        ModelStubWithEvent(Event event) {","lastModifiedDate":"2021-10-16"},{"lineNumber":80,"author":{"gitId":"yongxiangng"},"content":"            requireNonNull(event);","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"yongxiangng"},"content":"            this.event \u003d event;","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"yongxiangng"},"content":"        @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"yongxiangng"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"yongxiangng"},"content":"            requireNonNull(event);","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"yongxiangng"},"content":"            return this.event.isSameEvent(event);","lastModifiedDate":"2021-10-16"},{"lineNumber":88,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":89,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":90,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":92,"author":{"gitId":"yongxiangng"},"content":"     * A Model stub that always accept the event being added.","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"yongxiangng"},"content":"    private class ModelStubAcceptingEvent extends ModelStub {","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"yongxiangng"},"content":"        final ArrayList\u003cEvent\u003e eventsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"yongxiangng"},"content":"        @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":98,"author":{"gitId":"yongxiangng"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2021-10-16"},{"lineNumber":99,"author":{"gitId":"yongxiangng"},"content":"            requireNonNull(event);","lastModifiedDate":"2021-10-16"},{"lineNumber":100,"author":{"gitId":"yongxiangng"},"content":"            return eventsAdded.stream().anyMatch(event::isSameEvent);","lastModifiedDate":"2021-10-16"},{"lineNumber":101,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":102,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":103,"author":{"gitId":"yongxiangng"},"content":"        @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":104,"author":{"gitId":"yongxiangng"},"content":"        public void addEvent(Event event) {","lastModifiedDate":"2021-10-16"},{"lineNumber":105,"author":{"gitId":"yongxiangng"},"content":"            requireNonNull(event);","lastModifiedDate":"2021-10-16"},{"lineNumber":106,"author":{"gitId":"yongxiangng"},"content":"            eventsAdded.add(event);","lastModifiedDate":"2021-10-16"},{"lineNumber":107,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":109,"author":{"gitId":"yongxiangng"},"content":"        @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"yongxiangng"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-16"},{"lineNumber":111,"author":{"gitId":"yongxiangng"},"content":"            return new AddressBook();","lastModifiedDate":"2021-10-16"},{"lineNumber":112,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":113,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":114,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"yongxiangng":114}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"nzixuan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"nzixuan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false);","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"nzixuan"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"nzixuan"},"content":"    public void equals() {","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"nzixuan"},"content":"        ExitCommand exitCommand \u003d new ExitCommand();","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"nzixuan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"nzixuan"},"content":"        assertTrue(exitCommand.equals(exitCommand));","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"nzixuan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"nzixuan"},"content":"        ExitCommand exitCommandcopy \u003d new ExitCommand();","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"nzixuan"},"content":"        assertTrue(exitCommand.equals(exitCommandcopy));","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"nzixuan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"nzixuan"},"content":"        assertFalse(exitCommand.equals(1));","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"nzixuan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"nzixuan"},"content":"        assertFalse(exitCommand.equals(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"yongxiangng":1,"nzixuan":19,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"dannytayjy"},"content":"import seedu.address.model.person.MatchesKeywordsPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"dannytayjy"},"content":"        MatchesKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"dannytayjy"},"content":"                new MatchesKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"dannytayjy"},"content":"        MatchesKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"dannytayjy"},"content":"                new MatchesKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"dannytayjy"},"content":"        MatchesKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"dannytayjy"},"content":"        MatchesKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"dannytayjy"},"content":"    private MatchesKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"dannytayjy"},"content":"        return new MatchesKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"dannytayjy":9,"-":74}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"nzixuan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"nzixuan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"nzixuan"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"nzixuan"},"content":"    public void equals() {","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"nzixuan"},"content":"        HelpCommand helpCommand \u003d new HelpCommand();","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"nzixuan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"nzixuan"},"content":"        assertTrue(helpCommand.equals(helpCommand));","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"nzixuan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"nzixuan"},"content":"        HelpCommand helpCommandcopy \u003d new HelpCommand();","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"nzixuan"},"content":"        assertTrue(helpCommand.equals(helpCommandcopy));","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"nzixuan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"nzixuan"},"content":"        assertFalse(helpCommand.equals(1));","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"nzixuan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"nzixuan"},"content":"        assertFalse(helpCommand.equals(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"yongxiangng":1,"nzixuan":19,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"nzixuan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"nzixuan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":7,"author":{"gitId":"nzixuan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ITEM;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":38,"author":{"gitId":"nzixuan"},"content":"        showPersonAtIndex(model, INDEX_FIRST_ITEM);","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"nzixuan"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"nzixuan"},"content":"    public void equals() {","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"nzixuan"},"content":"        ListCommand listCommand \u003d new ListCommand();","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"nzixuan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"nzixuan"},"content":"        assertTrue(listCommand.equals(listCommand));","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"nzixuan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"nzixuan"},"content":"        ListCommand listCommandcopy \u003d new ListCommand();","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"nzixuan"},"content":"        assertTrue(listCommand.equals(listCommandcopy));","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"nzixuan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"nzixuan"},"content":"        assertFalse(listCommand.equals(1));","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"nzixuan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"nzixuan"},"content":"        assertFalse(listCommand.equals(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"nzixuan":21,"-":37}},{"path":"src/test/java/seedu/address/logic/commands/RemovePersonFromEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_EVENT_DETAILS_NOT_FOUND;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSON_DETAILS_NOT_FOUND;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_NAME_PARTY;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"import seedu.address.model.event.EventNameEqualKeywordPredicate;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"import seedu.address.model.person.NameEqualKeywordPredicate;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"public class RemovePersonFromEventCommandTest {","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"    public void execute_personNotFound_throwsCommandException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"        Event event \u003d new EventBuilder().withEventName(VALID_EVENT_NAME_PARTY).build();","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"        model.addEvent(event);","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"        NameEqualKeywordPredicate personPredicate \u003d new NameEqualKeywordPredicate(BOB.getName());","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"        EventNameEqualKeywordPredicate eventPredicate \u003d new EventNameEqualKeywordPredicate(event.getEventName());","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"        RemovePersonFromEventCommand command \u003d new RemovePersonFromEventCommand(personPredicate, eventPredicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"                String.format(MESSAGE_PERSON_DETAILS_NOT_FOUND, personPredicate), () -\u003e command.execute(model));","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"ryanongra"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":"    public void execute_eventNotFound_throwsCommandException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"        Event event \u003d new EventBuilder().withEventName(VALID_EVENT_NAME_PARTY).build();","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"        NameEqualKeywordPredicate personPredicate \u003d new NameEqualKeywordPredicate(BOB.getName());","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"        EventNameEqualKeywordPredicate eventPredicate \u003d new EventNameEqualKeywordPredicate(event.getEventName());","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"ryanongra"},"content":"        RemovePersonFromEventCommand command \u003d new RemovePersonFromEventCommand(personPredicate, eventPredicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"ryanongra"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"ryanongra"},"content":"                String.format(MESSAGE_EVENT_DETAILS_NOT_FOUND, eventPredicate), () -\u003e command.execute(model));","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"ryanongra"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"ryanongra"},"content":"    public void execute_predicatesValid_success() throws CommandException {","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"ryanongra"},"content":"        Event event \u003d new EventBuilder().withEventName(VALID_EVENT_NAME_PARTY)","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"ryanongra"},"content":"                .withPerson(BOB).build();","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"ryanongra"},"content":"        model.addEvent(event);","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"ryanongra"},"content":"        NameEqualKeywordPredicate personPredicate \u003d new NameEqualKeywordPredicate(BOB.getName());","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"ryanongra"},"content":"        EventNameEqualKeywordPredicate eventPredicate \u003d new EventNameEqualKeywordPredicate(event.getEventName());","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"ryanongra"},"content":"        RemovePersonFromEventCommand command \u003d new RemovePersonFromEventCommand(personPredicate, eventPredicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"ryanongra"},"content":"        CommandResult commandResult \u003d command.execute(model);","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"ryanongra"},"content":"        String expectedMessage \u003d String.format(RemovePersonFromEventCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"ryanongra"},"content":"                BOB.getName().fullName, event.getEventName());","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"ryanongra"},"content":"        assertEquals(expectedMessage, commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"ryanongra":71}},{"path":"src/test/java/seedu/address/logic/commands/RenameEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_NAME_DINNER;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_NAME_PARTY;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"import seedu.address.testutil.Assert;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"import seedu.address.testutil.RenameEventDescriptorBuilder;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":" * Contains integration tests (interaction with the Model) and unit tests for RenameEventCommand.","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"public class RenameEventCommandTest {","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"    public void execute_newNameSpecified_success() throws CommandException {","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"        Event originalEvent \u003d new EventBuilder().withEventName(VALID_EVENT_NAME_PARTY).withPerson(BOB).build();","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"        Event renamedEvent \u003d new EventBuilder().withEventName(VALID_EVENT_NAME_DINNER).withPerson(BOB).build();","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"        model.addEvent(originalEvent);","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"        RenameEventCommand.RenameEventDescriptor descriptor \u003d new RenameEventDescriptorBuilder(renamedEvent).build();","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"        RenameEventCommand renameEventCommand \u003d new RenameEventCommand(INDEX_FIRST_EVENT, descriptor);","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"                RenameEventCommand.MESSAGE_RENAME_EVENT_SUCCESS,","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"                originalEvent.getEventName(),","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"ryanongra"},"content":"                renamedEvent.getEventName());","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":"        CommandResult commandResult \u003d renameEventCommand.execute(model);","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"        assertEquals(expectedMessage, commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"ryanongra"},"content":"    public void execute_duplicateEvent_throwsCommandException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"ryanongra"},"content":"        Event originalEvent \u003d new EventBuilder().withEventName(\"Original\").withPerson(BOB).build();","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"ryanongra"},"content":"        Event renamedEvent \u003d new EventBuilder().withEventName(\"Renamed\").withPerson(BOB).build();","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"ryanongra"},"content":"        model.addEvent(originalEvent);","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"ryanongra"},"content":"        model.addEvent(renamedEvent);","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"ryanongra"},"content":"        RenameEventCommand.RenameEventDescriptor descriptor \u003d new RenameEventDescriptorBuilder(renamedEvent).build();","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"ryanongra"},"content":"        RenameEventCommand renameEventCommand \u003d new RenameEventCommand(INDEX_FIRST_EVENT, descriptor);","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"ryanongra"},"content":"        Assert.assertThrows(CommandException.class,","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"ryanongra"},"content":"                RenameEventCommand.MESSAGE_DUPLICATE_EVENT, () -\u003e renameEventCommand.execute(model));","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"ryanongra":59}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_DESC_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_DESC_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"ryanongra"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"ryanongra"},"content":"                + TELEGRAM_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"ryanongra"},"content":"                + TELEGRAM_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"ryanongra"},"content":"                + TELEGRAM_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"ryanongra"},"content":"                + TELEGRAM_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"ryanongra"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + TELEGRAM_DESC_AMY","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"ryanongra"},"content":"                + TELEGRAM_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":73,"author":{"gitId":"ryanongra"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":81,"author":{"gitId":"ryanongra"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + TELEGRAM_DESC_AMY,","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"ryanongra"},"content":"        // Commented out tests which are no longer valid. Can be moved to parse_optionalFieldsMissing_success().","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"ryanongra"},"content":"        // missing phone prefix","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"ryanongra"},"content":"        expectedPerson \u003d new PersonBuilder(BOB, true)","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"ryanongra"},"content":"                .withPhone(Phone.UNSPECIFIED_INPUT)","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"ryanongra"},"content":"                .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"ryanongra"},"content":"                .withTelegram(VALID_TELEGRAM_BOB)","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"ryanongra"},"content":"                .withTags()","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"ryanongra"},"content":"                .build();","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"ryanongra"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + TELEGRAM_DESC_BOB,","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"ryanongra"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"ryanongra"},"content":"        // missing email prefix","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"ryanongra"},"content":"        expectedPerson \u003d new PersonBuilder(BOB, true)","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"ryanongra"},"content":"                .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"ryanongra"},"content":"                .withEmail(Email.UNSPECIFIED_INPUT)","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"ryanongra"},"content":"                .withTelegram(VALID_TELEGRAM_BOB)","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"ryanongra"},"content":"                .withTags()","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"ryanongra"},"content":"                .build();","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"ryanongra"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + TELEGRAM_DESC_BOB,","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"ryanongra"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-18"},{"lineNumber":105,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":107,"author":{"gitId":"ryanongra"},"content":"        // missing telegram prefix","lastModifiedDate":"2021-10-18"},{"lineNumber":108,"author":{"gitId":"ryanongra"},"content":"        expectedPerson \u003d new PersonBuilder(BOB, true)","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"ryanongra"},"content":"                .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"ryanongra"},"content":"                .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"ryanongra"},"content":"                .withTelegram(Telegram.UNSPECIFIED_INPUT)","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"ryanongra"},"content":"                .withTags()","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"ryanongra"},"content":"                .build();","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"ryanongra"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"ryanongra"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + TELEGRAM_DESC_BOB,","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"ryanongra"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_TELEGRAM_BOB,","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"ryanongra"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"ryanongra"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"ryanongra"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + TELEGRAM_DESC_BOB","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":147,"author":{"gitId":"ryanongra"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Telegram.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"ryanongra"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":159,"author":{"gitId":"ryanongra"},"content":"                + TELEGRAM_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"ryanongra":52,"-":110}},{"path":"src/test/java/seedu/address/logic/parser/AddPersonToEventCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_NAME;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.logic.commands.AddPersonToEventCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.event.EventNameEqualKeywordPredicate;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.person.NameEqualKeywordPredicate;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"class AddPersonToEventCommandParserTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"    private AddPersonToEventCommandParser parser \u003d new AddPersonToEventCommandParser();","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"yongxiangng"},"content":"        Event event \u003d new EventBuilder().build();","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"yongxiangng"},"content":"        AddPersonToEventCommand expectedCommand \u003d new AddPersonToEventCommand(","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"yongxiangng"},"content":"                new NameEqualKeywordPredicate(person.getName()),","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"yongxiangng"},"content":"                new EventNameEqualKeywordPredicate(event.getEventName()));","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"yongxiangng"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_NAME + person.getName()","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"yongxiangng"},"content":"                + \" \" + PREFIX_EVENT_NAME + event.getEventName(), expectedCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"yongxiangng"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"yongxiangng"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonToEventCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"yongxiangng"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"yongxiangng"},"content":"        Event event \u003d new EventBuilder().build();","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"yongxiangng"},"content":"        assertParseFailure(parser, \" \" + PREFIX_NAME + person.getName(), expectedMessage);","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"yongxiangng"},"content":"        assertParseFailure(parser, \" \" + PREFIX_EVENT_NAME + event.getEventName(), expectedMessage);","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"yongxiangng":44,"ryanongra":1}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"nzixuan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ALIAS;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"nzixuan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMAND;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_NAME;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"nzixuan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ITEM;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.logic.commands.AddPersonToEventCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"nzixuan"},"content":"import seedu.address.logic.commands.AliasCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"nzixuan"},"content":"import seedu.address.logic.commands.ChainCommand;","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.logic.commands.DetailsCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.logic.commands.EventCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.event.EventNameEqualKeywordPredicate;","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"dannytayjy"},"content":"import seedu.address.model.person.MatchesKeywordsPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.person.NameEqualKeywordPredicate;","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"yongxiangng"},"content":"    public void parseCommand_addPersonToEvent() throws Exception {","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"yongxiangng"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"yongxiangng"},"content":"        Event event \u003d new EventBuilder().build();","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"yongxiangng"},"content":"        AddPersonToEventCommand command \u003d (AddPersonToEventCommand) parser.parseCommand(","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"yongxiangng"},"content":"                AddPersonToEventCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"yongxiangng"},"content":"                        + PREFIX_NAME + person.getName() + \" \"","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"yongxiangng"},"content":"                        + PREFIX_EVENT_NAME + event.getEventName());","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"yongxiangng"},"content":"        assertEquals(new AddPersonToEventCommand(new NameEqualKeywordPredicate(person.getName()),","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"yongxiangng"},"content":"                new EventNameEqualKeywordPredicate(event.getEventName())), command);","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"yongxiangng"},"content":"    public void parseCommand_event() throws Exception {","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"yongxiangng"},"content":"        String eventName \u003d \"Cool event name\";","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"yongxiangng"},"content":"        EventCommand command \u003d (EventCommand) parser.parseCommand(EventCommand.COMMAND_WORD + \" \" + eventName);","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"yongxiangng"},"content":"        assertEquals(new EventCommand(new Event(ParserUtil.parseEventName(eventName))), command);","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"IceWizard4902"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" -p all\") instanceof ClearCommand);","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"IceWizard4902"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" -e 1-10\") instanceof ClearCommand);","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"nzixuan"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_ITEM.getOneBased());","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"nzixuan"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_ITEM), command);","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"yongxiangng"},"content":"    public void parseCommand_details() throws Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"yongxiangng"},"content":"        String keyword \u003d \"foo\";","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"yongxiangng"},"content":"        DetailsCommand command \u003d (DetailsCommand) parser.parseCommand(","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"yongxiangng"},"content":"                DetailsCommand.COMMAND_WORD + \" \" + keyword);","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"yongxiangng"},"content":"        assertEquals(new DetailsCommand(new NameEqualKeywordPredicate(ParserUtil.parseName(keyword))), command);","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"nzixuan"},"content":"                + INDEX_FIRST_ITEM.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"nzixuan"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_ITEM, descriptor), command);","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"dannytayjy"},"content":"        assertEquals(new FindCommand(new MatchesKeywordsPredicate(keywords)), command);","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":131,"author":{"gitId":"nzixuan"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":132,"author":{"gitId":"nzixuan"},"content":"    public void parseCommand_chainCommand() throws Exception {","lastModifiedDate":"2021-10-17"},{"lineNumber":133,"author":{"gitId":"nzixuan"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \"\u0026\u0026\"","lastModifiedDate":"2021-10-17"},{"lineNumber":134,"author":{"gitId":"nzixuan"},"content":"                + HelpCommand.COMMAND_WORD) instanceof ChainCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":135,"author":{"gitId":"nzixuan"},"content":"        ChainCommand command \u003d (ChainCommand) parser.parseCommand(","lastModifiedDate":"2021-10-14"},{"lineNumber":136,"author":{"gitId":"nzixuan"},"content":"                ListCommand.COMMAND_WORD + \"\u0026\u0026\" + HelpCommand.COMMAND_WORD);","lastModifiedDate":"2021-10-14"},{"lineNumber":137,"author":{"gitId":"nzixuan"},"content":"        assertEquals(new ChainCommand(new ListCommand(), new HelpCommand()), command);","lastModifiedDate":"2021-10-14"},{"lineNumber":138,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":139,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":140,"author":{"gitId":"nzixuan"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"nzixuan"},"content":"    public void parseCommand_alias() throws Exception {","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"nzixuan"},"content":"        String alias \u003d \"d\";","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"nzixuan"},"content":"        String commandString \u003d \"details 2\";","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"nzixuan"},"content":"        AliasCommand command \u003d (AliasCommand) parser.parseCommand(","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"nzixuan"},"content":"                AliasCommand.COMMAND_WORD + \" \" + PREFIX_ALIAS + alias + \" \" + PREFIX_COMMAND + commandString);","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"nzixuan"},"content":"        assertEquals(new AliasCommand(alias, commandString), command);","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":151,"author":{"gitId":"nzixuan"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-19"},{"lineNumber":152,"author":{"gitId":"nzixuan"},"content":"                HelpCommand.MESSAGE_USAGE), () -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"IceWizard4902":2,"yongxiangng":34,"dannytayjy":2,"nzixuan":29,"-":92}},{"path":"src/test/java/seedu/address/logic/parser/AliasCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nzixuan"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"nzixuan"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"nzixuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ALIAS_DESC_D1;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"nzixuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ALIAS_DESC_L;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"nzixuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COMMAND_DESC_D1;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"nzixuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COMMAND_DESC_L;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"nzixuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ALIAS_DESC;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"nzixuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_COMMAND_DESC;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"nzixuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMPTY_ALIAS_DESC;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"nzixuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"nzixuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"nzixuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ALIAS_D1;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"nzixuan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMMAND_D1;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"nzixuan"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"nzixuan"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"nzixuan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"nzixuan"},"content":"import seedu.address.logic.commands.AliasCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"nzixuan"},"content":"public class AliasCommandParserTest {","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"nzixuan"},"content":"    private AliasCommandParser parser \u003d new AliasCommandParser();","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"nzixuan"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"nzixuan"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"nzixuan"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"nzixuan"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + ALIAS_DESC_D1 + COMMAND_DESC_D1,","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"nzixuan"},"content":"                new AliasCommand(VALID_ALIAS_D1, VALID_COMMAND_D1));","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"nzixuan"},"content":"        // multiple alias - last alias accepted","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"nzixuan"},"content":"        assertParseSuccess(parser, ALIAS_DESC_L + ALIAS_DESC_D1 + COMMAND_DESC_D1,","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"nzixuan"},"content":"                new AliasCommand(VALID_ALIAS_D1, VALID_COMMAND_D1));","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"nzixuan"},"content":"        // multiple commands - last command accepted","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"nzixuan"},"content":"        assertParseSuccess(parser, COMMAND_DESC_L + ALIAS_DESC_D1 + COMMAND_DESC_D1,","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"nzixuan"},"content":"                new AliasCommand(VALID_ALIAS_D1, VALID_COMMAND_D1));","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"nzixuan"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"nzixuan"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"nzixuan"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AliasCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"nzixuan"},"content":"        // missing alias prefix","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"nzixuan"},"content":"        assertParseFailure(parser, VALID_ALIAS_D1 + COMMAND_DESC_D1,","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"nzixuan"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"nzixuan"},"content":"        // missing command prefix","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"nzixuan"},"content":"        assertParseFailure(parser, ALIAS_DESC_D1 + VALID_COMMAND_D1,","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"nzixuan"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"nzixuan"},"content":"        // all prefixes missing","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"nzixuan"},"content":"        assertParseFailure(parser, VALID_ALIAS_D1 + VALID_COMMAND_D1, expectedMessage);","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"nzixuan"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"nzixuan"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"nzixuan"},"content":"        // invalid alias","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"nzixuan"},"content":"        assertParseFailure(parser, INVALID_ALIAS_DESC + COMMAND_DESC_D1,","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"nzixuan"},"content":"                AliasCommandParser.MESSAGE_ALIAS_CONSTRAINTS);","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"nzixuan"},"content":"        // empty alias","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"nzixuan"},"content":"        assertParseFailure(parser, INVALID_EMPTY_ALIAS_DESC + COMMAND_DESC_D1,","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"nzixuan"},"content":"                AliasCommandParser.MESSAGE_ALIAS_CONSTRAINTS);","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"nzixuan"},"content":"        // invalid command","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"nzixuan"},"content":"        assertParseFailure(parser, ALIAS_DESC_D1 + INVALID_COMMAND_DESC,","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"nzixuan"},"content":"                AliasCommandParser.MESSAGE_COMMAND_CONSTRAINTS);","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"nzixuan"},"content":"        // non-empty preamble","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"nzixuan"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + ALIAS_DESC_D1 + COMMAND_DESC_D1,","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"nzixuan"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AliasCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"nzixuan"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"nzixuan":74}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"nzixuan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_FLAG;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"nzixuan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ITEM;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"nzixuan"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_ITEM));","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"nzixuan"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"nzixuan"},"content":"    public void parse_validEventArgs_returnsDeleteCommand() {","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"nzixuan"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_EVENT_FLAG + \" 1\", new DeleteCommand(INDEX_FIRST_ITEM, true));","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":38,"author":{"gitId":"nzixuan"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"nzixuan"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"nzixuan"},"content":"    public void parse_doubleInput_throwsParseException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"nzixuan"},"content":"        assertParseFailure(parser, \"1 \" + PREFIX_EVENT_FLAG + \" 1\",","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"nzixuan"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"nzixuan"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"nzixuan":14,"-":30}},{"path":"src/test/java/seedu/address/logic/parser/DetailsCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.logic.commands.DetailsCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.person.NameEqualKeywordPredicate;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"class DetailsCommandParserTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"    private DetailsCommandParser parser \u003d new DetailsCommandParser();","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DetailsCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":"    public void parse_validArgs_returnsDetailsCommand() {","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"yongxiangng"},"content":"        DetailsCommand firstExpectedDetailsCommand \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"yongxiangng"},"content":"                new DetailsCommand(new NameEqualKeywordPredicate(new Name(\"Alice Bob\")));","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"yongxiangng"},"content":"        DetailsCommand secondExpectedDetailsCommand \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"yongxiangng"},"content":"                new DetailsCommand(Index.fromOneBased(3));","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"yongxiangng"},"content":"        // No trailing and leading whitespace","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"yongxiangng"},"content":"        assertParseSuccess(parser, \"Alice Bob\", firstExpectedDetailsCommand);","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"yongxiangng"},"content":"        assertParseSuccess(parser, \"3\", secondExpectedDetailsCommand);","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"        // Leading whitespace","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"yongxiangng"},"content":"        assertParseSuccess(parser, \"      Alice Bob\", firstExpectedDetailsCommand);","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"yongxiangng"},"content":"        assertParseSuccess(parser, \"     3\", secondExpectedDetailsCommand);","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"yongxiangng"},"content":"        // Trailing whitespace","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"yongxiangng"},"content":"        assertParseSuccess(parser, \"Alice Bob    \", firstExpectedDetailsCommand);","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"yongxiangng"},"content":"        assertParseSuccess(parser, \"3     \", secondExpectedDetailsCommand);","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"yongxiangng"},"content":"        // Leading and trailing whitespace","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"yongxiangng"},"content":"        assertParseSuccess(parser, \"     Alice Bob    \", firstExpectedDetailsCommand);","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"yongxiangng"},"content":"        assertParseSuccess(parser, \"     3     \", secondExpectedDetailsCommand);","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"yongxiangng":47}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_DESC_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_DESC_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"nzixuan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ITEM;","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"nzixuan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_ITEM;","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"nzixuan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_ITEM;","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"ryanongra"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Telegram.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"ryanongra"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_TELEGRAM_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"nzixuan"},"content":"        Index targetIndex \u003d INDEX_SECOND_ITEM;","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":112,"author":{"gitId":"ryanongra"},"content":"                + EMAIL_DESC_AMY + TELEGRAM_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"ryanongra"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withTelegram(VALID_TELEGRAM_AMY)","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"nzixuan"},"content":"        Index targetIndex \u003d INDEX_FIRST_ITEM;","lastModifiedDate":"2021-10-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"nzixuan"},"content":"        Index targetIndex \u003d INDEX_THIRD_ITEM;","lastModifiedDate":"2021-10-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"ryanongra"},"content":"        userInput \u003d targetIndex.getOneBased() + TELEGRAM_DESC_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"ryanongra"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTelegram(VALID_TELEGRAM_AMY).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":170,"author":{"gitId":"nzixuan"},"content":"        Index targetIndex \u003d INDEX_FIRST_ITEM;","lastModifiedDate":"2021-10-26"},{"lineNumber":171,"author":{"gitId":"ryanongra"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + TELEGRAM_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"ryanongra"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + TELEGRAM_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"ryanongra"},"content":"                + PHONE_DESC_BOB + TELEGRAM_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"ryanongra"},"content":"                .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"ryanongra"},"content":"                .withTelegram(VALID_TELEGRAM_BOB)","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"ryanongra"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"nzixuan"},"content":"        Index targetIndex \u003d INDEX_FIRST_ITEM;","lastModifiedDate":"2021-10-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"ryanongra"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + TELEGRAM_DESC_BOB","lastModifiedDate":"2021-10-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"ryanongra"},"content":"                .withTelegram(VALID_TELEGRAM_BOB).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":205,"author":{"gitId":"nzixuan"},"content":"        Index targetIndex \u003d INDEX_THIRD_ITEM;","lastModifiedDate":"2021-10-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"ryanongra":19,"nzixuan":9,"-":185}},{"path":"src/test/java/seedu/address/logic/parser/EventCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EVENT_NAME;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_NAME_PARTY;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.testutil.TypicalEvents.PARTY_EVENT;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.logic.commands.EventCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"class EventCommandParserTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"    private EventCommandParser parser \u003d new EventCommandParser();","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"        Event expectedEvent \u003d new EventBuilder(PARTY_EVENT).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":"        // with preamble whitespace","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"yongxiangng"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + VALID_EVENT_NAME_PARTY,","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"yongxiangng"},"content":"                new EventCommand(expectedEvent));","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"yongxiangng"},"content":"        // without preamble whitespace","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"yongxiangng"},"content":"        assertParseSuccess(parser, VALID_EVENT_NAME_PARTY,","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"yongxiangng"},"content":"                new EventCommand(expectedEvent));","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"yongxiangng"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, EventCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"yongxiangng"},"content":"        // preamble whitespace","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"yongxiangng"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE, expectedMessage);","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"yongxiangng"},"content":"        // whitespace","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"yongxiangng"},"content":"        assertParseFailure(parser, \" \", expectedMessage);","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"yongxiangng"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"yongxiangng"},"content":"        // invalid eventName","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"yongxiangng"},"content":"        assertParseFailure(parser, INVALID_EVENT_NAME, EventName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"yongxiangng":50}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"dannytayjy"},"content":"import seedu.address.model.person.MatchesKeywordsPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"dannytayjy"},"content":"                new FindCommand(new MatchesKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"dannytayjy":2,"-":32}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"nzixuan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ITEM;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":"    private static final String INVALID_EVENT_NAME \u003d \"$@$%\";","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"    private static final String INVALID_TELEGRAM \u003d \" \";","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"yongxiangng"},"content":"    private static final String VALID_EVENT_NAME \u003d \"Cool Event\";","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"    private static final String VALID_TELEGRAM \u003d \"@validTelegram123\";","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"nzixuan"},"content":"        assertEquals(INDEX_FIRST_ITEM, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"nzixuan"},"content":"        assertEquals(INDEX_FIRST_ITEM, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"ryanongra"},"content":"    public void parseTelegram_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":105,"author":{"gitId":"ryanongra"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTelegram(INVALID_TELEGRAM));","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"ryanongra"},"content":"    public void parseTelegram_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"ryanongra"},"content":"        Telegram expectedTelegram \u003d new Telegram(VALID_TELEGRAM);","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"ryanongra"},"content":"        assertEquals(expectedTelegram, ParserUtil.parseTelegram(VALID_TELEGRAM));","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"ryanongra"},"content":"    public void parseTelegram_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"ryanongra"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_TELEGRAM + WHITESPACE;","lastModifiedDate":"2021-10-18"},{"lineNumber":117,"author":{"gitId":"ryanongra"},"content":"        Telegram expectedTelegram \u003d new Telegram(VALID_TELEGRAM);","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"ryanongra"},"content":"        assertEquals(expectedTelegram, ParserUtil.parseTelegram(addressWithWhitespace));","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":185,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":186,"author":{"gitId":"yongxiangng"},"content":"    public void parseEventName_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":187,"author":{"gitId":"yongxiangng"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEventName((String) null));","lastModifiedDate":"2021-10-16"},{"lineNumber":188,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":189,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":190,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":191,"author":{"gitId":"yongxiangng"},"content":"    public void parseEventName_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":192,"author":{"gitId":"yongxiangng"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEventName(INVALID_EVENT_NAME));","lastModifiedDate":"2021-10-16"},{"lineNumber":193,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":194,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":195,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":196,"author":{"gitId":"yongxiangng"},"content":"    public void parseEventName_validValueWithoutWhitespace_returnsEventName() throws Exception {","lastModifiedDate":"2021-10-16"},{"lineNumber":197,"author":{"gitId":"yongxiangng"},"content":"        EventName expectedEventName \u003d new EventName(VALID_EVENT_NAME);","lastModifiedDate":"2021-10-16"},{"lineNumber":198,"author":{"gitId":"yongxiangng"},"content":"        assertEquals(expectedEventName, ParserUtil.parseEventName(VALID_EVENT_NAME));","lastModifiedDate":"2021-10-16"},{"lineNumber":199,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":200,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":201,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":202,"author":{"gitId":"yongxiangng"},"content":"    public void parseEventName_validValueWithWhitespace_returnsTrimmedEventName() throws Exception {","lastModifiedDate":"2021-10-16"},{"lineNumber":203,"author":{"gitId":"yongxiangng"},"content":"        String eventNameWithWhitespace \u003d WHITESPACE + VALID_EVENT_NAME + WHITESPACE;","lastModifiedDate":"2021-10-16"},{"lineNumber":204,"author":{"gitId":"yongxiangng"},"content":"        EventName expectedEventName \u003d new EventName(VALID_EVENT_NAME);","lastModifiedDate":"2021-10-16"},{"lineNumber":205,"author":{"gitId":"yongxiangng"},"content":"        assertEquals(expectedEventName, ParserUtil.parseEventName(eventNameWithWhitespace));","lastModifiedDate":"2021-10-16"},{"lineNumber":206,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"yongxiangng":26,"nzixuan":3,"ryanongra":12,"-":166}},{"path":"src/test/java/seedu/address/logic/parser/RemovePersonFromEventCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EVENT_NAME_DESC_PARTY;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_NAME_PARTY;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"import seedu.address.logic.commands.RemovePersonFromEventCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"import seedu.address.model.event.EventNameEqualKeywordPredicate;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"import seedu.address.model.person.NameEqualKeywordPredicate;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"public class RemovePersonFromEventCommandParserTest {","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"    private RemovePersonFromEventCommandParser parser \u003d new RemovePersonFromEventCommandParser();","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"    public void parse_personMissing_throwsCommandException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"        Person person \u003d BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"        Event event \u003d new EventBuilder().withEventName(VALID_EVENT_NAME_PARTY).withPerson(person).build();","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"                RemovePersonFromEventCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"        assertParseFailure(parser, \" \" + EVENT_NAME_DESC_PARTY, expectedMessage);","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"    public void parse_eventMissing_throwsCommandException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"        Person person \u003d BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"        Event event \u003d new EventBuilder().withEventName(VALID_EVENT_NAME_PARTY).withPerson(person).build();","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"ryanongra"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"ryanongra"},"content":"                RemovePersonFromEventCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":"        assertParseFailure(parser, \" \" + NAME_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"    public void parse_allSpecificationsMissing_throwsCommandException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"        Person person \u003d BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"ryanongra"},"content":"        Event event \u003d new EventBuilder().withEventName(VALID_EVENT_NAME_PARTY).withPerson(person).build();","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"ryanongra"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"ryanongra"},"content":"                RemovePersonFromEventCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"ryanongra"},"content":"        assertParseFailure(parser, \" \", expectedMessage);","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"ryanongra"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"ryanongra"},"content":"    public void parse_allSpecificationsValid_success() {","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"ryanongra"},"content":"        Person person \u003d BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"ryanongra"},"content":"        Event event \u003d new EventBuilder().withEventName(VALID_EVENT_NAME_PARTY).withPerson(person).build();","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"ryanongra"},"content":"        RemovePersonFromEventCommand expectedCommand \u003d new RemovePersonFromEventCommand(","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"ryanongra"},"content":"                new NameEqualKeywordPredicate(person.getName()),","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"ryanongra"},"content":"                new EventNameEqualKeywordPredicate(event.getEventName()));","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"ryanongra"},"content":"        assertParseSuccess(parser, \" \" + NAME_DESC_BOB + \" \" + EVENT_NAME_DESC_PARTY,","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"ryanongra"},"content":"                expectedCommand);","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"ryanongra":65}},{"path":"src/test/java/seedu/address/logic/parser/RenameEventCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EVENT_NAME_DESC_PARTY;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EVENT_NAME;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_NAME_PARTY;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"import seedu.address.logic.commands.RenameEventCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"import seedu.address.testutil.RenameEventDescriptorBuilder;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"public class RenameEventCommandParserTest {","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, RenameEventCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"    private RenameEventCommandParser parser \u003d new RenameEventCommandParser();","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"    public void parse_missingNewName_failure() {","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"        // no index specified","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"        assertParseFailure(parser, VALID_EVENT_NAME_PARTY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"        // no field specified","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"        assertParseFailure(parser, \"1\", RenameEventCommand.MESSAGE_NOT_RENAMED);","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"        // no index and no field specified","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"        // negative index","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"ryanongra"},"content":"        assertParseFailure(parser, \"-5\" + VALID_EVENT_NAME_PARTY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":"        // zero index","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"        assertParseFailure(parser, \"0\" + VALID_EVENT_NAME_PARTY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"ryanongra"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"ryanongra"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"ryanongra"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"ryanongra"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"ryanongra"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EVENT_NAME,","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"ryanongra"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"ryanongra"},"content":"                RenameEventCommand.MESSAGE_USAGE)); // invalid name","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"ryanongra"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"ryanongra"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"ryanongra"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"ryanongra"},"content":"        String userInput \u003d targetIndex.getOneBased() + EVENT_NAME_DESC_PARTY;","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"ryanongra"},"content":"        RenameEventCommand.RenameEventDescriptor descriptor \u003d new RenameEventDescriptorBuilder()","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"ryanongra"},"content":"                .withName(VALID_EVENT_NAME_PARTY).build();","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"ryanongra"},"content":"        RenameEventCommand expectedCommand \u003d new RenameEventCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"ryanongra"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"ryanongra":69}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.testutil.TypicalEvents.PARTY_EVENT;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.event.exceptions.DuplicateEventException;","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":27,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"ryanongra"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTelegram(VALID_TELEGRAM_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"yongxiangng"},"content":"        AddressBookStub newData \u003d AddressBookStub.withPersons(newPersons);","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":62,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"yongxiangng"},"content":"    public void resetData_withDuplicateEvents_throwsDuplicateEventsException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"yongxiangng"},"content":"        // Two events with the same identity fields","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"yongxiangng"},"content":"        Event editedPartyEvent \u003d new EventBuilder(PARTY_EVENT).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"yongxiangng"},"content":"        List\u003cEvent\u003e newEvents \u003d Arrays.asList(PARTY_EVENT, editedPartyEvent);","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"yongxiangng"},"content":"        AddressBookStub newData \u003d AddressBookStub.withEvents(newEvents);","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"yongxiangng"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"ryanongra"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTelegram(VALID_TELEGRAM_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":102,"author":{"gitId":"yongxiangng"},"content":"    public void hasEvent_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":103,"author":{"gitId":"yongxiangng"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasEvent(null));","lastModifiedDate":"2021-10-16"},{"lineNumber":104,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":105,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":106,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":107,"author":{"gitId":"yongxiangng"},"content":"    public void hasEvent_eventNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"yongxiangng"},"content":"        assertFalse(addressBook.hasEvent(PARTY_EVENT));","lastModifiedDate":"2021-10-16"},{"lineNumber":109,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":111,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":112,"author":{"gitId":"yongxiangng"},"content":"    public void hasEvent_personInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-16"},{"lineNumber":113,"author":{"gitId":"yongxiangng"},"content":"        addressBook.addEvent(PARTY_EVENT);","lastModifiedDate":"2021-10-16"},{"lineNumber":114,"author":{"gitId":"yongxiangng"},"content":"        assertTrue(addressBook.hasEvent(PARTY_EVENT));","lastModifiedDate":"2021-10-16"},{"lineNumber":115,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":116,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":117,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":118,"author":{"gitId":"yongxiangng"},"content":"    public void hasEvent_eventWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-16"},{"lineNumber":119,"author":{"gitId":"yongxiangng"},"content":"        addressBook.addEvent(PARTY_EVENT);","lastModifiedDate":"2021-10-16"},{"lineNumber":120,"author":{"gitId":"yongxiangng"},"content":"        Event editedPartyEvent \u003d new EventBuilder(PARTY_EVENT).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":121,"author":{"gitId":"yongxiangng"},"content":"        assertTrue(addressBook.hasEvent(editedPartyEvent));","lastModifiedDate":"2021-10-16"},{"lineNumber":122,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":123,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":124,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":125,"author":{"gitId":"yongxiangng"},"content":"    public void getEventList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":126,"author":{"gitId":"yongxiangng"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getEventList().remove(0));","lastModifiedDate":"2021-10-16"},{"lineNumber":127,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":128,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"yongxiangng"},"content":"        private final ObservableList\u003cEvent\u003e events \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":136,"author":{"gitId":"yongxiangng"},"content":"        public static AddressBookStub withPersons(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2021-10-16"},{"lineNumber":137,"author":{"gitId":"yongxiangng"},"content":"            AddressBookStub ab \u003d new AddressBookStub();","lastModifiedDate":"2021-10-16"},{"lineNumber":138,"author":{"gitId":"yongxiangng"},"content":"            ab.persons.setAll(persons);","lastModifiedDate":"2021-10-16"},{"lineNumber":139,"author":{"gitId":"yongxiangng"},"content":"            return ab;","lastModifiedDate":"2021-10-16"},{"lineNumber":140,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":141,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":142,"author":{"gitId":"yongxiangng"},"content":"        public static AddressBookStub withEvents(Collection\u003cEvent\u003e events) {","lastModifiedDate":"2021-10-16"},{"lineNumber":143,"author":{"gitId":"yongxiangng"},"content":"            AddressBookStub ab \u003d new AddressBookStub();","lastModifiedDate":"2021-10-16"},{"lineNumber":144,"author":{"gitId":"yongxiangng"},"content":"            ab.events.setAll(events);","lastModifiedDate":"2021-10-16"},{"lineNumber":145,"author":{"gitId":"yongxiangng"},"content":"            return ab;","lastModifiedDate":"2021-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":148,"author":{"gitId":"yongxiangng"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"yongxiangng"},"content":"        public List\u003cEvent\u003e getEvents(Predicate\u003cEvent\u003e eventPredicate) {","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"yongxiangng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":151,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":153,"author":{"gitId":"yongxiangng"},"content":"        @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":154,"author":{"gitId":"yongxiangng"},"content":"        public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2021-10-16"},{"lineNumber":155,"author":{"gitId":"yongxiangng"},"content":"            return events;","lastModifiedDate":"2021-10-16"},{"lineNumber":156,"author":{"gitId":"yongxiangng"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":157,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":158,"author":{"gitId":"yongxiangng"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"yongxiangng"},"content":"        public List\u003cPerson\u003e getPersons(Predicate\u003cPerson\u003e personPredicate) {","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"yongxiangng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"yongxiangng":68,"ryanongra":3,"-":98}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.testutil.TypicalEvents.PARTY_EVENT;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"dannytayjy"},"content":"import seedu.address.model.person.MatchesKeywordsPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"yongxiangng"},"content":"    public void hasEvent_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"yongxiangng"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasEvent(null));","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":98,"author":{"gitId":"yongxiangng"},"content":"    public void hasEvent_eventNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-10-16"},{"lineNumber":99,"author":{"gitId":"yongxiangng"},"content":"        assertFalse(modelManager.hasEvent(PARTY_EVENT));","lastModifiedDate":"2021-10-16"},{"lineNumber":100,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":101,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":102,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":103,"author":{"gitId":"yongxiangng"},"content":"    public void hasEvent_eventInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-16"},{"lineNumber":104,"author":{"gitId":"yongxiangng"},"content":"        modelManager.addEvent(PARTY_EVENT);","lastModifiedDate":"2021-10-16"},{"lineNumber":105,"author":{"gitId":"yongxiangng"},"content":"        assertTrue(modelManager.hasEvent(PARTY_EVENT));","lastModifiedDate":"2021-10-16"},{"lineNumber":106,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":107,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"yongxiangng"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder()","lastModifiedDate":"2021-10-16"},{"lineNumber":116,"author":{"gitId":"yongxiangng"},"content":"                .withPerson(ALICE)","lastModifiedDate":"2021-10-16"},{"lineNumber":117,"author":{"gitId":"yongxiangng"},"content":"                .withPerson(BENSON)","lastModifiedDate":"2021-10-16"},{"lineNumber":118,"author":{"gitId":"yongxiangng"},"content":"                .withEvent(PARTY_EVENT)","lastModifiedDate":"2021-10-16"},{"lineNumber":119,"author":{"gitId":"yongxiangng"},"content":"                .build();","lastModifiedDate":"2021-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":142,"author":{"gitId":"dannytayjy"},"content":"        modelManager.updateFilteredPersonList(new MatchesKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-10-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"yongxiangng":22,"dannytayjy":2,"-":129}},{"path":"src/test/java/seedu/address/model/event/EventNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"class EventNameTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EventName(null));","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"    public void constructor_invalidEventName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new EventName(invalidName));","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"    public void isValidEventName() {","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"        // null name","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":"        assertThrows(NullPointerException.class, () -\u003e EventName.isValidEventName(null));","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"yongxiangng"},"content":"        // invalid name","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"yongxiangng"},"content":"        assertFalse(EventName.isValidEventName(\"\")); // empty string","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"yongxiangng"},"content":"        assertFalse(EventName.isValidEventName(\" \")); // spaces only","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"yongxiangng"},"content":"        assertFalse(EventName.isValidEventName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"yongxiangng"},"content":"        assertFalse(EventName.isValidEventName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"yongxiangng"},"content":"        // valid name","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"yongxiangng"},"content":"        assertTrue(EventName.isValidEventName(\"peter jack\")); // alphabets only","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"        assertTrue(EventName.isValidEventName(\"12345\")); // numbers only","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"yongxiangng"},"content":"        assertTrue(EventName.isValidEventName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"yongxiangng"},"content":"        assertTrue(EventName.isValidEventName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"yongxiangng"},"content":"        assertTrue(EventName.isValidEventName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"yongxiangng"},"content":"    public void copy() {","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"yongxiangng"},"content":"        EventName eventName \u003d new EventName(\"Interesting Name\");","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"yongxiangng"},"content":"        assertEquals(eventName, eventName.copy());","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"yongxiangng":46}},{"path":"src/test/java/seedu/address/model/event/EventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_NAME_DINNER;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.testutil.TypicalEvents.DINNER_EVENT;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.testutil.TypicalEvents.PARTY_EVENT;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"class EventTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"    public void isSameEvent() {","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"        assertTrue(PARTY_EVENT.isSameEvent(PARTY_EVENT));","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"        assertFalse(PARTY_EVENT.isSameEvent(null));","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":"        Event editedEventAttendee \u003d new EventBuilder(PARTY_EVENT).withPerson(ALICE).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"yongxiangng"},"content":"        assertTrue(PARTY_EVENT.isSameEvent(editedEventAttendee));","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"yongxiangng"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"yongxiangng"},"content":"        Event editedEventName \u003d new EventBuilder(PARTY_EVENT).withEventName(\"HAHA Name\").build();","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"yongxiangng"},"content":"        assertFalse(PARTY_EVENT.isSameEvent(editedEventName));","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"yongxiangng"},"content":"        // different name casing, all other attributes same -\u003e return false","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"yongxiangng"},"content":"        Event lowerCaseEvent \u003d new EventBuilder(PARTY_EVENT)","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"yongxiangng"},"content":"                .withEventName(VALID_EVENT_NAME_DINNER.toLowerCase()).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"        assertFalse(PARTY_EVENT.isSameEvent(lowerCaseEvent));","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"yongxiangng"},"content":"        // event name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"yongxiangng"},"content":"        String eventNameWithTrailingSpaces \u003d VALID_EVENT_NAME_DINNER + \" \";","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"yongxiangng"},"content":"        editedEventName \u003d new EventBuilder(PARTY_EVENT).withEventName(eventNameWithTrailingSpaces).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"yongxiangng"},"content":"        assertFalse(PARTY_EVENT.isSameEvent(editedEventName));","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"yongxiangng"},"content":"    public void equals() {","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"yongxiangng"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"yongxiangng"},"content":"        Event partyEventCopy \u003d new EventBuilder(PARTY_EVENT).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"yongxiangng"},"content":"        assertTrue(PARTY_EVENT.equals(partyEventCopy));","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"yongxiangng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"yongxiangng"},"content":"        assertTrue(PARTY_EVENT.equals(PARTY_EVENT));","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"yongxiangng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"yongxiangng"},"content":"        assertFalse(PARTY_EVENT.equals(null));","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"yongxiangng"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"yongxiangng"},"content":"        assertFalse(PARTY_EVENT.equals(5));","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"yongxiangng"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"yongxiangng"},"content":"        assertFalse(PARTY_EVENT.equals(DINNER_EVENT));","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"yongxiangng"},"content":"        // different eventName -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"yongxiangng"},"content":"        Event editedPartyEvent \u003d new EventBuilder(PARTY_EVENT).withEventName(VALID_EVENT_NAME_DINNER).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"yongxiangng"},"content":"        assertFalse(PARTY_EVENT.equals(editedPartyEvent));","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"yongxiangng"},"content":"        // event with attendee","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"yongxiangng"},"content":"        Event firstAttendeeEvent \u003d new EventBuilder(PARTY_EVENT).withPerson(ALICE).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"yongxiangng"},"content":"        assertFalse(PARTY_EVENT.equals(firstAttendeeEvent));","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"yongxiangng"},"content":"        // event with same attendee","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"yongxiangng"},"content":"        Event firstAttendeeEventCopy \u003d new EventBuilder(PARTY_EVENT).withPerson(ALICE).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"yongxiangng"},"content":"        assertTrue(firstAttendeeEvent.equals(firstAttendeeEventCopy));","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"yongxiangng"},"content":"        // event with different attendee","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"yongxiangng"},"content":"        Event secondAttendeeEvent \u003d new EventBuilder(PARTY_EVENT).withPerson(BOB).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"yongxiangng"},"content":"        assertFalse(firstAttendeeEvent.equals(secondAttendeeEvent));","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"yongxiangng":77}},{"path":"src/test/java/seedu/address/model/event/UniqueEventListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.testutil.TypicalEvents.DINNER_EVENT;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.testutil.TypicalEvents.PARTY_EVENT;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"import java.util.List;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.event.exceptions.DuplicateEventException;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"class UniqueEventListTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"    private final UniqueEventList uniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":"    public void contains_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"yongxiangng"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.contains(null));","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"yongxiangng"},"content":"    public void contains_eventNotInList_returnsFalse() {","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"yongxiangng"},"content":"        assertFalse(uniqueEventList.contains(PARTY_EVENT));","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"    public void contains_eventInList_returnsTrue() {","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"yongxiangng"},"content":"        uniqueEventList.add(PARTY_EVENT);","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"yongxiangng"},"content":"        assertTrue(uniqueEventList.contains(PARTY_EVENT));","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"yongxiangng"},"content":"    public void contains_eventWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"yongxiangng"},"content":"        uniqueEventList.add(PARTY_EVENT);","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"yongxiangng"},"content":"        Event editedEvent \u003d new EventBuilder(PARTY_EVENT).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"yongxiangng"},"content":"        assertTrue(uniqueEventList.contains(editedEvent));","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"yongxiangng"},"content":"    public void add_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"yongxiangng"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.add(null));","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"yongxiangng"},"content":"    public void add_duplicateEvent_throwsDuplicateEventException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"yongxiangng"},"content":"        uniqueEventList.add(PARTY_EVENT);","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"yongxiangng"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e uniqueEventList.add(PARTY_EVENT));","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"yongxiangng"},"content":"    public void setEvent_nullTargetEvent_throwsNullPointerException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"yongxiangng"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvent(null, PARTY_EVENT));","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"yongxiangng"},"content":"    public void setEvent_nullEditedEvent_throwsNullPointerException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"yongxiangng"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvent(PARTY_EVENT, null));","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"yongxiangng"},"content":"    public void setEvent_targetEventNotInList_throwsEventNotFoundException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"yongxiangng"},"content":"        assertThrows(EventNotFoundException.class, () -\u003e uniqueEventList.setEvent(PARTY_EVENT, PARTY_EVENT));","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"yongxiangng"},"content":"    public void setEvent_editedEventIsSameEvent_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"yongxiangng"},"content":"        uniqueEventList.add(PARTY_EVENT);","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"yongxiangng"},"content":"        uniqueEventList.setEvent(PARTY_EVENT, PARTY_EVENT);","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"yongxiangng"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"yongxiangng"},"content":"        expectedUniqueEventList.add(PARTY_EVENT);","lastModifiedDate":"2021-10-16"},{"lineNumber":79,"author":{"gitId":"yongxiangng"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2021-10-16"},{"lineNumber":80,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"yongxiangng"},"content":"    public void setEvent_editedEventHasSameIdentity_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"yongxiangng"},"content":"        uniqueEventList.add(PARTY_EVENT);","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"yongxiangng"},"content":"        Event editedAlice \u003d new EventBuilder(PARTY_EVENT).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"yongxiangng"},"content":"        uniqueEventList.setEvent(PARTY_EVENT, editedAlice);","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"yongxiangng"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2021-10-16"},{"lineNumber":88,"author":{"gitId":"yongxiangng"},"content":"        expectedUniqueEventList.add(editedAlice);","lastModifiedDate":"2021-10-16"},{"lineNumber":89,"author":{"gitId":"yongxiangng"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2021-10-16"},{"lineNumber":90,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":92,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"yongxiangng"},"content":"    public void setEvent_editedEventHasDifferentIdentity_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"yongxiangng"},"content":"        uniqueEventList.add(PARTY_EVENT);","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"yongxiangng"},"content":"        uniqueEventList.setEvent(PARTY_EVENT, DINNER_EVENT);","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"yongxiangng"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"yongxiangng"},"content":"        expectedUniqueEventList.add(DINNER_EVENT);","lastModifiedDate":"2021-10-16"},{"lineNumber":98,"author":{"gitId":"yongxiangng"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2021-10-16"},{"lineNumber":99,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":100,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":101,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":102,"author":{"gitId":"yongxiangng"},"content":"    public void setEvent_editedEventHasNonUniqueIdentity_throwsDuplicateEventException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":103,"author":{"gitId":"yongxiangng"},"content":"        uniqueEventList.add(PARTY_EVENT);","lastModifiedDate":"2021-10-16"},{"lineNumber":104,"author":{"gitId":"yongxiangng"},"content":"        uniqueEventList.add(DINNER_EVENT);","lastModifiedDate":"2021-10-16"},{"lineNumber":105,"author":{"gitId":"yongxiangng"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e uniqueEventList.setEvent(PARTY_EVENT, DINNER_EVENT));","lastModifiedDate":"2021-10-16"},{"lineNumber":106,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":107,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":109,"author":{"gitId":"yongxiangng"},"content":"    public void remove_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"yongxiangng"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.remove(null));","lastModifiedDate":"2021-10-16"},{"lineNumber":111,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":112,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":113,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":114,"author":{"gitId":"yongxiangng"},"content":"    public void remove_eventDoesNotExist_throwsEventNotFoundException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":115,"author":{"gitId":"yongxiangng"},"content":"        assertThrows(EventNotFoundException.class, () -\u003e uniqueEventList.remove(PARTY_EVENT));","lastModifiedDate":"2021-10-16"},{"lineNumber":116,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":117,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":118,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":119,"author":{"gitId":"yongxiangng"},"content":"    public void remove_existingEvent_removesEvent() {","lastModifiedDate":"2021-10-16"},{"lineNumber":120,"author":{"gitId":"yongxiangng"},"content":"        uniqueEventList.add(PARTY_EVENT);","lastModifiedDate":"2021-10-16"},{"lineNumber":121,"author":{"gitId":"yongxiangng"},"content":"        uniqueEventList.remove(PARTY_EVENT);","lastModifiedDate":"2021-10-16"},{"lineNumber":122,"author":{"gitId":"yongxiangng"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2021-10-16"},{"lineNumber":123,"author":{"gitId":"yongxiangng"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2021-10-16"},{"lineNumber":124,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":125,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":126,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":127,"author":{"gitId":"yongxiangng"},"content":"    public void setEvents_nullUniqueEventList_throwsNullPointerException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":128,"author":{"gitId":"yongxiangng"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvents((UniqueEventList) null));","lastModifiedDate":"2021-10-16"},{"lineNumber":129,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":130,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":131,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":132,"author":{"gitId":"yongxiangng"},"content":"    public void setEvents_uniqueEventList_replacesOwnListWithProvidedUniqueEventList() {","lastModifiedDate":"2021-10-16"},{"lineNumber":133,"author":{"gitId":"yongxiangng"},"content":"        uniqueEventList.add(PARTY_EVENT);","lastModifiedDate":"2021-10-16"},{"lineNumber":134,"author":{"gitId":"yongxiangng"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2021-10-16"},{"lineNumber":135,"author":{"gitId":"yongxiangng"},"content":"        expectedUniqueEventList.add(DINNER_EVENT);","lastModifiedDate":"2021-10-16"},{"lineNumber":136,"author":{"gitId":"yongxiangng"},"content":"        uniqueEventList.setEvents(expectedUniqueEventList);","lastModifiedDate":"2021-10-16"},{"lineNumber":137,"author":{"gitId":"yongxiangng"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2021-10-16"},{"lineNumber":138,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":139,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":140,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":141,"author":{"gitId":"yongxiangng"},"content":"    public void setEvents_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":142,"author":{"gitId":"yongxiangng"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvents((List\u003cEvent\u003e) null));","lastModifiedDate":"2021-10-16"},{"lineNumber":143,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":144,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":145,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":146,"author":{"gitId":"yongxiangng"},"content":"    public void setEvents_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-10-16"},{"lineNumber":147,"author":{"gitId":"yongxiangng"},"content":"        uniqueEventList.add(PARTY_EVENT);","lastModifiedDate":"2021-10-16"},{"lineNumber":148,"author":{"gitId":"yongxiangng"},"content":"        List\u003cEvent\u003e eventList \u003d Collections.singletonList(DINNER_EVENT);","lastModifiedDate":"2021-10-16"},{"lineNumber":149,"author":{"gitId":"yongxiangng"},"content":"        uniqueEventList.setEvents(eventList);","lastModifiedDate":"2021-10-16"},{"lineNumber":150,"author":{"gitId":"yongxiangng"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2021-10-16"},{"lineNumber":151,"author":{"gitId":"yongxiangng"},"content":"        expectedUniqueEventList.add(DINNER_EVENT);","lastModifiedDate":"2021-10-16"},{"lineNumber":152,"author":{"gitId":"yongxiangng"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2021-10-16"},{"lineNumber":153,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":154,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":155,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":156,"author":{"gitId":"yongxiangng"},"content":"    public void setEvents_listWithDuplicateEvents_throwsDuplicateEventException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":157,"author":{"gitId":"yongxiangng"},"content":"        List\u003cEvent\u003e listWithDuplicateEvents \u003d Arrays.asList(PARTY_EVENT, PARTY_EVENT);","lastModifiedDate":"2021-10-16"},{"lineNumber":158,"author":{"gitId":"yongxiangng"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e uniqueEventList.setEvents(listWithDuplicateEvents));","lastModifiedDate":"2021-10-16"},{"lineNumber":159,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":160,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":161,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":162,"author":{"gitId":"yongxiangng"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":163,"author":{"gitId":"yongxiangng"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-10-16"},{"lineNumber":164,"author":{"gitId":"yongxiangng"},"content":"            -\u003e uniqueEventList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-10-16"},{"lineNumber":165,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":166,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":168,"author":{"gitId":"yongxiangng"},"content":"    public void getEvents() {","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"yongxiangng"},"content":"        uniqueEventList.add(PARTY_EVENT);","lastModifiedDate":"2021-10-21"},{"lineNumber":170,"author":{"gitId":"yongxiangng"},"content":"        assertEquals(uniqueEventList.getEvents(new EventNameEqualKeywordPredicate(PARTY_EVENT.getEventName())),","lastModifiedDate":"2021-10-21"},{"lineNumber":171,"author":{"gitId":"yongxiangng"},"content":"                Collections.singletonList(PARTY_EVENT));","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"yongxiangng"},"content":"        assertEquals(uniqueEventList.getEvents(new EventNameEqualKeywordPredicate(DINNER_EVENT.getEventName())),","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"yongxiangng"},"content":"                Collections.EMPTY_LIST);","lastModifiedDate":"2021-10-21"},{"lineNumber":175,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"yongxiangng":176}},{"path":"src/test/java/seedu/address/model/person/MatchesKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"dannytayjy"},"content":"public class MatchesKeywordsPredicateTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"dannytayjy"},"content":"        MatchesKeywordsPredicate firstPredicate \u003d new MatchesKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"dannytayjy"},"content":"        MatchesKeywordsPredicate secondPredicate \u003d new MatchesKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"dannytayjy"},"content":"        MatchesKeywordsPredicate firstPredicateCopy \u003d new MatchesKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"dannytayjy"},"content":"    public void test_matchesKeywords_returnsTrue() {","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"dannytayjy"},"content":"        MatchesKeywordsPredicate predicate \u003d new MatchesKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"dannytayjy"},"content":"        predicate \u003d new MatchesKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"dannytayjy"},"content":"        predicate \u003d new MatchesKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"dannytayjy"},"content":"        predicate \u003d new MatchesKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"dannytayjy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"dannytayjy"},"content":"        // Multiple keywords (name, phone, email, telegram)","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"dannytayjy"},"content":"        predicate \u003d new MatchesKeywordsPredicate(Arrays.asList(\"Alice\", \"54321\", \"carol@email.com\", \"@david\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"dannytayjy"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"dannytayjy"},"content":"                .withEmail(\"alice@email.com\").withTelegram(\"@alice\").build()));","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"dannytayjy"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Bob\").withPhone(\"54321\")","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"dannytayjy"},"content":"                .withEmail(\"bob@email.com\").withTelegram(\"@bob\").build()));","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"dannytayjy"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Carol\").withPhone(\"67890\")","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"dannytayjy"},"content":"                .withEmail(\"carol@email.com\").withTelegram(\"@carol\").build()));","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"dannytayjy"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"David\").withPhone(\"09876\")","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"dannytayjy"},"content":"                .withEmail(\"david@email.com\").withTelegram(\"@david\").build()));","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"dannytayjy"},"content":"    public void test_doesNotMatchKeywords_returnsFalse() {","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"dannytayjy"},"content":"        MatchesKeywordsPredicate predicate \u003d new MatchesKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"dannytayjy"},"content":"        predicate \u003d new MatchesKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"dannytayjy":23,"-":58}},{"path":"src/test/java/seedu/address/model/person/NameEqualKeywordPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"class NameEqualKeywordPredicateTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"    public void equals() {","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"        String firstKeyword \u003d \"keyword\";","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"        String secondKeyword \u003d \"Keyword\";","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"        String thirdKeyword \u003d \"keyword \";","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"        NameEqualKeywordPredicate firstPredicate \u003d new NameEqualKeywordPredicate(new Name(firstKeyword));","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"        NameEqualKeywordPredicate secondPredicate \u003d new NameEqualKeywordPredicate(new Name(secondKeyword));","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"        NameEqualKeywordPredicate thirdPredicate \u003d new NameEqualKeywordPredicate(new Name(thirdKeyword));","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":"        NameEqualKeywordPredicate firstPredicateCopy \u003d new NameEqualKeywordPredicate(new Name(firstKeyword));","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"yongxiangng"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"yongxiangng"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"yongxiangng"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"yongxiangng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"yongxiangng"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"yongxiangng"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"yongxiangng"},"content":"        // extra spacing -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"yongxiangng"},"content":"        assertFalse(thirdPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"yongxiangng"},"content":"    public void test_nameMatchKeyword_returnsTrue() {","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"yongxiangng"},"content":"        // Exact 1 word match","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"yongxiangng"},"content":"        NameEqualKeywordPredicate predicate \u003d new NameEqualKeywordPredicate(new Name(\"Alice\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"yongxiangng"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"yongxiangng"},"content":"        // Exact 2 word match","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"yongxiangng"},"content":"        predicate \u003d new NameEqualKeywordPredicate(new Name(\"Alice Bob\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"yongxiangng"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"yongxiangng"},"content":"    public void test_nameDoesNotMatchKeyword_returnsFalse() {","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"yongxiangng"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"yongxiangng"},"content":"        NameEqualKeywordPredicate predicate \u003d new NameEqualKeywordPredicate(new Name(\"Carol\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"yongxiangng"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"yongxiangng"},"content":"        // Partial match","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"yongxiangng"},"content":"        predicate \u003d new NameEqualKeywordPredicate(new Name(\"Carol\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"yongxiangng"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Caroline\").build()));","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"yongxiangng"},"content":"        // Partial match 2 words","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"yongxiangng"},"content":"        predicate \u003d new NameEqualKeywordPredicate(new Name(\"Bob\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"yongxiangng"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Bob boy\").build()));","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"yongxiangng"},"content":"        // Predicate with more words than person","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"yongxiangng"},"content":"        predicate \u003d new NameEqualKeywordPredicate(new Name(\"Bob the builder\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"yongxiangng"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Bob\").build()));","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"yongxiangng":70}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"                .withTelegram(VALID_TELEGRAM_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"ryanongra"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTelegram(VALID_TELEGRAM_BOB).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"ryanongra":3,"-":88}},{"path":"src/test/java/seedu/address/model/person/TelegramTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"public class TelegramTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Telegram(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"    public void constructor_invalidTelegram_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"        String invalidTelegram \u003d \"\";","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Telegram(invalidTelegram));","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"    public void isValidTelegram() {","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"        // null Telegram","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"        assertThrows(NullPointerException.class, () -\u003e Telegram.isValidTelegram(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"        // invalid telegram handles","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"        assertFalse(Telegram.isValidTelegram(\"\")); // empty string","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"        assertFalse(Telegram.isValidTelegram(\" \")); // spaces only","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"        // valid telegram handles","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"        assertTrue(Telegram.isValidTelegram(\"@validTelegramHandle\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"        assertTrue(Telegram.isValidTelegram(\"i\")); // one character","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"        assertTrue(Telegram","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"                .isValidTelegram(\"@tttttttttttttttttttttttttttttttttttttttttttttttttttt\")); // long telegram handle","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"ryanongra":37}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTelegram(VALID_TELEGRAM_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"ryanongra"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTelegram(VALID_TELEGRAM_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":171,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"yongxiangng"},"content":"    public void getPersons() {","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"yongxiangng"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"yongxiangng"},"content":"        assertEquals(uniquePersonList.getPersons(new NameEqualKeywordPredicate(ALICE.getName())),","lastModifiedDate":"2021-10-21"},{"lineNumber":175,"author":{"gitId":"yongxiangng"},"content":"                Collections.singletonList(ALICE));","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":177,"author":{"gitId":"yongxiangng"},"content":"        assertEquals(uniquePersonList.getPersons(new NameEqualKeywordPredicate(BOB.getName())),","lastModifiedDate":"2021-10-21"},{"lineNumber":178,"author":{"gitId":"yongxiangng"},"content":"                Collections.EMPTY_LIST);","lastModifiedDate":"2021-10-21"},{"lineNumber":179,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":180,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":181,"author":{"gitId":"ryanongra"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":182,"author":{"gitId":"ryanongra"},"content":"    public void size() {","lastModifiedDate":"2021-10-27"},{"lineNumber":183,"author":{"gitId":"ryanongra"},"content":"        // empty list","lastModifiedDate":"2021-10-27"},{"lineNumber":184,"author":{"gitId":"ryanongra"},"content":"        assertEquals(0, uniquePersonList.size());","lastModifiedDate":"2021-10-27"},{"lineNumber":185,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":186,"author":{"gitId":"ryanongra"},"content":"        // 1 person list","lastModifiedDate":"2021-10-27"},{"lineNumber":187,"author":{"gitId":"ryanongra"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2021-10-27"},{"lineNumber":188,"author":{"gitId":"ryanongra"},"content":"        assertEquals(1, uniquePersonList.size());","lastModifiedDate":"2021-10-27"},{"lineNumber":189,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":190,"author":{"gitId":"ryanongra"},"content":"        // 2 persons list","lastModifiedDate":"2021-10-27"},{"lineNumber":191,"author":{"gitId":"ryanongra"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2021-10-27"},{"lineNumber":192,"author":{"gitId":"ryanongra"},"content":"        assertEquals(2, uniquePersonList.size());","lastModifiedDate":"2021-10-27"},{"lineNumber":193,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":194,"author":{"gitId":"ryanongra"},"content":"        // remove 1 person","lastModifiedDate":"2021-10-27"},{"lineNumber":195,"author":{"gitId":"ryanongra"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2021-10-27"},{"lineNumber":196,"author":{"gitId":"ryanongra"},"content":"        assertEquals(1, uniquePersonList.size());","lastModifiedDate":"2021-10-27"},{"lineNumber":197,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":198,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":199,"author":{"gitId":"yongxiangng"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":200,"author":{"gitId":"yongxiangng"},"content":"    public void isEmpty() {","lastModifiedDate":"2021-10-21"},{"lineNumber":201,"author":{"gitId":"yongxiangng"},"content":"        // empty list","lastModifiedDate":"2021-10-21"},{"lineNumber":202,"author":{"gitId":"yongxiangng"},"content":"        assertTrue(uniquePersonList.isEmpty());","lastModifiedDate":"2021-10-21"},{"lineNumber":203,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":204,"author":{"gitId":"yongxiangng"},"content":"        // 1 person list","lastModifiedDate":"2021-10-21"},{"lineNumber":205,"author":{"gitId":"yongxiangng"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2021-10-21"},{"lineNumber":206,"author":{"gitId":"yongxiangng"},"content":"        assertFalse(uniquePersonList.isEmpty());","lastModifiedDate":"2021-10-21"},{"lineNumber":207,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":208,"author":{"gitId":"yongxiangng"},"content":"        // empty list","lastModifiedDate":"2021-10-21"},{"lineNumber":209,"author":{"gitId":"yongxiangng"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2021-10-21"},{"lineNumber":210,"author":{"gitId":"yongxiangng"},"content":"        assertTrue(uniquePersonList.isEmpty());","lastModifiedDate":"2021-10-21"},{"lineNumber":211,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":212,"author":{"gitId":"yongxiangng"},"content":"        // add 2 persons and remove 1","lastModifiedDate":"2021-10-21"},{"lineNumber":213,"author":{"gitId":"yongxiangng"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2021-10-21"},{"lineNumber":214,"author":{"gitId":"yongxiangng"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2021-10-21"},{"lineNumber":215,"author":{"gitId":"yongxiangng"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2021-10-21"},{"lineNumber":216,"author":{"gitId":"yongxiangng"},"content":"        assertFalse(uniquePersonList.isEmpty());","lastModifiedDate":"2021-10-21"},{"lineNumber":217,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"yongxiangng":30,"ryanongra":21,"-":167}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.testutil.TypicalPersons.NO_EMAIL_BENSON;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.testutil.TypicalPersons.NO_PHONE_BENSON;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.testutil.TypicalPersons.NO_TELE_BENSON;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"    private static final String INVALID_TELEGRAM \u003d \" \";","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"    private static final String VALID_TELEGRAM \u003d BENSON.getTelegram().toString();","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"ryanongra"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_TELEGRAM, VALID_TAGS);","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"ryanongra"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_TELEGRAM, VALID_TAGS);","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"ryanongra"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_TELEGRAM, VALID_TAGS);","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"ryanongra"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_TELEGRAM, VALID_TAGS);","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"ryanongra"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"ryanongra"},"content":"    public void toModelType_unspecifiedPhone_returnsPerson() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"ryanongra"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, Phone.UNSPECIFIED_INPUT, VALID_EMAIL,","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"ryanongra"},"content":"                VALID_TELEGRAM, VALID_TAGS);","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"ryanongra"},"content":"        assertEquals(NO_PHONE_BENSON, person.toModelType());","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"ryanongra"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_TELEGRAM, VALID_TAGS);","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"ryanongra"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_TELEGRAM, VALID_TAGS);","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"ryanongra"},"content":"    public void toModelType_unspecifiedEmail_returnsPerson() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"ryanongra"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, Email.UNSPECIFIED_INPUT,","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"ryanongra"},"content":"                VALID_TELEGRAM, VALID_TAGS);","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"ryanongra"},"content":"        assertEquals(NO_EMAIL_BENSON, person.toModelType());","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"ryanongra"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"ryanongra"},"content":"    public void toModelType_invalidTelegram_throwsIllegalValueException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"ryanongra"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_TELEGRAM, VALID_TAGS);","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"ryanongra"},"content":"        String expectedMessage \u003d Telegram.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"ryanongra"},"content":"    public void toModelType_nullTelegram_throwsIllegalValueException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"ryanongra"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Telegram.class.getSimpleName());","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"ryanongra"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"ryanongra"},"content":"    public void toModelType_unspecifiedTelegram_returnsPerson() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"ryanongra"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"ryanongra"},"content":"                Telegram.UNSPECIFIED_INPUT, VALID_TAGS);","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"ryanongra"},"content":"        assertEquals(NO_TELE_BENSON, person.toModelType());","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"ryanongra"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_TELEGRAM, invalidTags);","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ryanongra":39,"-":95}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2016-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"yongxiangng"},"content":"     * Adds a new {@code Event} to the {@code AddressBook} that we are building.","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"    public AddressBookBuilder withEvent(Event event) {","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"yongxiangng"},"content":"        addressBook.addEvent(event);","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"yongxiangng"},"content":"        return this;","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yongxiangng":9,"-":34}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"        descriptor.setTelegram(person.getTelegram());","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"ryanongra"},"content":"     * Sets the {@code Telegram} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"ryanongra"},"content":"    public EditPersonDescriptorBuilder withTelegram(String telegram) {","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"ryanongra"},"content":"        descriptor.setTelegram(new Telegram(telegram));","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"ryanongra":5,"-":82}},{"path":"src/test/java/seedu/address/testutil/EventBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"public class EventBuilder {","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"    public static final String DEFAULT_EVENT_NAME \u003d \"CS2103 Party\";","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"    private EventName eventName;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"    private UniquePersonList attendees;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"     * Creates a {@code EventBuilder} with the default details.","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"    public EventBuilder() {","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"        eventName \u003d new EventName(DEFAULT_EVENT_NAME);","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"        attendees \u003d new UniquePersonList();","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"     * Initializes the EventBuilder with the data of {@code eventToCopy}.","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"yongxiangng"},"content":"    public EventBuilder(Event eventToCopy) {","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"yongxiangng"},"content":"        eventName \u003d eventToCopy.getEventName();","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"yongxiangng"},"content":"        attendees \u003d eventToCopy.getAttendees();","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"yongxiangng"},"content":"     * Sets the {@code EventName} of the {@code Event} that we are building.","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"yongxiangng"},"content":"    public EventBuilder withEventName(String eventName) {","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"        this.eventName \u003d new EventName(eventName);","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"yongxiangng"},"content":"        return this;","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"yongxiangng"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"yongxiangng"},"content":"     * Adds a {@code Person} to the {@code UniquePersonList} of the {@code Event} that we are building.","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"yongxiangng"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"yongxiangng"},"content":"    public EventBuilder withPerson(Person person) {","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"yongxiangng"},"content":"        this.attendees.add(person);","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"yongxiangng"},"content":"        return this;","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"yongxiangng"},"content":"    public Event build() {","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"yongxiangng"},"content":"        return new Event(eventName, attendees);","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"yongxiangng":51}},{"path":"src/test/java/seedu/address/testutil/ModelStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.event.EventNameEqualKeywordPredicate;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.person.NameEqualKeywordPredicate;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"/**","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":" * A default model stub that have all of the methods failing.","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":" */","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"public class ModelStub implements Model {","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"yongxiangng"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"yongxiangng"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"yongxiangng"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"yongxiangng"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"yongxiangng"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"yongxiangng"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"yongxiangng"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"yongxiangng"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"yongxiangng"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"yongxiangng"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"yongxiangng"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"yongxiangng"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"yongxiangng"},"content":"    public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"yongxiangng"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"yongxiangng"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"yongxiangng"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"yongxiangng"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"yongxiangng"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"yongxiangng"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"yongxiangng"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"yongxiangng"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"yongxiangng"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":79,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":80,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"yongxiangng"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"yongxiangng"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"yongxiangng"},"content":"    public List\u003cPerson\u003e getPersons(Predicate\u003cPerson\u003e personPredicate) {","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"yongxiangng"},"content":"        throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":92,"author":{"gitId":"yongxiangng"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"yongxiangng"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"yongxiangng"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-16"},{"lineNumber":98,"author":{"gitId":"yongxiangng"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":99,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":100,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":101,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":102,"author":{"gitId":"yongxiangng"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2021-10-16"},{"lineNumber":103,"author":{"gitId":"yongxiangng"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":104,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":105,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":106,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":107,"author":{"gitId":"yongxiangng"},"content":"    public void deleteEvent(Event target) {","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"yongxiangng"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":109,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":111,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":112,"author":{"gitId":"yongxiangng"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2021-10-16"},{"lineNumber":113,"author":{"gitId":"yongxiangng"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":114,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":115,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":116,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"yongxiangng"},"content":"    public List\u003cEvent\u003e getEvents(Predicate\u003cEvent\u003e eventPredicate) {","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"yongxiangng"},"content":"        throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":122,"author":{"gitId":"yongxiangng"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2021-10-16"},{"lineNumber":123,"author":{"gitId":"yongxiangng"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":124,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":125,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":126,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":127,"author":{"gitId":"yongxiangng"},"content":"    public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2021-10-16"},{"lineNumber":128,"author":{"gitId":"yongxiangng"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":129,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":130,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":131,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":132,"author":{"gitId":"yongxiangng"},"content":"    public void clearAllEvent() {","lastModifiedDate":"2021-10-16"},{"lineNumber":133,"author":{"gitId":"yongxiangng"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":134,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":135,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":136,"author":{"gitId":"yongxiangng"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":137,"author":{"gitId":"yongxiangng"},"content":"    public void addPersonToEvent(NameEqualKeywordPredicate personPredicate,","lastModifiedDate":"2021-10-27"},{"lineNumber":138,"author":{"gitId":"yongxiangng"},"content":"                                 EventNameEqualKeywordPredicate evenPredicate) {","lastModifiedDate":"2021-10-27"},{"lineNumber":139,"author":{"gitId":"yongxiangng"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":140,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":141,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"yongxiangng":141}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"    public static final String DEFAULT_TELEGRAM \u003d \"@amyamyamy\";","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"    private Telegram telegram;","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"        telegram \u003d new Telegram(DEFAULT_TELEGRAM);","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"ryanongra"},"content":"        telegram \u003d personToCopy.getTelegram();","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"ryanongra"},"content":"     * Constructs a minimal person with the minimum required details","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"ryanongra"},"content":"     * (i.e. only {@code name}) when empty is true. Otherwise, constructs a full person.","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"ryanongra"},"content":"    public PersonBuilder(Person personToCopy, boolean empty) {","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"ryanongra"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"ryanongra"},"content":"        if (!empty) {","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"ryanongra"},"content":"            phone \u003d personToCopy.getPhone();","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"ryanongra"},"content":"            email \u003d personToCopy.getEmail();","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"ryanongra"},"content":"            telegram \u003d personToCopy.getTelegram();","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"ryanongra"},"content":"            tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"ryanongra"},"content":"     * Sets the {@code Telegram} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"ryanongra"},"content":"    public PersonBuilder withTelegram(String telegram) {","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"ryanongra"},"content":"        this.telegram \u003d new Telegram(telegram);","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":107,"author":{"gitId":"ryanongra"},"content":"        return new Person(name, phone, email, telegram, tags);","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"ryanongra":23,"-":87}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"        sb.append(PREFIX_TELEGRAM + person.getTelegram().value + \" \");","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"ryanongra"},"content":"        descriptor.getTelegram().ifPresent(telegram -\u003e sb.append(PREFIX_TELEGRAM).append(telegram.value).append(\" \"));","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"ryanongra":3,"-":59}},{"path":"src/test/java/seedu/address/testutil/RenameEventDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"import seedu.address.logic.commands.RenameEventCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"public class RenameEventDescriptorBuilder {","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"    private RenameEventCommand.RenameEventDescriptor descriptor;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"    public RenameEventDescriptorBuilder() {","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"        descriptor \u003d new RenameEventCommand.RenameEventDescriptor();","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"    public RenameEventDescriptorBuilder(RenameEventCommand.RenameEventDescriptor descriptor) {","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"        this.descriptor \u003d new RenameEventCommand.RenameEventDescriptor(descriptor);","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code event}\u0027s details","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"    public RenameEventDescriptorBuilder(Event event) {","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"        descriptor \u003d new RenameEventCommand.RenameEventDescriptor();","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"        descriptor.setEventName(event.getEventName());","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"        descriptor.setAttendees(event.getAttendees());","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"     * Sets the {@code EventName} of the {@code RenameEventDescriptor} that we are building.","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"    public RenameEventDescriptorBuilder withName(String eventName) {","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"        descriptor.setEventName(new EventName(eventName));","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"        return this;","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"     * Sets the {@code UniquePersonList} of the {@code RenameEventDescriptor} that we are building.","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"ryanongra"},"content":"    public RenameEventDescriptorBuilder withName(UniquePersonList attendees) {","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":"        UniquePersonList builderAttendees \u003d new UniquePersonList();","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"        builderAttendees.setPersons(attendees);","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"        descriptor.setAttendees(builderAttendees);","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"        return this;","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"ryanongra"},"content":"    public RenameEventCommand.RenameEventDescriptor build() {","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"ryanongra"},"content":"        return descriptor;","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"ryanongra":50}},{"path":"src/test/java/seedu/address/testutil/TypicalEvents.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yongxiangng"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_NAME_DINNER;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"yongxiangng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_NAME_PARTY;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"yongxiangng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"yongxiangng"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"yongxiangng"},"content":"import java.util.List;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"/**","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"yongxiangng"},"content":" * A utility class containing a list of {@code Event} objects to be used in tests.","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"yongxiangng"},"content":" */","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"yongxiangng"},"content":"public class TypicalEvents {","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"yongxiangng"},"content":"    public static final Event PARTY_EVENT \u003d new EventBuilder().withEventName(VALID_EVENT_NAME_PARTY).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"yongxiangng"},"content":"    public static final Event DINNER_EVENT \u003d new EventBuilder().withEventName(VALID_EVENT_NAME_DINNER).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"yongxiangng"},"content":"    private TypicalEvents() {} // prevents instantiation","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"yongxiangng"},"content":"    public static List\u003cEvent\u003e getTypicalEvents() {","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"yongxiangng"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(PARTY_EVENT));","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"yongxiangng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"yongxiangng"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"yongxiangng":25}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"yongxiangng"},"content":"    public static final Index INDEX_FIRST_ITEM \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"yongxiangng"},"content":"    public static final Index INDEX_SECOND_ITEM \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"yongxiangng"},"content":"    public static final Index INDEX_THIRD_ITEM \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"yongxiangng"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"    public static final Index INDEX_FIRST_EVENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"yongxiangng":4,"ryanongra":2,"-":12}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"            .withTelegram(\"@aliceinwonderland\").withEmail(\"alice@example.com\")","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"            .withTelegram(\"sonben\")","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"            .withEmail(\"heinz@example.com\").withTelegram(\"@caaarl\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"ryanongra"},"content":"            .withEmail(\"cornelia@example.com\").withTelegram(\"dannyyyyy\").withTags(\"friends\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"            .withEmail(\"werner@example.com\").withTelegram(\"theletterl\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"            .withEmail(\"lydia@example.com\").withTelegram(\"princessshrek\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"            .withEmail(\"anna@example.com\").withTelegram(\"georgebestest\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"ryanongra"},"content":"            .withEmail(\"stefan@example.com\").withTelegram(\"hoonoon\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"ryanongra"},"content":"            .withEmail(\"hans@example.com\").withTelegram(\"idaidaida\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"ryanongra"},"content":"            .withEmail(VALID_EMAIL_AMY).withTelegram(VALID_TELEGRAM_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"ryanongra"},"content":"            .withEmail(VALID_EMAIL_BOB).withTelegram(VALID_TELEGRAM_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":61,"author":{"gitId":"ryanongra"},"content":"    // Persons with unspecified details","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"ryanongra"},"content":"    public static final Person NO_PHONE_BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"ryanongra"},"content":"            .withTelegram(\"sonben\")","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"ryanongra"},"content":"            .withEmail(\"johnd@example.com\").withPhone(Phone.UNSPECIFIED_INPUT)","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"ryanongra"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"ryanongra"},"content":"    public static final Person NO_EMAIL_BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"ryanongra"},"content":"            .withTelegram(\"sonben\")","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"ryanongra"},"content":"            .withEmail(Email.UNSPECIFIED_INPUT).withPhone(\"98765432\")","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"ryanongra"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"ryanongra"},"content":"    public static final Person NO_TELE_BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"ryanongra"},"content":"            .withTelegram(Telegram.UNSPECIFIED_INPUT)","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"ryanongra"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"ryanongra"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"ryanongra":31,"-":63}}]
