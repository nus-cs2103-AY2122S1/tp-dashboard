[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ZhaoPeiduo"},"content":"[![Java CI](https://github.com/AY2122S1-CS2103-F09-3/tp/actions/workflows/gradle.yml/badge.svg?branch\u003dmaster)](https://github.com/AY2122S1-CS2103-F09-3/tp/actions)","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"AllardQuek"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103-F09-3/tp/branch/master/graph/badge.svg?token\u003dKLKGJOEN9F)](https://codecov.io/gh/AY2122S1-CS2103-F09-3/tp)","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"ZhaoPeiduo"},"content":"* ProgrammerError (P|E in short) is an application developed based on the `AddressBook Level 3` application.","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"ZhaoPeiduo"},"content":"* This is an application made for CS2100 Teaching Assistants (TAs) to track their students\u0027 task progress and performance","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"ZhaoPeiduo"},"content":"## Feature List ","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"ZhaoPeiduo"},"content":"1. View Sample Data (shown on starting the application)","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"ZhaoPeiduo"},"content":"2. Purge Sample Data (Delete all)","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"ZhaoPeiduo"},"content":"    - Purge Existing Sample Data","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"ZhaoPeiduo"},"content":"    - `purge`","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"ZhaoPeiduo"},"content":"3. In-build help feature","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"ZhaoPeiduo"},"content":"    - `help`","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"ZhaoPeiduo"},"content":"4. Unix Command Syntax","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"ZhaoPeiduo"},"content":"    - allow user to use flags to execute operations","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"ZhaoPeiduo"},"content":"    - e.g. `add -n \u003cNAME\u003e -sid \u003cSTUDENT_ID\u003e`","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"ZhaoPeiduo"},"content":"5. Create records of individual students (ADD)","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"ZhaoPeiduo"},"content":"    - Name, Student ID, Class ID, NULL grade as a placeholder for default","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"ZhaoPeiduo"},"content":"    - `add -n \u003cNAME\u003e -sid \u003cSTUDENT_ID\u003e -cid \u003cCLASS_ID\u003e`","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"ZhaoPeiduo"},"content":"6. View the records of individual students (READ)","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"ZhaoPeiduo"},"content":"    - Find a student using Student ID","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"ZhaoPeiduo"},"content":"    - `view -sid \u003cSTUDENT_ID\u003e`","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"ZhaoPeiduo"},"content":"7. Update a student\u0027s record (UPDATE)","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"ZhaoPeiduo"},"content":"    - Update a student\u0027s grade","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"ZhaoPeiduo"},"content":"    - `update -sid \u003cSTUDENT_ID\u003e`","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"ZhaoPeiduo"},"content":"8. Delete a student\u0027s record  (DELETE)","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"ZhaoPeiduo"},"content":"    - Delete the entry of the entire student","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"ZhaoPeiduo"},"content":"    - `delete -sid \u003cSTUDENT_ID\u003e`","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"ZhaoPeiduo"},"content":"9. Automatically Sorted Class Records","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"ZhaoPeiduo"},"content":"    - Sort in the backend when inputting data","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"ZhaoPeiduo"},"content":"    - Sorting key: Student ID","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"ZhaoPeiduo"},"content":"10. Save data to Hard Disk","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"ZhaoPeiduo"},"content":"    - Save whenever there is a change (create/edit/delete)","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"ZhaoPeiduo"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"AllardQuek":1,"reddevil1313":1,"ZhaoPeiduo":33,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"shermannws"},"content":"You can reach us at the email `shermannws@u.nus.edu`","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"AllardQuek"},"content":"### Allard Quek","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"AllardQuek"},"content":"\u003cimg src\u003d\"images/allardquek.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"AllardQuek"},"content":"[[homepage](https://allardquek.tech)]","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"AllardQuek"},"content":"[[github](https://github.com/AllardQuek)]","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"AllardQuek"},"content":"[[portfolio](team/allardquek.md)]","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"AllardQuek"},"content":"- Role: Project Advisor","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"erwinqxy"},"content":"### Erwin Quek","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"erwinqxy"},"content":"\u003cimg src\u003d\"images/erwinqxy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"erwinqxy"},"content":"[[github](http://github.com/erwinqxy)]","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"erwinqxy"},"content":"[[portfolio](team/erwinquek.md)]","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"AllardQuek"},"content":"- Role: Team Lead","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"shermannws"},"content":"- Responsibilities: Data","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"reddevil1313"},"content":"### Samay Sagar","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"reddevil1313"},"content":"\u003cimg src\u003d\"images/reddevil1313.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"reddevil1313"},"content":"[[github](http://github.com/reddevil1313)] [[portfolio](team/reddevil1313.md)]","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"AllardQuek"},"content":"- Role: Developer","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"AllardQuek"},"content":"- Responsibilities: Data","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"shermannws"},"content":"### Sherman Ng Wei Sheng","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"shermannws"},"content":"\u003cimg src\u003d\"images/shermannws.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"shermannws"},"content":"[[github](http://github.com/shermannws)]","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"shermannws"},"content":"[[portfolio](team/shermannws.md)]","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"AllardQuek"},"content":"- Role: Developer","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"shermannws"},"content":"- Responsibilities: Backend","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"ZhaoPeiduo"},"content":"### Zhao Peiduo","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"ZhaoPeiduo"},"content":"\u003cimg src\u003d\"images/zhaopeiduo.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"ZhaoPeiduo"},"content":"[[github](https://github.com/ZhaoPeiduo)]","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"ZhaoPeiduo"},"content":"[[portfolio](team/zhaopeiduo.md)]","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"ZhaoPeiduo"},"content":"* Responsibilities: Data","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"shermannws":7,"AllardQuek":10,"reddevil1313":3,"ZhaoPeiduo":5,"erwinqxy":4,"-":30}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"shermannws"},"content":"CS2100 TAs who","lastModifiedDate":"2021-09-28"},{"lineNumber":261,"author":{"gitId":"AllardQuek"},"content":"* have to manage a number of students across different classes","lastModifiedDate":"2021-09-28"},{"lineNumber":262,"author":{"gitId":"AllardQuek"},"content":"* keep track of the students\u0027 attendance","lastModifiedDate":"2021-09-28"},{"lineNumber":263,"author":{"gitId":"AllardQuek"},"content":"* keep track of the students\u0027 grades","lastModifiedDate":"2021-09-28"},{"lineNumber":264,"author":{"gitId":"AllardQuek"},"content":"* prefer and comfortable with CLI tools","lastModifiedDate":"2021-09-28"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"erwinqxy"},"content":"* are proficient with Unix commands","lastModifiedDate":"2021-09-28"},{"lineNumber":267,"author":{"gitId":"erwinqxy"},"content":"* prefer typing to mouse interactions","lastModifiedDate":"2021-09-28"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"shermannws"},"content":"**Value proposition**:","lastModifiedDate":"2021-09-28"},{"lineNumber":270,"author":{"gitId":"shermannws"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":271,"author":{"gitId":"shermannws"},"content":"CS2100 TAs who use ProgrammerError enjoys greater productivity and efficiency when managing his/her classes of students. ","lastModifiedDate":"2021-09-28"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"erwinqxy"},"content":"| Priority | As a …​                                    | I want to …​                                                                               | So that I can…​                                                     ","lastModifiedDate":"2021-09-28"},{"lineNumber":279,"author":{"gitId":"erwinqxy"},"content":"| -------- | ------------------------------------------ | ------------------------------------------------------------------------------------------------ | ----------------------------------------------------------------------","lastModifiedDate":"2021-09-28"},{"lineNumber":280,"author":{"gitId":"erwinqxy"},"content":"| `* * *`  | potential user exploring the app           | see the app populated with sample data| easily see how the app will look like when it is in use.        ","lastModifiedDate":"2021-09-28"},{"lineNumber":281,"author":{"gitId":"erwinqxy"},"content":"| `* * *`  | user ready to start using the app          | purge all current data         |  get rid of sample/experimental data I used for exploring the app.      ","lastModifiedDate":"2021-09-28"},{"lineNumber":282,"author":{"gitId":"erwinqxy"},"content":"| `* * *`  | CS2100 TA                                  | be able to create records of individual students: (Name, Student ID, Class ID, Overall Grade)| so that I can identify and track their progress separately.","lastModifiedDate":"2021-09-28"},{"lineNumber":283,"author":{"gitId":"erwinqxy"},"content":"| `* * *`  | CS2100 TA                                  | be able to sort the class records| have an organized class record.                                       ","lastModifiedDate":"2021-09-28"},{"lineNumber":284,"author":{"gitId":"erwinqxy"},"content":"| `* * *`  | CS2100 TA                                  | delete the details of a student| clear the information of students who have dropped out of the class.   ","lastModifiedDate":"2021-09-28"},{"lineNumber":285,"author":{"gitId":"erwinqxy"},"content":"| `* * *`  | new user                                   | use the in-build help feature  | learn how to use the app quickly.                                      ","lastModifiedDate":"2021-09-28"},{"lineNumber":286,"author":{"gitId":"erwinqxy"},"content":"| `* * *`  | CS2100 TA                                  | be able to view (read) the records of individual students| know more about the student\u0027s current performance and grade.","lastModifiedDate":"2021-09-28"},{"lineNumber":287,"author":{"gitId":"erwinqxy"},"content":"| `* * *`  | CS2100 TA                                  | be able to update the details of a student| correct any mistakes that I have made.                   ","lastModifiedDate":"2021-09-28"},{"lineNumber":288,"author":{"gitId":"erwinqxy"},"content":"| `* * *`  | CS2100 TA                                  | be able to save the data in a CSV file| upload to LumiNUS and share with the CS2100 Instructors.         ","lastModifiedDate":"2021-09-28"},{"lineNumber":289,"author":{"gitId":"erwinqxy"},"content":"| `* * *`  | proficient programmer / TA                 | navigate ProgrammerError seamlessly with the use of Unix command| efficiently manage my class.           ","lastModifiedDate":"2021-09-28"},{"lineNumber":290,"author":{"gitId":"erwinqxy"},"content":"| `* * `  | CS2100 TA with multiple devices             | export the data in my ProgrammerError                                                            | import it on another device.                                           ","lastModifiedDate":"2021-09-28"},{"lineNumber":291,"author":{"gitId":"erwinqxy"},"content":"| `* * `  | busy CS2100 TA                              | view students\u0027 statstics formatted in a standard form                                            | avoid sorting the information on my own.                               ","lastModifiedDate":"2021-09-28"},{"lineNumber":292,"author":{"gitId":"erwinqxy"},"content":"| `* * `  |  CS2100 TA                                  | use the app to track students\u0027 performance                                                       | identify those who need more help.                                     ","lastModifiedDate":"2021-09-28"},{"lineNumber":293,"author":{"gitId":"erwinqxy"},"content":"| `* * `  | user                                        | know that the software and data will be available 99.999 percent of the time I try to access it  | don\u0027t get frustrated and find another software to use.                 ","lastModifiedDate":"2021-09-28"},{"lineNumber":294,"author":{"gitId":"erwinqxy"},"content":"| `* *`   | CS2100 TA who is an undergradudate myself   | spend little time updating ProgrammerError                                                       | have have sufficient time for my other commitments.                    ","lastModifiedDate":"2021-09-28"},{"lineNumber":295,"author":{"gitId":"erwinqxy"},"content":"| `* *`   | CS2100 TA with overwhelming work            | be greeted with a nice interface                                                                 | enjoy the process of doing admin tasks.                                ","lastModifiedDate":"2021-09-28"},{"lineNumber":296,"author":{"gitId":"erwinqxy"},"content":"| `* *`   | CS2100 TA                                   | update attendance to keep track of participation grade%                                          | I can fulfil my obligations as a TA.                                   ","lastModifiedDate":"2021-09-28"},{"lineNumber":297,"author":{"gitId":"erwinqxy"},"content":"| `* *`   | CS2100 TA                                   | edit a student\u0027s participation score                                                             | the records are up to date.                                            ","lastModifiedDate":"2021-09-28"},{"lineNumber":298,"author":{"gitId":"erwinqxy"},"content":"| `* *`   | CS2100 TA                                   | upload the students\u0027 performance to LumiNUS conveniently                                         |                                                                        ","lastModifiedDate":"2021-09-28"},{"lineNumber":299,"author":{"gitId":"erwinqxy"},"content":"| `* *`   | impatient CS2100 TA with overwhelming work  | be greeted with a nice interface                                                                 | quickly retrieve a student\u0027s particular/grade from the database.       ","lastModifiedDate":"2021-09-28"},{"lineNumber":300,"author":{"gitId":"erwinqxy"},"content":"| `* *`   | CS2100 TA who loves using the keyboard      | type commands                                                                                    | practice my typing skills.                                              ","lastModifiedDate":"2021-09-28"},{"lineNumber":301,"author":{"gitId":"erwinqxy"},"content":"| `* *`   | CS2100 TA                                   | generate weekly feedbacks via email for my students with ease                                    |                                                                        ","lastModifiedDate":"2021-09-28"},{"lineNumber":302,"author":{"gitId":"erwinqxy"},"content":"| `* *`   | CS2100 admin                                | have a dashboard to have a bird eye view of my class statistics                                  | be updated quickly on my class progress.                               ","lastModifiedDate":"2021-09-28"},{"lineNumber":303,"author":{"gitId":"erwinqxy"},"content":"| `* *`   | CS2100 TA                                   | use tags to identify the topics which many students have difficulty in                           | prepare more notes on the topic.                                       ","lastModifiedDate":"2021-09-28"},{"lineNumber":304,"author":{"gitId":"erwinqxy"},"content":"| `*`     | CS2100 TA with multiple classes             | filter the contact list by classes  | easily identify those in the current class.                |                                                                        ","lastModifiedDate":"2021-09-28"},{"lineNumber":305,"author":{"gitId":"erwinqxy"},"content":"| `*`     | archive previous batch statistics           | compare current batch performance with them                                                      |                                                                        ","lastModifiedDate":"2021-09-28"},{"lineNumber":306,"author":{"gitId":"erwinqxy"},"content":"| `*`     | expert user                                 | archive/hide unused data                                                                         | avoid being distracted by irrelevant data.                                                          ","lastModifiedDate":"2021-09-28"},{"lineNumber":307,"author":{"gitId":"erwinqxy"},"content":"| `*`     | CS2100 TA                                   | use tags to mark the weak areas of a student                                                     | provide more targetted help to my students.                            ","lastModifiedDate":"2021-09-28"},{"lineNumber":308,"author":{"gitId":"erwinqxy"},"content":"| `*`     | user                                        | add a time to a task                                                                             | record when a task need to be done.                                    ","lastModifiedDate":"2021-09-28"},{"lineNumber":309,"author":{"gitId":"erwinqxy"},"content":"| `*`     | user                                        | see the pending task that has the next earliest deadline                                         | know what I need to do next.                                           ","lastModifiedDate":"2021-09-28"},{"lineNumber":310,"author":{"gitId":"erwinqxy"},"content":"| `*`     | a student                                   | easily view my participation statistics                                                          | verify that it was recorded correctly.                                 ","lastModifiedDate":"2021-09-28"},{"lineNumber":311,"author":{"gitId":"erwinqxy"},"content":"| `*`     | a TA with many students and classes         | store vital information of my students                                                           | query it when the need arises.                                         ","lastModifiedDate":"2021-09-28"},{"lineNumber":312,"author":{"gitId":"erwinqxy"},"content":"| `*`     | CS2100 Teaching Staff                       | easily search and update student\u0027s contact details                                               | I can reach them throughout the module.                                ","lastModifiedDate":"2021-09-28"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":314,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"AllardQuek"},"content":"(For all use cases below, the **System** is the `ProgrammerError` and the **Actor** is the","lastModifiedDate":"2021-09-28"},{"lineNumber":319,"author":{"gitId":"AllardQuek"},"content":"`CS2100 Teaching Assistant (CS2100 TA in short)`, unless specified otherwise)","lastModifiedDate":"2021-09-28"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"AllardQuek"},"content":"**Use case: UC1 Purge/Delete all sample student records**","lastModifiedDate":"2021-09-28"},{"lineNumber":322,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":323,"author":{"gitId":"AllardQuek"},"content":"Precondition: CS2100 TA opens ProgrammerError for the first time","lastModifiedDate":"2021-09-28"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"AllardQuek"},"content":"1.  CS2100 TA requests to list student records","lastModifiedDate":"2021-09-28"},{"lineNumber":328,"author":{"gitId":"AllardQuek"},"content":"2.  ProgrammerError shows a list of sample student records","lastModifiedDate":"2021-09-28"},{"lineNumber":329,"author":{"gitId":"AllardQuek"},"content":"3.  CS2100 TA requests to purge sample student records","lastModifiedDate":"2021-09-28"},{"lineNumber":330,"author":{"gitId":"AllardQuek"},"content":"4.  ProgrammerError deletes all sample student records","lastModifiedDate":"2021-09-28"},{"lineNumber":331,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":332,"author":{"gitId":"AllardQuek"},"content":"    Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":334,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":335,"author":{"gitId":"AllardQuek"},"content":"**Use case: UC2 Create a student record**","lastModifiedDate":"2021-09-28"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":337,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":339,"author":{"gitId":"AllardQuek"},"content":"1.  CS2100 TA requests to list student records","lastModifiedDate":"2021-09-28"},{"lineNumber":340,"author":{"gitId":"AllardQuek"},"content":"2.  ProgrammerError shows a list of student records","lastModifiedDate":"2021-09-28"},{"lineNumber":341,"author":{"gitId":"AllardQuek"},"content":"3.  CS2100 TA requests to create a student record","lastModifiedDate":"2021-09-28"},{"lineNumber":342,"author":{"gitId":"AllardQuek"},"content":"4.  ProgrammerError requests for the student\u0027s details","lastModifiedDate":"2021-09-28"},{"lineNumber":343,"author":{"gitId":"AllardQuek"},"content":"5.  CS2100 TA specifies the student\u0027s details","lastModifiedDate":"2021-09-28"},{"lineNumber":344,"author":{"gitId":"AllardQuek"},"content":"6.  ProgrammerError creates a student record","lastModifiedDate":"2021-09-28"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"ZhaoPeiduo"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-10-01"},{"lineNumber":351,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":352,"author":{"gitId":"ZhaoPeiduo"},"content":"  Use case ends.","lastModifiedDate":"2021-10-01"},{"lineNumber":353,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":354,"author":{"gitId":"ZhaoPeiduo"},"content":"* 5a. The student details given are incomplete.","lastModifiedDate":"2021-10-01"},{"lineNumber":355,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":356,"author":{"gitId":"ZhaoPeiduo"},"content":"    * 5a1. ProgrammerError shows an error message.","lastModifiedDate":"2021-10-01"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"AllardQuek"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-28"},{"lineNumber":359,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":360,"author":{"gitId":"AllardQuek"},"content":"**Use case: UC3 View a student record**","lastModifiedDate":"2021-09-28"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"AllardQuek"},"content":"1.  CS2100 TA requests to list student records","lastModifiedDate":"2021-09-28"},{"lineNumber":365,"author":{"gitId":"AllardQuek"},"content":"2.  ProgrammerError shows a list of student records","lastModifiedDate":"2021-09-28"},{"lineNumber":366,"author":{"gitId":"AllardQuek"},"content":"3.  CS2100 TA requests to view a specific student record","lastModifiedDate":"2021-09-28"},{"lineNumber":367,"author":{"gitId":"AllardQuek"},"content":"4.  ProgrammerError shows the student record\u0027s details","lastModifiedDate":"2021-09-28"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":379,"author":{"gitId":"AllardQuek"},"content":"    * 3a1. ProgrammerError shows an error message.","lastModifiedDate":"2021-09-28"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"AllardQuek"},"content":"**Use case: UC4 Delete a student record**","lastModifiedDate":"2021-09-28"},{"lineNumber":384,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":385,"author":{"gitId":"AllardQuek"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"AllardQuek"},"content":"1.  CS2100 TA requests to list student records","lastModifiedDate":"2021-09-28"},{"lineNumber":388,"author":{"gitId":"AllardQuek"},"content":"2.  ProgrammerError shows a list of student records","lastModifiedDate":"2021-09-28"},{"lineNumber":389,"author":{"gitId":"AllardQuek"},"content":"3.  CS2100 TA requests to delete a specific student record in the list","lastModifiedDate":"2021-09-28"},{"lineNumber":390,"author":{"gitId":"AllardQuek"},"content":"4.  ProgrammerError deletes the student record","lastModifiedDate":"2021-09-28"},{"lineNumber":391,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":392,"author":{"gitId":"AllardQuek"},"content":"    Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":393,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":394,"author":{"gitId":"AllardQuek"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":395,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":396,"author":{"gitId":"AllardQuek"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-28"},{"lineNumber":397,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":398,"author":{"gitId":"AllardQuek"},"content":"  Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":399,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":400,"author":{"gitId":"AllardQuek"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-09-28"},{"lineNumber":401,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":402,"author":{"gitId":"AllardQuek"},"content":"    * 3a1. ProgrammerError shows an error message.","lastModifiedDate":"2021-09-28"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"AllardQuek"},"content":"**Use case: UC5 Update a student record**","lastModifiedDate":"2021-09-28"},{"lineNumber":407,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":408,"author":{"gitId":"AllardQuek"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":409,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":410,"author":{"gitId":"AllardQuek"},"content":"1.  CS2100 TA requests to list student records","lastModifiedDate":"2021-09-28"},{"lineNumber":411,"author":{"gitId":"AllardQuek"},"content":"2.  ProgrammerError shows a list of student records","lastModifiedDate":"2021-09-28"},{"lineNumber":412,"author":{"gitId":"AllardQuek"},"content":"3.  CS2100 TA requests to update a specific student record","lastModifiedDate":"2021-09-28"},{"lineNumber":413,"author":{"gitId":"AllardQuek"},"content":"4.  ProgrammerError updates the student record","lastModifiedDate":"2021-09-28"},{"lineNumber":414,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":415,"author":{"gitId":"AllardQuek"},"content":"    Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":416,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":417,"author":{"gitId":"AllardQuek"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":418,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":419,"author":{"gitId":"AllardQuek"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-28"},{"lineNumber":420,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":421,"author":{"gitId":"AllardQuek"},"content":"  Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":422,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":423,"author":{"gitId":"AllardQuek"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-09-28"},{"lineNumber":424,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":425,"author":{"gitId":"AllardQuek"},"content":"    * 3a1. ProgrammerError shows an error message.","lastModifiedDate":"2021-09-28"},{"lineNumber":426,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":427,"author":{"gitId":"AllardQuek"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-28"},{"lineNumber":428,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":429,"author":{"gitId":"AllardQuek"},"content":"**Use case: UC6 Automatic sort student records**","lastModifiedDate":"2021-09-28"},{"lineNumber":430,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":431,"author":{"gitId":"AllardQuek"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":432,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":433,"author":{"gitId":"AllardQuek"},"content":"1.  CS2100 TA creates (UC2) / views (UC3) / delete (UC4) / update (UC5) a student record","lastModifiedDate":"2021-09-28"},{"lineNumber":434,"author":{"gitId":"AllardQuek"},"content":"2.  CS2100 TA requests to list student records","lastModifiedDate":"2021-09-28"},{"lineNumber":435,"author":{"gitId":"AllardQuek"},"content":"3.  ProgrammerError automatically sort the changed student records","lastModifiedDate":"2021-09-28"},{"lineNumber":436,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":437,"author":{"gitId":"AllardQuek"},"content":"    Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":438,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":439,"author":{"gitId":"AllardQuek"},"content":"**Use case: UC7 Automatic save and load student records**","lastModifiedDate":"2021-09-28"},{"lineNumber":440,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":441,"author":{"gitId":"AllardQuek"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":442,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":443,"author":{"gitId":"AllardQuek"},"content":"1.  CS2100 TA creates (UC2) / views (UC3) / delete (UC4) / update (UC5) a student record","lastModifiedDate":"2021-09-28"},{"lineNumber":444,"author":{"gitId":"AllardQuek"},"content":"2.  ProgrammerError automatically save the changed student records to hard disk","lastModifiedDate":"2021-09-28"},{"lineNumber":445,"author":{"gitId":"AllardQuek"},"content":"3.  CS2100 TA restarts the application","lastModifiedDate":"2021-09-28"},{"lineNumber":446,"author":{"gitId":"AllardQuek"},"content":"4.  ProgrammerError shows the saved data","lastModifiedDate":"2021-09-28"},{"lineNumber":447,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":448,"author":{"gitId":"AllardQuek"},"content":"    Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":449,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":450,"author":{"gitId":"AllardQuek"},"content":"{More to be added}","lastModifiedDate":"2021-09-28"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"AllardQuek"},"content":"2.  A TA with above average typing speed for code should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-09-28"},{"lineNumber":456,"author":{"gitId":"AllardQuek"},"content":"3.  The data should be stored locally and should be in a human editable csv file.","lastModifiedDate":"2021-09-28"},{"lineNumber":457,"author":{"gitId":"AllardQuek"},"content":"4.  The product should be for a single user at a time (i.e. not a multi-user product).","lastModifiedDate":"2021-09-28"},{"lineNumber":458,"author":{"gitId":"AllardQuek"},"content":"5.  No DBMS should be used to store data.","lastModifiedDate":"2021-09-28"},{"lineNumber":459,"author":{"gitId":"AllardQuek"},"content":"6.  The software should follow the Object-oriented paradigm primarily. (with the possibility of allowing a mix of other styles when justifiable).","lastModifiedDate":"2021-09-28"},{"lineNumber":460,"author":{"gitId":"AllardQuek"},"content":"7.  The final product should be a result of evolving the given code base. (i.e. allowed to replace all existing code with new code, as long as it is done incrementally)","lastModifiedDate":"2021-09-28"},{"lineNumber":461,"author":{"gitId":"AllardQuek"},"content":"8.  The GUI should work well (i.e., should not cause any resolution-related inconveniences to the user) for standard screen resolutions 1920x1080 and higher, and screen scales 100% and 125%.","lastModifiedDate":"2021-09-29"},{"lineNumber":462,"author":{"gitId":"AllardQuek"},"content":"9. the GUI should be usable (i.e., all functions can be used even if the user experience is not optimal) for resolutions 1280x720 and higher, and screen scales 150%.","lastModifiedDate":"2021-09-29"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"AllardQuek"},"content":"- **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2021-09-28"},{"lineNumber":467,"author":{"gitId":"AllardQuek"},"content":"- **Student ID**: An NUS student\u0027s matriculation number","lastModifiedDate":"2021-09-28"},{"lineNumber":468,"author":{"gitId":"AllardQuek"},"content":"- **TA**: A CS2100 teaching assistant","lastModifiedDate":"2021-09-28"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"shermannws":4,"AllardQuek":107,"ZhaoPeiduo":6,"erwinqxy":37,"-":367}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"AllardQuek"},"content":"ProgrammerError (P\\|E) is a desktop app for managing students\u0027 information, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). Designed for CS2100 Lab TAs, this application is optimized to track personal particulars, grades and attendance of your students across different classes. If you are familiar with Unix commands, this is definitely for you!","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"shermannws"},"content":"## Table of Contents","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"shermannws"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"shermannws"},"content":"- [Features](#features)","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"shermannws"},"content":"  1. [View Sample Data](#view-sample-data)","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"shermannws"},"content":"  2. [Purge All Data: `purge`](#purge-all-data)","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"shermannws"},"content":"  3. [View Help: `help`](#view-help)","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"shermannws"},"content":"  4. [Add Student: `add`](#add-student)","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"shermannws"},"content":"  5. [View Student Details: `view`](#view-student)","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"shermannws"},"content":"  6. [Update Student\u0027s Grade: `update`](#update-student)","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"shermannws"},"content":"  7. [Delete Student: `delete`](#delete-student)","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"shermannws"},"content":"  8. [Exit: `exit`](#exit)","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"shermannws"},"content":"  9. [Save data](#save-data)","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"shermannws"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"shermannws"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"shermannws"},"content":"## \u003ca name\u003d\"quick-start\"\u003e\u003c/a\u003eQuick Start","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"shermannws"},"content":"2. Download the latest `programmerError.jar` from [here](https://github.com/se-edu/addressbook-level3/releases) [coming soon].","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"shermannws"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your ProgrammerError.","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"shermannws"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"shermannws"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"erwinqxy"},"content":"   * **`add -n Sherwin -sid A1234567X -cid B01`**: Adds a student named `Sherwin` to the PE with his Student ID and Class ID.","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"erwinqxy"},"content":"   * **`view -sid A1234567X`** Views a particular student\u0027s by its Student ID","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"erwinqxy"},"content":"   * **`update -sid A1234567X -grade 100`** Updates a student\u0027s grade with the -grade flag","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"erwinqxy"},"content":"   * **`delete -sid A1234567X`**  : Deletes a student\u0027s record by the student ID","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"erwinqxy"},"content":"   * **`purge`**: Deletes all existing contacts","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   * **`exit`**: Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"shermannws"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"shermannws"},"content":"## \u003ca name\u003d\"features\"\u003e\u003c/a\u003eFeatures","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"AllardQuek"},"content":"**Notes about the command format (Unix Command Syntax):**","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"AllardQuek"},"content":"- Flags will be used to specify different options for the commands. For example, the `-sid` flag can be used to specify a student\u0027s student ID.","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"AllardQuek"},"content":"- Parameters can be in any order.e.g. if the command specifies `-n NAME -sid STUDENT_ID`,","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"AllardQuek"},"content":"  `-sid STUDENT_ID -n NAME`is also acceptable.","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"AllardQuek"},"content":"- If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken. e.g. if you specify `-n Allard -n Xian Yi` , only `-n Xian Yi` will be taken.","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"AllardQuek"},"content":"- Extraneous parameters for commands that do not take in parameters (such as `help`, `exit` and `purge`) will be ignored. e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"shermannws"},"content":"### \u003ca name\u003d\"view-sample-data\"\u003e\u003c/a\u003e1. View sample data","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"reddevil1313"},"content":"Sample Data will be available on starting PE.","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"shermannws"},"content":"### \u003ca name\u003d\"purge-all-data\"\u003e\u003c/a\u003e2. Purge all Data: `purge`","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"reddevil1313"},"content":"Purges all existing data to start adding your own data. \\","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"reddevil1313"},"content":"Clears all entries data in PE. \\","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"reddevil1313"},"content":"Example: `purge`","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"shermannws"},"content":"### \u003ca name\u003d\"view-help\"\u003e\u003c/a\u003e3. View Help: `help`","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"reddevil1313"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"reddevil1313"},"content":"Example: `help`","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"shermannws"},"content":"### \u003ca name\u003d\"add-student\"\u003e\u003c/a\u003e4. Add Student: `add`","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"erwinqxy"},"content":"Adds a student to ProgrammerError with the his/her student ID and class ID.","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"erwinqxy"},"content":"Format: `add -n \u003cNAME\u003e -sid \u003cSTUDENT_ID\u003e -cid \u003cCLASS_ID\u003e`","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"shermannws"},"content":"- `add -n Sherwin -sid A1234567X -cid B01`: Adds the student called Sherwin with student ID A1234567X and class ID B01 to ProgrammerError.","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":87,"author":{"gitId":"shermannws"},"content":"- `add -n Betsy -sid A2345678X -cid B02`: Adds the student called Betsy with student ID A2345678X and class ID B02 to ProgrammerError.","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":89,"author":{"gitId":"shermannws"},"content":"### \u003ca name\u003d\"view-student\"\u003e\u003c/a\u003e5. View Student Details: `view`","lastModifiedDate":"2021-09-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"shermannws"},"content":"Views all the related information of a student stored on ProgrammerError with his/her student ID.","lastModifiedDate":"2021-09-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"shermannws"},"content":"Format: `view -sid \u003cSTUDENT_ID\u003e`","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"shermannws"},"content":"- `view -sid A1234567X` Views all related information of the student with student ID A1234567X in ProgrammerError.","lastModifiedDate":"2021-09-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"shermannws"},"content":"### \u003ca name\u003d\"update-student\"\u003e\u003c/a\u003e6. Update Student\u0027s Grade : `update`","lastModifiedDate":"2021-09-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"shermannws"},"content":"Updates the grade of an existing student\u0027s in the PE.","lastModifiedDate":"2021-09-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"shermannws"},"content":"Format:`update -sid \u003cSTUDENT_ID\u003e -grade \u003cGRADE_SCORE\u003e`","lastModifiedDate":"2021-09-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"shermannws"},"content":"- Updates the student with `\u003cSTUDENT_ID\u003e with the grade \u003cGRADE_SCORE\u003e`","lastModifiedDate":"2021-09-26"},{"lineNumber":106,"author":{"gitId":"shermannws"},"content":"- Existing values will be updated to the input values.","lastModifiedDate":"2021-09-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"shermannws"},"content":"- `update -sid A1234567X -grade 100` Updates the grade of the student with student ID A1234567X to be 100.","lastModifiedDate":"2021-09-26"},{"lineNumber":111,"author":{"gitId":"shermannws"},"content":"- `update -sid A2345678X -grade 97.5` Updates the grade of the student with student ID A2345678X to be 97.5.","lastModifiedDate":"2021-09-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":113,"author":{"gitId":"shermannws"},"content":"### \u003ca name\u003d\"delete-student\"\u003e\u003c/a\u003e7. Delete Student: `delete`","lastModifiedDate":"2021-09-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":115,"author":{"gitId":"shermannws"},"content":"Deletes the specified student from the PE.","lastModifiedDate":"2021-09-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":117,"author":{"gitId":"shermannws"},"content":"Format: `delete -sid \u003cSTUDENT_ID\u003e`","lastModifiedDate":"2021-09-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":119,"author":{"gitId":"shermannws"},"content":"- Deletes the student with student ID of `\u003cSTUDENT_ID\u003e`.","lastModifiedDate":"2021-09-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":121,"author":{"gitId":"shermannws"},"content":"Examples:","lastModifiedDate":"2021-09-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":123,"author":{"gitId":"shermannws"},"content":"- `delete -sid A1234567X` Deletes the data of the student with student ID A1234567X","lastModifiedDate":"2021-09-26"},{"lineNumber":124,"author":{"gitId":"shermannws"},"content":"- `delete -sid A2345678X` Deletes the data of the student with student ID A2345678X","lastModifiedDate":"2021-09-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":126,"author":{"gitId":"shermannws"},"content":"### \u003ca name\u003d\"exit\"\u003e\u003c/a\u003e8. Exit: `exit`","lastModifiedDate":"2021-09-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":128,"author":{"gitId":"shermannws"},"content":"Exits ProgrammerError and closes the GUI.","lastModifiedDate":"2021-09-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":130,"author":{"gitId":"shermannws"},"content":"### \u003ca name\u003d\"save-data\"\u003e\u003c/a\u003e9. Save Data","lastModifiedDate":"2021-09-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":132,"author":{"gitId":"shermannws"},"content":"ProgrammerError data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-09-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":134,"author":{"gitId":"shermannws"},"content":"## \u003ca name\u003d\"command-summary\"\u003e\u003c/a\u003eCommand Summary","lastModifiedDate":"2021-09-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":136,"author":{"gitId":"shermannws"},"content":"Command | Format \u0026 Examples","lastModifiedDate":"2021-09-26"},{"lineNumber":137,"author":{"gitId":"shermannws"},"content":"--------| ----------------------","lastModifiedDate":"2021-09-26"},{"lineNumber":138,"author":{"gitId":"AllardQuek"},"content":"**Purge** | `purge`","lastModifiedDate":"2021-09-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2021-09-26"},{"lineNumber":140,"author":{"gitId":"AllardQuek"},"content":"**Add** | `add -n \u003cNAME\u003e -sid \u003cSTUDENT_ID\u003e -cid \u003cCLASS_ID\u003e`","lastModifiedDate":"2021-09-26"},{"lineNumber":141,"author":{"gitId":"AllardQuek"},"content":"**View** | `view -sid \u003cSTUDENT_ID\u003e`","lastModifiedDate":"2021-09-26"},{"lineNumber":142,"author":{"gitId":"AllardQuek"},"content":"**Update** | `update -sid \u003cSTUDENT_ID\u003e -grade \u003cGRADE_SCORE\u003e`","lastModifiedDate":"2021-09-26"},{"lineNumber":143,"author":{"gitId":"AllardQuek"},"content":"**Delete** | `delete -sid \u003cSTUDENT_ID\u003e`","lastModifiedDate":"2021-09-26"},{"lineNumber":144,"author":{"gitId":"AllardQuek"},"content":"**Exit** | `exit`","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"AllardQuek":15,"shermannws":52,"reddevil1313":6,"erwinqxy":7,"-":64}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"reddevil1313"},"content":"    content: \"ProgrammerError\";","lastModifiedDate":"2021-09-26"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"reddevil1313":1,"-":294}},{"path":"docs/team/allardquek.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"AllardQuek"},"content":"# Allard Quek","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"AllardQuek":1}},{"path":"docs/team/reddevil1313.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"reddevil1313"},"content":"---","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"reddevil1313"},"content":"layout: page","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"reddevil1313"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"reddevil1313"},"content":"---","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"reddevil1313"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"reddevil1313"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"reddevil1313"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"reddevil1313"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"reddevil1313"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"reddevil1313"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"reddevil1313"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"reddevil1313"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"reddevil1313"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"reddevil1313"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"reddevil1313"},"content":"* **Project management**:","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"reddevil1313"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"reddevil1313"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"reddevil1313"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"reddevil1313"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"reddevil1313"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"reddevil1313"},"content":"    * User Guide:","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"reddevil1313"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"reddevil1313"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"reddevil1313"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"reddevil1313"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"reddevil1313"},"content":"* **Community**:","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"reddevil1313"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"reddevil1313"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"reddevil1313"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"reddevil1313"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"reddevil1313"},"content":"* **Tools**:","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"reddevil1313"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"reddevil1313"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"reddevil1313"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"reddevil1313":46}},{"path":"docs/team/shermannws.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"shermannws"},"content":"---","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"shermannws"},"content":"layout: page","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"shermannws"},"content":"title: Sherman Ng\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"shermannws"},"content":"---","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"shermannws"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"shermannws"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"shermannws"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"shermannws"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"shermannws"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"shermannws"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"shermannws"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"shermannws"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"shermannws"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"shermannws"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"shermannws"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"shermannws"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"shermannws"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"shermannws"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"shermannws"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"shermannws"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"shermannws"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"shermannws"},"content":"* **Project management**:","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"shermannws"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"shermannws"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"shermannws"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"shermannws"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"shermannws"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"shermannws"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"shermannws"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"shermannws"},"content":"    * User Guide:","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"shermannws"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"shermannws"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"shermannws"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"shermannws"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"shermannws"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"shermannws"},"content":"* **Community**:","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"shermannws"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"shermannws"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"shermannws"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"shermannws"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"shermannws"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"shermannws"},"content":"* **Tools**:","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"shermannws"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"shermannws"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"shermannws"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"shermannws"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"shermannws":46}},{"path":"docs/team/zhaopeiduo.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ZhaoPeiduo"},"content":"---","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"ZhaoPeiduo"},"content":"layout: page","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"ZhaoPeiduo"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"ZhaoPeiduo"},"content":"---","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"ZhaoPeiduo"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"ZhaoPeiduo"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"ZhaoPeiduo"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"ZhaoPeiduo"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"ZhaoPeiduo"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"ZhaoPeiduo"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"ZhaoPeiduo"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"ZhaoPeiduo"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"ZhaoPeiduo"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"ZhaoPeiduo"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"ZhaoPeiduo"},"content":"* **Project management**:","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"ZhaoPeiduo"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"ZhaoPeiduo"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"ZhaoPeiduo"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"ZhaoPeiduo"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"ZhaoPeiduo"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"ZhaoPeiduo"},"content":"  * User Guide:","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"ZhaoPeiduo"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"ZhaoPeiduo"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"ZhaoPeiduo"},"content":"  * Developer Guide:","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"ZhaoPeiduo"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"ZhaoPeiduo"},"content":"* **Community**:","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"ZhaoPeiduo"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"ZhaoPeiduo"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"ZhaoPeiduo"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"ZhaoPeiduo"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"ZhaoPeiduo"},"content":"* **Tools**:","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"ZhaoPeiduo"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"ZhaoPeiduo"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"ZhaoPeiduo"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"ZhaoPeiduo":46}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"erwinqxy"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their ProgrammerError and edit it if required. The command should have the following format:","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47).","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done.","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508).","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe).","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71).","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2021-08-01"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9).","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"erwinqxy":1,"-":400}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"erwinqxy"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s ProgrammerError and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"erwinqxy"},"content":"     * The data from the sample ProgrammerError will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"erwinqxy"},"content":"     * or an empty ProgrammerError will be used instead if errors occur when reading {@code storage}\u0027s ProgrammerError.","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"erwinqxy"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping ProgrammerError ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-10-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"erwinqxy":4,"-":179}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"erwinqxy"},"content":"     * Returns the user prefs\u0027 ProgrammerError file path.","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"erwinqxy":1,"-":49}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"erwinqxy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASS_ID;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"erwinqxy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GRADE;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"erwinqxy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENT_ID;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"erwinqxy"},"content":" * Adds a person to ProgrammerError.","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":23,"author":{"gitId":"erwinqxy"},"content":"            + PREFIX_STUDENT_ID + \"STUDENTID \"","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"erwinqxy"},"content":"            + PREFIX_CLASS_ID + \"CLASSID \"","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"erwinqxy"},"content":"            + PREFIX_GRADE + \"GRADE \"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"erwinqxy"},"content":"            + PREFIX_STUDENT_ID + \"A0121234H \"","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"erwinqxy"},"content":"            + PREFIX_CLASS_ID + \"B01 \"","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"erwinqxy"},"content":"            + PREFIX_GRADE + \"A+ \";","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"erwinqxy"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the ProgrammerError\";","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"erwinqxy":11,"-":52}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"erwinqxy"},"content":" * Deletes a person identified using it\u0027s displayed index from ProgrammerErrors.","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"erwinqxy":1,"-":52}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"erwinqxy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASS_ID;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"erwinqxy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GRADE;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"erwinqxy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENT_ID;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"erwinqxy"},"content":"import seedu.address.model.person.ClassId;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"erwinqxy"},"content":"import seedu.address.model.person.Grade;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"erwinqxy"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"erwinqxy"},"content":" * Edits the details of an existing person in ProgrammerError.","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"erwinqxy"},"content":"            + \"[\" + PREFIX_STUDENT_ID + \"STUDENTID] \"","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"erwinqxy"},"content":"            + \"[\" + PREFIX_CLASS_ID + \"CLASSID] \"","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"erwinqxy"},"content":"            + \"[\" + PREFIX_GRADE + \"GRADE] \"","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"erwinqxy"},"content":"            + PREFIX_STUDENT_ID + \"A0121234H \"","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"erwinqxy"},"content":"            + PREFIX_CLASS_ID + \"B01\";","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"erwinqxy"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the ProgrammerError.\";","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":90,"author":{"gitId":"erwinqxy"},"content":"        StudentId updateStudentId \u003d editPersonDescriptor.getStudentId().orElse(personToEdit.getStudentId());","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"erwinqxy"},"content":"        ClassId updatedClassId \u003d editPersonDescriptor.getClassId().orElse(personToEdit.getClassId());","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"erwinqxy"},"content":"        Grade updatedGrade \u003d editPersonDescriptor.getGrade().orElse(personToEdit.getGrade());","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"erwinqxy"},"content":"        return new Person(updatedName, updateStudentId, updatedClassId, updatedGrade);","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":121,"author":{"gitId":"erwinqxy"},"content":"        private StudentId studentId;","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"erwinqxy"},"content":"        private ClassId classId;","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"erwinqxy"},"content":"        private Grade grade;","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":133,"author":{"gitId":"erwinqxy"},"content":"            setStudentId(toCopy.studentId);","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"erwinqxy"},"content":"            setClassId(toCopy.classId);","lastModifiedDate":"2021-10-07"},{"lineNumber":135,"author":{"gitId":"erwinqxy"},"content":"            setGrade(toCopy.grade);","lastModifiedDate":"2021-10-07"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"erwinqxy"},"content":"            return CollectionUtil.isAnyNonNull(name, studentId, classId, grade);","lastModifiedDate":"2021-10-07"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"erwinqxy"},"content":"        public void setStudentId(StudentId studentId) {","lastModifiedDate":"2021-10-07"},{"lineNumber":154,"author":{"gitId":"erwinqxy"},"content":"            this.studentId \u003d studentId;","lastModifiedDate":"2021-10-07"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"erwinqxy"},"content":"        public Optional\u003cStudentId\u003e getStudentId() {","lastModifiedDate":"2021-10-07"},{"lineNumber":158,"author":{"gitId":"erwinqxy"},"content":"            return Optional.ofNullable(studentId);","lastModifiedDate":"2021-10-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"erwinqxy"},"content":"        public void setClassId(ClassId classId) {","lastModifiedDate":"2021-10-07"},{"lineNumber":162,"author":{"gitId":"erwinqxy"},"content":"            this.classId \u003d classId;","lastModifiedDate":"2021-10-07"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"erwinqxy"},"content":"        public Optional\u003cClassId\u003e getClassId() {","lastModifiedDate":"2021-10-07"},{"lineNumber":166,"author":{"gitId":"erwinqxy"},"content":"            return Optional.ofNullable(classId);","lastModifiedDate":"2021-10-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"erwinqxy"},"content":"        public void setGrade(Grade grade) {","lastModifiedDate":"2021-10-07"},{"lineNumber":170,"author":{"gitId":"erwinqxy"},"content":"            this.grade \u003d grade;","lastModifiedDate":"2021-10-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"erwinqxy"},"content":"        public Optional\u003cGrade\u003e getGrade() {","lastModifiedDate":"2021-10-07"},{"lineNumber":174,"author":{"gitId":"erwinqxy"},"content":"            return Optional.ofNullable(grade);","lastModifiedDate":"2021-10-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"erwinqxy"},"content":"                    \u0026\u0026 getStudentId().equals(e.getStudentId())","lastModifiedDate":"2021-10-07"},{"lineNumber":194,"author":{"gitId":"ZhaoPeiduo"},"content":"                    \u0026\u0026 getClassId().equals(e.getClassId())","lastModifiedDate":"2021-10-08"},{"lineNumber":195,"author":{"gitId":"erwinqxy"},"content":"                    \u0026\u0026 getGrade().equals(e.getGrade());","lastModifiedDate":"2021-10-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":197,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"ZhaoPeiduo":2,"erwinqxy":38,"-":159}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"erwinqxy"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting ProgrammerError as requested ...\";","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"erwinqxy":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"erwinqxy"},"content":" * Lists all persons in ProgrammerError to the user.","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"erwinqxy":1,"-":23}},{"path":"src/main/java/seedu/address/logic/commands/PurgeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"erwinqxy"},"content":" * Clears ProgrammerError.","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"reddevil1313"},"content":"public class PurgeCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"reddevil1313"},"content":"    public static final String COMMAND_WORD \u003d \"purge\";","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"reddevil1313"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"ProgrammerError has been purged of sample data!\";","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"reddevil1313"},"content":"    public static final String MESSAGE_FAIL \u003d \"There is no sample data to purge!\";","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"AllardQuek"},"content":"    private static Boolean samplesPresent \u003d true;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"AllardQuek"},"content":"        if (hasSamples()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"reddevil1313"},"content":"            setStatus(false);","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"reddevil1313"},"content":"        } else {","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"reddevil1313"},"content":"            return new CommandResult(MESSAGE_FAIL);","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"reddevil1313"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"AllardQuek"},"content":"    private boolean hasSamples() {","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"AllardQuek"},"content":"        return samplesPresent;","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"reddevil1313"},"content":"    private void setStatus(boolean val) {","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"AllardQuek"},"content":"        samplesPresent \u003d val;","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"AllardQuek":5,"reddevil1313":13,"erwinqxy":1,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"erwinqxy"},"content":" * Finds and lists all persons in ProgrammerError whose name contains any of the argument keywords.","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"shermannws"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"shermannws"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"shermannws"},"content":"            + \"Example: \" + COMMAND_WORD + \" -n alice bob charlie\";","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"shermannws"},"content":"    public ViewCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"shermannws"},"content":"                || (other instanceof ViewCommand // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"shermannws"},"content":"                \u0026\u0026 predicate.equals(((ViewCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"shermannws":6,"erwinqxy":1,"-":35}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"erwinqxy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASS_ID;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"erwinqxy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GRADE;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"erwinqxy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENT_ID;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"erwinqxy"},"content":"import seedu.address.model.person.ClassId;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"erwinqxy"},"content":"import seedu.address.model.person.Grade;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"erwinqxy"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":33,"author":{"gitId":"erwinqxy"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_STUDENT_ID, PREFIX_CLASS_ID, PREFIX_GRADE);","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":35,"author":{"gitId":"erwinqxy"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_STUDENT_ID, PREFIX_CLASS_ID, PREFIX_GRADE)","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"erwinqxy"},"content":"        StudentId studentId \u003d ParserUtil.parseStudentId(argMultimap.getValue(PREFIX_STUDENT_ID).get());","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"erwinqxy"},"content":"        ClassId classId \u003d ParserUtil.parseClassId(argMultimap.getValue(PREFIX_CLASS_ID).get());","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"erwinqxy"},"content":"        Grade grade \u003d ParserUtil.parseGrade(argMultimap.getValue(PREFIX_GRADE).get());","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"erwinqxy"},"content":"        Person person \u003d new Person(name, studentId, classId, grade);","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"erwinqxy":14,"-":44}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"reddevil1313"},"content":"import seedu.address.logic.commands.PurgeCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"shermannws"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"reddevil1313"},"content":"        case PurgeCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"reddevil1313"},"content":"            return new PurgeCommand();","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"shermannws"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"shermannws"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"shermannws":3,"reddevil1313":3,"-":70}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"erwinqxy"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"-n \");","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"erwinqxy"},"content":"    public static final Prefix PREFIX_STUDENT_ID \u003d new Prefix(\"-sid \");","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"erwinqxy"},"content":"    public static final Prefix PREFIX_CLASS_ID \u003d new Prefix(\"-cid \");","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"erwinqxy"},"content":"    public static final Prefix PREFIX_GRADE \u003d new Prefix(\"-grade \");","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"erwinqxy":4,"-":10}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"erwinqxy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASS_ID;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"erwinqxy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GRADE;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"erwinqxy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENT_ID;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"erwinqxy"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_STUDENT_ID, PREFIX_CLASS_ID, PREFIX_GRADE);","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"erwinqxy"},"content":"        if (argMultimap.getValue(PREFIX_STUDENT_ID).isPresent()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"erwinqxy"},"content":"            editPersonDescriptor.setStudentId(ParserUtil.parseStudentId(argMultimap.getValue(PREFIX_STUDENT_ID).get()));","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"erwinqxy"},"content":"        if (argMultimap.getValue(PREFIX_CLASS_ID).isPresent()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"erwinqxy"},"content":"            editPersonDescriptor.setClassId(ParserUtil.parseClassId(argMultimap.getValue(PREFIX_CLASS_ID).get()));","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"erwinqxy"},"content":"        if (argMultimap.getValue(PREFIX_GRADE).isPresent()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"erwinqxy"},"content":"            editPersonDescriptor.setGrade(ParserUtil.parseGrade(argMultimap.getValue(PREFIX_GRADE).get()));","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"erwinqxy":10,"-":49}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":8,"author":{"gitId":"erwinqxy"},"content":"import seedu.address.model.person.ClassId;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"erwinqxy"},"content":"import seedu.address.model.person.Grade;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"erwinqxy"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":48,"author":{"gitId":"erwinqxy"},"content":"     * Parses a {@code String studentId} into a {@code StudentId}.","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"erwinqxy"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"erwinqxy"},"content":"    public static StudentId parseStudentId(String studentId) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"erwinqxy"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"erwinqxy"},"content":"        String trimmedSid \u003d studentId.trim();","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"erwinqxy"},"content":"        if (!Name.isValidName(trimmedSid)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"erwinqxy"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"erwinqxy"},"content":"        return new StudentId(trimmedSid);","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"erwinqxy"},"content":"     * Parses a {@code String classId} into an {@code ClassId}.","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"erwinqxy"},"content":"     * @throws ParseException if the given {@code classId} is invalid.","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"erwinqxy"},"content":"    public static ClassId parseClassId(String classId) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"erwinqxy"},"content":"        requireNonNull(classId);","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"erwinqxy"},"content":"        String trimmedCid \u003d classId.trim();","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"erwinqxy"},"content":"        if (!Name.isValidName(trimmedCid)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"erwinqxy"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"erwinqxy"},"content":"        return new ClassId(trimmedCid);","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"erwinqxy"},"content":"     * Parses a {@code String grade} into an {@code Grade}.","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"erwinqxy"},"content":"     * @throws ParseException if the given {@code grade} is invalid.","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"erwinqxy"},"content":"    public static Grade parseGrade(String grade) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"erwinqxy"},"content":"        requireNonNull(grade);","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"erwinqxy"},"content":"        String trimmedGrade \u003d grade.trim();","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"erwinqxy"},"content":"        if (!Name.isValidName(trimmedGrade)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"erwinqxy"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"erwinqxy"},"content":"        return new Grade(trimmedGrade);","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"erwinqxy":27,"-":65}},{"path":"src/main/java/seedu/address/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"shermannws"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"shermannws"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"shermannws"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"shermannws"},"content":" * Parses input arguments and creates a new ViewCommand object","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"shermannws"},"content":"public class ViewCommandParser implements Parser\u003cViewCommand\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"shermannws"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewCommand","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"shermannws"},"content":"     * and returns a ViewCommand object for execution.","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"shermannws"},"content":"    public ViewCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"shermannws"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"shermannws"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME);","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"shermannws"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"shermannws"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"shermannws"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"shermannws"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"shermannws"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"shermannws"},"content":"        String trimmedNameArgs \u003d argMultimap.getValue(PREFIX_NAME).get();","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"shermannws"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"shermannws"},"content":"        if (trimmedNameArgs.isEmpty()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"shermannws"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"shermannws"},"content":"        String[] nameKeywords \u003d trimmedNameArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"shermannws"},"content":"        return new ViewCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"shermannws"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"shermannws"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"shermannws"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"shermannws"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"shermannws"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"shermannws"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"shermannws"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"shermannws":28,"-":22}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"erwinqxy"},"content":"     * Returns the user prefs\u0027 ProgrammerError file path.","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"erwinqxy"},"content":"     * Sets the user prefs\u0027 ProgrammerError file path.","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"erwinqxy"},"content":"     * Replaces ProgrammerError data with the data in {@code addressBook}.","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"erwinqxy":3,"-":84}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"erwinqxy"},"content":" * Represents the in-memory model of ProgrammerError data.","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"erwinqxy":1,"-":150}},{"path":"src/main/java/seedu/address/model/person/ClassId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"erwinqxy"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"erwinqxy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"erwinqxy"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"erwinqxy"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"erwinqxy"},"content":" * Represents a Student\u0027s classId in the ProgrammerError.","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"erwinqxy"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidClassId(String)}","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"erwinqxy"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"erwinqxy"},"content":"public class ClassId {","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"erwinqxy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"erwinqxy"},"content":"            \"Class ID should only contain 3 alphanumeric characters, and it should not be blank\";","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"erwinqxy"},"content":"    /*","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"ZhaoPeiduo"},"content":"     * A class ID must start with an alphabet followed by two numbers.","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"ZhaoPeiduo"},"content":"    public static final String VALIDATION_REGEX \u003d \"[A-Z][0-9]{2}\";","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"erwinqxy"},"content":"    public final String classId;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"erwinqxy"},"content":"     * Constructs a {@code classID}.","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"erwinqxy"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"erwinqxy"},"content":"     * @param classId A valid classID.","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"erwinqxy"},"content":"    public ClassId(String classId) {","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"erwinqxy"},"content":"        requireNonNull(classId);","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"erwinqxy"},"content":"        checkArgument(isValidClassId(classId), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"erwinqxy"},"content":"        this.classId \u003d classId;","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"erwinqxy"},"content":"     * Returns true if a given string is a valid grade.","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"erwinqxy"},"content":"    public static boolean isValidClassId(String test) {","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"erwinqxy"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"erwinqxy"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"erwinqxy"},"content":"    public String toString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"erwinqxy"},"content":"        return classId;","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"erwinqxy"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"erwinqxy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"erwinqxy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"erwinqxy"},"content":"                || (other instanceof ClassId // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"erwinqxy"},"content":"                \u0026\u0026 classId.equals(((ClassId) other).classId)); // state check","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"erwinqxy"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"erwinqxy"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"erwinqxy"},"content":"        return classId.hashCode();","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"erwinqxy"},"content":"}","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"ZhaoPeiduo":2,"erwinqxy":56}},{"path":"src/main/java/seedu/address/model/person/Grade.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"erwinqxy"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"erwinqxy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"erwinqxy"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"erwinqxy"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"erwinqxy"},"content":" * Represents a Student\u0027s Grade in the ProgrammerError.","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"erwinqxy"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidGrade(String)}","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"erwinqxy"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"erwinqxy"},"content":"public class Grade {","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"erwinqxy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"erwinqxy"},"content":"            \"Grade should only an alphabet or with a sign, and it should not be blank\";","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"erwinqxy"},"content":"    /*","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"ZhaoPeiduo"},"content":"     * A valid expression can be either a single alphabet (eg. A) or an alphabet followed by a sign (eg. A+)","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Grade A and B can be followed by either a plus, minus or no sign.","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Grade C and D can be followed by either a plus or no sign.","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Grade F cannot be followed by any sign.","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"ZhaoPeiduo"},"content":"     * \"*\" indicates that sign is optional.","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"ZhaoPeiduo"},"content":"    public static final String VALIDATION_REGEX \u003d \"([AB]((\\\\+)|-)*)|([CD](\\\\+)*)|(F)\";","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"erwinqxy"},"content":"    public final String grade;","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"erwinqxy"},"content":"     * Constructs a {@code Grade}.","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"erwinqxy"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"erwinqxy"},"content":"     * @param grade A valid Grade.","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"erwinqxy"},"content":"    public Grade(String grade) {","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"erwinqxy"},"content":"        requireNonNull(grade);","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"erwinqxy"},"content":"        checkArgument(isValidGrade(grade), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"erwinqxy"},"content":"        this.grade \u003d grade;","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"erwinqxy"},"content":"     * Returns true if a given string is a valid grade.","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"erwinqxy"},"content":"    public static boolean isValidGrade(String test) {","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"erwinqxy"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"erwinqxy"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"erwinqxy"},"content":"    public String toString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"erwinqxy"},"content":"        return grade;","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"erwinqxy"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"erwinqxy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"erwinqxy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"erwinqxy"},"content":"                || (other instanceof Grade // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"erwinqxy"},"content":"                \u0026\u0026 grade.equals(((Grade) other).grade)); // state check","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"erwinqxy"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"erwinqxy"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"erwinqxy"},"content":"        return grade.hashCode();","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"erwinqxy"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"ZhaoPeiduo":6,"erwinqxy":56}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"erwinqxy"},"content":" * Represents a Person\u0027s name in the ProgrammerError.","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"erwinqxy":1,"-":58}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"erwinqxy"},"content":" * Represents a Person in the ProgrammerError.","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"erwinqxy"},"content":"    private final StudentId studentId;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"erwinqxy"},"content":"    private final ClassId classId;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"erwinqxy"},"content":"    private final Grade grade;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"erwinqxy"},"content":"    public Person(Name name, StudentId studentId, ClassId classId, Grade grade) {","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"erwinqxy"},"content":"        requireAllNonNull(name, studentId, classId, grade);","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"erwinqxy"},"content":"        this.studentId \u003d studentId;","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"erwinqxy"},"content":"        this.classId \u003d classId;","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"erwinqxy"},"content":"        this.grade \u003d grade;","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"erwinqxy"},"content":"    public StudentId getStudentId() {","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"erwinqxy"},"content":"        return studentId;","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"erwinqxy"},"content":"    public ClassId getClassId() {","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"erwinqxy"},"content":"        return classId;","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"erwinqxy"},"content":"    public Grade getGrade() {","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"erwinqxy"},"content":"        return grade;","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":76,"author":{"gitId":"erwinqxy"},"content":"                \u0026\u0026 otherPerson.getStudentId().equals(getStudentId())","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"erwinqxy"},"content":"                \u0026\u0026 otherPerson.getClassId().equals(getClassId())","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"erwinqxy"},"content":"                \u0026\u0026 otherPerson.getGrade().equals(getGrade());","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"erwinqxy"},"content":"        return Objects.hash(name, studentId, classId, grade);","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"erwinqxy"},"content":"                .append(\"; Student_Id: \")","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"erwinqxy"},"content":"                .append(getStudentId())","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"erwinqxy"},"content":"                .append(\"; Class_Id: \")","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"erwinqxy"},"content":"                .append(getClassId())","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"erwinqxy"},"content":"                .append(\"; Grade: \")","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"erwinqxy"},"content":"                .append(getGrade());","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"erwinqxy":26,"-":75}},{"path":"src/main/java/seedu/address/model/person/StudentId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"erwinqxy"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"erwinqxy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"erwinqxy"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"erwinqxy"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"erwinqxy"},"content":" * Represents a Student\u0027s ID in the ProgrammerError.","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"erwinqxy"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidStudentId(String)}","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"erwinqxy"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"erwinqxy"},"content":"public class StudentId {","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"erwinqxy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"erwinqxy"},"content":"            \"Student ID should only contain 9 alphanumeric characters, and it should not be blank\";","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"erwinqxy"},"content":"    /*","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"ZhaoPeiduo"},"content":"     * A student ID must start and end with an alphabet, and has exactly 7 numbers between the two letters","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"ZhaoPeiduo"},"content":"    public static final String VALIDATION_REGEX \u003d \"[A-Z][0-9]{7}[A-Z]\";","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"erwinqxy"},"content":"    public final String studentId;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"erwinqxy"},"content":"     * Constructs a {@code StudentId}.","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"erwinqxy"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"erwinqxy"},"content":"     * @param studentId A valid studentId.","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"erwinqxy"},"content":"    public StudentId(String studentId) {","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"erwinqxy"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"erwinqxy"},"content":"        checkArgument(isValidStudentId(studentId), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"erwinqxy"},"content":"        this.studentId \u003d studentId;","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"erwinqxy"},"content":"     * Returns true if a given string is a valid StudentId.","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"erwinqxy"},"content":"    public static boolean isValidStudentId(String test) {","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"erwinqxy"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"erwinqxy"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"erwinqxy"},"content":"    public String toString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"erwinqxy"},"content":"        return studentId;","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"erwinqxy"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"erwinqxy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"erwinqxy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"erwinqxy"},"content":"                || (other instanceof StudentId // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"erwinqxy"},"content":"                \u0026\u0026 studentId.equals(((StudentId) other).studentId)); // state check","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"erwinqxy"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"erwinqxy"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"erwinqxy"},"content":"        return studentId.hashCode();","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"erwinqxy"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"ZhaoPeiduo":2,"erwinqxy":56}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":5,"author":{"gitId":"erwinqxy"},"content":"import seedu.address.model.person.ClassId;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"erwinqxy"},"content":"import seedu.address.model.person.Grade;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"erwinqxy"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"erwinqxy"},"content":"            new Person(new Name(\"Allard Quek\"), new StudentId(\"A0212425H\"), new ClassId(\"B01\"), new Grade(\"F\")),","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"erwinqxy"},"content":"            new Person(new Name(\"Samay Sagar\"), new StudentId(\"A0212425H\"), new ClassId(\"B02\"), new Grade(\"A\")),","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"erwinqxy"},"content":"            new Person(new Name(\"Erwin Quek\"), new StudentId(\"A0212425H\"), new ClassId(\"B03\"), new Grade(\"A\")),","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"erwinqxy"},"content":"            new Person(new Name(\"David Li\"), new StudentId(\"A0212425H\"), new ClassId(\"B04\"), new Grade(\"A\")),","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"erwinqxy"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new StudentId(\"A0212425H\"), new ClassId(\"B05\"), new Grade(\"A\")),","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"erwinqxy"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new StudentId(\"A0212425H\"), new ClassId(\"B06\"), new Grade(\"A\"))","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"erwinqxy":9,"-":25}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"erwinqxy"},"content":"import seedu.address.model.person.ClassId;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"erwinqxy"},"content":"import seedu.address.model.person.Grade;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"erwinqxy"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"erwinqxy"},"content":"    private final String studentId;","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"erwinqxy"},"content":"    private final String classId;","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"erwinqxy"},"content":"    private final String grade;","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"erwinqxy"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"studentId\") String studentId,","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"erwinqxy"},"content":"            @JsonProperty(\"classId\") String classId, @JsonProperty(\"grade\") String grade) {","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"erwinqxy"},"content":"        this.studentId \u003d studentId;","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"erwinqxy"},"content":"        this.classId \u003d classId;","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"erwinqxy"},"content":"        this.grade \u003d grade;","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"erwinqxy"},"content":"        studentId \u003d source.getStudentId().studentId;","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"erwinqxy"},"content":"        classId \u003d source.getClassId().classId;","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"erwinqxy"},"content":"        grade \u003d source.getGrade().grade;","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"erwinqxy"},"content":"        if (studentId \u003d\u003d null) {","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"erwinqxy"},"content":"            throw new IllegalValueException(String.format(","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"erwinqxy"},"content":"                    MISSING_FIELD_MESSAGE_FORMAT, StudentId.class.getSimpleName()));","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"erwinqxy"},"content":"        if (!StudentId.isValidStudentId(studentId)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"erwinqxy"},"content":"            throw new IllegalValueException(StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"erwinqxy"},"content":"        final StudentId modelStudentId \u003d new StudentId(studentId);","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"erwinqxy"},"content":"        if (classId \u003d\u003d null) {","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"erwinqxy"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, ClassId.class.getSimpleName()));","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"erwinqxy"},"content":"        if (!ClassId.isValidClassId(classId)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"erwinqxy"},"content":"            throw new IllegalValueException(ClassId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"erwinqxy"},"content":"        final ClassId modelClassId \u003d new ClassId(classId);","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"erwinqxy"},"content":"        if (grade \u003d\u003d null) {","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"erwinqxy"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Grade.class.getSimpleName()));","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"erwinqxy"},"content":"        if (!Grade.isValidGrade(grade)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"erwinqxy"},"content":"            throw new IllegalValueException(Grade.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"erwinqxy"},"content":"        final Grade modelGrade \u003d new Grade(grade);","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"erwinqxy"},"content":"        return new Person(modelName, modelStudentId, modelClassId, modelGrade);","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"erwinqxy":32,"-":59}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"erwinqxy"},"content":"     * Converts ProgrammerError into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"erwinqxy":1,"-":59}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"ZhaoPeiduo"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"ZhaoPeiduo"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s1-cs2103-f09-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"ZhaoPeiduo"},"content":"    public static final String HELP_MESSAGE \u003d \"Full user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"ZhaoPeiduo"},"content":"    private static final String FEATURE_LIST \u003d \"Here is the feature list of ProgrammerError:\\n\"","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"ZhaoPeiduo"},"content":"            + \"1. Purge Sample Data (Delete all)\\n\"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"ZhaoPeiduo"},"content":"            + \"   -\u003e purge\\n\"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"ZhaoPeiduo"},"content":"            + \"2. Create records of individual students (Add)\\n\"","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"ZhaoPeiduo"},"content":"            + \"   -\u003e add -n \u003cNAME\u003e -sid \u003cSTUDENT_ID\u003e -cid \u003cCLASS_ID\u003e -grade \u003cGRADE\u003e\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"ZhaoPeiduo"},"content":"            + \"3. View the records of individual students (Read)\\n\"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"ZhaoPeiduo"},"content":"            + \"   -\u003e view -sid \u003cSTUDENT_ID\u003e\\n\"","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"ZhaoPeiduo"},"content":"            + \"4. Update a student\u0027s record (Update)\\n\"","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"ZhaoPeiduo"},"content":"            + \"   -\u003e update -sid \u003cSTUDENT_ID\u003e\\n\"","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"ZhaoPeiduo"},"content":"            + \"5. Delete a student\u0027s record (Delete)\\n\"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"ZhaoPeiduo"},"content":"            + \"   -\u003e delete -sid \u003cSTUDENT_ID\u003e\";","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"ZhaoPeiduo"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"ZhaoPeiduo"},"content":"    private TextArea featureList;","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":52,"author":{"gitId":"ZhaoPeiduo"},"content":"        featureList.setText(FEATURE_LIST);","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"ZhaoPeiduo":17,"-":100}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"erwinqxy"},"content":"    private Label studentId;","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"erwinqxy"},"content":"    private Label classId;","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"erwinqxy"},"content":"    private Label grade;","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"erwinqxy"},"content":"        studentId.setText(\"Student_ID: \" + person.getStudentId().studentId);","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"erwinqxy"},"content":"        classId.setText(\"Class_ID: \" + person.getClassId().classId);","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"erwinqxy"},"content":"        grade.setText(\"Grade: \" + person.getGrade().grade);","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"erwinqxy":6,"-":64}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"ZhaoPeiduo"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/programmer_error.png\";","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"ZhaoPeiduo":1,"-":88}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"ZhaoPeiduo"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"ZhaoPeiduo"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"ZhaoPeiduo"},"content":"\u003c?import javafx.scene.image.*?\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"ZhaoPeiduo"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"ZhaoPeiduo"},"content":"\u003c?import javafx.stage.*?\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"ZhaoPeiduo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"ZhaoPeiduo"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"ZhaoPeiduo"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"ZhaoPeiduo"},"content":"      \u003cVBox prefHeight\u003d\"353.0\" prefWidth\u003d\"469.0\"\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"ZhaoPeiduo"},"content":"          \u003cPane prefHeight\u003d\"345.0\" prefWidth\u003d\"469.0\"\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"ZhaoPeiduo"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"ZhaoPeiduo"},"content":"              \u003cTextArea fx:id\u003d\"featureList\" editable\u003d\"false\" layoutY\u003d\"-6.0\" prefHeight\u003d\"365.0\" prefWidth\u003d\"470.0\" text\u003d\"Feature List\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"ZhaoPeiduo"},"content":"            \u003c/children\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"ZhaoPeiduo"},"content":"          \u003c/Pane\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"ZhaoPeiduo"},"content":"          \u003cHBox alignment\u003d\"CENTER\" prefHeight\u003d\"99.0\" prefWidth\u003d\"469.0\"\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"ZhaoPeiduo"},"content":"              \u003cLabel fx:id\u003d\"helpMessage\" prefHeight\u003d\"34.0\" prefWidth\u003d\"252.0\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                  \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"              \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"ZhaoPeiduo"},"content":"              \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" prefHeight\u003d\"25.0\" prefWidth\u003d\"75.0\" text\u003d\"Copy URL\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                  \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"              \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"              \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"              \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"ZhaoPeiduo"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"ZhaoPeiduo":18,"-":35}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"ZhaoPeiduo"},"content":"         title\u003d\"ProgrammerError\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"ZhaoPeiduo"},"content":"    \u003cImage url\u003d\"@/images/programmer_error.png\" /\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"ZhaoPeiduo":2,"-":59}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":29,"author":{"gitId":"erwinqxy"},"content":"      \u003cLabel fx:id\u003d\"studentId\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$studentId\" /\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"erwinqxy"},"content":"      \u003cLabel fx:id\u003d\"classId\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$classId\" /\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"erwinqxy"},"content":"      \u003cLabel fx:id\u003d\"grade\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$grade\" /\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"erwinqxy":3,"-":31}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"ZhaoPeiduo"},"content":"        assertNotNull(AppUtil.getImage(\"/images/programmer_error.png\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"ZhaoPeiduo":1,"-":35}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"erwinqxy"},"content":"//package seedu.address.logic;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"erwinqxy"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.CLASSID_DESC_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.GRADE_DESC_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.STUDENTID_DESC_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"erwinqxy"},"content":"//import java.io.IOException;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"erwinqxy"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"erwinqxy"},"content":"//import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"erwinqxy"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"erwinqxy"},"content":"//import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.storage.StorageManager;","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"erwinqxy"},"content":"//public class LogicManagerTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"erwinqxy"},"content":"//    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"erwinqxy"},"content":"//    @TempDir","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"erwinqxy"},"content":"//    public Path temporaryFolder;","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"erwinqxy"},"content":"//    private Model model \u003d new ModelManager();","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"erwinqxy"},"content":"//    private Logic logic;","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"erwinqxy"},"content":"//    @BeforeEach","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"erwinqxy"},"content":"//    public void setUp() {","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"erwinqxy"},"content":"//        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"erwinqxy"},"content":"//                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"erwinqxy"},"content":"//        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"erwinqxy"},"content":"//        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"erwinqxy"},"content":"//        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"erwinqxy"},"content":"//    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"erwinqxy"},"content":"//        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"erwinqxy"},"content":"//        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"erwinqxy"},"content":"//    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"erwinqxy"},"content":"//        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"erwinqxy"},"content":"//        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"erwinqxy"},"content":"//    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"erwinqxy"},"content":"//        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"erwinqxy"},"content":"//        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"erwinqxy"},"content":"////    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"erwinqxy"},"content":"////    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"erwinqxy"},"content":"////        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"erwinqxy"},"content":"////        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"erwinqxy"},"content":"////                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"erwinqxy"},"content":"////        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"erwinqxy"},"content":"////                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"erwinqxy"},"content":"////        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"erwinqxy"},"content":"////        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"erwinqxy"},"content":"////","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"erwinqxy"},"content":"////        // Execute add command","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"erwinqxy"},"content":"////        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + STUDENTID_DESC_AMY + CLASSID_DESC_AMY","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"erwinqxy"},"content":"////                + GRADE_DESC_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"erwinqxy"},"content":"////        Person expectedPerson \u003d new PersonBuilder(AMY).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"erwinqxy"},"content":"////        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"erwinqxy"},"content":"////        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"erwinqxy"},"content":"////        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"erwinqxy"},"content":"////        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"erwinqxy"},"content":"////    }","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"erwinqxy"},"content":"//    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"erwinqxy"},"content":"//        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"erwinqxy"},"content":"//    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"erwinqxy"},"content":"//     * Executes the command and confirms that","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"erwinqxy"},"content":"//     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"erwinqxy"},"content":"//     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"erwinqxy"},"content":"//     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"erwinqxy"},"content":"//     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"erwinqxy"},"content":"//     */","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"erwinqxy"},"content":"//    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"erwinqxy"},"content":"//            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"erwinqxy"},"content":"//        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"erwinqxy"},"content":"//        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"erwinqxy"},"content":"//        assertEquals(expectedModel, model);","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"erwinqxy"},"content":"//    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"erwinqxy"},"content":"//     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"erwinqxy"},"content":"//     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"erwinqxy"},"content":"//     */","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"erwinqxy"},"content":"//    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"erwinqxy"},"content":"//        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"erwinqxy"},"content":"//    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"erwinqxy"},"content":"//     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"erwinqxy"},"content":"//     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"erwinqxy"},"content":"//     */","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"erwinqxy"},"content":"//    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"erwinqxy"},"content":"//        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"erwinqxy"},"content":"//    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"erwinqxy"},"content":"//     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"erwinqxy"},"content":"//     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"erwinqxy"},"content":"//     */","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"erwinqxy"},"content":"//    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"erwinqxy"},"content":"//            String expectedMessage) {","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"erwinqxy"},"content":"//        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"erwinqxy"},"content":"//        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"erwinqxy"},"content":"//    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"erwinqxy"},"content":"//     * Executes the command and confirms that","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"erwinqxy"},"content":"//     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"erwinqxy"},"content":"//     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":140,"author":{"gitId":"erwinqxy"},"content":"//     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":141,"author":{"gitId":"erwinqxy"},"content":"//     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2021-10-08"},{"lineNumber":142,"author":{"gitId":"erwinqxy"},"content":"//     */","lastModifiedDate":"2021-10-08"},{"lineNumber":143,"author":{"gitId":"erwinqxy"},"content":"//    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2021-10-08"},{"lineNumber":144,"author":{"gitId":"erwinqxy"},"content":"//            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2021-10-08"},{"lineNumber":145,"author":{"gitId":"erwinqxy"},"content":"//        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2021-10-08"},{"lineNumber":146,"author":{"gitId":"erwinqxy"},"content":"//        assertEquals(expectedModel, model);","lastModifiedDate":"2021-10-08"},{"lineNumber":147,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":148,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":149,"author":{"gitId":"erwinqxy"},"content":"//    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":150,"author":{"gitId":"erwinqxy"},"content":"//     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2021-10-08"},{"lineNumber":151,"author":{"gitId":"erwinqxy"},"content":"//     */","lastModifiedDate":"2021-10-08"},{"lineNumber":152,"author":{"gitId":"erwinqxy"},"content":"//    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"erwinqxy"},"content":"//        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"erwinqxy"},"content":"//            super(filePath);","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"erwinqxy"},"content":"//        }","lastModifiedDate":"2021-10-08"},{"lineNumber":156,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":157,"author":{"gitId":"erwinqxy"},"content":"//        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":158,"author":{"gitId":"erwinqxy"},"content":"//        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2021-10-08"},{"lineNumber":159,"author":{"gitId":"erwinqxy"},"content":"//            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2021-10-08"},{"lineNumber":160,"author":{"gitId":"erwinqxy"},"content":"//        }","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":162,"author":{"gitId":"erwinqxy"},"content":"//}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"erwinqxy":162}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"ZhaoPeiduo"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"ZhaoPeiduo"},"content":"                addCommand.execute(modelStub));","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2021-10-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2021-10-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2021-10-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2021-10-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2021-10-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2021-10-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2021-10-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2021-10-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2021-10-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2021-10-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2021-10-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2021-10-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2021-10-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2021-10-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2021-10-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2021-10-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"ZhaoPeiduo":2,"-":191}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"erwinqxy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASS_ID;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"erwinqxy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GRADE;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"erwinqxy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENT_ID;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"erwinqxy"},"content":"    public static final String VALID_STUDENTID_AMY \u003d \"A0232134H\";","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"erwinqxy"},"content":"    public static final String VALID_STUDENTID_BOB \u003d \"A0232132B\";","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"erwinqxy"},"content":"    public static final String VALID_CLASSID_AMY \u003d \"B01\";","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"erwinqxy"},"content":"    public static final String VALID_CLASSID_BOB \u003d \"B02\";","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"erwinqxy"},"content":"    public static final String VALID_GRADE_AMY \u003d \"A\";","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"erwinqxy"},"content":"    public static final String VALID_GRADE_BOB \u003d \"D\";","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"erwinqxy"},"content":"    public static final String STUDENTID_DESC_AMY \u003d \" \" + PREFIX_STUDENT_ID + VALID_STUDENTID_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"erwinqxy"},"content":"    public static final String STUDENTID_DESC_BOB \u003d \" \" + PREFIX_STUDENT_ID + VALID_STUDENTID_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"erwinqxy"},"content":"    public static final String CLASSID_DESC_AMY \u003d \" \" + PREFIX_CLASS_ID + VALID_CLASSID_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"erwinqxy"},"content":"    public static final String CLASSID_DESC_BOB \u003d \" \" + PREFIX_CLASS_ID + VALID_CLASSID_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"erwinqxy"},"content":"    public static final String GRADE_DESC_AMY \u003d \" \" + PREFIX_GRADE + VALID_GRADE_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"erwinqxy"},"content":"    public static final String GRADE_DESC_BOB \u003d \" \" + PREFIX_GRADE + VALID_GRADE_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"erwinqxy"},"content":"    //todo","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"erwinqxy"},"content":"    public static final String INVALID_STUDENTID_DESC \u003d \" \" + PREFIX_STUDENT_ID + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"erwinqxy"},"content":"    public static final String INVALID_CLASSID_DESC \u003d \" \" + PREFIX_CLASS_ID + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"erwinqxy"},"content":"    public static final String INVALID_GRADE_DESC \u003d \" \" + PREFIX_GRADE; // empty string not allowed for addresses","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"erwinqxy"},"content":"                .withStudentId(VALID_STUDENTID_AMY).withClassId(VALID_CLASSID_AMY).withGrade(VALID_GRADE_AMY).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"erwinqxy"},"content":"                .withStudentId(VALID_STUDENTID_BOB).withClassId(VALID_CLASSID_BOB).withGrade(VALID_GRADE_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"erwinqxy":21,"-":100}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"ZhaoPeiduo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CLASSID_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"ZhaoPeiduo"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withClassId(VALID_CLASSID_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"ZhaoPeiduo"},"content":"                .withClassId(VALID_CLASSID_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2021-10-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-10-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2021-10-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2021-10-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2021-10-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-10-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":162,"author":{"gitId":"ZhaoPeiduo"},"content":"        assertFalse(standardCommand.equals(new PurgeCommand()));","lastModifiedDate":"2021-10-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2021-10-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2021-10-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"ZhaoPeiduo":4,"-":167}},{"path":"src/test/java/seedu/address/logic/commands/PurgeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"reddevil1313"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"reddevil1313"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"reddevil1313"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"reddevil1313"},"content":"public class PurgeCommandTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"reddevil1313"},"content":"        assertCommandSuccess(new PurgeCommand(), model, PurgeCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"reddevil1313"},"content":"    // Need to update this test case to reflect the addition of status.","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"reddevil1313"},"content":"    /*","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"reddevil1313"},"content":"        assertCommandSuccess(new PurgeCommand(), model, PurgeCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"reddevil1313"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"reddevil1313":9,"-":26}},{"path":"src/test/java/seedu/address/logic/commands/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"shermannws"},"content":" * Contains integration tests (interaction with the Model) for {@code ViewCommand}.","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"shermannws"},"content":"public class ViewCommandTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"shermannws"},"content":"        ViewCommand viewFirstCommand \u003d new ViewCommand(firstPredicate);","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"shermannws"},"content":"        ViewCommand viewSecondCommand \u003d new ViewCommand(secondPredicate);","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"shermannws"},"content":"        assertTrue(viewFirstCommand.equals(viewFirstCommand));","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"shermannws"},"content":"        ViewCommand viewFirstCommandCopy \u003d new ViewCommand(firstPredicate);","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"shermannws"},"content":"        assertTrue(viewFirstCommand.equals(viewFirstCommandCopy));","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"shermannws"},"content":"        assertFalse(viewFirstCommand.equals(1));","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"shermannws"},"content":"        assertFalse(viewFirstCommand.equals(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"shermannws"},"content":"        assertFalse(viewFirstCommand.equals(viewSecondCommand));","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"shermannws"},"content":"        ViewCommand command \u003d new ViewCommand(predicate);","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"shermannws"},"content":"        ViewCommand command \u003d new ViewCommand(predicate);","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"shermannws":12,"-":71}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"erwinqxy"},"content":"//package seedu.address.logic.parser;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENTID_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_CLASSID_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_GRADE_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.STUDENTID_DESC_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.STUDENTID_DESC_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.CLASSID_DESC_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.CLASSID_DESC_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.GRADE_DESC_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.GRADE_DESC_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"erwinqxy"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"erwinqxy"},"content":"//public class AddCommandParserTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"erwinqxy"},"content":"//    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"erwinqxy"},"content":"//    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"erwinqxy"},"content":"//        Person expectedPerson \u003d new PersonBuilder(BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"erwinqxy"},"content":"//        // whitespace only preamble","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"erwinqxy"},"content":"//        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + STUDENTID_DESC_BOB + CLASSID_DESC_BOB","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"erwinqxy"},"content":"//                + GRADE_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"erwinqxy"},"content":"//        // multiple names - last name accepted","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"erwinqxy"},"content":"//        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + STUDENTID_DESC_BOB + CLASSID_DESC_BOB","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"erwinqxy"},"content":"//                + GRADE_DESC_BOB , new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"erwinqxy"},"content":"//    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"erwinqxy"},"content":"//        // zero tags","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"erwinqxy"},"content":"//        Person expectedPerson \u003d new PersonBuilder(AMY).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"erwinqxy"},"content":"//        assertParseSuccess(parser, NAME_DESC_AMY + STUDENTID_DESC_AMY + CLASSID_DESC_AMY + GRADE_DESC_AMY,","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"erwinqxy"},"content":"//                new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"erwinqxy"},"content":"//    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"erwinqxy"},"content":"//        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"erwinqxy"},"content":"//        // missing name prefix","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"erwinqxy"},"content":"//        assertParseFailure(parser, VALID_NAME_BOB + STUDENTID_DESC_BOB + CLASSID_DESC_BOB + GRADE_DESC_BOB,","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"erwinqxy"},"content":"//                expectedMessage);","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"erwinqxy"},"content":"//        // missing phone prefix","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"erwinqxy"},"content":"//        assertParseFailure(parser, NAME_DESC_BOB + VALID_STUDENTID_BOB + CLASSID_DESC_BOB + GRADE_DESC_BOB,","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"erwinqxy"},"content":"//                expectedMessage);","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"erwinqxy"},"content":"//        // missing email prefix","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"erwinqxy"},"content":"//        assertParseFailure(parser, NAME_DESC_BOB + STUDENTID_DESC_BOB + VALID_CLASSID_BOB + GRADE_DESC_BOB,","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"erwinqxy"},"content":"//                expectedMessage);","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"erwinqxy"},"content":"//        // missing address prefix","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"erwinqxy"},"content":"//        assertParseFailure(parser, NAME_DESC_BOB + STUDENTID_DESC_BOB + CLASSID_DESC_BOB + VALID_GRADE_BOB,","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"erwinqxy"},"content":"//                expectedMessage);","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"erwinqxy"},"content":"//        // all prefixes missing","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"erwinqxy"},"content":"//        assertParseFailure(parser, VALID_NAME_BOB + VALID_STUDENTID_BOB + VALID_CLASSID_BOB + VALID_GRADE_BOB,","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"erwinqxy"},"content":"//                expectedMessage);","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"erwinqxy"},"content":"//}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"erwinqxy":76}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"erwinqxy"},"content":"//package seedu.address.logic.parser;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"erwinqxy"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"erwinqxy"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"erwinqxy"},"content":"//import java.util.Arrays;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"erwinqxy"},"content":"//import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"erwinqxy"},"content":"//import java.util.stream.Collectors;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"erwinqxy"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"shermannws"},"content":"//import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.logic.commands.PurgeCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"erwinqxy"},"content":"//public class AddressBookParserTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"erwinqxy"},"content":"//    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"erwinqxy"},"content":"////    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"erwinqxy"},"content":"////    public void parseCommand_add() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"erwinqxy"},"content":"////        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"erwinqxy"},"content":"////        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"erwinqxy"},"content":"////        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"erwinqxy"},"content":"////    }","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"erwinqxy"},"content":"//    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"erwinqxy"},"content":"//        assertTrue(parser.parseCommand(PurgeCommand.COMMAND_WORD) instanceof PurgeCommand);","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"erwinqxy"},"content":"//        assertTrue(parser.parseCommand(PurgeCommand.COMMAND_WORD + \" 3\") instanceof PurgeCommand);","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"erwinqxy"},"content":"//    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"erwinqxy"},"content":"//        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"erwinqxy"},"content":"//                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"erwinqxy"},"content":"//        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"erwinqxy"},"content":"////    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"erwinqxy"},"content":"////    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"erwinqxy"},"content":"////        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"erwinqxy"},"content":"////        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"erwinqxy"},"content":"////        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"erwinqxy"},"content":"////                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"erwinqxy"},"content":"////        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"erwinqxy"},"content":"////    }","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"erwinqxy"},"content":"//    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"erwinqxy"},"content":"//        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"erwinqxy"},"content":"//        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"shermannws"},"content":"//    public void parseCommand_view() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"erwinqxy"},"content":"//        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"shermannws"},"content":"//        ViewCommand command \u003d (ViewCommand) parser.parseCommand(","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"shermannws"},"content":"//                ViewCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"shermannws"},"content":"//        assertEquals(new ViewCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"erwinqxy"},"content":"//    public void parseCommand_help() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"erwinqxy"},"content":"//        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"erwinqxy"},"content":"//        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"erwinqxy"},"content":"//    public void parseCommand_list() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"erwinqxy"},"content":"//        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"erwinqxy"},"content":"//        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"erwinqxy"},"content":"//    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"erwinqxy"},"content":"//        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"erwinqxy"},"content":"//        HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"erwinqxy"},"content":"//            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"erwinqxy"},"content":"//    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"erwinqxy"},"content":"//        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"erwinqxy"},"content":"//}","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"shermannws"},"content":"//","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"shermannws":6,"erwinqxy":97}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"erwinqxy"},"content":"//package seedu.address.logic.parser;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"erwinqxy"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"erwinqxy"},"content":"//    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"erwinqxy"},"content":"//    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"erwinqxy"},"content":"//            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"erwinqxy"},"content":"//    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"erwinqxy"},"content":"//    public void parse_missingParts_failure() {","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"erwinqxy"},"content":"//        // no index specified","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"erwinqxy"},"content":"//        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"erwinqxy"},"content":"//        // no field specified","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"erwinqxy"},"content":"//        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"erwinqxy"},"content":"//        // no index and no field specified","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"erwinqxy"},"content":"//        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"erwinqxy"},"content":"//    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"erwinqxy"},"content":"//        // negative index","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"erwinqxy"},"content":"//        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"erwinqxy"},"content":"//        // zero index","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"erwinqxy"},"content":"//        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"erwinqxy"},"content":"//        // invalid arguments being parsed as preamble","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"erwinqxy"},"content":"//        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"erwinqxy"},"content":"//        // invalid prefix being parsed as preamble","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"erwinqxy"},"content":"//        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"erwinqxy"},"content":"//    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"erwinqxy"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"erwinqxy"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"erwinqxy"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"erwinqxy"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"erwinqxy"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"erwinqxy"},"content":"//        // invalid phone followed by valid email","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"erwinqxy"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"erwinqxy"},"content":"//        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"erwinqxy"},"content":"//        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"erwinqxy"},"content":"//        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"erwinqxy"},"content":"//        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"erwinqxy"},"content":"//        // parsing it together with a valid tag results in error","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"erwinqxy"},"content":"//        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"erwinqxy"},"content":"//        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"erwinqxy"},"content":"//        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"erwinqxy"},"content":"//        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"erwinqxy"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"erwinqxy"},"content":"//                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"erwinqxy"},"content":"//    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"erwinqxy"},"content":"//        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"erwinqxy"},"content":"//        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"erwinqxy"},"content":"//                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"erwinqxy"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"erwinqxy"},"content":"//                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withStudentId(VALID_ADDRESS_AMY)","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"erwinqxy"},"content":"//                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"erwinqxy"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"erwinqxy"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"erwinqxy"},"content":"//    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"erwinqxy"},"content":"//        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"erwinqxy"},"content":"//        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"erwinqxy"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"erwinqxy"},"content":"//                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"erwinqxy"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"erwinqxy"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":135,"author":{"gitId":"erwinqxy"},"content":"//    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2021-10-07"},{"lineNumber":136,"author":{"gitId":"erwinqxy"},"content":"//        // name","lastModifiedDate":"2021-10-07"},{"lineNumber":137,"author":{"gitId":"erwinqxy"},"content":"//        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2021-10-07"},{"lineNumber":138,"author":{"gitId":"erwinqxy"},"content":"//        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"erwinqxy"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":140,"author":{"gitId":"erwinqxy"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":141,"author":{"gitId":"erwinqxy"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":142,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":143,"author":{"gitId":"erwinqxy"},"content":"//        // phone","lastModifiedDate":"2021-10-07"},{"lineNumber":144,"author":{"gitId":"erwinqxy"},"content":"//        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":145,"author":{"gitId":"erwinqxy"},"content":"//        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":146,"author":{"gitId":"erwinqxy"},"content":"//        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":147,"author":{"gitId":"erwinqxy"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":148,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":149,"author":{"gitId":"erwinqxy"},"content":"//        // email","lastModifiedDate":"2021-10-07"},{"lineNumber":150,"author":{"gitId":"erwinqxy"},"content":"//        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":151,"author":{"gitId":"erwinqxy"},"content":"//        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":152,"author":{"gitId":"erwinqxy"},"content":"//        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":153,"author":{"gitId":"erwinqxy"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":154,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":155,"author":{"gitId":"erwinqxy"},"content":"//        // address","lastModifiedDate":"2021-10-07"},{"lineNumber":156,"author":{"gitId":"erwinqxy"},"content":"//        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":157,"author":{"gitId":"erwinqxy"},"content":"//        descriptor \u003d new EditPersonDescriptorBuilder().withStudentId(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":158,"author":{"gitId":"erwinqxy"},"content":"//        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":159,"author":{"gitId":"erwinqxy"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":160,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":161,"author":{"gitId":"erwinqxy"},"content":"//        // tags","lastModifiedDate":"2021-10-07"},{"lineNumber":162,"author":{"gitId":"erwinqxy"},"content":"//        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2021-10-07"},{"lineNumber":163,"author":{"gitId":"erwinqxy"},"content":"//        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":164,"author":{"gitId":"erwinqxy"},"content":"//        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":165,"author":{"gitId":"erwinqxy"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":166,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-07"},{"lineNumber":167,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":168,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":169,"author":{"gitId":"erwinqxy"},"content":"//    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2021-10-07"},{"lineNumber":170,"author":{"gitId":"erwinqxy"},"content":"//        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-07"},{"lineNumber":171,"author":{"gitId":"erwinqxy"},"content":"//        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-10-07"},{"lineNumber":172,"author":{"gitId":"erwinqxy"},"content":"//                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2021-10-07"},{"lineNumber":173,"author":{"gitId":"erwinqxy"},"content":"//                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2021-10-07"},{"lineNumber":174,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":175,"author":{"gitId":"erwinqxy"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-07"},{"lineNumber":176,"author":{"gitId":"erwinqxy"},"content":"//                .withEmail(VALID_EMAIL_BOB).withStudentId(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-10-08"},{"lineNumber":177,"author":{"gitId":"erwinqxy"},"content":"//                .build();","lastModifiedDate":"2021-10-07"},{"lineNumber":178,"author":{"gitId":"erwinqxy"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":179,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":180,"author":{"gitId":"erwinqxy"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":181,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-07"},{"lineNumber":182,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":183,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":184,"author":{"gitId":"erwinqxy"},"content":"//    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2021-10-07"},{"lineNumber":185,"author":{"gitId":"erwinqxy"},"content":"//        // no other valid values specified","lastModifiedDate":"2021-10-07"},{"lineNumber":186,"author":{"gitId":"erwinqxy"},"content":"//        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-07"},{"lineNumber":187,"author":{"gitId":"erwinqxy"},"content":"//        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":188,"author":{"gitId":"erwinqxy"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":189,"author":{"gitId":"erwinqxy"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":190,"author":{"gitId":"erwinqxy"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":191,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":192,"author":{"gitId":"erwinqxy"},"content":"//        // other valid values specified","lastModifiedDate":"2021-10-07"},{"lineNumber":193,"author":{"gitId":"erwinqxy"},"content":"//        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":194,"author":{"gitId":"erwinqxy"},"content":"//                + PHONE_DESC_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":195,"author":{"gitId":"erwinqxy"},"content":"//        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-10-07"},{"lineNumber":196,"author":{"gitId":"erwinqxy"},"content":"//                .withStudentId(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":197,"author":{"gitId":"erwinqxy"},"content":"//        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":198,"author":{"gitId":"erwinqxy"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":199,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-07"},{"lineNumber":200,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":201,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":202,"author":{"gitId":"erwinqxy"},"content":"//    public void parse_resetTags_success() {","lastModifiedDate":"2021-10-07"},{"lineNumber":203,"author":{"gitId":"erwinqxy"},"content":"//        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2021-10-07"},{"lineNumber":204,"author":{"gitId":"erwinqxy"},"content":"//        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2021-10-07"},{"lineNumber":205,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":206,"author":{"gitId":"erwinqxy"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2021-10-07"},{"lineNumber":207,"author":{"gitId":"erwinqxy"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":208,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":209,"author":{"gitId":"erwinqxy"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":210,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"erwinqxy":209,"-":2}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"erwinqxy"},"content":"//package seedu.address.logic.parser;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"erwinqxy"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"erwinqxy"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"erwinqxy"},"content":"//public class ParserUtilTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"erwinqxy"},"content":"//    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"erwinqxy"},"content":"//    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"erwinqxy"},"content":"//    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"erwinqxy"},"content":"//    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"erwinqxy"},"content":"//    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"erwinqxy"},"content":"//    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"erwinqxy"},"content":"//    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"erwinqxy"},"content":"//    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"erwinqxy"},"content":"//    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"erwinqxy"},"content":"//    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"erwinqxy"},"content":"//    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"erwinqxy"},"content":"//    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"erwinqxy"},"content":"////    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"erwinqxy"},"content":"////    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"erwinqxy"},"content":"////        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"erwinqxy"},"content":"////    }","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"erwinqxy"},"content":"////","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"erwinqxy"},"content":"////    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"erwinqxy"},"content":"////    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"erwinqxy"},"content":"////        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"erwinqxy"},"content":"////            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"erwinqxy"},"content":"////    }","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"erwinqxy"},"content":"////","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"erwinqxy"},"content":"////    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"erwinqxy"},"content":"////    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"erwinqxy"},"content":"////        // No whitespaces","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"erwinqxy"},"content":"////        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"erwinqxy"},"content":"////","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"erwinqxy"},"content":"////        // Leading and trailing whitespaces","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"erwinqxy"},"content":"////        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"erwinqxy"},"content":"////    }","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"erwinqxy"},"content":"////","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"erwinqxy"},"content":"////    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"erwinqxy"},"content":"////    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"erwinqxy"},"content":"////        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"erwinqxy"},"content":"////    }","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"erwinqxy"},"content":"////","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"erwinqxy"},"content":"////    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"erwinqxy"},"content":"////    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"erwinqxy"},"content":"////        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"erwinqxy"},"content":"////    }","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"erwinqxy"},"content":"////","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"erwinqxy"},"content":"////    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"erwinqxy"},"content":"////    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"erwinqxy"},"content":"////        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"erwinqxy"},"content":"////        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"erwinqxy"},"content":"////    }","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"erwinqxy"},"content":"////","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"erwinqxy"},"content":"////    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"erwinqxy"},"content":"////    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"erwinqxy"},"content":"////        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"erwinqxy"},"content":"////        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"erwinqxy"},"content":"////        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"erwinqxy"},"content":"////    }","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"erwinqxy"},"content":"////","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"erwinqxy"},"content":"////    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"erwinqxy"},"content":"////    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"erwinqxy"},"content":"////        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"erwinqxy"},"content":"////    }","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"erwinqxy"},"content":"////","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"erwinqxy"},"content":"////    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"erwinqxy"},"content":"////    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"erwinqxy"},"content":"////        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"erwinqxy"},"content":"////    }","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"erwinqxy"},"content":"////","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"erwinqxy"},"content":"////    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"erwinqxy"},"content":"////    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"erwinqxy"},"content":"////        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"erwinqxy"},"content":"////        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"erwinqxy"},"content":"////    }","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"erwinqxy"},"content":"////","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"erwinqxy"},"content":"////    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"erwinqxy"},"content":"////    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"erwinqxy"},"content":"////        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"erwinqxy"},"content":"////        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"erwinqxy"},"content":"////        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"erwinqxy"},"content":"////    }","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"erwinqxy"},"content":"////","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"erwinqxy"},"content":"////    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"erwinqxy"},"content":"////    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"erwinqxy"},"content":"////        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"erwinqxy"},"content":"////    }","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"erwinqxy"},"content":"////","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"erwinqxy"},"content":"////    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"erwinqxy"},"content":"////    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"erwinqxy"},"content":"////        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"erwinqxy"},"content":"////    }","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"erwinqxy"},"content":"////","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"erwinqxy"},"content":"////    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"erwinqxy"},"content":"////    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"erwinqxy"},"content":"////        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"erwinqxy"},"content":"////        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"erwinqxy"},"content":"////    }","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"erwinqxy"},"content":"////","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"erwinqxy"},"content":"////    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"erwinqxy"},"content":"////    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"erwinqxy"},"content":"////        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"erwinqxy"},"content":"////        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"erwinqxy"},"content":"////        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"erwinqxy"},"content":"////    }","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"erwinqxy"},"content":"////","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"erwinqxy"},"content":"////    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"erwinqxy"},"content":"////    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"erwinqxy"},"content":"////        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"erwinqxy"},"content":"////    }","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"erwinqxy"},"content":"////","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"erwinqxy"},"content":"////    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"erwinqxy"},"content":"////    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"erwinqxy"},"content":"////        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"erwinqxy"},"content":"////    }","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"erwinqxy"},"content":"////","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"erwinqxy"},"content":"////    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"erwinqxy"},"content":"////    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"erwinqxy"},"content":"////        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"erwinqxy"},"content":"////        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"erwinqxy"},"content":"////    }","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"erwinqxy"},"content":"////","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"erwinqxy"},"content":"////    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"erwinqxy"},"content":"////    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"erwinqxy"},"content":"////        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"erwinqxy"},"content":"////        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"erwinqxy"},"content":"////        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"erwinqxy"},"content":"////    }","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"erwinqxy"},"content":"//}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"erwinqxy":134}},{"path":"src/test/java/seedu/address/logic/parser/ViewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"shermannws"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"shermannws"},"content":"public class ViewCommandParserTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"shermannws"},"content":"    private ViewCommandParser parser \u003d new ViewCommandParser();","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"shermannws"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"shermannws"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"shermannws"},"content":"    public void parse_emptyNameArg_throwsParseException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"shermannws"},"content":"        // single trailing whitespace","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"shermannws"},"content":"        assertParseFailure(parser, \" -n \",","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"shermannws"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"shermannws"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"shermannws"},"content":"        // multiple trailing whitespaces","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"shermannws"},"content":"        assertParseFailure(parser, \" -n   \",","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"shermannws"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"shermannws"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"shermannws"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"shermannws"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"shermannws"},"content":"    public void parse_invalidPrefixArg_throwsParseException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"shermannws"},"content":"        // single trailing whitespace","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"shermannws"},"content":"        assertParseFailure(parser, \" -s Peter\",","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"shermannws"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"shermannws"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"shermannws"},"content":"        assertParseFailure(parser, \" --n Alice\",","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"shermannws"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"shermannws"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"shermannws"},"content":"        assertParseFailure(parser, \" -nn Tan\",","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"shermannws"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"shermannws"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"shermannws"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"shermannws"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"shermannws"},"content":"    public void parse_validArgs_returnsViewCommand() {","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"shermannws"},"content":"        ViewCommand expectedViewCommand \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"shermannws"},"content":"                new ViewCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"shermannws"},"content":"        assertParseSuccess(parser, \" -n Alice Bob\", expectedViewCommand);","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"shermannws"},"content":"        assertParseSuccess(parser, \" -n \\n Alice \\n \\t Bob  \\t\", expectedViewCommand);","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"shermannws":34,"-":25}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"erwinqxy"},"content":"//package seedu.address.model;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"erwinqxy"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"erwinqxy"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"erwinqxy"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENTID_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"erwinqxy"},"content":"//import java.util.Arrays;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"erwinqxy"},"content":"//import java.util.Collection;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"erwinqxy"},"content":"//import java.util.Collections;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"erwinqxy"},"content":"//import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"erwinqxy"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"erwinqxy"},"content":"//import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"erwinqxy"},"content":"//import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"erwinqxy"},"content":"//public class AddressBookTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"erwinqxy"},"content":"//    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"erwinqxy"},"content":"//    public void constructor() {","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"erwinqxy"},"content":"//        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"erwinqxy"},"content":"//    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"erwinqxy"},"content":"//        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"erwinqxy"},"content":"//    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"erwinqxy"},"content":"//        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"erwinqxy"},"content":"//        addressBook.resetData(newData);","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"erwinqxy"},"content":"//        assertEquals(newData, addressBook);","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"erwinqxy"},"content":"//    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"erwinqxy"},"content":"//        // Two persons with the same identity fields","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"erwinqxy"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withStudentId(VALID_STUDENTID_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"erwinqxy"},"content":"//        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"erwinqxy"},"content":"//        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"erwinqxy"},"content":"//        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"erwinqxy"},"content":"//    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"erwinqxy"},"content":"//        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"erwinqxy"},"content":"//    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"erwinqxy"},"content":"//        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"erwinqxy"},"content":"//    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"erwinqxy"},"content":"//        addressBook.addPerson(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"erwinqxy"},"content":"//        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"erwinqxy"},"content":"//    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"erwinqxy"},"content":"//        addressBook.addPerson(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"erwinqxy"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withStudentId(VALID_STUDENTID_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"erwinqxy"},"content":"//        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"erwinqxy"},"content":"//    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"erwinqxy"},"content":"//        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"erwinqxy"},"content":"//    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"erwinqxy"},"content":"//     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"erwinqxy"},"content":"//     */","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"erwinqxy"},"content":"//    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"erwinqxy"},"content":"//        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"erwinqxy"},"content":"//        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"erwinqxy"},"content":"//            this.persons.setAll(persons);","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"erwinqxy"},"content":"//        }","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"erwinqxy"},"content":"//        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"erwinqxy"},"content":"//        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"erwinqxy"},"content":"//            return persons;","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"erwinqxy"},"content":"//        }","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"erwinqxy"},"content":"//}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"erwinqxy":101}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"erwinqxy"},"content":"//package seedu.address.model;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"erwinqxy"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"erwinqxy"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"erwinqxy"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"erwinqxy"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"erwinqxy"},"content":"//import java.nio.file.Paths;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"erwinqxy"},"content":"//import java.util.Arrays;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"erwinqxy"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"erwinqxy"},"content":"//public class ModelManagerTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"erwinqxy"},"content":"//    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"erwinqxy"},"content":"//    public void constructor() {","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"erwinqxy"},"content":"//        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"erwinqxy"},"content":"//        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"erwinqxy"},"content":"//        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"erwinqxy"},"content":"//    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"erwinqxy"},"content":"//        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"erwinqxy"},"content":"//    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"erwinqxy"},"content":"//        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"erwinqxy"},"content":"//        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"erwinqxy"},"content":"//        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"erwinqxy"},"content":"//        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"erwinqxy"},"content":"//        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"erwinqxy"},"content":"//        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"erwinqxy"},"content":"//        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"erwinqxy"},"content":"//        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"erwinqxy"},"content":"//        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"erwinqxy"},"content":"//    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"erwinqxy"},"content":"//        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"erwinqxy"},"content":"//    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"erwinqxy"},"content":"//        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"erwinqxy"},"content":"//        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"erwinqxy"},"content":"//        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"erwinqxy"},"content":"//    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"erwinqxy"},"content":"//        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"erwinqxy"},"content":"//    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"erwinqxy"},"content":"//        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"erwinqxy"},"content":"//        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"erwinqxy"},"content":"//        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"erwinqxy"},"content":"//    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"erwinqxy"},"content":"//        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"erwinqxy"},"content":"////    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"erwinqxy"},"content":"////    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"erwinqxy"},"content":"////        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"erwinqxy"},"content":"////    }","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"erwinqxy"},"content":"////    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"erwinqxy"},"content":"////    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"erwinqxy"},"content":"////        modelManager.addPerson(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"erwinqxy"},"content":"////        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"erwinqxy"},"content":"////    }","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"erwinqxy"},"content":"//    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"erwinqxy"},"content":"//        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"erwinqxy"},"content":"////    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"erwinqxy"},"content":"////    public void equals() {","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"erwinqxy"},"content":"////        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"erwinqxy"},"content":"////        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"erwinqxy"},"content":"////        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"erwinqxy"},"content":"////","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"erwinqxy"},"content":"////        // same values -\u003e returns true","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"erwinqxy"},"content":"////        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"erwinqxy"},"content":"////        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"erwinqxy"},"content":"////        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"erwinqxy"},"content":"////","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"erwinqxy"},"content":"////        // same object -\u003e returns true","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"erwinqxy"},"content":"////        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"erwinqxy"},"content":"////","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"erwinqxy"},"content":"////        // null -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"erwinqxy"},"content":"////        assertFalse(modelManager.equals(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"erwinqxy"},"content":"////","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"erwinqxy"},"content":"////        // different types -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"erwinqxy"},"content":"////        assertFalse(modelManager.equals(5));","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"erwinqxy"},"content":"////","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"erwinqxy"},"content":"////        // different addressBook -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"erwinqxy"},"content":"////        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"erwinqxy"},"content":"////","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"erwinqxy"},"content":"////        // different filteredList -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"erwinqxy"},"content":"////        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"erwinqxy"},"content":"////        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"erwinqxy"},"content":"////        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"erwinqxy"},"content":"////","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"erwinqxy"},"content":"////        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"erwinqxy"},"content":"////        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"erwinqxy"},"content":"////","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"erwinqxy"},"content":"////        // different userPrefs -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"erwinqxy"},"content":"////        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"erwinqxy"},"content":"////        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"erwinqxy"},"content":"////        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"erwinqxy"},"content":"////    }","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"erwinqxy"},"content":"//}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"erwinqxy":132}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"erwinqxy"},"content":"//package seedu.address.model.person;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"erwinqxy"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"erwinqxy"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"erwinqxy"},"content":"//import java.util.Arrays;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"erwinqxy"},"content":"//import java.util.Collections;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"erwinqxy"},"content":"//import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"erwinqxy"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"erwinqxy"},"content":"//public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"erwinqxy"},"content":"//    public void equals() {","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"erwinqxy"},"content":"//        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"erwinqxy"},"content":"//        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"erwinqxy"},"content":"//        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"erwinqxy"},"content":"//        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"erwinqxy"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"erwinqxy"},"content":"//        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"erwinqxy"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"erwinqxy"},"content":"//        NameContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"erwinqxy"},"content":"//        new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"erwinqxy"},"content":"//        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"erwinqxy"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"erwinqxy"},"content":"//        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"erwinqxy"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"erwinqxy"},"content":"//        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"erwinqxy"},"content":"//        // different person -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"erwinqxy"},"content":"//        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"erwinqxy"},"content":"//    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"erwinqxy"},"content":"//        // One keyword","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"erwinqxy"},"content":"//        NameContainsKeywordsPredicate predicate \u003d ne","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"erwinqxy"},"content":"//        w NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"erwinqxy"},"content":"//        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"erwinqxy"},"content":"//        // Multiple keywords","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"erwinqxy"},"content":"//        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"erwinqxy"},"content":"//        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"erwinqxy"},"content":"//        // Only one matching keyword","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"erwinqxy"},"content":"//        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"erwinqxy"},"content":"//        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"erwinqxy"},"content":"//        // Mixed-case keywords","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"erwinqxy"},"content":"//        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"erwinqxy"},"content":"//        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"erwinqxy"},"content":"//    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"erwinqxy"},"content":"//        // Zero keywords","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"erwinqxy"},"content":"//        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"erwinqxy"},"content":"//        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"erwinqxy"},"content":"//        // Non-matching keyword","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"erwinqxy"},"content":"//        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"erwinqxy"},"content":"//        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"erwinqxy"},"content":"//        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"erwinqxy"},"content":"//        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"A0214212H\", \"B01\", \"D\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"erwinqxy"},"content":"//        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withStudentId(\"A0214212H\")","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"erwinqxy"},"content":"//                .withClassId(\"B01\").withGrade(\"D\").build()));","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"erwinqxy"},"content":"//}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"erwinqxy":77}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"erwinqxy"},"content":"//package seedu.address.model.person;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"erwinqxy"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"erwinqxy"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENTID_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_CLASSID_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_GRADE_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"erwinqxy"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"erwinqxy"},"content":"//public class PersonTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"erwinqxy"},"content":"//    public void isSamePerson() {","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"erwinqxy"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"erwinqxy"},"content":"//        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"erwinqxy"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"erwinqxy"},"content":"//        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"erwinqxy"},"content":"//        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"erwinqxy"},"content":"//   Person editedAlice \u003d new PersonBuilder(ALICE).withStudentId(VALID_STUDENTID_BOB).withClassId(VALID_CLASSID_BOB)","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"erwinqxy"},"content":"//                .withGrade(VALID_GRADE_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"erwinqxy"},"content":"//        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"erwinqxy"},"content":"//        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"erwinqxy"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"erwinqxy"},"content":"//        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"erwinqxy"},"content":"//        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"erwinqxy"},"content":"//        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"erwinqxy"},"content":"//        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"erwinqxy"},"content":"//        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"erwinqxy"},"content":"//        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"erwinqxy"},"content":"//        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"erwinqxy"},"content":"//        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"erwinqxy"},"content":"//    public void equals() {","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"erwinqxy"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"erwinqxy"},"content":"//        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"erwinqxy"},"content":"//        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"erwinqxy"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"erwinqxy"},"content":"//        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"erwinqxy"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"erwinqxy"},"content":"//        assertFalse(ALICE.equals(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"erwinqxy"},"content":"//        // different type -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"erwinqxy"},"content":"//        assertFalse(ALICE.equals(5));","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"erwinqxy"},"content":"//        // different person -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"erwinqxy"},"content":"//        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"erwinqxy"},"content":"//        // different name -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"erwinqxy"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"erwinqxy"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"erwinqxy"},"content":"//        // different phone -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"erwinqxy"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withStudentId(VALID_STUDENTID_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"erwinqxy"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"erwinqxy"},"content":"//        // different email -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"erwinqxy"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withClassId(VALID_CLASSID_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"erwinqxy"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"erwinqxy"},"content":"//        // different address -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"erwinqxy"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withGrade(VALID_GRADE_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"erwinqxy"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"erwinqxy"},"content":"//}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"erwinqxy":78}},{"path":"src/test/java/seedu/address/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"erwinqxy"},"content":"//package seedu.address.model.person;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"erwinqxy"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"erwinqxy"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"erwinqxy"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"erwinqxy"},"content":"//public class PhoneTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"erwinqxy"},"content":"////","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"erwinqxy"},"content":"////    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"erwinqxy"},"content":"////    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"erwinqxy"},"content":"////        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"erwinqxy"},"content":"////    }","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"erwinqxy"},"content":"////","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"erwinqxy"},"content":"////    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"erwinqxy"},"content":"////    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"erwinqxy"},"content":"////        String invalidPhone \u003d \"\";","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"erwinqxy"},"content":"////        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"erwinqxy"},"content":"////    }","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"erwinqxy"},"content":"////","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"erwinqxy"},"content":"////    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"erwinqxy"},"content":"////    public void isValidPhone() {","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"erwinqxy"},"content":"////        // null phone number","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"erwinqxy"},"content":"////        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"erwinqxy"},"content":"////","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"erwinqxy"},"content":"////        // invalid phone numbers","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"erwinqxy"},"content":"////        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"erwinqxy"},"content":"////        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"erwinqxy"},"content":"////        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"erwinqxy"},"content":"////        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"erwinqxy"},"content":"////        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"erwinqxy"},"content":"////        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"erwinqxy"},"content":"////","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"erwinqxy"},"content":"////        // valid phone numbers","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"erwinqxy"},"content":"////        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"erwinqxy"},"content":"////        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"erwinqxy"},"content":"////        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"erwinqxy"},"content":"////    }","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"erwinqxy"},"content":"//}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"erwinqxy":40}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"erwinqxy"},"content":"//package seedu.address.model.person;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"erwinqxy"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"erwinqxy"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"erwinqxy"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENTID_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"erwinqxy"},"content":"//import java.util.Arrays;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"erwinqxy"},"content":"//import java.util.Collections;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"erwinqxy"},"content":"//import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"erwinqxy"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"erwinqxy"},"content":"//public class UniquePersonListTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"erwinqxy"},"content":"//    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"erwinqxy"},"content":"//    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"erwinqxy"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"erwinqxy"},"content":"//    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"erwinqxy"},"content":"//        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"erwinqxy"},"content":"//    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"erwinqxy"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"erwinqxy"},"content":"//        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"erwinqxy"},"content":"//    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"erwinqxy"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"erwinqxy"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withStudentId(VALID_STUDENTID_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"erwinqxy"},"content":"//        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"erwinqxy"},"content":"//    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"erwinqxy"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"erwinqxy"},"content":"//    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"erwinqxy"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"erwinqxy"},"content":"//        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"erwinqxy"},"content":"//    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"erwinqxy"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"erwinqxy"},"content":"//    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"erwinqxy"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"erwinqxy"},"content":"//    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"erwinqxy"},"content":"//        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"erwinqxy"},"content":"//    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"erwinqxy"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"erwinqxy"},"content":"//        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"erwinqxy"},"content":"//        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"erwinqxy"},"content":"//        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"erwinqxy"},"content":"//        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"erwinqxy"},"content":"//    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"erwinqxy"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"erwinqxy"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withStudentId(VALID_STUDENTID_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"erwinqxy"},"content":"//        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"erwinqxy"},"content":"//        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"erwinqxy"},"content":"//        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"erwinqxy"},"content":"//        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"erwinqxy"},"content":"//    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"erwinqxy"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"erwinqxy"},"content":"//        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"erwinqxy"},"content":"//        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"erwinqxy"},"content":"//        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"erwinqxy"},"content":"//        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"erwinqxy"},"content":"//    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"erwinqxy"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"erwinqxy"},"content":"//        uniquePersonList.add(BOB);","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"erwinqxy"},"content":"//        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"erwinqxy"},"content":"//    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"erwinqxy"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"erwinqxy"},"content":"//    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"erwinqxy"},"content":"//        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"erwinqxy"},"content":"//    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"erwinqxy"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"erwinqxy"},"content":"//        uniquePersonList.remove(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"erwinqxy"},"content":"//        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"erwinqxy"},"content":"//        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"erwinqxy"},"content":"//    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"erwinqxy"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"erwinqxy"},"content":"//    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"erwinqxy"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"erwinqxy"},"content":"//        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"erwinqxy"},"content":"//        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"erwinqxy"},"content":"//        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"erwinqxy"},"content":"//        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":140,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":141,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":142,"author":{"gitId":"erwinqxy"},"content":"//    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":143,"author":{"gitId":"erwinqxy"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2021-10-08"},{"lineNumber":144,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":145,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":146,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":147,"author":{"gitId":"erwinqxy"},"content":"//    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":148,"author":{"gitId":"erwinqxy"},"content":"//        uniquePersonList.add(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":149,"author":{"gitId":"erwinqxy"},"content":"//        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2021-10-08"},{"lineNumber":150,"author":{"gitId":"erwinqxy"},"content":"//        uniquePersonList.setPersons(personList);","lastModifiedDate":"2021-10-08"},{"lineNumber":151,"author":{"gitId":"erwinqxy"},"content":"//        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2021-10-08"},{"lineNumber":152,"author":{"gitId":"erwinqxy"},"content":"//        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"erwinqxy"},"content":"//        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":156,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":157,"author":{"gitId":"erwinqxy"},"content":"//    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":158,"author":{"gitId":"erwinqxy"},"content":"//        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":159,"author":{"gitId":"erwinqxy"},"content":"//        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2021-10-08"},{"lineNumber":160,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":162,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":163,"author":{"gitId":"erwinqxy"},"content":"//    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":164,"author":{"gitId":"erwinqxy"},"content":"//        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-10-08"},{"lineNumber":165,"author":{"gitId":"erwinqxy"},"content":"//            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-10-08"},{"lineNumber":166,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":167,"author":{"gitId":"erwinqxy"},"content":"//}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"erwinqxy":167}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"erwinqxy"},"content":"//package seedu.address.storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"erwinqxy"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"erwinqxy"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.model.person.ClassId;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.model.person.StudentId;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"erwinqxy"},"content":"//public class JsonAdaptedPersonTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"erwinqxy"},"content":"//    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"erwinqxy"},"content":"//    private static final String INVALID_STUDENTID \u003d \"+651234\";","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"erwinqxy"},"content":"//    private static final String INVALID_CLASSID \u003d \" \";","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"erwinqxy"},"content":"//    private static final String INVALID_GRADE \u003d \" \";","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"erwinqxy"},"content":"//    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"erwinqxy"},"content":"//    private static final String VALID_STUDENTID \u003d BENSON.getStudentId().toString();","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"erwinqxy"},"content":"//    private static final String VALID_CLASSID \u003d BENSON.getClassId().toString();","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"erwinqxy"},"content":"//    private static final String VALID_GRADE \u003d BENSON.getGrade().toString();","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"erwinqxy"},"content":"//    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"erwinqxy"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"erwinqxy"},"content":"//        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"erwinqxy"},"content":"//    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"erwinqxy"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"erwinqxy"},"content":"//                new JsonAdaptedPerson(INVALID_NAME, VALID_STUDENTID, VALID_CLASSID, VALID_GRADE);","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"erwinqxy"},"content":"//        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"erwinqxy"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"erwinqxy"},"content":"//    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"erwinqxy"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_STUDENTID, VALID_CLASSID, VALID_GRADE);","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"erwinqxy"},"content":"//        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"erwinqxy"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"erwinqxy"},"content":"//    public void toModelType_invalidStudentId_throwsIllegalValueException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"erwinqxy"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"erwinqxy"},"content":"//                new JsonAdaptedPerson(VALID_NAME, INVALID_STUDENTID, VALID_CLASSID, VALID_GRADE);","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"erwinqxy"},"content":"//        String expectedMessage \u003d StudentId.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"erwinqxy"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"erwinqxy"},"content":"//    public void toModelType_nullStudentId_throwsIllegalValueException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"erwinqxy"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_CLASSID, VALID_GRADE);","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"erwinqxy"},"content":"//        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, StudentId.class.getSimpleName());","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"erwinqxy"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"erwinqxy"},"content":"//    public void toModelType_invalidClassId_throwsIllegalValueException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"erwinqxy"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"erwinqxy"},"content":"//                new JsonAdaptedPerson(VALID_NAME, VALID_STUDENTID, INVALID_CLASSID, VALID_GRADE);","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"erwinqxy"},"content":"//        String expectedMessage \u003d ClassId.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"erwinqxy"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"erwinqxy"},"content":"//}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"erwinqxy":70}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"erwinqxy"},"content":"//package seedu.address.storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"erwinqxy"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"erwinqxy"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"erwinqxy"},"content":"//import java.io.IOException;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"erwinqxy"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"erwinqxy"},"content":"//import java.nio.file.Paths;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"erwinqxy"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"erwinqxy"},"content":"//import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"erwinqxy"},"content":"//public class JsonAddressBookStorageTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"erwinqxy"},"content":"//    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"erwinqxy"},"content":"//    @TempDir","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"erwinqxy"},"content":"//    public Path testFolder;","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"erwinqxy"},"content":"//    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"erwinqxy"},"content":"//        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"erwinqxy"},"content":"//    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"erwinqxy"},"content":"//        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"erwinqxy"},"content":"//    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"erwinqxy"},"content":"//        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"erwinqxy"},"content":"//                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"erwinqxy"},"content":"//                : null;","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"erwinqxy"},"content":"//    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"erwinqxy"},"content":"//        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"erwinqxy"},"content":"//    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"erwinqxy"},"content":"//        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"erwinqxy"},"content":"//    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"erwinqxy"},"content":"//        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"erwinqxy"},"content":"//    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"erwinqxy"},"content":"//        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"erwinqxy"},"content":"//    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"erwinqxy"},"content":"//        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"erwinqxy"},"content":"//        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"erwinqxy"},"content":"//        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"erwinqxy"},"content":"//        // Save in new file and read back","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"erwinqxy"},"content":"//        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"erwinqxy"},"content":"//        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"erwinqxy"},"content":"//        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"erwinqxy"},"content":"//        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"erwinqxy"},"content":"//        original.addPerson(HOON);","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"erwinqxy"},"content":"//        original.removePerson(ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"erwinqxy"},"content":"//        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"erwinqxy"},"content":"//        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"erwinqxy"},"content":"//        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"erwinqxy"},"content":"//        // Save and read without specifying file path","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"erwinqxy"},"content":"//        original.addPerson(IDA);","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"erwinqxy"},"content":"//        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"erwinqxy"},"content":"//        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"erwinqxy"},"content":"//        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"erwinqxy"},"content":"//    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"erwinqxy"},"content":"//        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"erwinqxy"},"content":"//    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"erwinqxy"},"content":"//     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"erwinqxy"},"content":"//     */","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"erwinqxy"},"content":"//    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"erwinqxy"},"content":"//        try {","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"erwinqxy"},"content":"//            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"erwinqxy"},"content":"//                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"erwinqxy"},"content":"//        } catch (IOException ioe) {","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"erwinqxy"},"content":"//            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"erwinqxy"},"content":"//        }","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"erwinqxy"},"content":"//    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"erwinqxy"},"content":"//        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"erwinqxy"},"content":"//}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"erwinqxy":110}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"erwinqxy"},"content":"//package seedu.address.storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"erwinqxy"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"erwinqxy"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"erwinqxy"},"content":"//import java.nio.file.Paths;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"erwinqxy"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"erwinqxy"},"content":"//public class JsonSerializableAddressBookTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"erwinqxy"},"content":"//    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"erwinqxy"},"content":"//    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"erwinqxy"},"content":"//    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"erwinqxy"},"content":"//    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"erwinqxy"},"content":"//    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"erwinqxy"},"content":"//        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"erwinqxy"},"content":"//                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"erwinqxy"},"content":"//        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"erwinqxy"},"content":"//        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"erwinqxy"},"content":"//        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"erwinqxy"},"content":"//    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"erwinqxy"},"content":"//        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"erwinqxy"},"content":"//                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"erwinqxy"},"content":"//        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"erwinqxy"},"content":"//    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"erwinqxy"},"content":"//        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"erwinqxy"},"content":"//                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"erwinqxy"},"content":"//        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"erwinqxy"},"content":"//                dataFromFile::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"erwinqxy"},"content":"//}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"erwinqxy":47}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"erwinqxy"},"content":"//package seedu.address.storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"erwinqxy"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"erwinqxy"},"content":"//import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"erwinqxy"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"erwinqxy"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"erwinqxy"},"content":"//import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"erwinqxy"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"erwinqxy"},"content":"//import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"erwinqxy"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"erwinqxy"},"content":"//public class StorageManagerTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"erwinqxy"},"content":"//    @TempDir","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"erwinqxy"},"content":"//    public Path testFolder;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"erwinqxy"},"content":"//    private StorageManager storageManager;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"erwinqxy"},"content":"//    @BeforeEach","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"erwinqxy"},"content":"//    public void setUp() {","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"erwinqxy"},"content":"//        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"erwinqxy"},"content":"//        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"erwinqxy"},"content":"//        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"erwinqxy"},"content":"//    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"erwinqxy"},"content":"//        return testFolder.resolve(fileName);","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"erwinqxy"},"content":"//    public void prefsReadSave() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"erwinqxy"},"content":"//        /*","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"erwinqxy"},"content":"//         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"erwinqxy"},"content":"//         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"erwinqxy"},"content":"//         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"erwinqxy"},"content":"//         */","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"erwinqxy"},"content":"//        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"erwinqxy"},"content":"//        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"erwinqxy"},"content":"//        storageManager.saveUserPrefs(original);","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"erwinqxy"},"content":"//        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"erwinqxy"},"content":"//        assertEquals(original, retrieved);","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"erwinqxy"},"content":"//    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"erwinqxy"},"content":"//        /*","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"erwinqxy"},"content":"//         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"erwinqxy"},"content":"//         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"erwinqxy"},"content":"//         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"erwinqxy"},"content":"//         */","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"erwinqxy"},"content":"//        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"erwinqxy"},"content":"//        storageManager.saveAddressBook(original);","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"erwinqxy"},"content":"//        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"erwinqxy"},"content":"//        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"erwinqxy"},"content":"//    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"erwinqxy"},"content":"//    public void getAddressBookFilePath() {","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"erwinqxy"},"content":"//        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"erwinqxy"},"content":"//}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"erwinqxy":68}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":4,"author":{"gitId":"erwinqxy"},"content":"import seedu.address.model.person.ClassId;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"erwinqxy"},"content":"import seedu.address.model.person.Grade;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"erwinqxy"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"erwinqxy"},"content":"        descriptor.setStudentId(person.getStudentId());","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"erwinqxy"},"content":"        descriptor.setClassId(person.getClassId());","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"erwinqxy"},"content":"        descriptor.setGrade(person.getGrade());","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"erwinqxy"},"content":"     * Sets the {@code StudentId} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"erwinqxy"},"content":"    public EditPersonDescriptorBuilder withStudentId(String studentId) {","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"erwinqxy"},"content":"        descriptor.setStudentId(new StudentId(studentId));","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"erwinqxy"},"content":"     * Sets the {@code ClassId} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"erwinqxy"},"content":"    public EditPersonDescriptorBuilder withClassId(String classId) {","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"erwinqxy"},"content":"        descriptor.setClassId(new ClassId(classId));","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"erwinqxy"},"content":"     * Sets the {@code grade} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"erwinqxy"},"content":"    public EditPersonDescriptorBuilder withGrade(String grade) {","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"erwinqxy"},"content":"        descriptor.setGrade(new Grade(grade));","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"erwinqxy":15,"-":57}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"erwinqxy"},"content":"import seedu.address.model.person.ClassId;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"erwinqxy"},"content":"import seedu.address.model.person.Grade;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"erwinqxy"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":15,"author":{"gitId":"erwinqxy"},"content":"    public static final String DEFAULT_STUDENTID \u003d \"A0213256H\";","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"erwinqxy"},"content":"    public static final String DEFAULT_CLASSID \u003d \"B01\";","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"erwinqxy"},"content":"    public static final String DEFAULT_GRADE \u003d \"A+\";","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"erwinqxy"},"content":"    private StudentId studentId;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"erwinqxy"},"content":"    private ClassId classId;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"erwinqxy"},"content":"    private Grade grade;","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"erwinqxy"},"content":"        studentId \u003d new StudentId(DEFAULT_STUDENTID);","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"erwinqxy"},"content":"        classId \u003d new ClassId(DEFAULT_CLASSID);","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"erwinqxy"},"content":"        grade \u003d new Grade(DEFAULT_GRADE);","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"erwinqxy"},"content":"        studentId \u003d personToCopy.getStudentId();","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"erwinqxy"},"content":"        classId \u003d personToCopy.getClassId();","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"erwinqxy"},"content":"        grade \u003d personToCopy.getGrade();","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"erwinqxy"},"content":"    public PersonBuilder withStudentId(String studentId) {","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"erwinqxy"},"content":"        this.studentId \u003d new StudentId(studentId);","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"erwinqxy"},"content":"     * Sets the {@code ClassId} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"erwinqxy"},"content":"    public PersonBuilder withClassId(String classId) {","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"erwinqxy"},"content":"        this.classId \u003d new ClassId(classId);","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"erwinqxy"},"content":"     * Sets the {@code Grade} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"erwinqxy"},"content":"    public PersonBuilder withGrade(String grade) {","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"erwinqxy"},"content":"        this.grade \u003d new Grade(grade);","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":78,"author":{"gitId":"erwinqxy"},"content":"        return new Person(name, studentId, classId, grade);","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"erwinqxy":24,"-":57}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"erwinqxy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASS_ID;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"erwinqxy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GRADE;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"erwinqxy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENT_ID;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"erwinqxy"},"content":"        sb.append(PREFIX_STUDENT_ID + person.getStudentId().studentId + \" \");","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"erwinqxy"},"content":"        sb.append(PREFIX_CLASS_ID + person.getClassId().classId + \" \");","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"erwinqxy"},"content":"        sb.append(PREFIX_GRADE + person.getGrade().grade + \" \");","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"erwinqxy"},"content":"        descriptor.getStudentId().ifPresent(studentId -\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"erwinqxy"},"content":"                sb.append(PREFIX_STUDENT_ID).append(studentId.studentId).append(\" \"));","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"erwinqxy"},"content":"        descriptor.getClassId().ifPresent(classId -\u003e sb.append(PREFIX_CLASS_ID).append(classId.classId).append(\" \"));","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"erwinqxy"},"content":"        descriptor.getGrade().ifPresent(grade -\u003e sb.append(PREFIX_GRADE).append(grade.grade).append(\" \"));","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"erwinqxy":13,"-":38}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"erwinqxy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CLASSID_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"erwinqxy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CLASSID_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"erwinqxy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GRADE_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"erwinqxy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GRADE_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"erwinqxy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENTID_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"erwinqxy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENTID_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"erwinqxy"},"content":"            .withStudentId(\"A0212425H\").withClassId(\"B01\")","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"erwinqxy"},"content":"            .withGrade(\"A\").build();","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"erwinqxy"},"content":"            .withStudentId(\"A0212325H\").withClassId(\"B02\")","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"erwinqxy"},"content":"            .withGrade(\"B+\").build();","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"erwinqxy"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\")","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"erwinqxy"},"content":"            .withStudentId(\"A0112425H\").withClassId(\"B03\")","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"erwinqxy"},"content":"            .withGrade(\"A-\").build();","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"erwinqxy"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\")","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"erwinqxy"},"content":"            .withStudentId(\"A0512425H\").withClassId(\"B02\")","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"erwinqxy"},"content":"            .withGrade(\"A+\").build();","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"erwinqxy"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\")","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"erwinqxy"},"content":"            .withStudentId(\"A0612425H\").withClassId(\"B01\")","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"erwinqxy"},"content":"            .withGrade(\"D\").build();","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"erwinqxy"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\")","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"erwinqxy"},"content":"            .withStudentId(\"A0912425H\").withClassId(\"B11\")","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"erwinqxy"},"content":"            .withGrade(\"C\").build();","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"erwinqxy"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\")","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"erwinqxy"},"content":"            .withStudentId(\"A0852425H\").withClassId(\"B11\")","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"erwinqxy"},"content":"            .withGrade(\"B\").build();","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":47,"author":{"gitId":"erwinqxy"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\")","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"erwinqxy"},"content":"            .withStudentId(\"A0782425H\").withClassId(\"B01\")","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"erwinqxy"},"content":"            .withGrade(\"B\").build();","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"erwinqxy"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\")","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"erwinqxy"},"content":"            .withStudentId(\"A0852425H\").withClassId(\"B01\")","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"erwinqxy"},"content":"            .withGrade(\"A\").build();","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":55,"author":{"gitId":"erwinqxy"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withStudentId(VALID_STUDENTID_AMY)","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"erwinqxy"},"content":"            .withClassId(VALID_CLASSID_AMY).withGrade(VALID_GRADE_AMY).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"erwinqxy"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withStudentId(VALID_STUDENTID_BOB)","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"erwinqxy"},"content":"            .withClassId(VALID_CLASSID_BOB).withGrade(VALID_GRADE_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"erwinqxy":35,"-":43}}]
