[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"# Bogo Bogo","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"GraceWang2322"},"content":"* This is an efficient CLI-based inventory management system that helps small business owners/entrepreneurs keep track it their inventory.\u003cbr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"GraceWang2322"},"content":"  * as an inventory tracker","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"GraceWang2322"},"content":"  * as a order checker","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"GraceWang2322"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"GraceWang2322"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC).","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"GraceWang2322"},"content":"* It is named `Bogobogo` because it provides fast and efficient managing of inventory just like how bogosort is.","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"GraceWang2322"},"content":"* For the detailed documentation of this project, see the **[BogoBogo Product Website](https://AY2122S1-CS2103-F10-2.github.io/tp)**.","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"GraceWang2322"},"content":"* If you would like to contribute code to this project, see [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"-":7,"GraceWang2322":8}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"bernarduskrishna"},"content":"### Bryan Wee Shun Yi","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"bernarduskrishna"},"content":"\u003cimg src\u003d\"images/bryanwee023.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"bernarduskrishna"},"content":"[[github](http://github.com/bryanwee023)]","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"bernarduskrishna"},"content":"* Responsibilities: UI, Scheduling and Tracking, Git Expert","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"bernarduskrishna"},"content":"### Hay Man Hnin Lwin","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"bernarduskrishna"},"content":"\u003cimg src\u003d\"images/gracewang2322.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"bernarduskrishna"},"content":"[[github](http://github.com/gracewang2322)]","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"bernarduskrishna"},"content":"* Responsibilities: Documentation, Deliverables and Deadlines","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"bernarduskrishna"},"content":"### Wang Pei","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"bernarduskrishna"},"content":"\u003cimg src\u003d\"images/wangpeialex.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"bernarduskrishna"},"content":"[[github](http://github.com/wangpeialex)]","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"bernarduskrishna"},"content":"* Responsibilities: Testing, Storage","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"bernarduskrishna"},"content":"### Bernardus Krishna","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"bernarduskrishna"},"content":"\u003cimg src\u003d\"images/bernarduskrishna.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"bernarduskrishna"},"content":"[[github](https://github.com/bernarduskrishna)]","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"bernarduskrishna"},"content":"* Responsibilities: Code Quality, Model, Logic","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"bernarduskrishna":16,"-":30}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"bryanwee023"},"content":"* small business owner / entrepreneur","lastModifiedDate":"2021-09-27"},{"lineNumber":261,"author":{"gitId":"bryanwee023"},"content":"* prefers desktop apps over other types","lastModifiedDate":"2021-09-27"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"bryanwee023"},"content":"**Value proposition**: manage a small business\u0027 inventory and finances faster than a typical mouse/GUI driven app","lastModifiedDate":"2021-09-27"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"| Priority | As a …​                         | I want to …​                                               | So that I can…​                                      |","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"bryanwee023"},"content":"| -------- | ------------------------------- | ---------------------------------------------------------- | ---------------------------------------------------- |","lastModifiedDate":"2021-09-27"},{"lineNumber":275,"author":{"gitId":"bryanwee023"},"content":"| `* * *`  | small business owner            | add items into the inventory list                          | account for newly stocked items                      |","lastModifiedDate":"2021-09-27"},{"lineNumber":276,"author":{"gitId":"bryanwee023"},"content":"| `* * *`  | small business owner            | record item related information (name, price, cost, id)    | record and track items\u0027 details easily               |","lastModifiedDate":"2021-09-27"},{"lineNumber":277,"author":{"gitId":"bryanwee023"},"content":"| `* * *`  | small business owner            | delete items from the inventory                            | account for discarded or sold items                  |","lastModifiedDate":"2021-09-27"},{"lineNumber":278,"author":{"gitId":"bryanwee023"},"content":"| `* * *`  | small business owner            | look at all my inventory items, with their count           | review and track my inventory                        |","lastModifiedDate":"2021-09-27"},{"lineNumber":279,"author":{"gitId":"bryanwee023"},"content":"| `* * *`  | small business owner            | record new orders and update the inventory accordingly     | account for newly confirmed orders                   |","lastModifiedDate":"2021-09-27"},{"lineNumber":280,"author":{"gitId":"bryanwee023"},"content":"| `* * *`  | small business owner            | list past transactions                                     | review verify transaction details                    |","lastModifiedDate":"2021-09-27"},{"lineNumber":281,"author":{"gitId":"bryanwee023"},"content":"| `* * *`  | budget-savvy business owner     | track the cost that each item incurs                       | manage business costs closely                        |","lastModifiedDate":"2021-09-27"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"bryanwee023"},"content":"(For all use cases below, the **System** is the `Bogo Bogo` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-09-27"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"bryanwee023"},"content":"**UC01 - Adding an item**","lastModifiedDate":"2021-09-27"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"bryanwee023"},"content":"1.  User adds item into inventory.","lastModifiedDate":"2021-09-27"},{"lineNumber":294,"author":{"gitId":"bryanwee023"},"content":"2.  BogoBogo saves item into inventory.","lastModifiedDate":"2021-09-27"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"bryanwee023"},"content":"* 1a. User did not specify the name of item.","lastModifiedDate":"2021-09-27"},{"lineNumber":301,"author":{"gitId":"bryanwee023"},"content":"    * 1a1. BogoBogo notifies user of missing details.","lastModifiedDate":"2021-09-27"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"bryanwee023"},"content":"* 1b. User is adding the item for the first time, and did not specify the id, price or cost of the item.","lastModifiedDate":"2021-09-27"},{"lineNumber":306,"author":{"gitId":"bryanwee023"},"content":"    * 1b1. BogoBogo requests user for the missing details.","lastModifiedDate":"2021-09-27"},{"lineNumber":307,"author":{"gitId":"bryanwee023"},"content":"    * 1b2. User enters the missing details.","lastModifiedDate":"2021-09-27"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"bryanwee023"},"content":"      Use case resumes at step 2. ","lastModifiedDate":"2021-09-27"},{"lineNumber":310,"author":{"gitId":"bryanwee023"},"content":"      ","lastModifiedDate":"2021-09-27"},{"lineNumber":311,"author":{"gitId":"bryanwee023"},"content":"* 1c. The given id does not match with the given name.","lastModifiedDate":"2021-09-27"},{"lineNumber":312,"author":{"gitId":"bryanwee023"},"content":"    * 1c1. BogoBogo notifies user of the mismatch.","lastModifiedDate":"2021-09-27"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"      ","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"bryanwee023"},"content":"**UC02 - Deleting an item**","lastModifiedDate":"2021-09-27"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":318,"author":{"gitId":"bryanwee023"},"content":"**MSS**","lastModifiedDate":"2021-09-27"},{"lineNumber":319,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":320,"author":{"gitId":"bryanwee023"},"content":"1.  User requests to delete item from inventory.","lastModifiedDate":"2021-09-27"},{"lineNumber":321,"author":{"gitId":"bryanwee023"},"content":"2.  BogoBogo deletes item from inventory.","lastModifiedDate":"2021-09-27"},{"lineNumber":322,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":323,"author":{"gitId":"bryanwee023"},"content":"    Use case ends.","lastModifiedDate":"2021-09-27"},{"lineNumber":324,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":325,"author":{"gitId":"bryanwee023"},"content":"**Extensions**","lastModifiedDate":"2021-09-27"},{"lineNumber":326,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":327,"author":{"gitId":"bryanwee023"},"content":"* 1a. User did not specify the name or serial number of the item.","lastModifiedDate":"2021-09-27"},{"lineNumber":328,"author":{"gitId":"bryanwee023"},"content":"    * 1a1. BogoBogo notifies user of missing details.","lastModifiedDate":"2021-09-27"},{"lineNumber":329,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":330,"author":{"gitId":"bryanwee023"},"content":"      Use case ends.","lastModifiedDate":"2021-09-27"},{"lineNumber":331,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":332,"author":{"gitId":"bryanwee023"},"content":"* 1b. The specified item is not in the inventory.","lastModifiedDate":"2021-09-27"},{"lineNumber":333,"author":{"gitId":"bryanwee023"},"content":"    * 1b1. BogoBogo notifies user that item is not found.","lastModifiedDate":"2021-09-27"},{"lineNumber":334,"author":{"gitId":"bryanwee023"},"content":"     ","lastModifiedDate":"2021-09-27"},{"lineNumber":335,"author":{"gitId":"bryanwee023"},"content":"      Use case ends.","lastModifiedDate":"2021-09-27"},{"lineNumber":336,"author":{"gitId":"bryanwee023"},"content":"      ","lastModifiedDate":"2021-09-27"},{"lineNumber":337,"author":{"gitId":"bryanwee023"},"content":"* 1c. The given id does not match with the given name.","lastModifiedDate":"2021-09-27"},{"lineNumber":338,"author":{"gitId":"bryanwee023"},"content":"    * 1c1. BogoBogo notifies user of the mismatch.","lastModifiedDate":"2021-09-27"},{"lineNumber":339,"author":{"gitId":"bryanwee023"},"content":"     ","lastModifiedDate":"2021-09-27"},{"lineNumber":340,"author":{"gitId":"bryanwee023"},"content":"      Use case ends.","lastModifiedDate":"2021-09-27"},{"lineNumber":341,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":342,"author":{"gitId":"bryanwee023"},"content":"**UC03 - Getting details of an item**","lastModifiedDate":"2021-09-27"},{"lineNumber":343,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":344,"author":{"gitId":"bryanwee023"},"content":"**MSS**","lastModifiedDate":"2021-09-27"},{"lineNumber":345,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":346,"author":{"gitId":"bryanwee023"},"content":"1.  User searches for the details of an item in the inventory.","lastModifiedDate":"2021-09-27"},{"lineNumber":347,"author":{"gitId":"bryanwee023"},"content":"2.  BogoBogo deletes item from inventory.","lastModifiedDate":"2021-09-27"},{"lineNumber":348,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":349,"author":{"gitId":"bryanwee023"},"content":"    Use case ends.","lastModifiedDate":"2021-09-27"},{"lineNumber":350,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":351,"author":{"gitId":"bryanwee023"},"content":"**Extensions**","lastModifiedDate":"2021-09-27"},{"lineNumber":352,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":353,"author":{"gitId":"bryanwee023"},"content":"* 1a. User did not specify the name or serial number of the item.","lastModifiedDate":"2021-09-27"},{"lineNumber":354,"author":{"gitId":"bryanwee023"},"content":"    * 1a1. BogoBogo notifies user of missing details.","lastModifiedDate":"2021-09-27"},{"lineNumber":355,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":356,"author":{"gitId":"bryanwee023"},"content":"      Use case ends.","lastModifiedDate":"2021-09-27"},{"lineNumber":357,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":358,"author":{"gitId":"bryanwee023"},"content":"* 1b. The specified item is not in the inventory.","lastModifiedDate":"2021-09-27"},{"lineNumber":359,"author":{"gitId":"bryanwee023"},"content":"    * 1b1. BogoBogo notifies user that item is not found.","lastModifiedDate":"2021-09-27"},{"lineNumber":360,"author":{"gitId":"bryanwee023"},"content":"     ","lastModifiedDate":"2021-09-27"},{"lineNumber":361,"author":{"gitId":"bryanwee023"},"content":"      Use case ends.","lastModifiedDate":"2021-09-27"},{"lineNumber":362,"author":{"gitId":"bryanwee023"},"content":"      ","lastModifiedDate":"2021-09-27"},{"lineNumber":363,"author":{"gitId":"bryanwee023"},"content":"* 1c. The given id does not match with the given name.","lastModifiedDate":"2021-09-27"},{"lineNumber":364,"author":{"gitId":"bryanwee023"},"content":"    * 1c1. BogoBogo notifies user of the mismatch.","lastModifiedDate":"2021-09-27"},{"lineNumber":365,"author":{"gitId":"bryanwee023"},"content":"     ","lastModifiedDate":"2021-09-27"},{"lineNumber":366,"author":{"gitId":"bryanwee023"},"content":"      Use case ends.","lastModifiedDate":"2021-09-27"},{"lineNumber":367,"author":{"gitId":"bryanwee023"},"content":"     ","lastModifiedDate":"2021-09-27"},{"lineNumber":368,"author":{"gitId":"bryanwee023"},"content":"**UC04 - Recording an Order**","lastModifiedDate":"2021-09-27"},{"lineNumber":369,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":370,"author":{"gitId":"bryanwee023"},"content":"**MSS**","lastModifiedDate":"2021-09-27"},{"lineNumber":371,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":372,"author":{"gitId":"bryanwee023"},"content":"1. User requests to start an order.","lastModifiedDate":"2021-09-27"},{"lineNumber":373,"author":{"gitId":"bryanwee023"},"content":"2. BogoBogo requests for item names and quantities.","lastModifiedDate":"2021-09-27"},{"lineNumber":374,"author":{"gitId":"bryanwee023"},"content":"3. User adds an item into the order.","lastModifiedDate":"2021-09-27"},{"lineNumber":375,"author":{"gitId":"bryanwee023"},"content":"4. BogoBogo saves item into the order.","lastModifiedDate":"2021-09-27"},{"lineNumber":376,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":377,"author":{"gitId":"bryanwee023"},"content":"   Step 3-4 is repeated until the user wishes to end the order.","lastModifiedDate":"2021-09-27"},{"lineNumber":378,"author":{"gitId":"bryanwee023"},"content":"  ","lastModifiedDate":"2021-09-27"},{"lineNumber":379,"author":{"gitId":"bryanwee023"},"content":"5. User requests to end the order.","lastModifiedDate":"2021-09-27"},{"lineNumber":380,"author":{"gitId":"bryanwee023"},"content":"6. BogoBogo shows the summary of the order and prompts the user to confirm the order.","lastModifiedDate":"2021-09-27"},{"lineNumber":381,"author":{"gitId":"bryanwee023"},"content":"7. User confirms the order.","lastModifiedDate":"2021-09-27"},{"lineNumber":382,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":383,"author":{"gitId":"bryanwee023"},"content":"   Use case ends.","lastModifiedDate":"2021-09-27"},{"lineNumber":384,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":385,"author":{"gitId":"bryanwee023"},"content":"**Extensions**","lastModifiedDate":"2021-09-27"},{"lineNumber":386,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":387,"author":{"gitId":"bryanwee023"},"content":"* 3a. User adds an item that is not in the inventory.","lastModifiedDate":"2021-09-27"},{"lineNumber":388,"author":{"gitId":"bryanwee023"},"content":"    * 3a1. BogoBogo notifies user that item is not found.","lastModifiedDate":"2021-09-27"},{"lineNumber":389,"author":{"gitId":"bryanwee023"},"content":"     ","lastModifiedDate":"2021-09-27"},{"lineNumber":390,"author":{"gitId":"bryanwee023"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2021-09-27"},{"lineNumber":391,"author":{"gitId":"bryanwee023"},"content":"      ","lastModifiedDate":"2021-09-27"},{"lineNumber":392,"author":{"gitId":"bryanwee023"},"content":"* 3b. There is an insufficient supply of added items in the inventory.","lastModifiedDate":"2021-09-27"},{"lineNumber":393,"author":{"gitId":"bryanwee023"},"content":"    * 3a1. BogoBogo notifies user of the supply shortage.","lastModifiedDate":"2021-09-27"},{"lineNumber":394,"author":{"gitId":"bryanwee023"},"content":"     ","lastModifiedDate":"2021-09-27"},{"lineNumber":395,"author":{"gitId":"bryanwee023"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2021-09-27"},{"lineNumber":396,"author":{"gitId":"bryanwee023"},"content":"      ","lastModifiedDate":"2021-09-27"},{"lineNumber":397,"author":{"gitId":"bryanwee023"},"content":"* 4a. User incorrectly added an item into the order.","lastModifiedDate":"2021-09-27"},{"lineNumber":398,"author":{"gitId":"bryanwee023"},"content":"    * 3a1. User removes specified item from the order.","lastModifiedDate":"2021-09-27"},{"lineNumber":399,"author":{"gitId":"bryanwee023"},"content":"      ","lastModifiedDate":"2021-09-27"},{"lineNumber":400,"author":{"gitId":"bryanwee023"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2021-09-27"},{"lineNumber":401,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":402,"author":{"gitId":"bryanwee023"},"content":"* 7a. The order is empty.","lastModifiedDate":"2021-09-27"},{"lineNumber":403,"author":{"gitId":"bryanwee023"},"content":"    * 7a1. BogoBogo notifies user that the order is empty.","lastModifiedDate":"2021-09-27"},{"lineNumber":404,"author":{"gitId":"bryanwee023"},"content":"      ","lastModifiedDate":"2021-09-27"},{"lineNumber":405,"author":{"gitId":"bryanwee023"},"content":"      Use case ends.","lastModifiedDate":"2021-09-27"},{"lineNumber":406,"author":{"gitId":"bryanwee023"},"content":"      ","lastModifiedDate":"2021-09-27"},{"lineNumber":407,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"bryanwee023"},"content":"2.  Should be able to hold up to 1000 distinct inventory items without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-09-27"},{"lineNumber":413,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"bryanwee023"},"content":"* **Item**: An inventory good that the business owner is/was selling","lastModifiedDate":"2021-09-27"},{"lineNumber":421,"author":{"gitId":"bryanwee023"},"content":"* **Order**: Information regarding a transaction whereby the business sells a list of items to a customerfor revenue","lastModifiedDate":"2021-09-27"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"bryanwee023":117,"-":357}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"wangpeialex"},"content":"layout: page title: User Guide","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"wangpeialex"},"content":"BogoBogo is a **desktop app for managing inventories, optimized for use via a Command Line Interface** (CLI)","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"wangpeialex"},"content":"while still having the benefits of a Graphical User Interface (GUI). If you can type fast, BogoBogo can get your","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"wangpeialex"},"content":"inventory management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"wangpeialex"},"content":"* Table of Contents {:toc}","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"wangpeialex"},"content":"2. Download the latest `BogoBogo.jar` from [here](https://github.com/AY2122S1-CS2103-F10-2/tp/releases).","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"wangpeialex"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for the application.","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"wangpeialex"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"wangpeialex"},"content":"   contains some sample data.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"wangpeialex"},"content":"**TODO: Repalce sample ui image when ui is done**","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"wangpeialex"},"content":"6. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"wangpeialex"},"content":"   open the help window.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"wangpeialex"},"content":"    - **`add`**`apple -sp 8.5 -s A012345 -c 1000 -cp 5.2` : Adds apple with sales price 8.5, serial number A012345,","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"wangpeialex"},"content":"      quantity 1000, and cost price 5.2, into the inventory.","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"wangpeialex"},"content":"    - **`delete`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"wangpeialex"},"content":"    - **`clear`** : Deletes all contacts.","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"wangpeialex"},"content":"    - **`exit`** : Exits the app.","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"wangpeialex"},"content":"7. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"wangpeialex"},"content":"- Words in `{}` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"wangpeialex"},"content":"  e.g. in `add -n {name}`, `name` is a parameter which can be used as `add -n milk`.","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"wangpeialex"},"content":"- Items in square brackets with pipes are exclusively optional (user must specify at least one of the option).\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"wangpeialex"},"content":"  e.g `delete [-n {name} | -s {serial number}]` should be supplied with either `name` or `serial number`.","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"wangpeialex"},"content":"- Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"wangpeialex"},"content":"- Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"wangpeialex"},"content":"- If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of","lastModifiedDate":"2021-09-29"},{"lineNumber":63,"author":{"gitId":"wangpeialex"},"content":"  the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":66,"author":{"gitId":"wangpeialex"},"content":"- Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be","lastModifiedDate":"2021-09-29"},{"lineNumber":67,"author":{"gitId":"wangpeialex"},"content":"  ignored.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"wangpeialex"},"content":"### Viewing help : `help` [Coming soon]","lastModifiedDate":"2021-09-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"wangpeialex"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2021-09-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"wangpeialex"},"content":"**TODO: Replace help ui image**","lastModifiedDate":"2021-09-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"wangpeialex"},"content":"### Adding an item: `add` [Coming soon]","lastModifiedDate":"2021-09-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"wangpeialex"},"content":"Adds an item to the inventory.","lastModifiedDate":"2021-09-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"wangpeialex"},"content":"Format: `add {name} -sp {sales price} -s {serial number} -c {count} -cp {cost price}`","lastModifiedDate":"2021-09-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"wangpeialex"},"content":"Flag    |  Argument    | Description","lastModifiedDate":"2021-09-29"},{"lineNumber":88,"author":{"gitId":"wangpeialex"},"content":"--------|--------------|-------------","lastModifiedDate":"2021-09-29"},{"lineNumber":89,"author":{"gitId":"wangpeialex"},"content":"\u0026nbsp;  | name          | name of the item to add.","lastModifiedDate":"2021-09-29"},{"lineNumber":90,"author":{"gitId":"wangpeialex"},"content":"`-sp`   | sell price    | Sell price of the item to add.","lastModifiedDate":"2021-09-29"},{"lineNumber":91,"author":{"gitId":"wangpeialex"},"content":"`-s`    | serial number | Serial number of item to add.","lastModifiedDate":"2021-09-29"},{"lineNumber":92,"author":{"gitId":"wangpeialex"},"content":"`-c`    | count         | Quantity of the item to add.","lastModifiedDate":"2021-09-29"},{"lineNumber":93,"author":{"gitId":"wangpeialex"},"content":"`-cp`   | cost price    | Cost price of the item to add.","lastModifiedDate":"2021-09-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":97,"author":{"gitId":"wangpeialex"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":98,"author":{"gitId":"wangpeialex"},"content":"add apple -sp 8.5 -s A012345 -c 1000 -cp 5.2","lastModifiedDate":"2021-09-29"},{"lineNumber":99,"author":{"gitId":"wangpeialex"},"content":"add banana -sp 7.5 -s A012346 -c 800 -cp 4.8","lastModifiedDate":"2021-09-29"},{"lineNumber":100,"author":{"gitId":"wangpeialex"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"wangpeialex"},"content":"### Deleting an item : `delete` [coming soon]","lastModifiedDate":"2021-09-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"wangpeialex"},"content":"Deletes the specified item from the inventory.","lastModifiedDate":"2021-09-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"wangpeialex"},"content":"Format: `delete [-n {name} | -s {serial number}] -c {count}`","lastModifiedDate":"2021-09-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"wangpeialex"},"content":"Flag    |  Argument      | Description","lastModifiedDate":"2021-09-29"},{"lineNumber":109,"author":{"gitId":"wangpeialex"},"content":"--------|----------------|-------------","lastModifiedDate":"2021-09-29"},{"lineNumber":110,"author":{"gitId":"wangpeialex"},"content":"`-n`    | name           | Name of the item to delete.","lastModifiedDate":"2021-09-29"},{"lineNumber":111,"author":{"gitId":"wangpeialex"},"content":"`-s`    | serial number  | Serial number of the item to delete.","lastModifiedDate":"2021-09-29"},{"lineNumber":112,"author":{"gitId":"wangpeialex"},"content":"`-c`    | count          | Quantity of the item to delete.","lastModifiedDate":"2021-09-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"wangpeialex"},"content":"- Decreases the specified item\u0027s quantity by the count specified.","lastModifiedDate":"2021-09-29"},{"lineNumber":115,"author":{"gitId":"wangpeialex"},"content":"- An item can be specified by either name or serial number.","lastModifiedDate":"2021-09-29"},{"lineNumber":116,"author":{"gitId":"wangpeialex"},"content":"- If both name and serial number are specified, the command will take the name as reference.","lastModifiedDate":"2021-09-29"},{"lineNumber":117,"author":{"gitId":"wangpeialex"},"content":"- The `count` **must be a positive integer**.","lastModifiedDate":"2021-09-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":121,"author":{"gitId":"wangpeialex"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":122,"author":{"gitId":"wangpeialex"},"content":"delete -n milk -c 10  // delete by name","lastModifiedDate":"2021-09-29"},{"lineNumber":123,"author":{"gitId":"wangpeialex"},"content":"delete -s A01234 -c 10  // delete by serial number","lastModifiedDate":"2021-09-29"},{"lineNumber":124,"author":{"gitId":"wangpeialex"},"content":"delete -n milk -s A01111 -c 12  // delete 12 milks","lastModifiedDate":"2021-09-29"},{"lineNumber":125,"author":{"gitId":"wangpeialex"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":127,"author":{"gitId":"wangpeialex"},"content":"### Get quantity of the item: `count` [Coming soon]","lastModifiedDate":"2021-09-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"wangpeialex"},"content":"Gets the quantity of the item specified.","lastModifiedDate":"2021-09-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"wangpeialex"},"content":"Format: `count [-n {name} | -s {serial number}]`","lastModifiedDate":"2021-09-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"wangpeialex"},"content":"Flag    |  Argument      | Description","lastModifiedDate":"2021-09-29"},{"lineNumber":134,"author":{"gitId":"wangpeialex"},"content":"--------|----------------|-------------","lastModifiedDate":"2021-09-29"},{"lineNumber":135,"author":{"gitId":"wangpeialex"},"content":"`-n`    | name           | Name of the item to delete.","lastModifiedDate":"2021-09-29"},{"lineNumber":136,"author":{"gitId":"wangpeialex"},"content":"`-s`    | serial number  | Serial number of the item to delete.","lastModifiedDate":"2021-09-29"},{"lineNumber":137,"author":{"gitId":"wangpeialex"},"content":"`-c`    | count          | Quantity of the item to delete.","lastModifiedDate":"2021-09-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":141,"author":{"gitId":"wangpeialex"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":142,"author":{"gitId":"wangpeialex"},"content":"count milk  // count by name","lastModifiedDate":"2021-09-29"},{"lineNumber":143,"author":{"gitId":"wangpeialex"},"content":"count A01111  // count by serial number","lastModifiedDate":"2021-09-29"},{"lineNumber":144,"author":{"gitId":"wangpeialex"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"wangpeialex"},"content":"### Manage orders","lastModifiedDate":"2021-09-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":148,"author":{"gitId":"wangpeialex"},"content":"Remove items from the inventory by logging in an order. To enter order logging mode, use `sorder`. Exit the mode","lastModifiedDate":"2021-09-29"},{"lineNumber":149,"author":{"gitId":"wangpeialex"},"content":"with `eorder`.","lastModifiedDate":"2021-09-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"wangpeialex"},"content":"![mange orders workflow](images/manageOrdersWorkflow.png)","lastModifiedDate":"2021-09-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"wangpeialex"},"content":"### Start ordering: `sorder` [Coming soon]","lastModifiedDate":"2021-09-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":155,"author":{"gitId":"wangpeialex"},"content":"Starts a new list of orders.","lastModifiedDate":"2021-09-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"wangpeialex"},"content":"Format: `sorder`","lastModifiedDate":"2021-09-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"wangpeialex"},"content":"Example:","lastModifiedDate":"2021-09-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":161,"author":{"gitId":"wangpeialex"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":162,"author":{"gitId":"wangpeialex"},"content":"sorder","lastModifiedDate":"2021-09-29"},{"lineNumber":163,"author":{"gitId":"wangpeialex"},"content":"\u003e\u003e Please enter item name and quantity.","lastModifiedDate":"2021-09-29"},{"lineNumber":164,"author":{"gitId":"wangpeialex"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"wangpeialex"},"content":"### Input an item into order: `iorder` [Coming soon]","lastModifiedDate":"2021-09-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":168,"author":{"gitId":"wangpeialex"},"content":"Add an item into the current list of orders.","lastModifiedDate":"2021-09-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"wangpeialex"},"content":"Format:","lastModifiedDate":"2021-09-29"},{"lineNumber":171,"author":{"gitId":"wangpeialex"},"content":"`iorder [-n {name} | -s {serial number}] -c {count}`","lastModifiedDate":"2021-09-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"wangpeialex"},"content":"Flag    |  Argument      | Description","lastModifiedDate":"2021-09-29"},{"lineNumber":174,"author":{"gitId":"wangpeialex"},"content":"--------|----------------|-------------","lastModifiedDate":"2021-09-29"},{"lineNumber":175,"author":{"gitId":"wangpeialex"},"content":"`-n`    | name           | Name of the item to add.","lastModifiedDate":"2021-09-29"},{"lineNumber":176,"author":{"gitId":"wangpeialex"},"content":"`-s`    | serial number  | Serial number of the item to add.","lastModifiedDate":"2021-09-29"},{"lineNumber":177,"author":{"gitId":"wangpeialex"},"content":"`-c`    | count          | Quantity of the item to add.","lastModifiedDate":"2021-09-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"wangpeialex"},"content":"Example:","lastModifiedDate":"2021-09-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":181,"author":{"gitId":"wangpeialex"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":182,"author":{"gitId":"wangpeialex"},"content":"iorder -n milk -c 5  // Input order of item named milk","lastModifiedDate":"2021-09-29"},{"lineNumber":183,"author":{"gitId":"wangpeialex"},"content":"iorder -s 12345 -c 5  // Input order of item with serial no.12345","lastModifiedDate":"2021-09-29"},{"lineNumber":184,"author":{"gitId":"wangpeialex"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"wangpeialex"},"content":"### Cancel an item from order: `corder` [Coming soon]","lastModifiedDate":"2021-09-29"},{"lineNumber":187,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":188,"author":{"gitId":"wangpeialex"},"content":"Cancels the specified order from the current list of orders.","lastModifiedDate":"2021-09-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"wangpeialex"},"content":"Format:","lastModifiedDate":"2021-09-29"},{"lineNumber":191,"author":{"gitId":"wangpeialex"},"content":"`corder [-n {name} | -s {serial number}]`","lastModifiedDate":"2021-09-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"wangpeialex"},"content":"Flag    |  Argument      | Description","lastModifiedDate":"2021-09-29"},{"lineNumber":194,"author":{"gitId":"wangpeialex"},"content":"--------|----------------|-------------","lastModifiedDate":"2021-09-29"},{"lineNumber":195,"author":{"gitId":"wangpeialex"},"content":"`-n`    | name           | Name of the item to add.","lastModifiedDate":"2021-09-29"},{"lineNumber":196,"author":{"gitId":"wangpeialex"},"content":"`-s`    | serial number  | Serial number of the item to add.","lastModifiedDate":"2021-09-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"wangpeialex"},"content":"Example:","lastModifiedDate":"2021-09-29"},{"lineNumber":199,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":200,"author":{"gitId":"wangpeialex"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":201,"author":{"gitId":"wangpeialex"},"content":"corder -n milk  // Cancel order of item named milk","lastModifiedDate":"2021-09-29"},{"lineNumber":202,"author":{"gitId":"wangpeialex"},"content":"corder -s 12345  // Cancel order of item with serial no. 12345","lastModifiedDate":"2021-09-29"},{"lineNumber":203,"author":{"gitId":"wangpeialex"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":204,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":205,"author":{"gitId":"wangpeialex"},"content":"### End ordering: `eorder` [Coming soon]","lastModifiedDate":"2021-09-29"},{"lineNumber":206,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":207,"author":{"gitId":"wangpeialex"},"content":"Saves the current list of orders","lastModifiedDate":"2021-09-29"},{"lineNumber":208,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":209,"author":{"gitId":"wangpeialex"},"content":"Format: `eorder`","lastModifiedDate":"2021-09-29"},{"lineNumber":210,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":211,"author":{"gitId":"wangpeialex"},"content":"Example:","lastModifiedDate":"2021-09-29"},{"lineNumber":212,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":213,"author":{"gitId":"wangpeialex"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":214,"author":{"gitId":"wangpeialex"},"content":"eorder","lastModifiedDate":"2021-09-29"},{"lineNumber":215,"author":{"gitId":"wangpeialex"},"content":"\u003e\u003e Order is placed!","lastModifiedDate":"2021-09-29"},{"lineNumber":216,"author":{"gitId":"wangpeialex"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"wangpeialex"},"content":"## FAQ [Coming soon]","lastModifiedDate":"2021-09-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"wangpeialex"},"content":"**Q**:","lastModifiedDate":"2021-09-29"},{"lineNumber":227,"author":{"gitId":"wangpeialex"},"content":"**A**:","lastModifiedDate":"2021-09-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"wangpeialex"},"content":"**","lastModifiedDate":"2021-09-29"},{"lineNumber":236,"author":{"gitId":"wangpeialex"},"content":"Add** | `add {name} -sp {sales price} -s {serial number} -c {count} -cp {cost price}` \u003cbr\u003e e.g., `add apple -sp 8.5 -s A012345 -c 1000 -cp 5.2`","lastModifiedDate":"2021-09-29"},{"lineNumber":237,"author":{"gitId":"wangpeialex"},"content":"**Delete** | `delete [-n {name} \\| -s {serial number}] -c {count}` \u003cbr\u003e e.g., `delete -n milk -c 10`","lastModifiedDate":"2021-09-29"},{"lineNumber":238,"author":{"gitId":"wangpeialex"},"content":"**Count** | `count [-n {name} \\| -s {serial number}]` \u003cbr\u003e e.g., `count milk`","lastModifiedDate":"2021-09-29"},{"lineNumber":239,"author":{"gitId":"wangpeialex"},"content":"**Start ordering** | `sorder`","lastModifiedDate":"2021-09-29"},{"lineNumber":240,"author":{"gitId":"wangpeialex"},"content":"**Input item to order** | `iorder [-n {name} \\| -s {serial number}] -c {count}` \u003cbr\u003e e.g., `iorder -n milk -c 5`","lastModifiedDate":"2021-09-29"},{"lineNumber":241,"author":{"gitId":"wangpeialex"},"content":"**Cancel item in order** | `corder [-n {name} \\| -s {serial number}]` \u003cbr\u003e e.g., `corder -n milk`","lastModifiedDate":"2021-09-29"},{"lineNumber":242,"author":{"gitId":"wangpeialex"},"content":"**End ordering** | `eorder`","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"wangpeialex":139,"-":103}},{"path":"src/main/java/seedu/address/newmodel/Inventory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.newmodel;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import java.util.List;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.newmodel.item.Item;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.newmodel.item.UniqueItemList;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":" * Wraps all data at the inventory level","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":" * Duplicates are not allowed (by .isSameItem comparison)","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"public class Inventory implements ReadOnlyInventory {","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"    private final UniqueItemList items;","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"    /*","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"     *   among constructors.","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"    {","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"        items \u003d new UniqueItemList();","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"    public Inventory() {}","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"     * Creates an Inventory using the Items in the {@code toBeCopied}","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"    public Inventory(ReadOnlyInventory toBeCopied) {","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"        this();","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"    //// list overwrite operations","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"     * Replaces the contents of the item list with {@code items}.","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"     * {@code items} must not contain duplicate items.","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"    public void setItems(List\u003cItem\u003e items) {","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"        this.items.setItems(items);","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"     * Resets the existing data of this {@code Inventory} with {@code newData}.","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"    public void resetData(ReadOnlyInventory newData) {","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"        requireNonNull(newData);","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"        setItems(newData.getItemList());","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"    //// item-level operations","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"bryanwee023"},"content":"     * Returns true if an item with the same id as {@code item} that exists in the inventory.","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"    public boolean hasItem(Item item) {","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"bryanwee023"},"content":"        requireNonNull(item);","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"bryanwee023"},"content":"        return items.contains(item);","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"bryanwee023"},"content":"     * Adds an item to the inventory.","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"bryanwee023"},"content":"     * If the item already exists in the inventory, increment its count.","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"bryanwee023"},"content":"    public void addItem(Item newItem) {","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"bryanwee023"},"content":"        items.add(newItem);","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"bryanwee023"},"content":"     * Replaces the given item {@code target} in the list with {@code editedItem}.","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"bryanwee023"},"content":"     * {@code target} must exist in the inventory.","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"bryanwee023"},"content":"     * The item identity of {@code editedItem} must not be the same as another existing item in the inventory.","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"bryanwee023"},"content":"    public void setItem(Item target, Item editedItem) {","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"bryanwee023"},"content":"        requireNonNull(editedItem);","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"bryanwee023"},"content":"        items.setItem(target, editedItem);","lastModifiedDate":"2021-10-01"},{"lineNumber":86,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":87,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":88,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":89,"author":{"gitId":"bryanwee023"},"content":"     * Removes {@code key} from this {@code Inventory}.","lastModifiedDate":"2021-10-01"},{"lineNumber":90,"author":{"gitId":"bryanwee023"},"content":"     * {@code key} must exist in the inventory.","lastModifiedDate":"2021-10-01"},{"lineNumber":91,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":92,"author":{"gitId":"bryanwee023"},"content":"    public void removeItem(Item key) {","lastModifiedDate":"2021-10-01"},{"lineNumber":93,"author":{"gitId":"bryanwee023"},"content":"        items.remove(key);","lastModifiedDate":"2021-10-01"},{"lineNumber":94,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":95,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":96,"author":{"gitId":"bryanwee023"},"content":"    //// util methods","lastModifiedDate":"2021-10-01"},{"lineNumber":97,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":98,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":99,"author":{"gitId":"bryanwee023"},"content":"    public String toString() {","lastModifiedDate":"2021-10-01"},{"lineNumber":100,"author":{"gitId":"bryanwee023"},"content":"        return items.asUnmodifiableObservableList().size() + \" items\";","lastModifiedDate":"2021-10-01"},{"lineNumber":101,"author":{"gitId":"bryanwee023"},"content":"        // TODO: refine later","lastModifiedDate":"2021-10-01"},{"lineNumber":102,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":103,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":104,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":105,"author":{"gitId":"bryanwee023"},"content":"    public ObservableList\u003cItem\u003e getItemList() {","lastModifiedDate":"2021-10-01"},{"lineNumber":106,"author":{"gitId":"bryanwee023"},"content":"        return items.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-01"},{"lineNumber":107,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":108,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":109,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":110,"author":{"gitId":"bryanwee023"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-01"},{"lineNumber":111,"author":{"gitId":"bryanwee023"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-01"},{"lineNumber":112,"author":{"gitId":"bryanwee023"},"content":"                || (other instanceof Inventory // instanceof handles nulls","lastModifiedDate":"2021-10-01"},{"lineNumber":113,"author":{"gitId":"bryanwee023"},"content":"                \u0026\u0026 items.equals(((Inventory) other).items));","lastModifiedDate":"2021-10-01"},{"lineNumber":114,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":115,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":116,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":117,"author":{"gitId":"bryanwee023"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-01"},{"lineNumber":118,"author":{"gitId":"bryanwee023"},"content":"        return items.hashCode();","lastModifiedDate":"2021-10-01"},{"lineNumber":119,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":120,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"bryanwee023":120}},{"path":"src/main/java/seedu/address/newmodel/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.newmodel;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.newmodel.item.Item;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":" * The API of the Model component.","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"public interface Model {","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"    Predicate\u003cItem\u003e PREDICATE_SHOW_ALL_ITEMS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"     * Returns the user prefs.","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"    Path getInventoryFilePath();","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"    void setInventoryFilePath(Path addressBookFilePath);","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"     * Replaces inventory data with the data in {@code inventory}.","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"    void setInventory(ReadOnlyInventory inventory);","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"    /** Returns the Inventory */","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"    ReadOnlyInventory getInventory();","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"     * Returns true if a item with the same identity as {@code item} exists in the inventory.","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"    boolean hasItem(Item item);","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"bryanwee023"},"content":"     * Deletes the given item.","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"bryanwee023"},"content":"     * The item must exist in the inventory.","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"    void deleteItem(Item target);","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"bryanwee023"},"content":"     * Adds the given item.","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"bryanwee023"},"content":"     * If {@code item} must not already exist in the address book, increment its count accordingly.","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"bryanwee023"},"content":"    void addItem(Item item);","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"bryanwee023"},"content":"     * Replaces the given item {@code target} with {@code editedItem}.","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"bryanwee023"},"content":"     * {@code target} must exist in the inventory.","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"bryanwee023"},"content":"     * The item identity of {@code editedItem} must not be the same as another existing item in the inventory.","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"bryanwee023"},"content":"    void setItem(Item target, Item editedItem);","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"bryanwee023"},"content":"    /** Returns an unmodifiable view of the filtered item list */","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"bryanwee023"},"content":"    ObservableList\u003cItem\u003e getFilteredItemList();","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"bryanwee023"},"content":"     * Updates the filter of the filtered item list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"bryanwee023"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":86,"author":{"gitId":"bryanwee023"},"content":"    void updateFilteredItemList(Predicate\u003cItem\u003e predicate);","lastModifiedDate":"2021-10-01"},{"lineNumber":87,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"bryanwee023":87}},{"path":"src/main/java/seedu/address/newmodel/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.newmodel;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.newmodel.item.Item;","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"    private final Inventory inventory;","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"    private final FilteredList\u003cItem\u003e filteredItems;","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"    public ModelManager(ReadOnlyInventory inventory, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"        super();","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"        requireAllNonNull(inventory, userPrefs);","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"        logger.fine(\"Initializing with address book: \" + inventory + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"        this.inventory \u003d new Inventory(inventory);","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"        filteredItems \u003d new FilteredList\u003c\u003e(this.inventory.getItemList());","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"    public ModelManager() {","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"        this(new Inventory(), new UserPrefs());","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"        return userPrefs;","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"bryanwee023"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"bryanwee023"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"bryanwee023"},"content":"    public Path getInventoryFilePath() {","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"bryanwee023"},"content":"        return userPrefs.getInventoryFilePath();","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"bryanwee023"},"content":"    public void setInventoryFilePath(Path inventoryFilePath) {","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"bryanwee023"},"content":"        requireNonNull(inventoryFilePath);","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"bryanwee023"},"content":"        userPrefs.setInventoryFilePath(inventoryFilePath);","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"bryanwee023"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"bryanwee023"},"content":"    public void setInventory(ReadOnlyInventory inventory) {","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"bryanwee023"},"content":"        this.inventory.resetData(inventory);","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":86,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":87,"author":{"gitId":"bryanwee023"},"content":"    public ReadOnlyInventory getInventory() {","lastModifiedDate":"2021-10-01"},{"lineNumber":88,"author":{"gitId":"bryanwee023"},"content":"        return inventory;","lastModifiedDate":"2021-10-01"},{"lineNumber":89,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":90,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":91,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":92,"author":{"gitId":"bryanwee023"},"content":"    public boolean hasItem(Item item) {","lastModifiedDate":"2021-10-01"},{"lineNumber":93,"author":{"gitId":"bryanwee023"},"content":"        requireNonNull(item);","lastModifiedDate":"2021-10-01"},{"lineNumber":94,"author":{"gitId":"bryanwee023"},"content":"        return inventory.hasItem(item);","lastModifiedDate":"2021-10-01"},{"lineNumber":95,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":96,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":97,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":98,"author":{"gitId":"bryanwee023"},"content":"    public void deleteItem(Item target) {","lastModifiedDate":"2021-10-01"},{"lineNumber":99,"author":{"gitId":"bryanwee023"},"content":"        inventory.removeItem(target);","lastModifiedDate":"2021-10-01"},{"lineNumber":100,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":101,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":102,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":103,"author":{"gitId":"bryanwee023"},"content":"    public void addItem(Item item) {","lastModifiedDate":"2021-10-01"},{"lineNumber":104,"author":{"gitId":"bryanwee023"},"content":"        inventory.addItem(item);","lastModifiedDate":"2021-10-01"},{"lineNumber":105,"author":{"gitId":"bryanwee023"},"content":"        updateFilteredItemList(PREDICATE_SHOW_ALL_ITEMS);","lastModifiedDate":"2021-10-01"},{"lineNumber":106,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":107,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":108,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":109,"author":{"gitId":"bryanwee023"},"content":"    public void setItem(Item target, Item editedItem) {","lastModifiedDate":"2021-10-01"},{"lineNumber":110,"author":{"gitId":"bryanwee023"},"content":"        requireAllNonNull(target, editedItem);","lastModifiedDate":"2021-10-01"},{"lineNumber":111,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":112,"author":{"gitId":"bryanwee023"},"content":"        inventory.setItem(target, editedItem);","lastModifiedDate":"2021-10-01"},{"lineNumber":113,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":114,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":115,"author":{"gitId":"bryanwee023"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Item List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-01"},{"lineNumber":116,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":117,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":118,"author":{"gitId":"bryanwee023"},"content":"     * Returns an unmodifiable view of the list of {@code Item} backed by the internal list of","lastModifiedDate":"2021-10-01"},{"lineNumber":119,"author":{"gitId":"bryanwee023"},"content":"     * {@code versionedInventory}","lastModifiedDate":"2021-10-01"},{"lineNumber":120,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":121,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":122,"author":{"gitId":"bryanwee023"},"content":"    public ObservableList\u003cItem\u003e getFilteredItemList() {","lastModifiedDate":"2021-10-01"},{"lineNumber":123,"author":{"gitId":"bryanwee023"},"content":"        return filteredItems;","lastModifiedDate":"2021-10-01"},{"lineNumber":124,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":125,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":126,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":127,"author":{"gitId":"bryanwee023"},"content":"    public void updateFilteredItemList(Predicate\u003cItem\u003e predicate) {","lastModifiedDate":"2021-10-01"},{"lineNumber":128,"author":{"gitId":"bryanwee023"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-01"},{"lineNumber":129,"author":{"gitId":"bryanwee023"},"content":"        filteredItems.setPredicate(predicate);","lastModifiedDate":"2021-10-01"},{"lineNumber":130,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":131,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":132,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":133,"author":{"gitId":"bryanwee023"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-10-01"},{"lineNumber":134,"author":{"gitId":"bryanwee023"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-01"},{"lineNumber":135,"author":{"gitId":"bryanwee023"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2021-10-01"},{"lineNumber":136,"author":{"gitId":"bryanwee023"},"content":"            return true;","lastModifiedDate":"2021-10-01"},{"lineNumber":137,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":138,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":139,"author":{"gitId":"bryanwee023"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-01"},{"lineNumber":140,"author":{"gitId":"bryanwee023"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2021-10-01"},{"lineNumber":141,"author":{"gitId":"bryanwee023"},"content":"            return false;","lastModifiedDate":"2021-10-01"},{"lineNumber":142,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":143,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":144,"author":{"gitId":"bryanwee023"},"content":"        // state check","lastModifiedDate":"2021-10-01"},{"lineNumber":145,"author":{"gitId":"bryanwee023"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2021-10-01"},{"lineNumber":146,"author":{"gitId":"bryanwee023"},"content":"        return inventory.equals(other.inventory)","lastModifiedDate":"2021-10-01"},{"lineNumber":147,"author":{"gitId":"bryanwee023"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2021-10-01"},{"lineNumber":148,"author":{"gitId":"bryanwee023"},"content":"                \u0026\u0026 filteredItems.equals(other.filteredItems);","lastModifiedDate":"2021-10-01"},{"lineNumber":149,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":150,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":151,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"bryanwee023":151}},{"path":"src/main/java/seedu/address/newmodel/ReadOnlyInventory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.newmodel;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.newmodel.item.Item;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"public interface ReadOnlyInventory {","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"     * Returns an unmodifiable view of the items list.","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"     * This list will not contain any duplicate items.","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"    ObservableList\u003cItem\u003e getItemList();","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"bryanwee023":17}},{"path":"src/main/java/seedu/address/newmodel/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.newmodel;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"    Path getInventoryFilePath();","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"bryanwee023":16}},{"path":"src/main/java/seedu/address/newmodel/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.newmodel;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"    private Path inventoryFilePath \u003d Paths.get(\"data\" , \"inventory.json\");","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"    public UserPrefs() {}","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"        this();","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"        resetData(userPrefs);","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"        setInventoryFilePath(newUserPrefs.getInventoryFilePath());","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"        return guiSettings;","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"    public Path getInventoryFilePath() {","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"        return inventoryFilePath;","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"    public void setInventoryFilePath(Path inventoryFilePath) {","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"        requireNonNull(inventoryFilePath);","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"        this.inventoryFilePath \u003d inventoryFilePath;","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"bryanwee023"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"bryanwee023"},"content":"            return true;","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"bryanwee023"},"content":"            return false;","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"bryanwee023"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"bryanwee023"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"bryanwee023"},"content":"                \u0026\u0026 inventoryFilePath.equals(o.inventoryFilePath);","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"bryanwee023"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"bryanwee023"},"content":"        return Objects.hash(guiSettings, inventoryFilePath);","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"bryanwee023"},"content":"    public String toString() {","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"bryanwee023"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"bryanwee023"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"bryanwee023"},"content":"        sb.append(\"\\nLocal data file location : \" + inventoryFilePath);","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"bryanwee023"},"content":"        return sb.toString();","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":86,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":87,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"bryanwee023":87}},{"path":"src/main/java/seedu/address/newmodel/item/Item.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.newmodel.item;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.newmodel.tag.Tag;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":" * Represents an item in the inventory.","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"public class Item {","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"    // Identity fields","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"    private final Name name;","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"    private final String id;","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"    // Data fields","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"    public Item(Name name, String id, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"        requireAllNonNull(name, id, tags);","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"        this.id \u003d id;","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"    public Name getName() {","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"        return name;","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"    public String getId() {","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"        return id;","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"     * Returns true if both items have the same name or id.","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"     * This defines a weaker notion of equality between two items.","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"    public boolean isSameItem(Item otherItem) {","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"        if (otherItem \u003d\u003d this) {","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"            return true;","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"        return otherItem !\u003d null","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"bryanwee023"},"content":"                \u0026\u0026 (otherItem.getName().equals(getName()) || (otherItem.getId().equals(getId())));","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"bryanwee023"},"content":"     * Returns true if both items have the same identity and data fields.","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"bryanwee023"},"content":"     * This defines a stronger notion of equality between two items.","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"bryanwee023"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"bryanwee023"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"bryanwee023"},"content":"            return true;","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"bryanwee023"},"content":"        if (!(other instanceof Item)) {","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"bryanwee023"},"content":"            return false;","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"bryanwee023"},"content":"        Item otherItem \u003d (Item) other;","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"bryanwee023"},"content":"        return otherItem.getName().equals(getName())","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"bryanwee023"},"content":"                \u0026\u0026 otherItem.getId().equals(getId())","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"bryanwee023"},"content":"                \u0026\u0026 otherItem.getTags().equals(getTags());","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"bryanwee023"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-01"},{"lineNumber":86,"author":{"gitId":"bryanwee023"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-10-01"},{"lineNumber":87,"author":{"gitId":"bryanwee023"},"content":"        return Objects.hash(name, id, tags);","lastModifiedDate":"2021-10-01"},{"lineNumber":88,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":89,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":90,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":91,"author":{"gitId":"bryanwee023"},"content":"    public String toString() {","lastModifiedDate":"2021-10-01"},{"lineNumber":92,"author":{"gitId":"bryanwee023"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-01"},{"lineNumber":93,"author":{"gitId":"bryanwee023"},"content":"        builder.append(getName())","lastModifiedDate":"2021-10-01"},{"lineNumber":94,"author":{"gitId":"bryanwee023"},"content":"                .append(\"; id: \")","lastModifiedDate":"2021-10-01"},{"lineNumber":95,"author":{"gitId":"bryanwee023"},"content":"                .append(getId());","lastModifiedDate":"2021-10-01"},{"lineNumber":96,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":97,"author":{"gitId":"bryanwee023"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2021-10-01"},{"lineNumber":98,"author":{"gitId":"bryanwee023"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2021-10-01"},{"lineNumber":99,"author":{"gitId":"bryanwee023"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2021-10-01"},{"lineNumber":100,"author":{"gitId":"bryanwee023"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2021-10-01"},{"lineNumber":101,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":102,"author":{"gitId":"bryanwee023"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-01"},{"lineNumber":103,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":104,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":105,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"bryanwee023":105}},{"path":"src/main/java/seedu/address/newmodel/item/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.newmodel.item;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":" * Represents a Item\u0027s name in the address book.","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"public class Name {","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"    /*","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"    public final String fullName;","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"     * @param name A valid name.","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"    public Name(String name) {","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"        fullName \u003d name;","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"    public String toString() {","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"        return fullName;","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"        return fullName.hashCode();","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"bryanwee023":59}},{"path":"src/main/java/seedu/address/newmodel/item/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.newmodel.item;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import java.util.List;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":" * Tests that a {@code Item}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cItem\u003e {","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"    public boolean test(Item item) {","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(item.getName().fullName, keyword));","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"bryanwee023":31}},{"path":"src/main/java/seedu/address/newmodel/item/UniqueItemList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.newmodel.item;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import java.util.List;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.newmodel.item.exceptions.DuplicateItemException;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.newmodel.item.exceptions.ItemNotFoundException;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":" * A list of items that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":" * An item is considered unique by comparing using {@code Item#isSameItem(Item)}. As such, adding and updating of","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":" * items uses Item#Item(Item) for equality so as to ensure that the item being added or updated is","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":" * unique in terms of identity in the UniqueItemList. However, the removal of a item uses Item#equals(Object) so","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":" * as to ensure that the item with exactly the same fields will be removed.","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":" *","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":" *","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":" * @see Item#isSameItem(Item)","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"public class UniqueItemList implements Iterable\u003cItem\u003e {","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"    private final ObservableList\u003cItem\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"    private final ObservableList\u003cItem\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"     * Returns true if the list contains an equivalent item as the given argument.","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"    public boolean contains(Item toCheck) {","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"        return internalList.stream().anyMatch(toCheck::isSameItem);","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"     * Adds an item to the list.","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"     * The item must not already exist in the list.","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"    public void add(Item toAdd) {","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"     * Replaces the item {@code target} in the list with {@code editedItem}.","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"     * The item identity of {@code editedItem} must not be the same as another existing item in the list.","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"    public void setItem(Item target, Item editedItem) {","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"        requireAllNonNull(target, editedItem);","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"bryanwee023"},"content":"            throw new ItemNotFoundException();","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"        if (!target.isSameItem(editedItem) \u0026\u0026 contains(editedItem)) {","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"bryanwee023"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"bryanwee023"},"content":"        internalList.set(index, editedItem);","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"bryanwee023"},"content":"     * Removes the equivalent item from the list.","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"bryanwee023"},"content":"     * The item must exist in the list.","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"bryanwee023"},"content":"    public void remove(Item toRemove) {","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"bryanwee023"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"bryanwee023"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"bryanwee023"},"content":"            throw new ItemNotFoundException();","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"bryanwee023"},"content":"    public void setItems(UniqueItemList replacement) {","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"bryanwee023"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"bryanwee023"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":86,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":87,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":88,"author":{"gitId":"bryanwee023"},"content":"     * Replaces the contents of this list with {@code items}.","lastModifiedDate":"2021-10-01"},{"lineNumber":89,"author":{"gitId":"bryanwee023"},"content":"     * {@code items} must not contain duplicate items.","lastModifiedDate":"2021-10-01"},{"lineNumber":90,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":91,"author":{"gitId":"bryanwee023"},"content":"    public void setItems(List\u003cItem\u003e items) {","lastModifiedDate":"2021-10-01"},{"lineNumber":92,"author":{"gitId":"bryanwee023"},"content":"        requireAllNonNull(items);","lastModifiedDate":"2021-10-01"},{"lineNumber":93,"author":{"gitId":"bryanwee023"},"content":"        if (!itemsAreUnique(items)) {","lastModifiedDate":"2021-10-01"},{"lineNumber":94,"author":{"gitId":"bryanwee023"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2021-10-01"},{"lineNumber":95,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":96,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":97,"author":{"gitId":"bryanwee023"},"content":"        internalList.setAll(items);","lastModifiedDate":"2021-10-01"},{"lineNumber":98,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":99,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":100,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":101,"author":{"gitId":"bryanwee023"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-01"},{"lineNumber":102,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":103,"author":{"gitId":"bryanwee023"},"content":"    public ObservableList\u003cItem\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-01"},{"lineNumber":104,"author":{"gitId":"bryanwee023"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-01"},{"lineNumber":105,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":106,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":107,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":108,"author":{"gitId":"bryanwee023"},"content":"    public Iterator\u003cItem\u003e iterator() {","lastModifiedDate":"2021-10-01"},{"lineNumber":109,"author":{"gitId":"bryanwee023"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-01"},{"lineNumber":110,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":111,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":112,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":113,"author":{"gitId":"bryanwee023"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-01"},{"lineNumber":114,"author":{"gitId":"bryanwee023"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-01"},{"lineNumber":115,"author":{"gitId":"bryanwee023"},"content":"                || (other instanceof UniqueItemList // instanceof handles nulls","lastModifiedDate":"2021-10-01"},{"lineNumber":116,"author":{"gitId":"bryanwee023"},"content":"                        \u0026\u0026 internalList.equals(((UniqueItemList) other).internalList));","lastModifiedDate":"2021-10-01"},{"lineNumber":117,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":118,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":119,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":120,"author":{"gitId":"bryanwee023"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-01"},{"lineNumber":121,"author":{"gitId":"bryanwee023"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-01"},{"lineNumber":122,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":123,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":124,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":125,"author":{"gitId":"bryanwee023"},"content":"     * Returns true if {@code items} contains only unique items.","lastModifiedDate":"2021-10-01"},{"lineNumber":126,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":127,"author":{"gitId":"bryanwee023"},"content":"    private boolean itemsAreUnique(List\u003cItem\u003e items) {","lastModifiedDate":"2021-10-01"},{"lineNumber":128,"author":{"gitId":"bryanwee023"},"content":"        for (int i \u003d 0; i \u003c items.size() - 1; i++) {","lastModifiedDate":"2021-10-01"},{"lineNumber":129,"author":{"gitId":"bryanwee023"},"content":"            for (int j \u003d i + 1; j \u003c items.size(); j++) {","lastModifiedDate":"2021-10-01"},{"lineNumber":130,"author":{"gitId":"bryanwee023"},"content":"                if (items.get(i).isSameItem(items.get(j))) {","lastModifiedDate":"2021-10-01"},{"lineNumber":131,"author":{"gitId":"bryanwee023"},"content":"                    return false;","lastModifiedDate":"2021-10-01"},{"lineNumber":132,"author":{"gitId":"bryanwee023"},"content":"                }","lastModifiedDate":"2021-10-01"},{"lineNumber":133,"author":{"gitId":"bryanwee023"},"content":"            }","lastModifiedDate":"2021-10-01"},{"lineNumber":134,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":135,"author":{"gitId":"bryanwee023"},"content":"        return true;","lastModifiedDate":"2021-10-01"},{"lineNumber":136,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":137,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"bryanwee023":137}},{"path":"src/main/java/seedu/address/newmodel/item/exceptions/DuplicateItemException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.newmodel.item.exceptions;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":" * Signals that the operation will result in duplicate Items (Items are considered duplicates if they have the same","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":" * id).","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"public class DuplicateItemException extends RuntimeException {","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"    public DuplicateItemException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"        super(\"Operation would result in duplicate items\");","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"bryanwee023":11}},{"path":"src/main/java/seedu/address/newmodel/item/exceptions/ItemNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.newmodel.item.exceptions;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":" * Signals that the operation is unable to find the specified item.","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"public class ItemNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"bryanwee023":6}},{"path":"src/main/java/seedu/address/newmodel/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.newmodel.tag;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":" * Represents a Tag in the Inventory.","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"public class Tag {","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"    public final String tagName;","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"        return tagName.hashCode();","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"    public String toString() {","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"bryanwee023":54}},{"path":"src/main/java/seedu/address/newmodel/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.newmodel.util;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.newmodel.Inventory;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.newmodel.ReadOnlyInventory;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.newmodel.item.Item;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.newmodel.item.Name;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.newmodel.tag.Tag;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"public class SampleDataUtil {","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"    public static Item[] getSampleItems() {","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"        return new Item[] {","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"            new Item(new Name(\"Oatmeal Cookie\"), \"#140121\",","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"                getTagSet(\"baked\")),","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"            new Item(new Name(\"Banana Muffin\"), \"#201928\",","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"                    getTagSet(\"baked\")),","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"            new Item(new Name(\"Pecan Pie\"), \"#178522\",","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"                    getTagSet(\"baked\")),","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"            new Item(new Name(\"Oreo Cheesecake\"), \"#109128\",","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"                    getTagSet(\"desert\")),","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"            new Item(new Name(\"Strawberry Shortcake\"), \"#091287\",","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"                    getTagSet(\"desert\")),","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"            new Item(new Name(\"Cold Brew Coffee\"), \"#001858\",","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"                    getTagSet(\"beverage\")),","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"        };","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"    public static ReadOnlyInventory getSampleItemList() {","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"        Inventory sampleInventory \u003d new Inventory();","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"        for (Item sampleItem : getSampleItems()) {","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"            sampleInventory.addItem(sampleItem);","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"        return sampleInventory;","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"                .map(Tag::new)","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"bryanwee023":51}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"    public static final String VALID_NAME_BAGEL \u003d \"Bagel\";","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"    public static final String VALID_NAME_DONUT \u003d \"Donut\";","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"    public static final String VALID_ID_BAGEL \u003d \"B1354\";","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"    public static final String VALID_TAG_BAKED \u003d \"baked\";","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"    public static final String VALID_TAG_POPULAR \u003d \"popular\";","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"bryanwee023":7,"-":128}},{"path":"src/test/java/seedu/address/newmodel/InventoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.newmodel;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_POPULAR;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.TypicalItems.APPLE_PIE;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.TypicalItems.getTypicalInventory;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"import java.util.Collection;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"import java.util.List;","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.newmodel.item.Item;","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.newmodel.item.exceptions.DuplicateItemException;","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.testutil.ItemBuilder;","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"public class InventoryTest {","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"    private final Inventory inventory \u003d new Inventory();","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"    public void constructor() {","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(Collections.emptyList(), inventory.getItemList());","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(NullPointerException.class, () -\u003e inventory.resetData(null));","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"    public void resetData_withValidReadOnlyInventory_replacesData() {","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"        Inventory newData \u003d getTypicalInventory();","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"        inventory.resetData(newData);","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(newData, inventory);","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"        Item editedPie \u003d new ItemBuilder(APPLE_PIE).withTags(VALID_TAG_POPULAR).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"        List\u003cItem\u003e newItems \u003d Arrays.asList(APPLE_PIE, editedPie);","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"        InventoryStub newData \u003d new InventoryStub(newItems);","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(DuplicateItemException.class, () -\u003e inventory.resetData(newData));","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"    public void hasItem_nullItem_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(NullPointerException.class, () -\u003e inventory.hasItem(null));","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"bryanwee023"},"content":"    public void hasInventory_itemNotInInventory_returnsFalse() {","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(inventory.hasItem(APPLE_PIE));","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"bryanwee023"},"content":"    public void hasItem_itemInInventory_returnsTrue() {","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"bryanwee023"},"content":"        inventory.addItem(APPLE_PIE);","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"bryanwee023"},"content":"        assertTrue(inventory.hasItem(APPLE_PIE));","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"bryanwee023"},"content":"    public void hasItem_itemWithSameIdentityFieldsInInventory_returnsTrue() {","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"bryanwee023"},"content":"        inventory.addItem(APPLE_PIE);","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"bryanwee023"},"content":"        Item editedPie \u003d new ItemBuilder(APPLE_PIE).withTags(VALID_TAG_POPULAR).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"bryanwee023"},"content":"        assertTrue(inventory.hasItem(editedPie));","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"bryanwee023"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e inventory.getItemList().remove(0));","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"bryanwee023"},"content":"     * A stub ReadOnlyInventory whose item list can violate interface constraints.","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":86,"author":{"gitId":"bryanwee023"},"content":"    private static class InventoryStub implements ReadOnlyInventory {","lastModifiedDate":"2021-10-01"},{"lineNumber":87,"author":{"gitId":"bryanwee023"},"content":"        private final ObservableList\u003cItem\u003e items \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-01"},{"lineNumber":88,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":89,"author":{"gitId":"bryanwee023"},"content":"        InventoryStub(Collection\u003cItem\u003e items) {","lastModifiedDate":"2021-10-01"},{"lineNumber":90,"author":{"gitId":"bryanwee023"},"content":"            this.items.setAll(items);","lastModifiedDate":"2021-10-01"},{"lineNumber":91,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":92,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":93,"author":{"gitId":"bryanwee023"},"content":"        @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":94,"author":{"gitId":"bryanwee023"},"content":"        public ObservableList\u003cItem\u003e getItemList() {","lastModifiedDate":"2021-10-01"},{"lineNumber":95,"author":{"gitId":"bryanwee023"},"content":"            return items;","lastModifiedDate":"2021-10-01"},{"lineNumber":96,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":97,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":98,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":99,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"bryanwee023":99}},{"path":"src/test/java/seedu/address/newmodel/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.newmodel;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.newmodel.Model.PREDICATE_SHOW_ALL_ITEMS;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.TypicalItems.APPLE_PIE;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.TypicalItems.BANANA_MUFFIN;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.newmodel.item.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.testutil.InventoryBuilder;","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"public class ModelManagerTest {","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"    public void constructor() {","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(new Inventory(), new Inventory(modelManager.getInventory()));","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"        userPrefs.setInventoryFilePath(Paths.get(\"inventory/file/path\"));","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"        userPrefs.setInventoryFilePath(Paths.get(\"new/inventory/file/path\"));","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"    public void setInventoryFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setInventoryFilePath(null));","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"bryanwee023"},"content":"    public void setInventoryFilePath_validPath_setsInventoryFilePath() {","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"bryanwee023"},"content":"        Path path \u003d Paths.get(\"inventory/file/path\");","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"bryanwee023"},"content":"        modelManager.setInventoryFilePath(path);","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(path, modelManager.getInventoryFilePath());","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"bryanwee023"},"content":"    public void hasItem_nullItem_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasItem(null));","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"bryanwee023"},"content":"    public void hasItem_itemNotInInventory_returnsFalse() {","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(modelManager.hasItem(APPLE_PIE));","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":86,"author":{"gitId":"bryanwee023"},"content":"    public void hasItem_itemInInventory_returnsTrue() {","lastModifiedDate":"2021-10-01"},{"lineNumber":87,"author":{"gitId":"bryanwee023"},"content":"        modelManager.addItem(APPLE_PIE);","lastModifiedDate":"2021-10-01"},{"lineNumber":88,"author":{"gitId":"bryanwee023"},"content":"        assertTrue(modelManager.hasItem(APPLE_PIE));","lastModifiedDate":"2021-10-01"},{"lineNumber":89,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":90,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":91,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":92,"author":{"gitId":"bryanwee023"},"content":"    public void getFilteredItemList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":93,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredItemList().remove(0));","lastModifiedDate":"2021-10-01"},{"lineNumber":94,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":95,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":96,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":97,"author":{"gitId":"bryanwee023"},"content":"    public void equals() {","lastModifiedDate":"2021-10-01"},{"lineNumber":98,"author":{"gitId":"bryanwee023"},"content":"        Inventory inventory \u003d new InventoryBuilder().withItem(APPLE_PIE).withItem(BANANA_MUFFIN).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":99,"author":{"gitId":"bryanwee023"},"content":"        Inventory differentInventory \u003d new Inventory();","lastModifiedDate":"2021-10-01"},{"lineNumber":100,"author":{"gitId":"bryanwee023"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-10-01"},{"lineNumber":101,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":102,"author":{"gitId":"bryanwee023"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-01"},{"lineNumber":103,"author":{"gitId":"bryanwee023"},"content":"        modelManager \u003d new ModelManager(inventory, userPrefs);","lastModifiedDate":"2021-10-01"},{"lineNumber":104,"author":{"gitId":"bryanwee023"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(inventory, userPrefs);","lastModifiedDate":"2021-10-01"},{"lineNumber":105,"author":{"gitId":"bryanwee023"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2021-10-01"},{"lineNumber":106,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":107,"author":{"gitId":"bryanwee023"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-01"},{"lineNumber":108,"author":{"gitId":"bryanwee023"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2021-10-01"},{"lineNumber":109,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":110,"author":{"gitId":"bryanwee023"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":111,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2021-10-01"},{"lineNumber":112,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":113,"author":{"gitId":"bryanwee023"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":114,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2021-10-01"},{"lineNumber":115,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":116,"author":{"gitId":"bryanwee023"},"content":"        // different inventory -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":117,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentInventory, userPrefs)));","lastModifiedDate":"2021-10-01"},{"lineNumber":118,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":119,"author":{"gitId":"bryanwee023"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":120,"author":{"gitId":"bryanwee023"},"content":"        String[] keywords \u003d APPLE_PIE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-10-01"},{"lineNumber":121,"author":{"gitId":"bryanwee023"},"content":"        modelManager.updateFilteredItemList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-10-01"},{"lineNumber":122,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(modelManager.equals(new ModelManager(inventory, userPrefs)));","lastModifiedDate":"2021-10-01"},{"lineNumber":123,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":124,"author":{"gitId":"bryanwee023"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2021-10-01"},{"lineNumber":125,"author":{"gitId":"bryanwee023"},"content":"        modelManager.updateFilteredItemList(PREDICATE_SHOW_ALL_ITEMS);","lastModifiedDate":"2021-10-01"},{"lineNumber":126,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":127,"author":{"gitId":"bryanwee023"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":128,"author":{"gitId":"bryanwee023"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-10-01"},{"lineNumber":129,"author":{"gitId":"bryanwee023"},"content":"        differentUserPrefs.setInventoryFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2021-10-01"},{"lineNumber":130,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(modelManager.equals(new ModelManager(inventory, differentUserPrefs)));","lastModifiedDate":"2021-10-01"},{"lineNumber":131,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":132,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"bryanwee023":132}},{"path":"src/test/java/seedu/address/newmodel/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.newmodel;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"public class UserPrefsTest {","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"    public void setInventoryFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setInventoryFilePath(null));","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"bryanwee023":21}},{"path":"src/test/java/seedu/address/newmodel/item/ItemTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.newmodel.item;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_BAGEL;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BAGEL;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_POPULAR;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.TypicalItems.APPLE_PIE;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.TypicalItems.BAGEL;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.TypicalItems.BANANA_MUFFIN;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.testutil.ItemBuilder;","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"public class ItemTest {","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"        Item item \u003d new ItemBuilder().build();","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e item.getTags().remove(0));","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"    public void isSameItem() {","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"        assertTrue(APPLE_PIE.isSameItem(APPLE_PIE));","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(APPLE_PIE.isSameItem(null));","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"        // same name, different id, all other attributes different -\u003e returns true","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"        Item editedPie \u003d new ItemBuilder(APPLE_PIE).withId(\"#123456\").build();","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"        assertTrue(APPLE_PIE.isSameItem(editedPie));","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"        // different name, same id, all other attributes different -\u003e returns true","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"        editedPie \u003d new ItemBuilder(APPLE_PIE).withName(\"Cherry Pie\").build();","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"        assertTrue(APPLE_PIE.isSameItem(editedPie));","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"        // different name, different id, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"        editedPie \u003d new ItemBuilder(APPLE_PIE)","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"                .withName(VALID_NAME_BAGEL).withId(VALID_ID_BAGEL).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(APPLE_PIE.isSameItem(editedPie));","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"        Item editedBagel \u003d new ItemBuilder(BAGEL)","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"                .withName(VALID_NAME_BAGEL.toUpperCase()).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(BANANA_MUFFIN.isSameItem(editedBagel));","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"    public void equals() {","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"        Item pieCopy \u003d new ItemBuilder(APPLE_PIE).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"        assertTrue(APPLE_PIE.equals(pieCopy));","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"        assertTrue(APPLE_PIE.equals(APPLE_PIE));","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"bryanwee023"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(APPLE_PIE.equals(null));","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"bryanwee023"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(APPLE_PIE.equals(5));","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"bryanwee023"},"content":"        // different item -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(APPLE_PIE.equals(BANANA_MUFFIN));","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"bryanwee023"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"bryanwee023"},"content":"        Item editedPie \u003d new ItemBuilder(APPLE_PIE).withName(VALID_NAME_BAGEL).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(APPLE_PIE.equals(editedPie));","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"bryanwee023"},"content":"        // different id -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"bryanwee023"},"content":"        editedPie \u003d new ItemBuilder(APPLE_PIE).withId(VALID_ID_BAGEL).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(APPLE_PIE.equals(editedPie));","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"bryanwee023"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"bryanwee023"},"content":"        editedPie \u003d new ItemBuilder(APPLE_PIE).withTags(VALID_TAG_POPULAR).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(APPLE_PIE.equals(editedPie));","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"bryanwee023":83}},{"path":"src/test/java/seedu/address/newmodel/item/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.newmodel.item;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import java.util.List;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.testutil.ItemBuilder;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"    public void equals() {","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"        // different item -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"        // One keyword","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Apple\"));","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"        assertTrue(predicate.test(new ItemBuilder().withName(\"Apple Pie\").build()));","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"        // Multiple keywords","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Banana\", \"Pie\"));","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"        assertTrue(predicate.test(new ItemBuilder().withName(\"Apple Pie\").build()));","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aPplE\", \"pIe\"));","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"        assertTrue(predicate.test(new ItemBuilder().withName(\"Apple Pie\").build()));","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(predicate.test(new ItemBuilder().withName(\"Apple Pie\").build()));","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"bryanwee023"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"bryanwee023"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Chocochip\", \"Cookie\"));","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(predicate.test(new ItemBuilder().withName(\"Apple Pie Banana Muffin\").build()));","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"bryanwee023"},"content":"        // Keywords match id and tag, but does not match name","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"bryanwee023"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"#12345\", \"baked\"));","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(predicate.test(new ItemBuilder().withName(\"Apple Pie\").withId(\"#12345\").withTags(\"baked\").build()));","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"bryanwee023":70}},{"path":"src/test/java/seedu/address/newmodel/item/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.newmodel.item;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"public class NameTest {","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"    public void isValidName() {","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"        // null name","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"        // invalid name","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(Name.isValidName(\"biscuit*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"        // valid name","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"        assertTrue(Name.isValidName(\"butter biscuit\")); // alphabets only","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"        assertTrue(Name.isValidName(\"100 plus\")); // alphanumeric characters","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"        assertTrue(Name.isValidName(\"Butter Biscuit\")); // with capital letters","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"        assertTrue(Name.isValidName(\"Butter Butter Butter Butter Butter Biscuit\")); // long names","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"bryanwee023":40}},{"path":"src/test/java/seedu/address/newmodel/item/UniqueItemListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.newmodel.item;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_POPULAR;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.TypicalItems.APPLE_PIE;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.TypicalItems.BANANA_MUFFIN;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"import java.util.List;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.newmodel.item.exceptions.DuplicateItemException;","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.newmodel.item.exceptions.ItemNotFoundException;","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.testutil.ItemBuilder;","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"public class UniqueItemListTest {","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"    private final UniqueItemList uniqueItemList \u003d new UniqueItemList();","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"    public void contains_nullItem_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueItemList.contains(null));","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"    public void contains_itemNotInList_returnsFalse() {","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(uniqueItemList.contains(APPLE_PIE));","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"    public void contains_itemInList_returnsTrue() {","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"        uniqueItemList.add(APPLE_PIE);","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"        assertTrue(uniqueItemList.contains(APPLE_PIE));","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"    public void contains_itemWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"        uniqueItemList.add(APPLE_PIE);","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"        Item editedPie \u003d new ItemBuilder(APPLE_PIE).withTags(VALID_TAG_POPULAR)","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"                .build();","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"        assertTrue(uniqueItemList.contains(editedPie));","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"    public void add_nullItem_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueItemList.add(null));","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"    public void add_duplicateItem_throwsDuplicateItemException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"        uniqueItemList.add(APPLE_PIE);","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(DuplicateItemException.class, () -\u003e uniqueItemList.add(APPLE_PIE));","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"bryanwee023"},"content":"    public void setItem_nullTargetItem_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueItemList.setItem(null, APPLE_PIE));","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"bryanwee023"},"content":"    public void setItem_nullEditedItem_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueItemList.setItem(APPLE_PIE, null));","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"bryanwee023"},"content":"    public void setItem_targetItemNotInList_throwsItemNotFoundException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(ItemNotFoundException.class, () -\u003e uniqueItemList.setItem(APPLE_PIE, APPLE_PIE));","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"bryanwee023"},"content":"    public void setItem_editedItemIsSameItem_success() {","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"bryanwee023"},"content":"        uniqueItemList.add(APPLE_PIE);","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"bryanwee023"},"content":"        uniqueItemList.setItem(APPLE_PIE, APPLE_PIE);","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"bryanwee023"},"content":"        UniqueItemList expectedUniqueItemList \u003d new UniqueItemList();","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"bryanwee023"},"content":"        expectedUniqueItemList.add(APPLE_PIE);","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(expectedUniqueItemList, uniqueItemList);","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"bryanwee023"},"content":"    public void setItem_editedItemHasSameIdentity_success() {","lastModifiedDate":"2021-10-01"},{"lineNumber":86,"author":{"gitId":"bryanwee023"},"content":"        uniqueItemList.add(APPLE_PIE);","lastModifiedDate":"2021-10-01"},{"lineNumber":87,"author":{"gitId":"bryanwee023"},"content":"        Item editedPie \u003d new ItemBuilder(APPLE_PIE).withTags(VALID_TAG_POPULAR).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":88,"author":{"gitId":"bryanwee023"},"content":"        uniqueItemList.setItem(APPLE_PIE, editedPie);","lastModifiedDate":"2021-10-01"},{"lineNumber":89,"author":{"gitId":"bryanwee023"},"content":"        UniqueItemList expectedUniqueItemList \u003d new UniqueItemList();","lastModifiedDate":"2021-10-01"},{"lineNumber":90,"author":{"gitId":"bryanwee023"},"content":"        expectedUniqueItemList.add(editedPie);","lastModifiedDate":"2021-10-01"},{"lineNumber":91,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(expectedUniqueItemList, uniqueItemList);","lastModifiedDate":"2021-10-01"},{"lineNumber":92,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":93,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":94,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":95,"author":{"gitId":"bryanwee023"},"content":"    public void setItem_editedItemHasDifferentIdentity_success() {","lastModifiedDate":"2021-10-01"},{"lineNumber":96,"author":{"gitId":"bryanwee023"},"content":"        uniqueItemList.add(APPLE_PIE);","lastModifiedDate":"2021-10-01"},{"lineNumber":97,"author":{"gitId":"bryanwee023"},"content":"        uniqueItemList.setItem(APPLE_PIE, BANANA_MUFFIN);","lastModifiedDate":"2021-10-01"},{"lineNumber":98,"author":{"gitId":"bryanwee023"},"content":"        UniqueItemList expectedUniqueItemList \u003d new UniqueItemList();","lastModifiedDate":"2021-10-01"},{"lineNumber":99,"author":{"gitId":"bryanwee023"},"content":"        expectedUniqueItemList.add(BANANA_MUFFIN);","lastModifiedDate":"2021-10-01"},{"lineNumber":100,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(expectedUniqueItemList, uniqueItemList);","lastModifiedDate":"2021-10-01"},{"lineNumber":101,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":102,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":103,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":104,"author":{"gitId":"bryanwee023"},"content":"    public void setItem_editedItemHasNonUniqueIdentity_throwsDuplicateItemException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":105,"author":{"gitId":"bryanwee023"},"content":"        uniqueItemList.add(APPLE_PIE);","lastModifiedDate":"2021-10-01"},{"lineNumber":106,"author":{"gitId":"bryanwee023"},"content":"        uniqueItemList.add(BANANA_MUFFIN);","lastModifiedDate":"2021-10-01"},{"lineNumber":107,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(DuplicateItemException.class, () -\u003e uniqueItemList.setItem(APPLE_PIE, BANANA_MUFFIN));","lastModifiedDate":"2021-10-01"},{"lineNumber":108,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":109,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":110,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":111,"author":{"gitId":"bryanwee023"},"content":"    public void remove_nullItem_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":112,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueItemList.remove(null));","lastModifiedDate":"2021-10-01"},{"lineNumber":113,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":114,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":115,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":116,"author":{"gitId":"bryanwee023"},"content":"    public void remove_itemDoesNotExist_throwsItemNotFoundException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":117,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(ItemNotFoundException.class, () -\u003e uniqueItemList.remove(APPLE_PIE));","lastModifiedDate":"2021-10-01"},{"lineNumber":118,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":119,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":120,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":121,"author":{"gitId":"bryanwee023"},"content":"    public void remove_existingItem_removesItem() {","lastModifiedDate":"2021-10-01"},{"lineNumber":122,"author":{"gitId":"bryanwee023"},"content":"        uniqueItemList.add(APPLE_PIE);","lastModifiedDate":"2021-10-01"},{"lineNumber":123,"author":{"gitId":"bryanwee023"},"content":"        uniqueItemList.remove(APPLE_PIE);","lastModifiedDate":"2021-10-01"},{"lineNumber":124,"author":{"gitId":"bryanwee023"},"content":"        UniqueItemList expectedUniqueItemList \u003d new UniqueItemList();","lastModifiedDate":"2021-10-01"},{"lineNumber":125,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(expectedUniqueItemList, uniqueItemList);","lastModifiedDate":"2021-10-01"},{"lineNumber":126,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":127,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":128,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":129,"author":{"gitId":"bryanwee023"},"content":"    public void setItems_nullUniqueItemList_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":130,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueItemList.setItems((UniqueItemList) null));","lastModifiedDate":"2021-10-01"},{"lineNumber":131,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":132,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":133,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":134,"author":{"gitId":"bryanwee023"},"content":"    public void setItems_uniqueItemList_replacesOwnListWithProvidedUniqueItemList() {","lastModifiedDate":"2021-10-01"},{"lineNumber":135,"author":{"gitId":"bryanwee023"},"content":"        uniqueItemList.add(APPLE_PIE);","lastModifiedDate":"2021-10-01"},{"lineNumber":136,"author":{"gitId":"bryanwee023"},"content":"        UniqueItemList expectedUniqueItemList \u003d new UniqueItemList();","lastModifiedDate":"2021-10-01"},{"lineNumber":137,"author":{"gitId":"bryanwee023"},"content":"        uniqueItemList.add(BANANA_MUFFIN);","lastModifiedDate":"2021-10-01"},{"lineNumber":138,"author":{"gitId":"bryanwee023"},"content":"        this.uniqueItemList.setItems(expectedUniqueItemList);","lastModifiedDate":"2021-10-01"},{"lineNumber":139,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(expectedUniqueItemList, this.uniqueItemList);","lastModifiedDate":"2021-10-01"},{"lineNumber":140,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":141,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":142,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":143,"author":{"gitId":"bryanwee023"},"content":"    public void setItems_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":144,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueItemList.setItems((List\u003cItem\u003e) null));","lastModifiedDate":"2021-10-01"},{"lineNumber":145,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":146,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":147,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":148,"author":{"gitId":"bryanwee023"},"content":"    public void setItems_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-10-01"},{"lineNumber":149,"author":{"gitId":"bryanwee023"},"content":"        uniqueItemList.add(APPLE_PIE);","lastModifiedDate":"2021-10-01"},{"lineNumber":150,"author":{"gitId":"bryanwee023"},"content":"        List\u003cItem\u003e itemList \u003d Collections.singletonList(BANANA_MUFFIN);","lastModifiedDate":"2021-10-01"},{"lineNumber":151,"author":{"gitId":"bryanwee023"},"content":"        uniqueItemList.setItems(itemList);","lastModifiedDate":"2021-10-01"},{"lineNumber":152,"author":{"gitId":"bryanwee023"},"content":"        UniqueItemList expectedUniqueItemList \u003d new UniqueItemList();","lastModifiedDate":"2021-10-01"},{"lineNumber":153,"author":{"gitId":"bryanwee023"},"content":"        expectedUniqueItemList.add(BANANA_MUFFIN);","lastModifiedDate":"2021-10-01"},{"lineNumber":154,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(expectedUniqueItemList, uniqueItemList);","lastModifiedDate":"2021-10-01"},{"lineNumber":155,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":156,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":157,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":158,"author":{"gitId":"bryanwee023"},"content":"    public void setItems_listWithDuplicateItems_throwsDuplicateItemException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":159,"author":{"gitId":"bryanwee023"},"content":"        List\u003cItem\u003e listWithDuplicateItems \u003d Arrays.asList(APPLE_PIE, APPLE_PIE);","lastModifiedDate":"2021-10-01"},{"lineNumber":160,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(DuplicateItemException.class, () -\u003e uniqueItemList.setItems(listWithDuplicateItems));","lastModifiedDate":"2021-10-01"},{"lineNumber":161,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":162,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":163,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":164,"author":{"gitId":"bryanwee023"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":165,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-10-01"},{"lineNumber":166,"author":{"gitId":"bryanwee023"},"content":"            -\u003e uniqueItemList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-10-01"},{"lineNumber":167,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":168,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"bryanwee023":168}},{"path":"src/test/java/seedu/address/newmodel/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.newmodel.tag;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"public class TagTest {","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"    public void isValidTagName() {","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"        // null tag name","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"bryanwee023":26}},{"path":"src/test/java/seedu/address/testutil/InventoryBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.newmodel.Inventory;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.newmodel.item.Item;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":" * A utility class to help with building Inventory objects.","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"public class InventoryBuilder {","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"    private Inventory inventory;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"    public InventoryBuilder() {","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"        inventory \u003d new Inventory();","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"    public InventoryBuilder(Inventory inventory) {","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"        this.inventory \u003d inventory;","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"     * Adds a new {@code Item} to the {@code Inventory} that we are building.","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"    public InventoryBuilder withItem(Item item) {","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"        inventory.addItem(item);","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"        return this;","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"    public Inventory build() {","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"        return inventory;","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"bryanwee023":34}},{"path":"src/test/java/seedu/address/testutil/ItemBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.newmodel.item.Item;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.newmodel.item.Name;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.newmodel.tag.Tag;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.newmodel.util.SampleDataUtil;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"public class ItemBuilder {","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"    public static final String DEFAULT_NAME \u003d \"Banana Muffin\";","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"    public static final String DEFAULT_ID \u003d \"#111111\";","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"    private Name name;","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"    private String id;","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"     * Creates a {@code ItemBuilder} with the default details.","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"    public ItemBuilder() {","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"        id \u003d DEFAULT_ID;","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"     * Initializes the ItemBuilder with the data of {@code itemToCopy}.","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"    public ItemBuilder(Item itemToCopy) {","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"        name \u003d itemToCopy.getName();","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"        id \u003d itemToCopy.getId();","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"        tags \u003d new HashSet\u003c\u003e(itemToCopy.getTags());","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"     * Sets the {@code Name} of the {@code Item} that we are building.","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"    public ItemBuilder withName(String name) {","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"        return this;","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"     * Sets the {@code id} of the {@code Item} that we are building.","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"    public ItemBuilder withId(String id) {","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"        this.id \u003d id;","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"        return this;","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Item} that we are building.","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"    public ItemBuilder withTags(String ... tags) {","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"bryanwee023"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"bryanwee023"},"content":"        return this;","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"bryanwee023"},"content":"    public Item build() {","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"bryanwee023"},"content":"        return new Item(name, id, tags);","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"bryanwee023":69}},{"path":"src/test/java/seedu/address/testutil/TypicalItems.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BAGEL;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_DONUT;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_BAKED;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_POPULAR;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"import java.util.List;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.newmodel.Inventory;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.newmodel.item.Item;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"public class TypicalItems {","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"    public static final Item APPLE_PIE \u003d new ItemBuilder().withName(\"Apple Pie\")","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"            .withId(\"#222222\")","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"            .withTags(\"baked\").build();","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"    public static final Item BANANA_MUFFIN \u003d new ItemBuilder().withName(\"Banana Muffin\")","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"            .withId(\"#333333\")","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"            .withTags(\"baked\", \"bestseller\").build();","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"    public static final Item CHOCOCHIP \u003d new ItemBuilder().withName(\"Chocholate Chip Cookie\")","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"            .withId(\"#444444\")","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"            .withTags(\"baked\").build();","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"    public static final Item DALGONA_COFFEE \u003d new ItemBuilder().withName(\"Dalgona Coffee\")","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"            .withId(\"#555555\").build();","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"    public static final Item EGGNOG \u003d new ItemBuilder().withName(\"Egg Nog\")","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"            .withId(\"#666666\").build();","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"    public static final Item FOREST_CAKE \u003d new ItemBuilder().withName(\"Forest Cake\")","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"            .withId(\"#777777\").build();","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"    public static final Item GRANOLA_BAR \u003d new ItemBuilder().withName(\"Granola Bar\")","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"            .withId(\"#888888\").build();","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"    // Manually added","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"    public static final Item HONEY_CAKE \u003d new ItemBuilder().withName(\"Honey Cake\").withId(\"#999999\").build();","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"    public static final Item ICE_CREAM \u003d new ItemBuilder().withName(\"Ice Cream\").withId(\"#000000\").build();","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"    // Manually added - Item\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"    public static final Item BAGEL \u003d new ItemBuilder()","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"            .withName(VALID_NAME_BAGEL).withId(\"#123456\").withTags(VALID_TAG_BAKED).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"    public static final Item DONUT \u003d new ItemBuilder()","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"            .withName(VALID_NAME_DONUT).withId(\"#789012\").withTags(VALID_TAG_BAKED, VALID_TAG_POPULAR)","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"            .build();","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"    private TypicalItems() {} // prevents instantiation","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"     * Returns an {@code Inventory} with all the typical items.","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"    public static Inventory getTypicalInventory() {","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"        Inventory typicalInventory \u003d new Inventory();","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"        for (Item item : getTypicalItems()) {","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"            typicalInventory.addItem(item);","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"bryanwee023"},"content":"        return typicalInventory;","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"    public static List\u003cItem\u003e getTypicalItems() {","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"bryanwee023"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(APPLE_PIE, BANANA_MUFFIN, CHOCOCHIP,","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"bryanwee023"},"content":"                DALGONA_COFFEE, EGGNOG, FOREST_CAKE, GRANOLA_BAR));","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"bryanwee023":68}}]
