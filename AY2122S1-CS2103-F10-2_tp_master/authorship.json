[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"# Bogo Bogo","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"GraceWang2322"},"content":"* This is an efficient CLI-based inventory management system that helps small business owners/entrepreneurs keep track it their inventory.\u003cbr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"GraceWang2322"},"content":"  * as an inventory tracker","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"GraceWang2322"},"content":"  * as a order checker","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"GraceWang2322"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"GraceWang2322"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC).","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"GraceWang2322"},"content":"* It is named `Bogobogo` because it provides fast and efficient managing of inventory just like how bogosort is.","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"GraceWang2322"},"content":"* For the detailed documentation of this project, see the **[BogoBogo Product Website](https://AY2122S1-CS2103-F10-2.github.io/tp)**.","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"GraceWang2322"},"content":"* If you would like to contribute code to this project, see [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"-":7,"GraceWang2322":8}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"bernarduskrishna"},"content":"### Bryan Wee Shun Yi","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"bernarduskrishna"},"content":"\u003cimg src\u003d\"images/bryanwee023.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"bernarduskrishna"},"content":"[[github](http://github.com/bryanwee023)]","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"bernarduskrishna"},"content":"* Responsibilities: UI, Scheduling and Tracking, Git Expert","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"bernarduskrishna"},"content":"### Hay Man Hnin Lwin","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"bernarduskrishna"},"content":"\u003cimg src\u003d\"images/gracewang2322.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"bernarduskrishna"},"content":"[[github](http://github.com/gracewang2322)]","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"bernarduskrishna"},"content":"* Responsibilities: Documentation, Deliverables and Deadlines","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"bernarduskrishna"},"content":"### Wang Pei","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"bernarduskrishna"},"content":"\u003cimg src\u003d\"images/wangpeialex.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"bernarduskrishna"},"content":"[[github](http://github.com/wangpeialex)]","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"bernarduskrishna"},"content":"* Responsibilities: Testing, Storage","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"bernarduskrishna"},"content":"### Bernardus Krishna","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"bernarduskrishna"},"content":"\u003cimg src\u003d\"images/bernarduskrishna.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"bernarduskrishna"},"content":"[[github](https://github.com/bernarduskrishna)]","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"bernarduskrishna"},"content":"* Responsibilities: Code Quality, Model, Logic","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"bernarduskrishna":16,"-":30}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"bryanwee023"},"content":"* small business owner / entrepreneur","lastModifiedDate":"2021-09-27"},{"lineNumber":261,"author":{"gitId":"bryanwee023"},"content":"* prefers desktop apps over other types","lastModifiedDate":"2021-09-27"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"bryanwee023"},"content":"**Value proposition**: manage a small business\u0027 inventory and finances faster than a typical mouse/GUI driven app","lastModifiedDate":"2021-09-27"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"| Priority | As a …​                         | I want to …​                                               | So that I can…​                                      |","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"bryanwee023"},"content":"| -------- | ------------------------------- | ---------------------------------------------------------- | ---------------------------------------------------- |","lastModifiedDate":"2021-09-27"},{"lineNumber":275,"author":{"gitId":"bryanwee023"},"content":"| `* * *`  | small business owner            | add items into the inventory list                          | account for newly stocked items                      |","lastModifiedDate":"2021-09-27"},{"lineNumber":276,"author":{"gitId":"bryanwee023"},"content":"| `* * *`  | small business owner            | record item related information (name, price, cost, id)    | record and track items\u0027 details easily               |","lastModifiedDate":"2021-09-27"},{"lineNumber":277,"author":{"gitId":"bryanwee023"},"content":"| `* * *`  | small business owner            | delete items from the inventory                            | account for discarded or sold items                  |","lastModifiedDate":"2021-09-27"},{"lineNumber":278,"author":{"gitId":"bryanwee023"},"content":"| `* * *`  | small business owner            | look at all my inventory items, with their count           | review and track my inventory                        |","lastModifiedDate":"2021-09-27"},{"lineNumber":279,"author":{"gitId":"bryanwee023"},"content":"| `* * *`  | small business owner            | record new orders and update the inventory accordingly     | account for newly confirmed orders                   |","lastModifiedDate":"2021-09-27"},{"lineNumber":280,"author":{"gitId":"bryanwee023"},"content":"| `* * *`  | small business owner            | list past transactions                                     | review verify transaction details                    |","lastModifiedDate":"2021-09-27"},{"lineNumber":281,"author":{"gitId":"bryanwee023"},"content":"| `* * *`  | budget-savvy business owner     | track the cost that each item incurs                       | manage business costs closely                        |","lastModifiedDate":"2021-09-27"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"bryanwee023"},"content":"(For all use cases below, the **System** is the `Bogo Bogo` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-09-27"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"bryanwee023"},"content":"**UC01 - Adding an item**","lastModifiedDate":"2021-09-27"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"bryanwee023"},"content":"1.  User adds item into inventory.","lastModifiedDate":"2021-09-27"},{"lineNumber":294,"author":{"gitId":"bryanwee023"},"content":"2.  BogoBogo saves item into inventory.","lastModifiedDate":"2021-09-27"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"bryanwee023"},"content":"* 1a. User did not specify the name of item.","lastModifiedDate":"2021-09-27"},{"lineNumber":301,"author":{"gitId":"bryanwee023"},"content":"    * 1a1. BogoBogo notifies user of missing details.","lastModifiedDate":"2021-09-27"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"bryanwee023"},"content":"* 1b. User is adding the item for the first time, and did not specify the id, price or cost of the item.","lastModifiedDate":"2021-09-27"},{"lineNumber":306,"author":{"gitId":"bryanwee023"},"content":"    * 1b1. BogoBogo requests user for the missing details.","lastModifiedDate":"2021-09-27"},{"lineNumber":307,"author":{"gitId":"bryanwee023"},"content":"    * 1b2. User enters the missing details.","lastModifiedDate":"2021-09-27"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"bryanwee023"},"content":"      Use case resumes at step 2. ","lastModifiedDate":"2021-09-27"},{"lineNumber":310,"author":{"gitId":"bryanwee023"},"content":"      ","lastModifiedDate":"2021-09-27"},{"lineNumber":311,"author":{"gitId":"bryanwee023"},"content":"* 1c. The given id does not match with the given name.","lastModifiedDate":"2021-09-27"},{"lineNumber":312,"author":{"gitId":"bryanwee023"},"content":"    * 1c1. BogoBogo notifies user of the mismatch.","lastModifiedDate":"2021-09-27"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"      ","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"bryanwee023"},"content":"**UC02 - Deleting an item**","lastModifiedDate":"2021-09-27"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":318,"author":{"gitId":"bryanwee023"},"content":"**MSS**","lastModifiedDate":"2021-09-27"},{"lineNumber":319,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":320,"author":{"gitId":"bryanwee023"},"content":"1.  User requests to delete item from inventory.","lastModifiedDate":"2021-09-27"},{"lineNumber":321,"author":{"gitId":"bryanwee023"},"content":"2.  BogoBogo deletes item from inventory.","lastModifiedDate":"2021-09-27"},{"lineNumber":322,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":323,"author":{"gitId":"bryanwee023"},"content":"    Use case ends.","lastModifiedDate":"2021-09-27"},{"lineNumber":324,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":325,"author":{"gitId":"bryanwee023"},"content":"**Extensions**","lastModifiedDate":"2021-09-27"},{"lineNumber":326,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":327,"author":{"gitId":"bryanwee023"},"content":"* 1a. User did not specify the name or serial number of the item.","lastModifiedDate":"2021-09-27"},{"lineNumber":328,"author":{"gitId":"bryanwee023"},"content":"    * 1a1. BogoBogo notifies user of missing details.","lastModifiedDate":"2021-09-27"},{"lineNumber":329,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":330,"author":{"gitId":"bryanwee023"},"content":"      Use case ends.","lastModifiedDate":"2021-09-27"},{"lineNumber":331,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":332,"author":{"gitId":"bryanwee023"},"content":"* 1b. The specified item is not in the inventory.","lastModifiedDate":"2021-09-27"},{"lineNumber":333,"author":{"gitId":"bryanwee023"},"content":"    * 1b1. BogoBogo notifies user that item is not found.","lastModifiedDate":"2021-09-27"},{"lineNumber":334,"author":{"gitId":"bryanwee023"},"content":"     ","lastModifiedDate":"2021-09-27"},{"lineNumber":335,"author":{"gitId":"bryanwee023"},"content":"      Use case ends.","lastModifiedDate":"2021-09-27"},{"lineNumber":336,"author":{"gitId":"bryanwee023"},"content":"      ","lastModifiedDate":"2021-09-27"},{"lineNumber":337,"author":{"gitId":"bryanwee023"},"content":"* 1c. The given id does not match with the given name.","lastModifiedDate":"2021-09-27"},{"lineNumber":338,"author":{"gitId":"bryanwee023"},"content":"    * 1c1. BogoBogo notifies user of the mismatch.","lastModifiedDate":"2021-09-27"},{"lineNumber":339,"author":{"gitId":"bryanwee023"},"content":"     ","lastModifiedDate":"2021-09-27"},{"lineNumber":340,"author":{"gitId":"bryanwee023"},"content":"      Use case ends.","lastModifiedDate":"2021-09-27"},{"lineNumber":341,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":342,"author":{"gitId":"bryanwee023"},"content":"**UC03 - Getting details of an item**","lastModifiedDate":"2021-09-27"},{"lineNumber":343,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":344,"author":{"gitId":"bryanwee023"},"content":"**MSS**","lastModifiedDate":"2021-09-27"},{"lineNumber":345,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":346,"author":{"gitId":"bryanwee023"},"content":"1.  User searches for the details of an item in the inventory.","lastModifiedDate":"2021-09-27"},{"lineNumber":347,"author":{"gitId":"bryanwee023"},"content":"2.  BogoBogo deletes item from inventory.","lastModifiedDate":"2021-09-27"},{"lineNumber":348,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":349,"author":{"gitId":"bryanwee023"},"content":"    Use case ends.","lastModifiedDate":"2021-09-27"},{"lineNumber":350,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":351,"author":{"gitId":"bryanwee023"},"content":"**Extensions**","lastModifiedDate":"2021-09-27"},{"lineNumber":352,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":353,"author":{"gitId":"bryanwee023"},"content":"* 1a. User did not specify the name or serial number of the item.","lastModifiedDate":"2021-09-27"},{"lineNumber":354,"author":{"gitId":"bryanwee023"},"content":"    * 1a1. BogoBogo notifies user of missing details.","lastModifiedDate":"2021-09-27"},{"lineNumber":355,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":356,"author":{"gitId":"bryanwee023"},"content":"      Use case ends.","lastModifiedDate":"2021-09-27"},{"lineNumber":357,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":358,"author":{"gitId":"bryanwee023"},"content":"* 1b. The specified item is not in the inventory.","lastModifiedDate":"2021-09-27"},{"lineNumber":359,"author":{"gitId":"bryanwee023"},"content":"    * 1b1. BogoBogo notifies user that item is not found.","lastModifiedDate":"2021-09-27"},{"lineNumber":360,"author":{"gitId":"bryanwee023"},"content":"     ","lastModifiedDate":"2021-09-27"},{"lineNumber":361,"author":{"gitId":"bryanwee023"},"content":"      Use case ends.","lastModifiedDate":"2021-09-27"},{"lineNumber":362,"author":{"gitId":"bryanwee023"},"content":"      ","lastModifiedDate":"2021-09-27"},{"lineNumber":363,"author":{"gitId":"bryanwee023"},"content":"* 1c. The given id does not match with the given name.","lastModifiedDate":"2021-09-27"},{"lineNumber":364,"author":{"gitId":"bryanwee023"},"content":"    * 1c1. BogoBogo notifies user of the mismatch.","lastModifiedDate":"2021-09-27"},{"lineNumber":365,"author":{"gitId":"bryanwee023"},"content":"     ","lastModifiedDate":"2021-09-27"},{"lineNumber":366,"author":{"gitId":"bryanwee023"},"content":"      Use case ends.","lastModifiedDate":"2021-09-27"},{"lineNumber":367,"author":{"gitId":"bryanwee023"},"content":"     ","lastModifiedDate":"2021-09-27"},{"lineNumber":368,"author":{"gitId":"bryanwee023"},"content":"**UC04 - Recording an Order**","lastModifiedDate":"2021-09-27"},{"lineNumber":369,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":370,"author":{"gitId":"bryanwee023"},"content":"**MSS**","lastModifiedDate":"2021-09-27"},{"lineNumber":371,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":372,"author":{"gitId":"bryanwee023"},"content":"1. User requests to start an order.","lastModifiedDate":"2021-09-27"},{"lineNumber":373,"author":{"gitId":"bryanwee023"},"content":"2. BogoBogo requests for item names and quantities.","lastModifiedDate":"2021-09-27"},{"lineNumber":374,"author":{"gitId":"bryanwee023"},"content":"3. User adds an item into the order.","lastModifiedDate":"2021-09-27"},{"lineNumber":375,"author":{"gitId":"bryanwee023"},"content":"4. BogoBogo saves item into the order.","lastModifiedDate":"2021-09-27"},{"lineNumber":376,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":377,"author":{"gitId":"bryanwee023"},"content":"   Step 3-4 is repeated until the user wishes to end the order.","lastModifiedDate":"2021-09-27"},{"lineNumber":378,"author":{"gitId":"bryanwee023"},"content":"  ","lastModifiedDate":"2021-09-27"},{"lineNumber":379,"author":{"gitId":"bryanwee023"},"content":"5. User requests to end the order.","lastModifiedDate":"2021-09-27"},{"lineNumber":380,"author":{"gitId":"bryanwee023"},"content":"6. BogoBogo shows the summary of the order and prompts the user to confirm the order.","lastModifiedDate":"2021-09-27"},{"lineNumber":381,"author":{"gitId":"bryanwee023"},"content":"7. User confirms the order.","lastModifiedDate":"2021-09-27"},{"lineNumber":382,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":383,"author":{"gitId":"bryanwee023"},"content":"   Use case ends.","lastModifiedDate":"2021-09-27"},{"lineNumber":384,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":385,"author":{"gitId":"bryanwee023"},"content":"**Extensions**","lastModifiedDate":"2021-09-27"},{"lineNumber":386,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":387,"author":{"gitId":"bryanwee023"},"content":"* 3a. User adds an item that is not in the inventory.","lastModifiedDate":"2021-09-27"},{"lineNumber":388,"author":{"gitId":"bryanwee023"},"content":"    * 3a1. BogoBogo notifies user that item is not found.","lastModifiedDate":"2021-09-27"},{"lineNumber":389,"author":{"gitId":"bryanwee023"},"content":"     ","lastModifiedDate":"2021-09-27"},{"lineNumber":390,"author":{"gitId":"bryanwee023"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2021-09-27"},{"lineNumber":391,"author":{"gitId":"bryanwee023"},"content":"      ","lastModifiedDate":"2021-09-27"},{"lineNumber":392,"author":{"gitId":"bryanwee023"},"content":"* 3b. There is an insufficient supply of added items in the inventory.","lastModifiedDate":"2021-09-27"},{"lineNumber":393,"author":{"gitId":"bryanwee023"},"content":"    * 3a1. BogoBogo notifies user of the supply shortage.","lastModifiedDate":"2021-09-27"},{"lineNumber":394,"author":{"gitId":"bryanwee023"},"content":"     ","lastModifiedDate":"2021-09-27"},{"lineNumber":395,"author":{"gitId":"bryanwee023"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2021-09-27"},{"lineNumber":396,"author":{"gitId":"bryanwee023"},"content":"      ","lastModifiedDate":"2021-09-27"},{"lineNumber":397,"author":{"gitId":"bryanwee023"},"content":"* 4a. User incorrectly added an item into the order.","lastModifiedDate":"2021-09-27"},{"lineNumber":398,"author":{"gitId":"bryanwee023"},"content":"    * 3a1. User removes specified item from the order.","lastModifiedDate":"2021-09-27"},{"lineNumber":399,"author":{"gitId":"bryanwee023"},"content":"      ","lastModifiedDate":"2021-09-27"},{"lineNumber":400,"author":{"gitId":"bryanwee023"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2021-09-27"},{"lineNumber":401,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":402,"author":{"gitId":"bryanwee023"},"content":"* 7a. The order is empty.","lastModifiedDate":"2021-09-27"},{"lineNumber":403,"author":{"gitId":"bryanwee023"},"content":"    * 7a1. BogoBogo notifies user that the order is empty.","lastModifiedDate":"2021-09-27"},{"lineNumber":404,"author":{"gitId":"bryanwee023"},"content":"      ","lastModifiedDate":"2021-09-27"},{"lineNumber":405,"author":{"gitId":"bryanwee023"},"content":"      Use case ends.","lastModifiedDate":"2021-09-27"},{"lineNumber":406,"author":{"gitId":"bryanwee023"},"content":"      ","lastModifiedDate":"2021-09-27"},{"lineNumber":407,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"bryanwee023"},"content":"2.  Should be able to hold up to 1000 distinct inventory items without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-09-27"},{"lineNumber":413,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"bryanwee023"},"content":"* **Item**: An inventory good that the business owner is/was selling","lastModifiedDate":"2021-09-27"},{"lineNumber":421,"author":{"gitId":"bryanwee023"},"content":"* **Order**: Information regarding a transaction whereby the business sells a list of items to a customerfor revenue","lastModifiedDate":"2021-09-27"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"bryanwee023":117,"-":357}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"wangpeialex"},"content":"layout: page title: User Guide","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"wangpeialex"},"content":"BogoBogo is a **desktop app for managing inventories, optimized for use via a Command Line Interface** (CLI)","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"wangpeialex"},"content":"while still having the benefits of a Graphical User Interface (GUI). If you can type fast, BogoBogo can get your","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"wangpeialex"},"content":"inventory management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"wangpeialex"},"content":"* Table of Contents {:toc}","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"wangpeialex"},"content":"2. Download the latest `BogoBogo.jar` from [here](https://github.com/AY2122S1-CS2103-F10-2/tp/releases).","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"wangpeialex"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for the application.","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"wangpeialex"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"wangpeialex"},"content":"   contains some sample data.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"wangpeialex"},"content":"**TODO: Repalce sample ui image when ui is done**","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"wangpeialex"},"content":"6. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"wangpeialex"},"content":"   open the help window.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"wangpeialex"},"content":"    - **`add`**`apple -sp 8.5 -s A012345 -c 1000 -cp 5.2` : Adds apple with sales price 8.5, serial number A012345,","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"wangpeialex"},"content":"      quantity 1000, and cost price 5.2, into the inventory.","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"wangpeialex"},"content":"    - **`delete`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"wangpeialex"},"content":"    - **`clear`** : Deletes all contacts.","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"wangpeialex"},"content":"    - **`exit`** : Exits the app.","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"wangpeialex"},"content":"7. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"wangpeialex"},"content":"- Words in `{}` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"wangpeialex"},"content":"  e.g. in `add -n {name}`, `name` is a parameter which can be used as `add -n milk`.","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"wangpeialex"},"content":"- Items in square brackets with pipes are exclusively optional (user must specify at least one of the option).\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"wangpeialex"},"content":"  e.g `delete [-n {name} | -s {serial number}]` should be supplied with either `name` or `serial number`.","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"wangpeialex"},"content":"- Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"wangpeialex"},"content":"- Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"wangpeialex"},"content":"- If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of","lastModifiedDate":"2021-09-29"},{"lineNumber":63,"author":{"gitId":"wangpeialex"},"content":"  the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":66,"author":{"gitId":"wangpeialex"},"content":"- Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be","lastModifiedDate":"2021-09-29"},{"lineNumber":67,"author":{"gitId":"wangpeialex"},"content":"  ignored.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"wangpeialex"},"content":"### Viewing help : `help` [Coming soon]","lastModifiedDate":"2021-09-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"wangpeialex"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2021-09-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"wangpeialex"},"content":"**TODO: Replace help ui image**","lastModifiedDate":"2021-09-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"wangpeialex"},"content":"### Adding an item: `add` [Coming soon]","lastModifiedDate":"2021-09-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"wangpeialex"},"content":"Adds an item to the inventory.","lastModifiedDate":"2021-09-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"wangpeialex"},"content":"Format: `add {name} -sp {sales price} -s {serial number} -c {count} -cp {cost price}`","lastModifiedDate":"2021-09-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"wangpeialex"},"content":"Flag    |  Argument    | Description","lastModifiedDate":"2021-09-29"},{"lineNumber":88,"author":{"gitId":"wangpeialex"},"content":"--------|--------------|-------------","lastModifiedDate":"2021-09-29"},{"lineNumber":89,"author":{"gitId":"wangpeialex"},"content":"\u0026nbsp;  | name          | name of the item to add.","lastModifiedDate":"2021-09-29"},{"lineNumber":90,"author":{"gitId":"wangpeialex"},"content":"`-sp`   | sell price    | Sell price of the item to add.","lastModifiedDate":"2021-09-29"},{"lineNumber":91,"author":{"gitId":"wangpeialex"},"content":"`-s`    | serial number | Serial number of item to add.","lastModifiedDate":"2021-09-29"},{"lineNumber":92,"author":{"gitId":"wangpeialex"},"content":"`-c`    | count         | Quantity of the item to add.","lastModifiedDate":"2021-09-29"},{"lineNumber":93,"author":{"gitId":"wangpeialex"},"content":"`-cp`   | cost price    | Cost price of the item to add.","lastModifiedDate":"2021-09-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":97,"author":{"gitId":"wangpeialex"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":98,"author":{"gitId":"wangpeialex"},"content":"add apple -sp 8.5 -s A012345 -c 1000 -cp 5.2","lastModifiedDate":"2021-09-29"},{"lineNumber":99,"author":{"gitId":"wangpeialex"},"content":"add banana -sp 7.5 -s A012346 -c 800 -cp 4.8","lastModifiedDate":"2021-09-29"},{"lineNumber":100,"author":{"gitId":"wangpeialex"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"wangpeialex"},"content":"### Deleting an item : `delete` [coming soon]","lastModifiedDate":"2021-09-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"wangpeialex"},"content":"Deletes the specified item from the inventory.","lastModifiedDate":"2021-09-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"wangpeialex"},"content":"Format: `delete [-n {name} | -s {serial number}] -c {count}`","lastModifiedDate":"2021-09-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"wangpeialex"},"content":"Flag    |  Argument      | Description","lastModifiedDate":"2021-09-29"},{"lineNumber":109,"author":{"gitId":"wangpeialex"},"content":"--------|----------------|-------------","lastModifiedDate":"2021-09-29"},{"lineNumber":110,"author":{"gitId":"wangpeialex"},"content":"`-n`    | name           | Name of the item to delete.","lastModifiedDate":"2021-09-29"},{"lineNumber":111,"author":{"gitId":"wangpeialex"},"content":"`-s`    | serial number  | Serial number of the item to delete.","lastModifiedDate":"2021-09-29"},{"lineNumber":112,"author":{"gitId":"wangpeialex"},"content":"`-c`    | count          | Quantity of the item to delete.","lastModifiedDate":"2021-09-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"wangpeialex"},"content":"- Decreases the specified item\u0027s quantity by the count specified.","lastModifiedDate":"2021-09-29"},{"lineNumber":115,"author":{"gitId":"wangpeialex"},"content":"- An item can be specified by either name or serial number.","lastModifiedDate":"2021-09-29"},{"lineNumber":116,"author":{"gitId":"wangpeialex"},"content":"- If both name and serial number are specified, the command will take the name as reference.","lastModifiedDate":"2021-09-29"},{"lineNumber":117,"author":{"gitId":"wangpeialex"},"content":"- The `count` **must be a positive integer**.","lastModifiedDate":"2021-09-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":121,"author":{"gitId":"wangpeialex"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":122,"author":{"gitId":"wangpeialex"},"content":"delete -n milk -c 10  // delete by name","lastModifiedDate":"2021-09-29"},{"lineNumber":123,"author":{"gitId":"wangpeialex"},"content":"delete -s A01234 -c 10  // delete by serial number","lastModifiedDate":"2021-09-29"},{"lineNumber":124,"author":{"gitId":"wangpeialex"},"content":"delete -n milk -s A01111 -c 12  // delete 12 milks","lastModifiedDate":"2021-09-29"},{"lineNumber":125,"author":{"gitId":"wangpeialex"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":127,"author":{"gitId":"wangpeialex"},"content":"### Get quantity of the item: `count` [Coming soon]","lastModifiedDate":"2021-09-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"wangpeialex"},"content":"Gets the quantity of the item specified.","lastModifiedDate":"2021-09-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"wangpeialex"},"content":"Format: `count [-n {name} | -s {serial number}]`","lastModifiedDate":"2021-09-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"wangpeialex"},"content":"Flag    |  Argument      | Description","lastModifiedDate":"2021-09-29"},{"lineNumber":134,"author":{"gitId":"wangpeialex"},"content":"--------|----------------|-------------","lastModifiedDate":"2021-09-29"},{"lineNumber":135,"author":{"gitId":"wangpeialex"},"content":"`-n`    | name           | Name of the item to delete.","lastModifiedDate":"2021-09-29"},{"lineNumber":136,"author":{"gitId":"wangpeialex"},"content":"`-s`    | serial number  | Serial number of the item to delete.","lastModifiedDate":"2021-09-29"},{"lineNumber":137,"author":{"gitId":"wangpeialex"},"content":"`-c`    | count          | Quantity of the item to delete.","lastModifiedDate":"2021-09-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":141,"author":{"gitId":"wangpeialex"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":142,"author":{"gitId":"wangpeialex"},"content":"count milk  // count by name","lastModifiedDate":"2021-09-29"},{"lineNumber":143,"author":{"gitId":"wangpeialex"},"content":"count A01111  // count by serial number","lastModifiedDate":"2021-09-29"},{"lineNumber":144,"author":{"gitId":"wangpeialex"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"wangpeialex"},"content":"### Manage orders","lastModifiedDate":"2021-09-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":148,"author":{"gitId":"wangpeialex"},"content":"Remove items from the inventory by logging in an order. To enter order logging mode, use `sorder`. Exit the mode","lastModifiedDate":"2021-09-29"},{"lineNumber":149,"author":{"gitId":"wangpeialex"},"content":"with `eorder`.","lastModifiedDate":"2021-09-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"wangpeialex"},"content":"![mange orders workflow](images/manageOrdersWorkflow.png)","lastModifiedDate":"2021-09-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"wangpeialex"},"content":"### Start ordering: `sorder` [Coming soon]","lastModifiedDate":"2021-09-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":155,"author":{"gitId":"wangpeialex"},"content":"Starts a new list of orders.","lastModifiedDate":"2021-09-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"wangpeialex"},"content":"Format: `sorder`","lastModifiedDate":"2021-09-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"wangpeialex"},"content":"Example:","lastModifiedDate":"2021-09-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":161,"author":{"gitId":"wangpeialex"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":162,"author":{"gitId":"wangpeialex"},"content":"sorder","lastModifiedDate":"2021-09-29"},{"lineNumber":163,"author":{"gitId":"wangpeialex"},"content":"\u003e\u003e Please enter item name and quantity.","lastModifiedDate":"2021-09-29"},{"lineNumber":164,"author":{"gitId":"wangpeialex"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"wangpeialex"},"content":"### Input an item into order: `iorder` [Coming soon]","lastModifiedDate":"2021-09-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":168,"author":{"gitId":"wangpeialex"},"content":"Add an item into the current list of orders.","lastModifiedDate":"2021-09-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"wangpeialex"},"content":"Format:","lastModifiedDate":"2021-09-29"},{"lineNumber":171,"author":{"gitId":"wangpeialex"},"content":"`iorder [-n {name} | -s {serial number}] -c {count}`","lastModifiedDate":"2021-09-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"wangpeialex"},"content":"Flag    |  Argument      | Description","lastModifiedDate":"2021-09-29"},{"lineNumber":174,"author":{"gitId":"wangpeialex"},"content":"--------|----------------|-------------","lastModifiedDate":"2021-09-29"},{"lineNumber":175,"author":{"gitId":"wangpeialex"},"content":"`-n`    | name           | Name of the item to add.","lastModifiedDate":"2021-09-29"},{"lineNumber":176,"author":{"gitId":"wangpeialex"},"content":"`-s`    | serial number  | Serial number of the item to add.","lastModifiedDate":"2021-09-29"},{"lineNumber":177,"author":{"gitId":"wangpeialex"},"content":"`-c`    | count          | Quantity of the item to add.","lastModifiedDate":"2021-09-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"wangpeialex"},"content":"Example:","lastModifiedDate":"2021-09-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":181,"author":{"gitId":"wangpeialex"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":182,"author":{"gitId":"wangpeialex"},"content":"iorder -n milk -c 5  // Input order of item named milk","lastModifiedDate":"2021-09-29"},{"lineNumber":183,"author":{"gitId":"wangpeialex"},"content":"iorder -s 12345 -c 5  // Input order of item with serial no.12345","lastModifiedDate":"2021-09-29"},{"lineNumber":184,"author":{"gitId":"wangpeialex"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"wangpeialex"},"content":"### Cancel an item from order: `corder` [Coming soon]","lastModifiedDate":"2021-09-29"},{"lineNumber":187,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":188,"author":{"gitId":"wangpeialex"},"content":"Cancels the specified order from the current list of orders.","lastModifiedDate":"2021-09-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"wangpeialex"},"content":"Format:","lastModifiedDate":"2021-09-29"},{"lineNumber":191,"author":{"gitId":"wangpeialex"},"content":"`corder [-n {name} | -s {serial number}]`","lastModifiedDate":"2021-09-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"wangpeialex"},"content":"Flag    |  Argument      | Description","lastModifiedDate":"2021-09-29"},{"lineNumber":194,"author":{"gitId":"wangpeialex"},"content":"--------|----------------|-------------","lastModifiedDate":"2021-09-29"},{"lineNumber":195,"author":{"gitId":"wangpeialex"},"content":"`-n`    | name           | Name of the item to add.","lastModifiedDate":"2021-09-29"},{"lineNumber":196,"author":{"gitId":"wangpeialex"},"content":"`-s`    | serial number  | Serial number of the item to add.","lastModifiedDate":"2021-09-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"wangpeialex"},"content":"Example:","lastModifiedDate":"2021-09-29"},{"lineNumber":199,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":200,"author":{"gitId":"wangpeialex"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":201,"author":{"gitId":"wangpeialex"},"content":"corder -n milk  // Cancel order of item named milk","lastModifiedDate":"2021-09-29"},{"lineNumber":202,"author":{"gitId":"wangpeialex"},"content":"corder -s 12345  // Cancel order of item with serial no. 12345","lastModifiedDate":"2021-09-29"},{"lineNumber":203,"author":{"gitId":"wangpeialex"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":204,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":205,"author":{"gitId":"wangpeialex"},"content":"### End ordering: `eorder` [Coming soon]","lastModifiedDate":"2021-09-29"},{"lineNumber":206,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":207,"author":{"gitId":"wangpeialex"},"content":"Saves the current list of orders","lastModifiedDate":"2021-09-29"},{"lineNumber":208,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":209,"author":{"gitId":"wangpeialex"},"content":"Format: `eorder`","lastModifiedDate":"2021-09-29"},{"lineNumber":210,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":211,"author":{"gitId":"wangpeialex"},"content":"Example:","lastModifiedDate":"2021-09-29"},{"lineNumber":212,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":213,"author":{"gitId":"wangpeialex"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":214,"author":{"gitId":"wangpeialex"},"content":"eorder","lastModifiedDate":"2021-09-29"},{"lineNumber":215,"author":{"gitId":"wangpeialex"},"content":"\u003e\u003e Order is placed!","lastModifiedDate":"2021-09-29"},{"lineNumber":216,"author":{"gitId":"wangpeialex"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"wangpeialex"},"content":"## FAQ [Coming soon]","lastModifiedDate":"2021-09-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"wangpeialex"},"content":"**Q**:","lastModifiedDate":"2021-09-29"},{"lineNumber":227,"author":{"gitId":"wangpeialex"},"content":"**A**:","lastModifiedDate":"2021-09-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"wangpeialex"},"content":"**","lastModifiedDate":"2021-09-29"},{"lineNumber":236,"author":{"gitId":"wangpeialex"},"content":"Add** | `add {name} -sp {sales price} -s {serial number} -c {count} -cp {cost price}` \u003cbr\u003e e.g., `add apple -sp 8.5 -s A012345 -c 1000 -cp 5.2`","lastModifiedDate":"2021-09-29"},{"lineNumber":237,"author":{"gitId":"wangpeialex"},"content":"**Delete** | `delete [-n {name} \\| -s {serial number}] -c {count}` \u003cbr\u003e e.g., `delete -n milk -c 10`","lastModifiedDate":"2021-09-29"},{"lineNumber":238,"author":{"gitId":"wangpeialex"},"content":"**Count** | `count [-n {name} \\| -s {serial number}]` \u003cbr\u003e e.g., `count milk`","lastModifiedDate":"2021-09-29"},{"lineNumber":239,"author":{"gitId":"wangpeialex"},"content":"**Start ordering** | `sorder`","lastModifiedDate":"2021-09-29"},{"lineNumber":240,"author":{"gitId":"wangpeialex"},"content":"**Input item to order** | `iorder [-n {name} \\| -s {serial number}] -c {count}` \u003cbr\u003e e.g., `iorder -n milk -c 5`","lastModifiedDate":"2021-09-29"},{"lineNumber":241,"author":{"gitId":"wangpeialex"},"content":"**Cancel item in order** | `corder [-n {name} \\| -s {serial number}]` \u003cbr\u003e e.g., `corder -n milk`","lastModifiedDate":"2021-09-29"},{"lineNumber":242,"author":{"gitId":"wangpeialex"},"content":"**End ordering** | `eorder`","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"wangpeialex":139,"-":103}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.Inventory;","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.ReadOnlyInventory;","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.storage.InventoryStorage;","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.storage.JsonInventoryStorage;","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing BogoBogo ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"        InventoryStorage inventoryStorage \u003d new JsonInventoryStorage(userPrefs.getInventoryFilePath());","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"        storage \u003d new StorageManager(inventoryStorage, userPrefsStorage);","lastModifiedDate":"2021-10-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"bryanwee023"},"content":"        Optional\u003cReadOnlyInventory\u003e addressBookOptional;","lastModifiedDate":"2021-10-04"},{"lineNumber":78,"author":{"gitId":"bryanwee023"},"content":"        ReadOnlyInventory initialData;","lastModifiedDate":"2021-10-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"bryanwee023"},"content":"            addressBookOptional \u003d storage.readInventory();","lastModifiedDate":"2021-10-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"bryanwee023"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleInventory);","lastModifiedDate":"2021-10-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"bryanwee023"},"content":"            initialData \u003d new Inventory();","lastModifiedDate":"2021-10-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":90,"author":{"gitId":"bryanwee023"},"content":"            initialData \u003d new Inventory();","lastModifiedDate":"2021-10-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"bryanwee023"},"content":"        logger.info(\"Starting BogoBogo \" + MainApp.VERSION);","lastModifiedDate":"2021-10-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"bryanwee023"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping BogoBogo ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-10-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bryanwee023":15,"-":168}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"    public static final String MESSAGE_INVALID_ITEM_DISPLAYED_INDEX \u003d \"The item index provided is invalid\";","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"    public static final String MESSAGE_ITEMS_LISTED_OVERVIEW \u003d \"%1$d items listed!\";","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bryanwee023":2,"-":11}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.ReadOnlyInventory;","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"     * Returns the Inventory.","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"     * @see Model#getInventory()","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"    ReadOnlyInventory getInventory();","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"    /** Returns an unmodifiable view of the filtered list of items */","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"    ObservableList\u003cItem\u003e getFilteredItemList();","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"    Path getInventoryFilePath();","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"bryanwee023":9,"-":42}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.ReadOnlyInventory;","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"            storage.saveInventory(model.getInventory());","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"    public ReadOnlyInventory getInventory() {","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"        return model.getInventory();","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"bryanwee023"},"content":"    public ObservableList\u003cItem\u003e getFilteredItemList() {","lastModifiedDate":"2021-10-04"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"        return model.getFilteredItemList();","lastModifiedDate":"2021-10-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"bryanwee023"},"content":"    public Path getInventoryFilePath() {","lastModifiedDate":"2021-10-04"},{"lineNumber":69,"author":{"gitId":"bryanwee023"},"content":"        return model.getInventoryFilePath();","lastModifiedDate":"2021-10-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"bryanwee023":9,"-":72}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"            + PREFIX_ID + \"ID \"","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"            + PREFIX_NAME + \"Banana Bread \"","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"            + PREFIX_ID + \"#019381 \"","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"            + PREFIX_TAG + \"baked \"","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"            + PREFIX_TAG + \"popular\";","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New item added: %1$s\";","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"    public static final String MESSAGE_DUPLICATE_ITEM \u003d \"This item already exists in the inventory\";","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"    private final Item toAdd;","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"    public AddCommand(Item item) {","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"        requireNonNull(item);","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"        toAdd \u003d item;","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"        if (model.hasItem(toAdd)) {","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_ITEM);","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"        model.addItem(toAdd);","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bryanwee023":16,"-":45}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.Inventory;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":" * Clears the inventory.","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Inventory has been cleared!\";","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"        model.setInventory(new Inventory());","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bryanwee023":4,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":" * Deletes a item identified using it\u0027s displayed index from the inventory.","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"            + \": Deletes the item identified by the index number used in the displayed item list.\\n\"","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"    public static final String MESSAGE_DELETE_ITEM_SUCCESS \u003d \"Deleted Item: %1$s\";","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"        List\u003cItem\u003e lastShownList \u003d model.getFilteredItemList();","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"        Item itemToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"        model.deleteItem(itemToDelete);","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_ITEM_SUCCESS, itemToDelete));","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bryanwee023":9,"-":44}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_ITEMS;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.Name;","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":" * Edits the details of an existing item in the inventory.","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the item identified \"","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"            + \"by the index number used in the displayed item list. \"","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"            + \"[\" + PREFIX_ID + \"ID] \"","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"            + PREFIX_ID + \"#N3W_1D \";","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"    public static final String MESSAGE_EDIT_ITEM_SUCCESS \u003d \"Edited Item: %1$s\";","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"    public static final String MESSAGE_DUPLICATE_ITEM \u003d \"This item already exists in the inventory.\";","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"    private final EditItemDescriptor editItemDescriptor;","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"     * @param index of the item in the filtered item list to edit","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"     * @param editItemDescriptor details to edit the item with","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"    public EditCommand(Index index, EditItemDescriptor editItemDescriptor) {","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"        requireNonNull(editItemDescriptor);","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"        this.editItemDescriptor \u003d new EditItemDescriptor(editItemDescriptor);","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"bryanwee023"},"content":"        List\u003cItem\u003e lastShownList \u003d model.getFilteredItemList();","lastModifiedDate":"2021-10-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"bryanwee023"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"bryanwee023"},"content":"        Item itemToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-04"},{"lineNumber":70,"author":{"gitId":"bryanwee023"},"content":"        Item editedItem \u003d createEditedItem(itemToEdit, editItemDescriptor);","lastModifiedDate":"2021-10-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"bryanwee023"},"content":"        if (!itemToEdit.isSameItem(editedItem) \u0026\u0026 model.hasItem(editedItem)) {","lastModifiedDate":"2021-10-04"},{"lineNumber":73,"author":{"gitId":"bryanwee023"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_ITEM);","lastModifiedDate":"2021-10-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"bryanwee023"},"content":"        model.setItem(itemToEdit, editedItem);","lastModifiedDate":"2021-10-04"},{"lineNumber":77,"author":{"gitId":"bryanwee023"},"content":"        model.updateFilteredItemList(PREDICATE_SHOW_ALL_ITEMS);","lastModifiedDate":"2021-10-04"},{"lineNumber":78,"author":{"gitId":"bryanwee023"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_ITEM_SUCCESS, editedItem));","lastModifiedDate":"2021-10-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":82,"author":{"gitId":"bryanwee023"},"content":"     * Creates and returns a {@code Item} with the details of {@code itemToEdit}","lastModifiedDate":"2021-10-04"},{"lineNumber":83,"author":{"gitId":"bryanwee023"},"content":"     * edited with {@code editItemDescriptor}.","lastModifiedDate":"2021-10-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"bryanwee023"},"content":"    private static Item createEditedItem(Item itemToEdit, EditItemDescriptor editItemDescriptor) {","lastModifiedDate":"2021-10-04"},{"lineNumber":86,"author":{"gitId":"bryanwee023"},"content":"        assert itemToEdit !\u003d null;","lastModifiedDate":"2021-10-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"bryanwee023"},"content":"        Name updatedName \u003d editItemDescriptor.getName().orElse(itemToEdit.getName());","lastModifiedDate":"2021-10-04"},{"lineNumber":89,"author":{"gitId":"bryanwee023"},"content":"        String updatedId \u003d editItemDescriptor.getId().orElse(itemToEdit.getId());","lastModifiedDate":"2021-10-04"},{"lineNumber":90,"author":{"gitId":"bryanwee023"},"content":"        Set\u003cTag\u003e updatedTags \u003d editItemDescriptor.getTags().orElse(itemToEdit.getTags());","lastModifiedDate":"2021-10-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"bryanwee023"},"content":"        return new Item(updatedName, updatedId, updatedTags);","lastModifiedDate":"2021-10-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":110,"author":{"gitId":"bryanwee023"},"content":"                \u0026\u0026 editItemDescriptor.equals(e.editItemDescriptor);","lastModifiedDate":"2021-10-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"bryanwee023"},"content":"     * Stores the details to edit the item with. Each non-empty field value will replace the","lastModifiedDate":"2021-10-04"},{"lineNumber":115,"author":{"gitId":"bryanwee023"},"content":"     * corresponding field value of the item.","lastModifiedDate":"2021-10-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":117,"author":{"gitId":"bryanwee023"},"content":"    public static class EditItemDescriptor {","lastModifiedDate":"2021-10-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":119,"author":{"gitId":"bryanwee023"},"content":"        private String id;","lastModifiedDate":"2021-10-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":122,"author":{"gitId":"bryanwee023"},"content":"        public EditItemDescriptor() {}","lastModifiedDate":"2021-10-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":128,"author":{"gitId":"bryanwee023"},"content":"        public EditItemDescriptor(EditItemDescriptor toCopy) {","lastModifiedDate":"2021-10-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":130,"author":{"gitId":"bryanwee023"},"content":"            setId(toCopy.id);","lastModifiedDate":"2021-10-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"bryanwee023"},"content":"            return CollectionUtil.isAnyNonNull(name, id, tags);","lastModifiedDate":"2021-10-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"bryanwee023"},"content":"        public void setId(String id) {","lastModifiedDate":"2021-10-04"},{"lineNumber":150,"author":{"gitId":"bryanwee023"},"content":"            this.id \u003d id;","lastModifiedDate":"2021-10-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"bryanwee023"},"content":"        public Optional\u003cString\u003e getId() {","lastModifiedDate":"2021-10-04"},{"lineNumber":154,"author":{"gitId":"bryanwee023"},"content":"            return Optional.ofNullable(id);","lastModifiedDate":"2021-10-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":182,"author":{"gitId":"bryanwee023"},"content":"            if (!(other instanceof EditItemDescriptor)) {","lastModifiedDate":"2021-10-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":187,"author":{"gitId":"bryanwee023"},"content":"            EditItemDescriptor e \u003d (EditItemDescriptor) other;","lastModifiedDate":"2021-10-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"bryanwee023"},"content":"                    \u0026\u0026 getId().equals(e.getId())","lastModifiedDate":"2021-10-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"bryanwee023":50,"-":144}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting BogoBogo as requested ...\";","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"bryanwee023":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":" * Finds and lists all items in inventory whose name contains any of the argument keywords.","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all items whose names contain any of \"","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"            + \"Example: \" + COMMAND_WORD + \" pie cookie bread\";","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"        model.updateFilteredItemList(predicate);","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"                String.format(Messages.MESSAGE_ITEMS_LISTED_OVERVIEW, model.getFilteredItemList().size()));","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"bryanwee023":6,"-":36}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_ITEMS;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":" * Lists all items in the inventory to the user.","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all items\";","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"        model.updateFilteredItemList(PREDICATE_SHOW_ALL_ITEMS);","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bryanwee023":4,"-":20}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.Name;","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_ID, PREFIX_TAG);","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ID)","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"        String id \u003d argMultimap.getValue(PREFIX_ID).get();","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"        Item item \u003d new Item(name, id, tagList);","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"        return new AddCommand(item);","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"bryanwee023":8,"-":45}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"    public static final Prefix PREFIX_ID \u003d new Prefix(\"id/\");","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"bryanwee023":1,"-":12}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.logic.commands.EditCommand.EditItemDescriptor;","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_ID, PREFIX_TAG);","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"        EditItemDescriptor editPersonDescriptor \u003d new EditItemDescriptor();","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"        if (argMultimap.getValue(PREFIX_ID).isPresent()) {","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"            editPersonDescriptor.setId(argMultimap.getValue(PREFIX_ID).get());","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"bryanwee023":6,"-":68}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"bryanwee023":1,"-":32}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.Name;","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"bryanwee023":1,"-":75}},{"path":"src/main/java/seedu/address/model/Inventory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.model;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import java.util.List;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.UniqueItemList;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":" * Wraps all data at the inventory level","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":" * Duplicates are not allowed (by .isSameItem comparison)","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"public class Inventory implements ReadOnlyInventory {","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"    private final UniqueItemList items;","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"    /*","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"     *   among constructors.","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"    {","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"        items \u003d new UniqueItemList();","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"    public Inventory() {}","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"     * Creates an Inventory using the Items in the {@code toBeCopied}","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"    public Inventory(ReadOnlyInventory toBeCopied) {","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"        this();","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"    //// list overwrite operations","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"     * Replaces the contents of the item list with {@code items}.","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"     * {@code items} must not contain duplicate items.","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"    public void setItems(List\u003cItem\u003e items) {","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"        this.items.setItems(items);","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"     * Resets the existing data of this {@code Inventory} with {@code newData}.","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"    public void resetData(ReadOnlyInventory newData) {","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"        requireNonNull(newData);","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"        setItems(newData.getItemList());","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"    //// item-level operations","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":61,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":62,"author":{"gitId":"bryanwee023"},"content":"     * Returns true if an item with the same id as {@code item} that exists in the inventory.","lastModifiedDate":"2021-10-04"},{"lineNumber":63,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"    public boolean hasItem(Item item) {","lastModifiedDate":"2021-10-04"},{"lineNumber":65,"author":{"gitId":"bryanwee023"},"content":"        requireNonNull(item);","lastModifiedDate":"2021-10-04"},{"lineNumber":66,"author":{"gitId":"bryanwee023"},"content":"        return items.contains(item);","lastModifiedDate":"2021-10-04"},{"lineNumber":67,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":68,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":69,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":70,"author":{"gitId":"bryanwee023"},"content":"     * Adds an item to the inventory.","lastModifiedDate":"2021-10-04"},{"lineNumber":71,"author":{"gitId":"bryanwee023"},"content":"     * If the item already exists in the inventory, increment its count.","lastModifiedDate":"2021-10-04"},{"lineNumber":72,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":73,"author":{"gitId":"bryanwee023"},"content":"    public void addItem(Item newItem) {","lastModifiedDate":"2021-10-04"},{"lineNumber":74,"author":{"gitId":"bryanwee023"},"content":"        items.add(newItem);","lastModifiedDate":"2021-10-04"},{"lineNumber":75,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":76,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":77,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":78,"author":{"gitId":"bryanwee023"},"content":"     * Replaces the given item {@code target} in the list with {@code editedItem}.","lastModifiedDate":"2021-10-04"},{"lineNumber":79,"author":{"gitId":"bryanwee023"},"content":"     * {@code target} must exist in the inventory.","lastModifiedDate":"2021-10-04"},{"lineNumber":80,"author":{"gitId":"bryanwee023"},"content":"     * The item identity of {@code editedItem} must not be the same as another existing item in the inventory.","lastModifiedDate":"2021-10-04"},{"lineNumber":81,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":82,"author":{"gitId":"bryanwee023"},"content":"    public void setItem(Item target, Item editedItem) {","lastModifiedDate":"2021-10-04"},{"lineNumber":83,"author":{"gitId":"bryanwee023"},"content":"        requireNonNull(editedItem);","lastModifiedDate":"2021-10-04"},{"lineNumber":84,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":85,"author":{"gitId":"bryanwee023"},"content":"        items.setItem(target, editedItem);","lastModifiedDate":"2021-10-04"},{"lineNumber":86,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":87,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":88,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":89,"author":{"gitId":"bryanwee023"},"content":"     * Removes {@code key} from this {@code Inventory}.","lastModifiedDate":"2021-10-04"},{"lineNumber":90,"author":{"gitId":"bryanwee023"},"content":"     * {@code key} must exist in the inventory.","lastModifiedDate":"2021-10-04"},{"lineNumber":91,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":92,"author":{"gitId":"bryanwee023"},"content":"    public void removeItem(Item key) {","lastModifiedDate":"2021-10-04"},{"lineNumber":93,"author":{"gitId":"bryanwee023"},"content":"        items.remove(key);","lastModifiedDate":"2021-10-04"},{"lineNumber":94,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":95,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":96,"author":{"gitId":"bryanwee023"},"content":"    //// util methods","lastModifiedDate":"2021-10-04"},{"lineNumber":97,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":98,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":99,"author":{"gitId":"bryanwee023"},"content":"    public String toString() {","lastModifiedDate":"2021-10-04"},{"lineNumber":100,"author":{"gitId":"bryanwee023"},"content":"        return items.asUnmodifiableObservableList().size() + \" items\";","lastModifiedDate":"2021-10-04"},{"lineNumber":101,"author":{"gitId":"bryanwee023"},"content":"        // TODO: refine later","lastModifiedDate":"2021-10-04"},{"lineNumber":102,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":103,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":104,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":105,"author":{"gitId":"bryanwee023"},"content":"    public ObservableList\u003cItem\u003e getItemList() {","lastModifiedDate":"2021-10-04"},{"lineNumber":106,"author":{"gitId":"bryanwee023"},"content":"        return items.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-04"},{"lineNumber":107,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":108,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":109,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":110,"author":{"gitId":"bryanwee023"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-04"},{"lineNumber":111,"author":{"gitId":"bryanwee023"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-04"},{"lineNumber":112,"author":{"gitId":"bryanwee023"},"content":"                || (other instanceof Inventory // instanceof handles nulls","lastModifiedDate":"2021-10-04"},{"lineNumber":113,"author":{"gitId":"bryanwee023"},"content":"                \u0026\u0026 items.equals(((Inventory) other).items));","lastModifiedDate":"2021-10-04"},{"lineNumber":114,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":115,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":116,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":117,"author":{"gitId":"bryanwee023"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-04"},{"lineNumber":118,"author":{"gitId":"bryanwee023"},"content":"        return items.hashCode();","lastModifiedDate":"2021-10-04"},{"lineNumber":119,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":120,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"bryanwee023":120}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"    Predicate\u003cItem\u003e PREDICATE_SHOW_ALL_ITEMS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"    Path getInventoryFilePath();","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"    void setInventoryFilePath(Path addressBookFilePath);","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"     * Replaces inventory data with the data in {@code inventory}.","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"    void setInventory(ReadOnlyInventory inventory);","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"    /** Returns the Inventory */","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"    ReadOnlyInventory getInventory();","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"     * Returns true if a item with the same identity as {@code item} exists in the inventory.","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"    boolean hasItem(Item item);","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"bryanwee023"},"content":"     * Deletes the given item.","lastModifiedDate":"2021-10-04"},{"lineNumber":62,"author":{"gitId":"bryanwee023"},"content":"     * The item must exist in the inventory.","lastModifiedDate":"2021-10-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"    void deleteItem(Item target);","lastModifiedDate":"2021-10-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"bryanwee023"},"content":"     * Adds the given item.","lastModifiedDate":"2021-10-04"},{"lineNumber":68,"author":{"gitId":"bryanwee023"},"content":"     * If {@code item} must not already exist in the address book, increment its count accordingly.","lastModifiedDate":"2021-10-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"bryanwee023"},"content":"    void addItem(Item item);","lastModifiedDate":"2021-10-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"bryanwee023"},"content":"     * Replaces the given item {@code target} with {@code editedItem}.","lastModifiedDate":"2021-10-04"},{"lineNumber":74,"author":{"gitId":"bryanwee023"},"content":"     * {@code target} must exist in the inventory.","lastModifiedDate":"2021-10-04"},{"lineNumber":75,"author":{"gitId":"bryanwee023"},"content":"     * The item identity of {@code editedItem} must not be the same as another existing item in the inventory.","lastModifiedDate":"2021-10-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"bryanwee023"},"content":"    void setItem(Item target, Item editedItem);","lastModifiedDate":"2021-10-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"bryanwee023"},"content":"    /** Returns an unmodifiable view of the filtered item list */","lastModifiedDate":"2021-10-04"},{"lineNumber":80,"author":{"gitId":"bryanwee023"},"content":"    ObservableList\u003cItem\u003e getFilteredItemList();","lastModifiedDate":"2021-10-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":83,"author":{"gitId":"bryanwee023"},"content":"     * Updates the filter of the filtered item list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"bryanwee023"},"content":"    void updateFilteredItemList(Predicate\u003cItem\u003e predicate);","lastModifiedDate":"2021-10-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"bryanwee023":24,"-":63}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"    private final Inventory inventory;","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"    private final FilteredList\u003cItem\u003e filteredItems;","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"    public ModelManager(ReadOnlyInventory inventory, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"        requireAllNonNull(inventory, userPrefs);","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"        logger.fine(\"Initializing with address book: \" + inventory + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"        this.inventory \u003d new Inventory(inventory);","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"        filteredItems \u003d new FilteredList\u003c\u003e(this.inventory.getItemList());","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"        this(new Inventory(), new UserPrefs());","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"bryanwee023"},"content":"    public Path getInventoryFilePath() {","lastModifiedDate":"2021-10-04"},{"lineNumber":70,"author":{"gitId":"bryanwee023"},"content":"        return userPrefs.getInventoryFilePath();","lastModifiedDate":"2021-10-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"bryanwee023"},"content":"    public void setInventoryFilePath(Path inventoryFilePath) {","lastModifiedDate":"2021-10-04"},{"lineNumber":75,"author":{"gitId":"bryanwee023"},"content":"        requireNonNull(inventoryFilePath);","lastModifiedDate":"2021-10-04"},{"lineNumber":76,"author":{"gitId":"bryanwee023"},"content":"        userPrefs.setInventoryFilePath(inventoryFilePath);","lastModifiedDate":"2021-10-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"bryanwee023"},"content":"    public void setInventory(ReadOnlyInventory inventory) {","lastModifiedDate":"2021-10-04"},{"lineNumber":83,"author":{"gitId":"bryanwee023"},"content":"        this.inventory.resetData(inventory);","lastModifiedDate":"2021-10-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"bryanwee023"},"content":"    public ReadOnlyInventory getInventory() {","lastModifiedDate":"2021-10-04"},{"lineNumber":88,"author":{"gitId":"bryanwee023"},"content":"        return inventory;","lastModifiedDate":"2021-10-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"bryanwee023"},"content":"    public boolean hasItem(Item item) {","lastModifiedDate":"2021-10-04"},{"lineNumber":93,"author":{"gitId":"bryanwee023"},"content":"        requireNonNull(item);","lastModifiedDate":"2021-10-04"},{"lineNumber":94,"author":{"gitId":"bryanwee023"},"content":"        return inventory.hasItem(item);","lastModifiedDate":"2021-10-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"bryanwee023"},"content":"    public void deleteItem(Item target) {","lastModifiedDate":"2021-10-04"},{"lineNumber":99,"author":{"gitId":"bryanwee023"},"content":"        inventory.removeItem(target);","lastModifiedDate":"2021-10-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"bryanwee023"},"content":"    public void addItem(Item item) {","lastModifiedDate":"2021-10-04"},{"lineNumber":104,"author":{"gitId":"bryanwee023"},"content":"        inventory.addItem(item);","lastModifiedDate":"2021-10-04"},{"lineNumber":105,"author":{"gitId":"bryanwee023"},"content":"        updateFilteredItemList(PREDICATE_SHOW_ALL_ITEMS);","lastModifiedDate":"2021-10-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":109,"author":{"gitId":"bryanwee023"},"content":"    public void setItem(Item target, Item editedItem) {","lastModifiedDate":"2021-10-04"},{"lineNumber":110,"author":{"gitId":"bryanwee023"},"content":"        requireAllNonNull(target, editedItem);","lastModifiedDate":"2021-10-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"bryanwee023"},"content":"        inventory.setItem(target, editedItem);","lastModifiedDate":"2021-10-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"bryanwee023"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Item List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":118,"author":{"gitId":"bryanwee023"},"content":"     * Returns an unmodifiable view of the list of {@code Item} backed by the internal list of","lastModifiedDate":"2021-10-04"},{"lineNumber":119,"author":{"gitId":"bryanwee023"},"content":"     * {@code versionedInventory}","lastModifiedDate":"2021-10-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":122,"author":{"gitId":"bryanwee023"},"content":"    public ObservableList\u003cItem\u003e getFilteredItemList() {","lastModifiedDate":"2021-10-04"},{"lineNumber":123,"author":{"gitId":"bryanwee023"},"content":"        return filteredItems;","lastModifiedDate":"2021-10-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":127,"author":{"gitId":"bryanwee023"},"content":"    public void updateFilteredItemList(Predicate\u003cItem\u003e predicate) {","lastModifiedDate":"2021-10-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":129,"author":{"gitId":"bryanwee023"},"content":"        filteredItems.setPredicate(predicate);","lastModifiedDate":"2021-10-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"bryanwee023"},"content":"        return inventory.equals(other.inventory)","lastModifiedDate":"2021-10-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"bryanwee023"},"content":"                \u0026\u0026 filteredItems.equals(other.filteredItems);","lastModifiedDate":"2021-10-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bryanwee023":38,"-":113}},{"path":"src/main/java/seedu/address/model/ReadOnlyInventory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.model;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"public interface ReadOnlyInventory {","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"     * Returns an unmodifiable view of the items list.","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"     * This list will not contain any duplicate items.","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"    ObservableList\u003cItem\u003e getItemList();","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"bryanwee023":17}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"    Path getInventoryFilePath();","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"bryanwee023":1,"-":15}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"    private Path inventoryFilePath \u003d Paths.get(\"data\" , \"inventory.json\");","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"        setInventoryFilePath(newUserPrefs.getInventoryFilePath());","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"    public Path getInventoryFilePath() {","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"        return inventoryFilePath;","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"    public void setInventoryFilePath(Path inventoryFilePath) {","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"        requireNonNull(inventoryFilePath);","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"        this.inventoryFilePath \u003d inventoryFilePath;","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"bryanwee023"},"content":"                \u0026\u0026 inventoryFilePath.equals(o.inventoryFilePath);","lastModifiedDate":"2021-10-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"bryanwee023"},"content":"        return Objects.hash(guiSettings, inventoryFilePath);","lastModifiedDate":"2021-10-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"bryanwee023"},"content":"        sb.append(\"\\nLocal data file location : \" + inventoryFilePath);","lastModifiedDate":"2021-10-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bryanwee023":10,"-":77}},{"path":"src/main/java/seedu/address/model/item/Item.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.model.item;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":" * Represents an item in the inventory.","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"public class Item {","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"    // Identity fields","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"    private final Name name;","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"    private final String id;","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"    // Data fields","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"    public Item(Name name, String id, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"        requireAllNonNull(name, id, tags);","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"        this.id \u003d id;","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"    public Name getName() {","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"        return name;","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"    public String getId() {","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"        return id;","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"     * Returns true if both items have the same name or id.","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"     * This defines a weaker notion of equality between two items.","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"    public boolean isSameItem(Item otherItem) {","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"        if (otherItem \u003d\u003d this) {","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"            return true;","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"        return otherItem !\u003d null","lastModifiedDate":"2021-10-04"},{"lineNumber":61,"author":{"gitId":"bryanwee023"},"content":"                \u0026\u0026 (otherItem.getName().equals(getName()) || (otherItem.getId().equals(getId())));","lastModifiedDate":"2021-10-04"},{"lineNumber":62,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":63,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":65,"author":{"gitId":"bryanwee023"},"content":"     * Returns true if both items have the same identity and data fields.","lastModifiedDate":"2021-10-04"},{"lineNumber":66,"author":{"gitId":"bryanwee023"},"content":"     * This defines a stronger notion of equality between two items.","lastModifiedDate":"2021-10-04"},{"lineNumber":67,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":68,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":69,"author":{"gitId":"bryanwee023"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-04"},{"lineNumber":70,"author":{"gitId":"bryanwee023"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-04"},{"lineNumber":71,"author":{"gitId":"bryanwee023"},"content":"            return true;","lastModifiedDate":"2021-10-04"},{"lineNumber":72,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":73,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":74,"author":{"gitId":"bryanwee023"},"content":"        if (!(other instanceof Item)) {","lastModifiedDate":"2021-10-04"},{"lineNumber":75,"author":{"gitId":"bryanwee023"},"content":"            return false;","lastModifiedDate":"2021-10-04"},{"lineNumber":76,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":77,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":78,"author":{"gitId":"bryanwee023"},"content":"        Item otherItem \u003d (Item) other;","lastModifiedDate":"2021-10-04"},{"lineNumber":79,"author":{"gitId":"bryanwee023"},"content":"        return otherItem.getName().equals(getName())","lastModifiedDate":"2021-10-04"},{"lineNumber":80,"author":{"gitId":"bryanwee023"},"content":"                \u0026\u0026 otherItem.getId().equals(getId())","lastModifiedDate":"2021-10-04"},{"lineNumber":81,"author":{"gitId":"bryanwee023"},"content":"                \u0026\u0026 otherItem.getTags().equals(getTags());","lastModifiedDate":"2021-10-04"},{"lineNumber":82,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":83,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":84,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":85,"author":{"gitId":"bryanwee023"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-04"},{"lineNumber":86,"author":{"gitId":"bryanwee023"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-10-04"},{"lineNumber":87,"author":{"gitId":"bryanwee023"},"content":"        return Objects.hash(name, id, tags);","lastModifiedDate":"2021-10-04"},{"lineNumber":88,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":89,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":90,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":91,"author":{"gitId":"bryanwee023"},"content":"    public String toString() {","lastModifiedDate":"2021-10-04"},{"lineNumber":92,"author":{"gitId":"bryanwee023"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-04"},{"lineNumber":93,"author":{"gitId":"bryanwee023"},"content":"        builder.append(getName())","lastModifiedDate":"2021-10-04"},{"lineNumber":94,"author":{"gitId":"bryanwee023"},"content":"                .append(\"; id: \")","lastModifiedDate":"2021-10-04"},{"lineNumber":95,"author":{"gitId":"bryanwee023"},"content":"                .append(getId());","lastModifiedDate":"2021-10-04"},{"lineNumber":96,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":97,"author":{"gitId":"bryanwee023"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2021-10-04"},{"lineNumber":98,"author":{"gitId":"bryanwee023"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2021-10-04"},{"lineNumber":99,"author":{"gitId":"bryanwee023"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2021-10-04"},{"lineNumber":100,"author":{"gitId":"bryanwee023"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2021-10-04"},{"lineNumber":101,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":102,"author":{"gitId":"bryanwee023"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-04"},{"lineNumber":103,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":104,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":105,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"bryanwee023":105}},{"path":"src/main/java/seedu/address/model/item/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.model.item;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":" * Represents a Item\u0027s name in the address book.","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bryanwee023":2,"-":57}},{"path":"src/main/java/seedu/address/model/item/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.model.item;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":" * Tests that a {@code Item}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cItem\u003e {","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"    public boolean test(Item item) {","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(item.getName().fullName, keyword));","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"bryanwee023":5,"-":26}},{"path":"src/main/java/seedu/address/model/item/UniqueItemList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.model.item;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import java.util.List;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.exceptions.DuplicateItemException;","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.exceptions.ItemNotFoundException;","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":" * A list of items that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":" * An item is considered unique by comparing using {@code Item#isSameItem(Item)}. As such, adding and updating of","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":" * items uses Item#Item(Item) for equality so as to ensure that the item being added or updated is","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":" * unique in terms of identity in the UniqueItemList. However, the removal of a item uses Item#equals(Object) so","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":" * as to ensure that the item with exactly the same fields will be removed.","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":" *","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":" *","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":" * @see Item#isSameItem(Item)","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"public class UniqueItemList implements Iterable\u003cItem\u003e {","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"    private final ObservableList\u003cItem\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"    private final ObservableList\u003cItem\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"     * Returns true if the list contains an equivalent item as the given argument.","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"    public boolean contains(Item toCheck) {","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"        return internalList.stream().anyMatch(toCheck::isSameItem);","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"     * Adds an item to the list.","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"     * The item must not already exist in the list.","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"    public void add(Item toAdd) {","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"     * Replaces the item {@code target} in the list with {@code editedItem}.","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"     * The item identity of {@code editedItem} must not be the same as another existing item in the list.","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"    public void setItem(Item target, Item editedItem) {","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"        requireAllNonNull(target, editedItem);","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-04"},{"lineNumber":61,"author":{"gitId":"bryanwee023"},"content":"            throw new ItemNotFoundException();","lastModifiedDate":"2021-10-04"},{"lineNumber":62,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":63,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"        if (!target.isSameItem(editedItem) \u0026\u0026 contains(editedItem)) {","lastModifiedDate":"2021-10-04"},{"lineNumber":65,"author":{"gitId":"bryanwee023"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2021-10-04"},{"lineNumber":66,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":67,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":68,"author":{"gitId":"bryanwee023"},"content":"        internalList.set(index, editedItem);","lastModifiedDate":"2021-10-04"},{"lineNumber":69,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":70,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":71,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":72,"author":{"gitId":"bryanwee023"},"content":"     * Removes the equivalent item from the list.","lastModifiedDate":"2021-10-04"},{"lineNumber":73,"author":{"gitId":"bryanwee023"},"content":"     * The item must exist in the list.","lastModifiedDate":"2021-10-04"},{"lineNumber":74,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":75,"author":{"gitId":"bryanwee023"},"content":"    public void remove(Item toRemove) {","lastModifiedDate":"2021-10-04"},{"lineNumber":76,"author":{"gitId":"bryanwee023"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-04"},{"lineNumber":77,"author":{"gitId":"bryanwee023"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-04"},{"lineNumber":78,"author":{"gitId":"bryanwee023"},"content":"            throw new ItemNotFoundException();","lastModifiedDate":"2021-10-04"},{"lineNumber":79,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":80,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":81,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":82,"author":{"gitId":"bryanwee023"},"content":"    public void setItems(UniqueItemList replacement) {","lastModifiedDate":"2021-10-04"},{"lineNumber":83,"author":{"gitId":"bryanwee023"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-04"},{"lineNumber":84,"author":{"gitId":"bryanwee023"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-04"},{"lineNumber":85,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":86,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":87,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":88,"author":{"gitId":"bryanwee023"},"content":"     * Replaces the contents of this list with {@code items}.","lastModifiedDate":"2021-10-04"},{"lineNumber":89,"author":{"gitId":"bryanwee023"},"content":"     * {@code items} must not contain duplicate items.","lastModifiedDate":"2021-10-04"},{"lineNumber":90,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":91,"author":{"gitId":"bryanwee023"},"content":"    public void setItems(List\u003cItem\u003e items) {","lastModifiedDate":"2021-10-04"},{"lineNumber":92,"author":{"gitId":"bryanwee023"},"content":"        requireAllNonNull(items);","lastModifiedDate":"2021-10-04"},{"lineNumber":93,"author":{"gitId":"bryanwee023"},"content":"        if (!itemsAreUnique(items)) {","lastModifiedDate":"2021-10-04"},{"lineNumber":94,"author":{"gitId":"bryanwee023"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2021-10-04"},{"lineNumber":95,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":96,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":97,"author":{"gitId":"bryanwee023"},"content":"        internalList.setAll(items);","lastModifiedDate":"2021-10-04"},{"lineNumber":98,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":99,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":100,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":101,"author":{"gitId":"bryanwee023"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-04"},{"lineNumber":102,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":103,"author":{"gitId":"bryanwee023"},"content":"    public ObservableList\u003cItem\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-04"},{"lineNumber":104,"author":{"gitId":"bryanwee023"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-04"},{"lineNumber":105,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":106,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":107,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":108,"author":{"gitId":"bryanwee023"},"content":"    public Iterator\u003cItem\u003e iterator() {","lastModifiedDate":"2021-10-04"},{"lineNumber":109,"author":{"gitId":"bryanwee023"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-04"},{"lineNumber":110,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":111,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":112,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":113,"author":{"gitId":"bryanwee023"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-04"},{"lineNumber":114,"author":{"gitId":"bryanwee023"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-04"},{"lineNumber":115,"author":{"gitId":"bryanwee023"},"content":"                || (other instanceof UniqueItemList // instanceof handles nulls","lastModifiedDate":"2021-10-04"},{"lineNumber":116,"author":{"gitId":"bryanwee023"},"content":"                        \u0026\u0026 internalList.equals(((UniqueItemList) other).internalList));","lastModifiedDate":"2021-10-04"},{"lineNumber":117,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":118,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":119,"author":{"gitId":"bryanwee023"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":120,"author":{"gitId":"bryanwee023"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-04"},{"lineNumber":121,"author":{"gitId":"bryanwee023"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-04"},{"lineNumber":122,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":123,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":124,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":125,"author":{"gitId":"bryanwee023"},"content":"     * Returns true if {@code items} contains only unique items.","lastModifiedDate":"2021-10-04"},{"lineNumber":126,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":127,"author":{"gitId":"bryanwee023"},"content":"    private boolean itemsAreUnique(List\u003cItem\u003e items) {","lastModifiedDate":"2021-10-04"},{"lineNumber":128,"author":{"gitId":"bryanwee023"},"content":"        for (int i \u003d 0; i \u003c items.size() - 1; i++) {","lastModifiedDate":"2021-10-04"},{"lineNumber":129,"author":{"gitId":"bryanwee023"},"content":"            for (int j \u003d i + 1; j \u003c items.size(); j++) {","lastModifiedDate":"2021-10-04"},{"lineNumber":130,"author":{"gitId":"bryanwee023"},"content":"                if (items.get(i).isSameItem(items.get(j))) {","lastModifiedDate":"2021-10-04"},{"lineNumber":131,"author":{"gitId":"bryanwee023"},"content":"                    return false;","lastModifiedDate":"2021-10-04"},{"lineNumber":132,"author":{"gitId":"bryanwee023"},"content":"                }","lastModifiedDate":"2021-10-04"},{"lineNumber":133,"author":{"gitId":"bryanwee023"},"content":"            }","lastModifiedDate":"2021-10-04"},{"lineNumber":134,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":135,"author":{"gitId":"bryanwee023"},"content":"        return true;","lastModifiedDate":"2021-10-04"},{"lineNumber":136,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":137,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"bryanwee023":137}},{"path":"src/main/java/seedu/address/model/item/exceptions/DuplicateItemException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.model.item.exceptions;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":" * Signals that the operation will result in duplicate Items (Items are considered duplicates if they have the same","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":" * id).","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"public class DuplicateItemException extends RuntimeException {","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"    public DuplicateItemException() {","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"        super(\"Operation would result in duplicate items\");","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"bryanwee023":11}},{"path":"src/main/java/seedu/address/model/item/exceptions/ItemNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.model.item.exceptions;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":" * Signals that the operation is unable to find the specified item.","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"public class ItemNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"bryanwee023":6}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":" * Represents a Tag in the Inventory.","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bryanwee023":1,"-":53}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.Inventory;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.ReadOnlyInventory;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.Name;","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"    public static Item[] getSampleItems() {","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"        return new Item[] {","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"            new Item(new Name(\"Oatmeal Cookie\"), \"#140121\",","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"                getTagSet(\"baked\")),","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"            new Item(new Name(\"Banana Muffin\"), \"#201928\",","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"                    getTagSet(\"baked\")),","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"            new Item(new Name(\"Pecan Pie\"), \"#178522\",","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"                    getTagSet(\"baked\")),","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"            new Item(new Name(\"Oreo Cheesecake\"), \"#109128\",","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"                    getTagSet(\"desert\")),","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"            new Item(new Name(\"Strawberry Shortcake\"), \"#091287\",","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"                    getTagSet(\"desert\")),","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"            new Item(new Name(\"Cold Brew Coffee\"), \"#001858\",","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"                    getTagSet(\"beverage\")),","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"    public static ReadOnlyInventory getSampleInventory() {","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"        Inventory sampleInventory \u003d new Inventory();","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"        for (Item sampleItem : getSampleItems()) {","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"            sampleInventory.addItem(sampleItem);","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"        return sampleInventory;","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"bryanwee023":23,"-":28}},{"path":"src/main/java/seedu/address/storage/InventoryStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.ReadOnlyInventory;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":" * Represents a storage for {@link seedu.address.model.Inventory}.","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"public interface InventoryStorage {","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"    Path getInventoryFilePath();","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"     * Returns Inventory data as a {@link ReadOnlyInventory}.","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"    Optional\u003cReadOnlyInventory\u003e readInventory() throws DataConversionException, IOException;","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"     * @see #getInventoryFilePath()","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"    Optional\u003cReadOnlyInventory\u003e readInventory(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"     * Saves the given {@link ReadOnlyInventory} to the storage.","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"     * @param inventory cannot be null.","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"    void saveInventory(ReadOnlyInventory inventory) throws IOException;","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"     * @see #saveInventory(ReadOnlyInventory)","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"    void saveInventory(ReadOnlyInventory inventory, Path filePath) throws IOException;","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"bryanwee023":45}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedItem.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import java.util.List;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.Name;","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":" * Jackson-friendly version of {@link Item}.","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"class JsonAdaptedItem {","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Item\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"    private final String name;","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"    private final String id;","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"     * Constructs a {@code JsonAdaptedItem} with the given item details.","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"    public JsonAdaptedItem(@JsonProperty(\"name\") String name,","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"                           @JsonProperty(\"phone\") String id,","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"                           @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"        this.id \u003d id;","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"     * Converts a given {@code Item} into this class for Jackson use.","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"    public JsonAdaptedItem(Item source) {","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"        id \u003d source.getId();","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"     * Converts this Jackson-friendly adapted item object into the model\u0027s {@code Item} object.","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted item.","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"    public Item toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"        final List\u003cTag\u003e itemTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2021-10-04"},{"lineNumber":61,"author":{"gitId":"bryanwee023"},"content":"            itemTags.add(tag.toModelType());","lastModifiedDate":"2021-10-04"},{"lineNumber":62,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":63,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2021-10-04"},{"lineNumber":65,"author":{"gitId":"bryanwee023"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2021-10-04"},{"lineNumber":66,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":67,"author":{"gitId":"bryanwee023"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2021-10-04"},{"lineNumber":68,"author":{"gitId":"bryanwee023"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-04"},{"lineNumber":69,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":70,"author":{"gitId":"bryanwee023"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2021-10-04"},{"lineNumber":71,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":72,"author":{"gitId":"bryanwee023"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(itemTags);","lastModifiedDate":"2021-10-04"},{"lineNumber":73,"author":{"gitId":"bryanwee023"},"content":"        return new Item(modelName, id, modelTags);","lastModifiedDate":"2021-10-04"},{"lineNumber":74,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":75,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":76,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"bryanwee023":76}},{"path":"src/main/java/seedu/address/storage/JsonInventoryStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.ReadOnlyInventory;","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":" * A class to access Inventory data stored as a json file on the hard disk.","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"public class JsonInventoryStorage implements InventoryStorage {","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonInventoryStorage.class);","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"    public JsonInventoryStorage(Path filePath) {","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"    public Path getInventoryFilePath() {","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"    public Optional\u003cReadOnlyInventory\u003e readInventory() throws DataConversionException {","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"        return readInventory(filePath);","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"     * Similar to {@link #readInventory()}.","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"    public Optional\u003cReadOnlyInventory\u003e readInventory(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"        Optional\u003cJsonSerializableInventory\u003e jsonInventory \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"                filePath, JsonSerializableInventory.class);","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"        if (!jsonInventory.isPresent()) {","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"            return Optional.of(jsonInventory.get().toModelType());","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"bryanwee023"},"content":"    public void saveInventory(ReadOnlyInventory inventory) throws IOException {","lastModifiedDate":"2021-10-04"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"        saveInventory(inventory, filePath);","lastModifiedDate":"2021-10-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"bryanwee023"},"content":"     * Similar to {@link #saveInventory(ReadOnlyInventory)}.","lastModifiedDate":"2021-10-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"bryanwee023"},"content":"    public void saveInventory(ReadOnlyInventory inventory, Path filePath) throws IOException {","lastModifiedDate":"2021-10-04"},{"lineNumber":73,"author":{"gitId":"bryanwee023"},"content":"        requireNonNull(inventory);","lastModifiedDate":"2021-10-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"bryanwee023"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableInventory(inventory), filePath);","lastModifiedDate":"2021-10-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"bryanwee023":20,"-":60}},{"path":"src/main/java/seedu/address/storage/JsonSerializableInventory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import java.util.List;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.Inventory;","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.ReadOnlyInventory;","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":" * An Immutable Inventory that is serializable to JSON format.","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"@JsonRootName(value \u003d \"inventory\")","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"class JsonSerializableInventory {","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"    public static final String MESSAGE_DUPLICATE_ITEM \u003d \"Item list contains duplicate item(s).\";","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"    private final List\u003cJsonAdaptedItem\u003e items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"     * Constructs a {@code JsonSerializableInventory} with the given items.","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"    public JsonSerializableInventory(@JsonProperty(\"items\") List\u003cJsonAdaptedItem\u003e items) {","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"        this.items.addAll(items);","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"     * Converts a given {@code ReadOnlyInventory} into this class for Jackson use.","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableInventory}.","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"    public JsonSerializableInventory(ReadOnlyInventory source) {","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"        items.addAll(source.getItemList().stream().map(JsonAdaptedItem::new).collect(Collectors.toList()));","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"     * Converts this inventory into the model\u0027s {@code Inventory} object.","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"    public Inventory toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"        Inventory inventory \u003d new Inventory();","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"        for (JsonAdaptedItem jsonAdaptedItem : items) {","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"            Item item \u003d jsonAdaptedItem.toModelType();","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"            if (inventory.hasItem(item)) {","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_ITEM);","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"            }","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"            inventory.addItem(item);","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"        return inventory;","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"bryanwee023":60}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.ReadOnlyInventory;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"public interface Storage extends InventoryStorage, UserPrefsStorage {","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"    Path getInventoryFilePath();","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"    Optional\u003cReadOnlyInventory\u003e readInventory() throws DataConversionException, IOException;","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"    void saveInventory(ReadOnlyInventory inventory) throws IOException;","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"bryanwee023":5,"-":27}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.ReadOnlyInventory;","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":" * Manages storage of Inventory data in local storage.","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"    private InventoryStorage inventoryStorage;","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"     * Creates a {@code StorageManager} with the given {@code InventoryStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"    public StorageManager(InventoryStorage inventoryStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"        this.inventoryStorage \u003d inventoryStorage;","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Inventory methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"    public Path getInventoryFilePath() {","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"        return inventoryStorage.getInventoryFilePath();","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"    public Optional\u003cReadOnlyInventory\u003e readInventory() throws DataConversionException, IOException {","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"        return readInventory(inventoryStorage.getInventoryFilePath());","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"bryanwee023"},"content":"    public Optional\u003cReadOnlyInventory\u003e readInventory(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-10-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"bryanwee023"},"content":"        return inventoryStorage.readInventory(filePath);","lastModifiedDate":"2021-10-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"bryanwee023"},"content":"    public void saveInventory(ReadOnlyInventory inventory) throws IOException {","lastModifiedDate":"2021-10-04"},{"lineNumber":70,"author":{"gitId":"bryanwee023"},"content":"        saveInventory(inventory, inventoryStorage.getInventoryFilePath());","lastModifiedDate":"2021-10-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"bryanwee023"},"content":"    public void saveInventory(ReadOnlyInventory inventory, Path filePath) throws IOException {","lastModifiedDate":"2021-10-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"bryanwee023"},"content":"        inventoryStorage.saveInventory(inventory, filePath);","lastModifiedDate":"2021-10-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bryanwee023":17,"-":62}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"bryanwee023"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredItemList());","lastModifiedDate":"2021-10-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"bryanwee023"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getInventoryFilePath());","lastModifiedDate":"2021-10-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"bryanwee023":2,"-":194}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"    public final Item item;","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"    public PersonCard(Item item, int displayedIndex) {","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"        this.item \u003d item;","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"        name.setText(item.getName().fullName);","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"        phone.setText(item.getId()); // id temporarily displayed in old phone label","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"        //address.setText(person.getAddress().value);","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"        //email.setText(person.getEmail().value);","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"        item.getTags().stream()","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"bryanwee023"},"content":"                \u0026\u0026 item.equals(card.item);","lastModifiedDate":"2021-10-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"bryanwee023":10,"-":67}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"    private ListView\u003cItem\u003e personListView;","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"    public PersonListPanel(ObservableList\u003cItem\u003e itemList) {","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"        personListView.setItems(itemList);","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"    class PersonListViewCell extends ListCell\u003cItem\u003e {","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"        protected void updateItem(Item item, boolean empty) {","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"            super.updateItem(item, empty);","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"            if (empty || item \u003d\u003d null) {","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"                setGraphic(new PersonCard(item, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"bryanwee023":9,"-":40}},{"path":"src/test/data/JsonInventoryStorageTest/invalidAndValidItemInventory.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"{","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"  \"items\": [ {","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"    \"name\": \"Valid Item\",","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"    \"id\": \"#9482424\"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"  }, {","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"    \"name\": \"Item With Invalid Tag\",","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"    \"tagged\": [\"invalid tag!\"]","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"  } ]","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"bryanwee023":9}},{"path":"src/test/data/JsonInventoryStorageTest/invalidItemInventory.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"{","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"  \"items\": [ {","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"    \"name\": \"Item with invalid name field: T@sty Chicken!\",","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"    \"id\": \"#9482424\"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"  } ]","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"bryanwee023":6}},{"path":"src/test/data/JsonSerializableInventoryTest/duplicateItemInventory.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"{","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"  \"items\": [ {","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"    \"name\": \"Milk Cookie\",","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"    \"id\": \"#94351253\",","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"    \"tagged\": [ \"bestseller\" ]","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"  }, {","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"    \"name\": \"Milk Cookie\",","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"    \"id\": \"#94351253\",","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"    \"tagged\": [ \"bestseller\" ]","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"  } ]","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"bryanwee023":11}},{"path":"src/test/data/JsonSerializableInventoryTest/invalidItemInventory.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"{","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"  \"items\": [ {","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"    \"name\": \"Invalid Name!\",","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"    \"id\": \"#131212\"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"  } ]","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"bryanwee023":6}},{"path":"src/test/data/JsonSerializableInventoryTest/typicalItemInventory.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"{","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"  \"_comment\": \"Inventory save file which contains the same item values as in TypicalItems#getTypicalInventory()\",","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"  \"items\" : [ {","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"    \"name\" : \"Apple Pie\",","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"    \"id\" : \"#222222\",","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"    \"tagged\" : [ \"baked\" ]","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"  }, {","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"    \"name\" : \"Banana Muffin\",","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"    \"id\" : \"#333333\",","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"    \"tagged\" : [ \"baked\", \"bestseller\" ]","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"  }, {","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"    \"name\" : \"Chocolate Chip Cookie\",","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"    \"id\" : \"#444444\",","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"    \"tagged\" : [ \"baked\" ]","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"  }, {","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"    \"name\" : \"Dalgona Coffee\",","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"    \"id\" : \"#555555\",","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"  }, {","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"    \"name\" : \"Egg Nog\",","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"    \"id\" : \"#666666\",","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"  }, {","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"    \"name\" : \"Forest Cake\",","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"    \"id\" : \"#777777\",","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"  }, {","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"    \"name\" : \"Granola Bar\",","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"    \"phone\" : \"#888888\",","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"  } ]","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"bryanwee023":32}},{"path":"src/test/data/JsonUserPrefsStorageTest/ExtraValuesUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"extra\" : \"some value \",","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \"y\" : 100,","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      \"z\" : 99","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"  \"inventoryFilePath\" : \"inventory.json\"","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"bryanwee023":1,"-":12}},{"path":"src/test/data/JsonUserPrefsStorageTest/TypicalUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"y\" : 100","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"  \"inventoryFilePath\" : \"inventory.json\"","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"bryanwee023":1,"-":10}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ID_DESC_BAGEL;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BAGEL;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.TypicalItems.BAGEL;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.ReadOnlyInventory;","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.storage.JsonInventoryStorage;","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.testutil.ItemBuilder;","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"        JsonInventoryStorage inventoryStorage \u003d","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"                new JsonInventoryStorage(temporaryFolder.resolve(\"inventory.json\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"        StorageManager storage \u003d new StorageManager(inventoryStorage, userPrefsStorage);","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_ITEM_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"bryanwee023"},"content":"        JsonInventoryStorage inventoryStorage \u003d","lastModifiedDate":"2021-10-04"},{"lineNumber":73,"author":{"gitId":"bryanwee023"},"content":"                new JsonInventoryIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"bryanwee023"},"content":"        StorageManager storage \u003d new StorageManager(inventoryStorage, userPrefsStorage);","lastModifiedDate":"2021-10-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"bryanwee023"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_BAGEL + ID_DESC_BAGEL;","lastModifiedDate":"2021-10-04"},{"lineNumber":81,"author":{"gitId":"bryanwee023"},"content":"        Item expectedItem \u003d new ItemBuilder(BAGEL).withTags().build();","lastModifiedDate":"2021-10-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"bryanwee023"},"content":"        expectedModel.addItem(expectedItem);","lastModifiedDate":"2021-10-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"bryanwee023"},"content":"    public void getFilteredItemList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-04"},{"lineNumber":90,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredItemList().remove(0));","lastModifiedDate":"2021-10-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"bryanwee023"},"content":"        Model expectedModel \u003d new ModelManager(model.getInventory(), new UserPrefs());","lastModifiedDate":"2021-10-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"bryanwee023"},"content":"    private static class JsonInventoryIoExceptionThrowingStub extends JsonInventoryStorage {","lastModifiedDate":"2021-10-04"},{"lineNumber":150,"author":{"gitId":"bryanwee023"},"content":"        private JsonInventoryIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-10-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"bryanwee023"},"content":"        public void saveInventory(ReadOnlyInventory addressBook, Path filePath) throws IOException {","lastModifiedDate":"2021-10-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"bryanwee023":24,"-":135}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.TypicalItems.getTypicalInventory;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.testutil.ItemBuilder;","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"        model \u003d new ModelManager(getTypicalInventory(), new UserPrefs());","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"    public void execute_newItem_success() {","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"        Item validItem \u003d new ItemBuilder().build();","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"        Model expectedModel \u003d new ModelManager(model.getInventory(), new UserPrefs());","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"        expectedModel.addItem(validItem);","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"        assertCommandSuccess(new AddCommand(validItem), model,","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validItem), expectedModel);","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"    public void execute_duplicateItem_throwsCommandException() {","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"        Item itemInList \u003d model.getInventory().getItemList().get(0);","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"        assertCommandFailure(new AddCommand(itemInList), model, AddCommand.MESSAGE_DUPLICATE_ITEM);","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"bryanwee023":13,"-":32}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.Inventory;","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.ReadOnlyInventory;","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.testutil.ItemBuilder;","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"    public void constructor_nullItem_throwsNullPointerException() {","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"    public void execute_itemAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"        ModelStubAcceptingItemAdded modelStub \u003d new ModelStubAcceptingItemAdded();","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"        Item validItem \u003d new ItemBuilder().build();","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"        CommandResult commandResult \u003d new AddCommand(validItem).execute(modelStub);","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validItem), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(Arrays.asList(validItem), modelStub.itemsAdded);","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"    public void execute_duplicateItem_throwsCommandException() {","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"        Item validItem \u003d new ItemBuilder().build();","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"        AddCommand addCommand \u003d new AddCommand(validItem);","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"        ModelStub modelStub \u003d new ModelStubWithItem(validItem);","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_ITEM, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"        Item bagel \u003d new ItemBuilder().withName(\"Bagel\").build();","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"        Item donut \u003d new ItemBuilder().withName(\"Donut\").build();","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"        AddCommand addBagelCommand \u003d new AddCommand(bagel);","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"        AddCommand addDonutCommand \u003d new AddCommand(donut);","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"bryanwee023"},"content":"        assertTrue(addBagelCommand.equals(addBagelCommand));","lastModifiedDate":"2021-10-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"        AddCommand addBagelCommandCopy \u003d new AddCommand(bagel);","lastModifiedDate":"2021-10-04"},{"lineNumber":65,"author":{"gitId":"bryanwee023"},"content":"        assertTrue(addBagelCommand.equals(addBagelCommandCopy));","lastModifiedDate":"2021-10-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(addBagelCommand.equals(1));","lastModifiedDate":"2021-10-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(addBagelCommand.equals(null));","lastModifiedDate":"2021-10-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"bryanwee023"},"content":"        // different item -\u003e returns false","lastModifiedDate":"2021-10-04"},{"lineNumber":74,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(addBagelCommand.equals(addDonutCommand));","lastModifiedDate":"2021-10-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"bryanwee023"},"content":"        public Path getInventoryFilePath() {","lastModifiedDate":"2021-10-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"bryanwee023"},"content":"        public void setInventoryFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-10-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":112,"author":{"gitId":"bryanwee023"},"content":"        public void addItem(Item item) {","lastModifiedDate":"2021-10-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"bryanwee023"},"content":"        public void setInventory(ReadOnlyInventory newData) {","lastModifiedDate":"2021-10-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"bryanwee023"},"content":"        public ReadOnlyInventory getInventory() {","lastModifiedDate":"2021-10-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"bryanwee023"},"content":"        public boolean hasItem(Item item) {","lastModifiedDate":"2021-10-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"bryanwee023"},"content":"        public void deleteItem(Item target) {","lastModifiedDate":"2021-10-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"bryanwee023"},"content":"        public void setItem(Item target, Item editedItem) {","lastModifiedDate":"2021-10-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"bryanwee023"},"content":"        public ObservableList\u003cItem\u003e getFilteredItemList() {","lastModifiedDate":"2021-10-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"bryanwee023"},"content":"        public void updateFilteredItemList(Predicate\u003cItem\u003e predicate) {","lastModifiedDate":"2021-10-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"bryanwee023"},"content":"     * A Model stub that contains a single item.","lastModifiedDate":"2021-10-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"bryanwee023"},"content":"    private class ModelStubWithItem extends ModelStub {","lastModifiedDate":"2021-10-04"},{"lineNumber":156,"author":{"gitId":"bryanwee023"},"content":"        private final Item item;","lastModifiedDate":"2021-10-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":158,"author":{"gitId":"bryanwee023"},"content":"        ModelStubWithItem(Item item) {","lastModifiedDate":"2021-10-04"},{"lineNumber":159,"author":{"gitId":"bryanwee023"},"content":"            requireNonNull(item);","lastModifiedDate":"2021-10-04"},{"lineNumber":160,"author":{"gitId":"bryanwee023"},"content":"            this.item \u003d item;","lastModifiedDate":"2021-10-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"bryanwee023"},"content":"        public boolean hasItem(Item item) {","lastModifiedDate":"2021-10-04"},{"lineNumber":165,"author":{"gitId":"bryanwee023"},"content":"            requireNonNull(item);","lastModifiedDate":"2021-10-04"},{"lineNumber":166,"author":{"gitId":"bryanwee023"},"content":"            return this.item.isSameItem(item);","lastModifiedDate":"2021-10-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"bryanwee023"},"content":"     * A Model stub that always accept the item being added.","lastModifiedDate":"2021-10-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"bryanwee023"},"content":"    private class ModelStubAcceptingItemAdded extends ModelStub {","lastModifiedDate":"2021-10-04"},{"lineNumber":174,"author":{"gitId":"bryanwee023"},"content":"        final ArrayList\u003cItem\u003e itemsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":177,"author":{"gitId":"bryanwee023"},"content":"        public boolean hasItem(Item item) {","lastModifiedDate":"2021-10-04"},{"lineNumber":178,"author":{"gitId":"bryanwee023"},"content":"            requireNonNull(item);","lastModifiedDate":"2021-10-04"},{"lineNumber":179,"author":{"gitId":"bryanwee023"},"content":"            return itemsAdded.stream().anyMatch(item::isSameItem);","lastModifiedDate":"2021-10-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"bryanwee023"},"content":"        public void addItem(Item item) {","lastModifiedDate":"2021-10-04"},{"lineNumber":184,"author":{"gitId":"bryanwee023"},"content":"            requireNonNull(item);","lastModifiedDate":"2021-10-04"},{"lineNumber":185,"author":{"gitId":"bryanwee023"},"content":"            itemsAdded.add(item);","lastModifiedDate":"2021-10-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"bryanwee023"},"content":"        public ReadOnlyInventory getInventory() {","lastModifiedDate":"2021-10-04"},{"lineNumber":190,"author":{"gitId":"bryanwee023"},"content":"            return new Inventory();","lastModifiedDate":"2021-10-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"bryanwee023":57,"-":137}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.TypicalItems.getTypicalInventory;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.Inventory;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"        Model model \u003d new ModelManager(getTypicalInventory(), new UserPrefs());","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalInventory(), new UserPrefs());","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"        expectedModel.setInventory(new Inventory());","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"bryanwee023":5,"-":27}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.Inventory;","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.testutil.EditItemDescriptorBuilder;","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"    public static final String VALID_NAME_BAGEL \u003d \"Bagel\";","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"    public static final String VALID_NAME_DONUT \u003d \"Donut\";","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"    public static final String VALID_ID_BAGEL \u003d \"#123456\";","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"    public static final String VALID_ID_DONUT \u003d \"#789012\";","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"    public static final String VALID_TAG_BAKED \u003d \"baked\";","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"    public static final String VALID_TAG_POPULAR \u003d \"popular\";","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"    public static final String NAME_DESC_BAGEL \u003d \" \" + PREFIX_NAME + VALID_NAME_BAGEL;","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"    public static final String NAME_DESC_DONUT \u003d \" \" + PREFIX_NAME + VALID_NAME_DONUT;","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"    public static final String ID_DESC_BAGEL \u003d \" \" + PREFIX_ID + VALID_ID_BAGEL;","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"    public static final String ID_DESC_DONUT \u003d \" \" + PREFIX_ID + VALID_ID_DONUT;","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"    public static final String TAG_DESC_BAKED \u003d \" \" + PREFIX_TAG + VALID_TAG_BAKED;","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"    public static final String TAG_DESC_POPULAR \u003d \" \" + PREFIX_TAG + VALID_TAG_POPULAR;","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"Cake\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"    public static final EditCommand.EditItemDescriptor DESC_BAGEL;","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"    public static final EditCommand.EditItemDescriptor DESC_DONUT;","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"        DESC_BAGEL \u003d new EditItemDescriptorBuilder().withName(VALID_NAME_BAGEL)","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"                .withId(VALID_ID_BAGEL).withTags(VALID_TAG_BAKED).build();","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"        DESC_DONUT \u003d new EditItemDescriptorBuilder().withName(VALID_NAME_DONUT)","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"                .withId(VALID_ID_DONUT).withTags(VALID_TAG_BAKED, VALID_TAG_POPULAR).build();","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"bryanwee023"},"content":"     * - the inventory, filtered item list and selected item in {@code actualModel} remain unchanged","lastModifiedDate":"2021-10-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"bryanwee023"},"content":"        Inventory expectedInventory \u003d new Inventory(actualModel.getInventory());","lastModifiedDate":"2021-10-04"},{"lineNumber":93,"author":{"gitId":"bryanwee023"},"content":"        List\u003cItem\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredItemList());","lastModifiedDate":"2021-10-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":96,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(expectedInventory, actualModel.getInventory());","lastModifiedDate":"2021-10-04"},{"lineNumber":97,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredItemList());","lastModifiedDate":"2021-10-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":100,"author":{"gitId":"bryanwee023"},"content":"     * Updates {@code model}\u0027s filtered list to show only the item at the given {@code targetIndex} in the","lastModifiedDate":"2021-10-04"},{"lineNumber":101,"author":{"gitId":"bryanwee023"},"content":"     * {@code model}\u0027s inventory.","lastModifiedDate":"2021-10-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":103,"author":{"gitId":"bryanwee023"},"content":"    public static void showItemAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-10-04"},{"lineNumber":104,"author":{"gitId":"bryanwee023"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredItemList().size());","lastModifiedDate":"2021-10-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":106,"author":{"gitId":"bryanwee023"},"content":"        Item person \u003d model.getFilteredItemList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":108,"author":{"gitId":"bryanwee023"},"content":"        model.updateFilteredItemList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-10-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":110,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(1, model.getFilteredItemList().size());","lastModifiedDate":"2021-10-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"bryanwee023":38,"-":75}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showItemAtIndex;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ITEM;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_ITEM;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.TypicalItems.getTypicalInventory;","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"    private Model model \u003d new ModelManager(getTypicalInventory(), new UserPrefs());","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"        Item itemToDelete \u003d model.getFilteredItemList().get(INDEX_FIRST_ITEM.getZeroBased());","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_ITEM);","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_ITEM_SUCCESS, itemToDelete);","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getInventory(), new UserPrefs());","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"        expectedModel.deleteItem(itemToDelete);","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredItemList().size() + 1);","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"        showItemAtIndex(model, INDEX_FIRST_ITEM);","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"        Item itemToDelete \u003d model.getFilteredItemList().get(INDEX_FIRST_ITEM.getZeroBased());","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_ITEM);","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_ITEM_SUCCESS, itemToDelete);","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"        Model expectedModel \u003d new ModelManager(model.getInventory(), new UserPrefs());","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"        expectedModel.deleteItem(itemToDelete);","lastModifiedDate":"2021-10-04"},{"lineNumber":61,"author":{"gitId":"bryanwee023"},"content":"        showNoItem(expectedModel);","lastModifiedDate":"2021-10-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"bryanwee023"},"content":"        showItemAtIndex(model, INDEX_FIRST_ITEM);","lastModifiedDate":"2021-10-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"bryanwee023"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_ITEM;","lastModifiedDate":"2021-10-04"},{"lineNumber":71,"author":{"gitId":"bryanwee023"},"content":"        // ensures that outOfBoundIndex is still in bounds of inventory list","lastModifiedDate":"2021-10-04"},{"lineNumber":72,"author":{"gitId":"bryanwee023"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getInventory().getItemList().size());","lastModifiedDate":"2021-10-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"bryanwee023"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"bryanwee023"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_ITEM);","lastModifiedDate":"2021-10-04"},{"lineNumber":82,"author":{"gitId":"bryanwee023"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_ITEM);","lastModifiedDate":"2021-10-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"bryanwee023"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_ITEM);","lastModifiedDate":"2021-10-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"bryanwee023"},"content":"        // different item -\u003e returns false","lastModifiedDate":"2021-10-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"bryanwee023"},"content":"    private void showNoItem(Model model) {","lastModifiedDate":"2021-10-04"},{"lineNumber":105,"author":{"gitId":"bryanwee023"},"content":"        model.updateFilteredItemList(p -\u003e false);","lastModifiedDate":"2021-10-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"bryanwee023"},"content":"        assertTrue(model.getFilteredItemList().isEmpty());","lastModifiedDate":"2021-10-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"bryanwee023":32,"-":77}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BAGEL;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_DONUT;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_DONUT;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_BAKED;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showItemAtIndex;","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ITEM;","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_ITEM;","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.TypicalItems.getTypicalInventory;","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.logic.commands.EditCommand.EditItemDescriptor;","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.Inventory;","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.testutil.EditItemDescriptorBuilder;","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.testutil.ItemBuilder;","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"    private Model model \u003d new ModelManager(getTypicalInventory(), new UserPrefs());","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"        Item editedItem \u003d new ItemBuilder().build();","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"        EditItemDescriptor descriptor \u003d new EditItemDescriptorBuilder(editedItem).build();","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_ITEM, descriptor);","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_ITEM_SUCCESS, editedItem);","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"        Model expectedModel \u003d new ModelManager(new Inventory(model.getInventory()), new UserPrefs());","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"        expectedModel.setItem(model.getFilteredItemList().get(0), editedItem);","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"        Index indexLastItem \u003d Index.fromOneBased(model.getFilteredItemList().size());","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"        Item lastItem \u003d model.getFilteredItemList().get(indexLastItem.getZeroBased());","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"        ItemBuilder itemInList \u003d new ItemBuilder(lastItem);","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"        Item editedItem \u003d itemInList.withName(VALID_NAME_DONUT).withTags(VALID_TAG_BAKED).build();","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"        EditItemDescriptor descriptor \u003d new EditItemDescriptorBuilder().withName(VALID_NAME_DONUT)","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"                .withTags(VALID_TAG_BAKED).build();","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastItem, descriptor);","lastModifiedDate":"2021-10-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"bryanwee023"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_ITEM_SUCCESS, editedItem);","lastModifiedDate":"2021-10-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"        Model expectedModel \u003d new ModelManager(new Inventory(model.getInventory()), new UserPrefs());","lastModifiedDate":"2021-10-04"},{"lineNumber":65,"author":{"gitId":"bryanwee023"},"content":"        expectedModel.setItem(lastItem, editedItem);","lastModifiedDate":"2021-10-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"bryanwee023"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_ITEM, new EditItemDescriptor());","lastModifiedDate":"2021-10-04"},{"lineNumber":73,"author":{"gitId":"bryanwee023"},"content":"        Item editedItem \u003d model.getFilteredItemList().get(INDEX_FIRST_ITEM.getZeroBased());","lastModifiedDate":"2021-10-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"bryanwee023"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_ITEM_SUCCESS, editedItem);","lastModifiedDate":"2021-10-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"bryanwee023"},"content":"        Model expectedModel \u003d new ModelManager(new Inventory(model.getInventory()), new UserPrefs());","lastModifiedDate":"2021-10-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"bryanwee023"},"content":"        showItemAtIndex(model, INDEX_FIRST_ITEM);","lastModifiedDate":"2021-10-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"bryanwee023"},"content":"        Item itemInFilteredList \u003d model.getFilteredItemList().get(INDEX_FIRST_ITEM.getZeroBased());","lastModifiedDate":"2021-10-04"},{"lineNumber":87,"author":{"gitId":"bryanwee023"},"content":"        Item editedItem \u003d new ItemBuilder(itemInFilteredList).withName(VALID_NAME_DONUT).build();","lastModifiedDate":"2021-10-04"},{"lineNumber":88,"author":{"gitId":"bryanwee023"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_ITEM,","lastModifiedDate":"2021-10-04"},{"lineNumber":89,"author":{"gitId":"bryanwee023"},"content":"                new EditItemDescriptorBuilder().withName(VALID_NAME_DONUT).build());","lastModifiedDate":"2021-10-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"bryanwee023"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_ITEM_SUCCESS, editedItem);","lastModifiedDate":"2021-10-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"bryanwee023"},"content":"        Model expectedModel \u003d new ModelManager(new Inventory(model.getInventory()), new UserPrefs());","lastModifiedDate":"2021-10-04"},{"lineNumber":94,"author":{"gitId":"bryanwee023"},"content":"        expectedModel.setItem(model.getFilteredItemList().get(0), editedItem);","lastModifiedDate":"2021-10-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"bryanwee023"},"content":"    public void execute_duplicateItemUnfilteredList_failure() {","lastModifiedDate":"2021-10-04"},{"lineNumber":101,"author":{"gitId":"bryanwee023"},"content":"        Item firstItem \u003d model.getFilteredItemList().get(INDEX_FIRST_ITEM.getZeroBased());","lastModifiedDate":"2021-10-04"},{"lineNumber":102,"author":{"gitId":"bryanwee023"},"content":"        EditItemDescriptor descriptor \u003d new EditItemDescriptorBuilder(firstItem).build();","lastModifiedDate":"2021-10-04"},{"lineNumber":103,"author":{"gitId":"bryanwee023"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_ITEM, descriptor);","lastModifiedDate":"2021-10-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"bryanwee023"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_ITEM);","lastModifiedDate":"2021-10-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"bryanwee023"},"content":"    public void execute_duplicateItemFilteredList_failure() {","lastModifiedDate":"2021-10-04"},{"lineNumber":110,"author":{"gitId":"bryanwee023"},"content":"        showItemAtIndex(model, INDEX_FIRST_ITEM);","lastModifiedDate":"2021-10-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":112,"author":{"gitId":"bryanwee023"},"content":"        // edit item in filtered list into a duplicate in inventory","lastModifiedDate":"2021-10-04"},{"lineNumber":113,"author":{"gitId":"bryanwee023"},"content":"        Item itemInList \u003d model.getInventory().getItemList().get(INDEX_SECOND_ITEM.getZeroBased());","lastModifiedDate":"2021-10-04"},{"lineNumber":114,"author":{"gitId":"bryanwee023"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_ITEM,","lastModifiedDate":"2021-10-04"},{"lineNumber":115,"author":{"gitId":"bryanwee023"},"content":"                new EditItemDescriptorBuilder(itemInList).build());","lastModifiedDate":"2021-10-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"bryanwee023"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_ITEM);","lastModifiedDate":"2021-10-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"bryanwee023"},"content":"    public void execute_invalidItemIndexUnfilteredList_failure() {","lastModifiedDate":"2021-10-04"},{"lineNumber":122,"author":{"gitId":"bryanwee023"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredItemList().size() + 1);","lastModifiedDate":"2021-10-04"},{"lineNumber":123,"author":{"gitId":"bryanwee023"},"content":"        EditItemDescriptor descriptor \u003d new EditItemDescriptorBuilder().withName(VALID_NAME_DONUT).build();","lastModifiedDate":"2021-10-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"bryanwee023"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"bryanwee023"},"content":"     * but smaller than size of inventory","lastModifiedDate":"2021-10-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"bryanwee023"},"content":"    public void execute_invalidItemIndexFilteredList_failure() {","lastModifiedDate":"2021-10-04"},{"lineNumber":135,"author":{"gitId":"bryanwee023"},"content":"        showItemAtIndex(model, INDEX_FIRST_ITEM);","lastModifiedDate":"2021-10-04"},{"lineNumber":136,"author":{"gitId":"bryanwee023"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_ITEM;","lastModifiedDate":"2021-10-04"},{"lineNumber":137,"author":{"gitId":"bryanwee023"},"content":"        // ensures that outOfBoundIndex is still in bounds of inventory list","lastModifiedDate":"2021-10-04"},{"lineNumber":138,"author":{"gitId":"bryanwee023"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getInventory().getItemList().size());","lastModifiedDate":"2021-10-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"bryanwee023"},"content":"                new EditItemDescriptorBuilder().withName(VALID_NAME_DONUT).build());","lastModifiedDate":"2021-10-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"bryanwee023"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"bryanwee023"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_ITEM, DESC_BAGEL);","lastModifiedDate":"2021-10-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"bryanwee023"},"content":"        EditItemDescriptor copyDescriptor \u003d new EditItemDescriptor(DESC_BAGEL);","lastModifiedDate":"2021-10-04"},{"lineNumber":152,"author":{"gitId":"bryanwee023"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_ITEM, copyDescriptor);","lastModifiedDate":"2021-10-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_ITEM, DESC_BAGEL)));","lastModifiedDate":"2021-10-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_ITEM, DESC_DONUT)));","lastModifiedDate":"2021-10-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"bryanwee023":71,"-":100}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_ITEMS_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.TypicalItems.CHOCOCHIP;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.TypicalItems.EGGNOG;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.TypicalItems.FOREST_CAKE;","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.TypicalItems.getTypicalInventory;","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"    private Model model \u003d new ModelManager(getTypicalInventory(), new UserPrefs());","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalInventory(), new UserPrefs());","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"        // different item -\u003e returns false","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"    public void execute_zeroKeywords_noItemFound() {","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ITEMS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"bryanwee023"},"content":"        expectedModel.updateFilteredItemList(predicate);","lastModifiedDate":"2021-10-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredItemList());","lastModifiedDate":"2021-10-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"bryanwee023"},"content":"    public void execute_multipleKeywords_multipleItemsFound() {","lastModifiedDate":"2021-10-04"},{"lineNumber":69,"author":{"gitId":"bryanwee023"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ITEMS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-10-04"},{"lineNumber":70,"author":{"gitId":"bryanwee023"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Chocolate Egg Forest\");","lastModifiedDate":"2021-10-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"bryanwee023"},"content":"        expectedModel.updateFilteredItemList(predicate);","lastModifiedDate":"2021-10-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(Arrays.asList(CHOCOCHIP, EGGNOG, FOREST_CAKE), model.getFilteredItemList());","lastModifiedDate":"2021-10-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"bryanwee023":18,"-":65}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showItemAtIndex;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ITEM;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.TypicalItems.getTypicalInventory;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"        model \u003d new ModelManager(getTypicalInventory(), new UserPrefs());","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"        expectedModel \u003d new ModelManager(model.getInventory(), new UserPrefs());","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"        showItemAtIndex(model, INDEX_FIRST_ITEM);","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"bryanwee023":6,"-":33}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ID_DESC_BAGEL;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ID_DESC_DONUT;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BAGEL;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_DONUT;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_BAKED;","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_POPULAR;","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_BAGEL;","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BAGEL;","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_BAKED;","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_POPULAR;","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.TypicalItems.BAGEL;","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.Name;","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.testutil.ItemBuilder;","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"        Item expectedItem \u003d new ItemBuilder(BAGEL).withTags(VALID_TAG_BAKED).build();","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BAGEL + ID_DESC_BAGEL","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"                + TAG_DESC_BAKED, new AddCommand(expectedItem));","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"        assertParseSuccess(parser, NAME_DESC_DONUT + NAME_DESC_BAGEL + ID_DESC_BAGEL","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"                + TAG_DESC_BAKED, new AddCommand(expectedItem));","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"        // multiple phones - last id accepted","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"        assertParseSuccess(parser, NAME_DESC_BAGEL + ID_DESC_DONUT + ID_DESC_BAGEL","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"                + TAG_DESC_BAKED, new AddCommand(expectedItem));","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"        Item expectedItemMultipleTags \u003d new ItemBuilder(BAGEL).withTags(VALID_TAG_POPULAR, VALID_TAG_BAKED)","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"        assertParseSuccess(parser, NAME_DESC_BAGEL + ID_DESC_BAGEL","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"                + TAG_DESC_POPULAR + TAG_DESC_BAKED, new AddCommand(expectedItemMultipleTags));","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"        Item expectedItem \u003d new ItemBuilder(BAGEL).withTags().build();","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"        assertParseSuccess(parser, NAME_DESC_BAGEL + ID_DESC_BAGEL,","lastModifiedDate":"2021-10-04"},{"lineNumber":61,"author":{"gitId":"bryanwee023"},"content":"                new AddCommand(expectedItem));","lastModifiedDate":"2021-10-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"bryanwee023"},"content":"        assertParseFailure(parser, VALID_NAME_BAGEL + ID_DESC_BAGEL, expectedMessage);","lastModifiedDate":"2021-10-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"bryanwee023"},"content":"        // missing id prefix","lastModifiedDate":"2021-10-04"},{"lineNumber":72,"author":{"gitId":"bryanwee023"},"content":"        assertParseFailure(parser, NAME_DESC_BAGEL + VALID_ID_BAGEL, expectedMessage);","lastModifiedDate":"2021-10-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"bryanwee023"},"content":"        assertParseFailure(parser, VALID_NAME_BAGEL + VALID_ID_BAGEL, expectedMessage);","lastModifiedDate":"2021-10-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"bryanwee023"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + ID_DESC_BAGEL","lastModifiedDate":"2021-10-04"},{"lineNumber":82,"author":{"gitId":"bryanwee023"},"content":"                + TAG_DESC_POPULAR + TAG_DESC_BAKED, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"bryanwee023"},"content":"        assertParseFailure(parser, NAME_DESC_BAGEL + ID_DESC_BAGEL","lastModifiedDate":"2021-10-04"},{"lineNumber":86,"author":{"gitId":"bryanwee023"},"content":"                + INVALID_TAG_DESC + VALID_TAG_BAKED, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"bryanwee023"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + ID_DESC_BAGEL","lastModifiedDate":"2021-10-04"},{"lineNumber":90,"author":{"gitId":"bryanwee023"},"content":"                + INVALID_TAG_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":93,"author":{"gitId":"bryanwee023"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BAGEL + ID_DESC_BAGEL","lastModifiedDate":"2021-10-04"},{"lineNumber":94,"author":{"gitId":"bryanwee023"},"content":"                + TAG_DESC_BAKED + TAG_DESC_POPULAR,","lastModifiedDate":"2021-10-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"bryanwee023":40,"-":57}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ITEM;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.logic.commands.EditCommand.EditItemDescriptor;","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.testutil.EditItemDescriptorBuilder;","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.testutil.ItemBuilder;","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.testutil.ItemUtil;","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"        Item item \u003d new ItemBuilder().build();","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(ItemUtil.getAddCommand(item));","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(new AddCommand(item), command);","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_ITEM.getOneBased());","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_ITEM), command);","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"        Item item \u003d new ItemBuilder().build();","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"        EditItemDescriptor descriptor \u003d new EditItemDescriptorBuilder(item).build();","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"bryanwee023"},"content":"                + INDEX_FIRST_ITEM.getOneBased() + \" \" + ItemUtil.getEditItemDescriptorDetails(descriptor));","lastModifiedDate":"2021-10-04"},{"lineNumber":62,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_ITEM, descriptor), command);","lastModifiedDate":"2021-10-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"bryanwee023":16,"-":85}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ITEM;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_ITEM));","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"bryanwee023":2,"-":30}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ID_DESC_BAGEL;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ID_DESC_DONUT;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BAGEL;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_DONUT;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_BAKED;","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_POPULAR;","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_BAGEL;","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_DONUT;","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BAGEL;","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_DONUT;","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_BAKED;","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_POPULAR;","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ITEM;","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_ITEM;","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_ITEM;","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.logic.commands.EditCommand.EditItemDescriptor;","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.Name;","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.testutil.EditItemDescriptorBuilder;","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"        assertParseFailure(parser, VALID_NAME_BAGEL, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_BAGEL, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":61,"author":{"gitId":"bryanwee023"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_BAGEL, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"bryanwee023"},"content":"        // invalid name followed by valid id","lastModifiedDate":"2021-10-04"},{"lineNumber":76,"author":{"gitId":"bryanwee023"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + VALID_ID_BAGEL, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"bryanwee023"},"content":"        // valid id followed by invalid name. The test case for invalid name followed by valid name","lastModifiedDate":"2021-10-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"bryanwee023"},"content":"        assertParseFailure(parser, \"1\" + ID_DESC_BAGEL + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"bryanwee023"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Item} being edited,","lastModifiedDate":"2021-10-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"bryanwee023"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_BAKED + TAG_DESC_POPULAR + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-04"},{"lineNumber":85,"author":{"gitId":"bryanwee023"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_BAKED + TAG_EMPTY + TAG_DESC_POPULAR, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-04"},{"lineNumber":86,"author":{"gitId":"bryanwee023"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_BAKED + TAG_DESC_POPULAR, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"bryanwee023"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_TAG_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"bryanwee023"},"content":"        Index targetIndex \u003d INDEX_SECOND_ITEM;","lastModifiedDate":"2021-10-04"},{"lineNumber":95,"author":{"gitId":"bryanwee023"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_BAGEL + ID_DESC_BAGEL","lastModifiedDate":"2021-10-04"},{"lineNumber":96,"author":{"gitId":"bryanwee023"},"content":"                + TAG_DESC_BAKED + TAG_DESC_POPULAR;","lastModifiedDate":"2021-10-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"bryanwee023"},"content":"        EditItemDescriptor descriptor \u003d new EditItemDescriptorBuilder().withName(VALID_NAME_BAGEL)","lastModifiedDate":"2021-10-04"},{"lineNumber":99,"author":{"gitId":"bryanwee023"},"content":"                .withId(VALID_ID_BAGEL).withTags(VALID_TAG_BAKED, VALID_TAG_POPULAR).build();","lastModifiedDate":"2021-10-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"bryanwee023"},"content":"        Index targetIndex \u003d INDEX_FIRST_ITEM;","lastModifiedDate":"2021-10-04"},{"lineNumber":108,"author":{"gitId":"bryanwee023"},"content":"        String userInput \u003d targetIndex.getOneBased() + ID_DESC_BAGEL + TAG_DESC_POPULAR;","lastModifiedDate":"2021-10-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"bryanwee023"},"content":"        EditItemDescriptor descriptor \u003d new EditItemDescriptorBuilder()","lastModifiedDate":"2021-10-04"},{"lineNumber":111,"author":{"gitId":"bryanwee023"},"content":"                .withId(VALID_ID_BAGEL).withTags(VALID_TAG_POPULAR).build();","lastModifiedDate":"2021-10-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"bryanwee023"},"content":"        Index targetIndex \u003d INDEX_THIRD_ITEM;","lastModifiedDate":"2021-10-04"},{"lineNumber":121,"author":{"gitId":"bryanwee023"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_BAGEL;","lastModifiedDate":"2021-10-04"},{"lineNumber":122,"author":{"gitId":"bryanwee023"},"content":"        EditItemDescriptor descriptor \u003d new EditItemDescriptorBuilder().withName(VALID_NAME_BAGEL).build();","lastModifiedDate":"2021-10-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"bryanwee023"},"content":"        // id","lastModifiedDate":"2021-10-04"},{"lineNumber":127,"author":{"gitId":"bryanwee023"},"content":"        userInput \u003d targetIndex.getOneBased() + ID_DESC_BAGEL;","lastModifiedDate":"2021-10-04"},{"lineNumber":128,"author":{"gitId":"bryanwee023"},"content":"        descriptor \u003d new EditItemDescriptorBuilder().withId(VALID_ID_BAGEL).build();","lastModifiedDate":"2021-10-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"bryanwee023"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_POPULAR;","lastModifiedDate":"2021-10-04"},{"lineNumber":134,"author":{"gitId":"bryanwee023"},"content":"        descriptor \u003d new EditItemDescriptorBuilder().withTags(VALID_TAG_POPULAR).build();","lastModifiedDate":"2021-10-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":141,"author":{"gitId":"bryanwee023"},"content":"        Index targetIndex \u003d INDEX_FIRST_ITEM;","lastModifiedDate":"2021-10-04"},{"lineNumber":142,"author":{"gitId":"bryanwee023"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_BAGEL + ID_DESC_BAGEL + ID_DESC_DONUT","lastModifiedDate":"2021-10-04"},{"lineNumber":143,"author":{"gitId":"bryanwee023"},"content":"                + TAG_DESC_BAKED + NAME_DESC_DONUT + TAG_DESC_POPULAR;","lastModifiedDate":"2021-10-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"bryanwee023"},"content":"        EditItemDescriptor descriptor \u003d new EditItemDescriptorBuilder().withName(VALID_NAME_DONUT)","lastModifiedDate":"2021-10-04"},{"lineNumber":146,"author":{"gitId":"bryanwee023"},"content":"                .withId(VALID_ID_DONUT).withTags(VALID_TAG_BAKED, VALID_TAG_POPULAR)","lastModifiedDate":"2021-10-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"bryanwee023"},"content":"        Index targetIndex \u003d INDEX_FIRST_ITEM;","lastModifiedDate":"2021-10-04"},{"lineNumber":157,"author":{"gitId":"bryanwee023"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_NAME_DESC + NAME_DESC_BAGEL;","lastModifiedDate":"2021-10-04"},{"lineNumber":158,"author":{"gitId":"bryanwee023"},"content":"        EditItemDescriptor descriptor \u003d new EditItemDescriptorBuilder().withName(VALID_NAME_BAGEL).build();","lastModifiedDate":"2021-10-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"bryanwee023"},"content":"        userInput \u003d targetIndex.getOneBased() + ID_DESC_DONUT + INVALID_NAME_DESC + NAME_DESC_DONUT","lastModifiedDate":"2021-10-04"},{"lineNumber":164,"author":{"gitId":"bryanwee023"},"content":"                + TAG_DESC_POPULAR;","lastModifiedDate":"2021-10-04"},{"lineNumber":165,"author":{"gitId":"bryanwee023"},"content":"        descriptor \u003d new EditItemDescriptorBuilder().withName(VALID_NAME_DONUT).withId(VALID_ID_DONUT)","lastModifiedDate":"2021-10-04"},{"lineNumber":166,"author":{"gitId":"bryanwee023"},"content":"                .withTags(VALID_TAG_POPULAR).build();","lastModifiedDate":"2021-10-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":173,"author":{"gitId":"bryanwee023"},"content":"        Index targetIndex \u003d INDEX_THIRD_ITEM;","lastModifiedDate":"2021-10-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"bryanwee023"},"content":"        EditItemDescriptor descriptor \u003d new EditItemDescriptorBuilder().withTags().build();","lastModifiedDate":"2021-10-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"bryanwee023":61,"-":120}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"bryanwee023":1,"-":33}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ITEM;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.Name;","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"    private static final String INVALID_NAME \u003d \"Pudding^\";","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"    private static final String INVALID_TAG \u003d \"#nice\";","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"    private static final String VALID_NAME \u003d \"Pudding\";","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"    private static final String VALID_TAG_1 \u003d \"nice\";","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"    private static final String VALID_TAG_2 \u003d \"sweet\";","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(INDEX_FIRST_ITEM, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(INDEX_FIRST_ITEM, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"bryanwee023":10,"-":108}},{"path":"src/test/java/seedu/address/model/InventoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.model;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_POPULAR;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.TypicalItems.APPLE_PIE;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.TypicalItems.getTypicalInventory;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"import java.util.Collection;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"import java.util.List;","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.exceptions.DuplicateItemException;","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.testutil.ItemBuilder;","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"public class InventoryTest {","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"    private final Inventory inventory \u003d new Inventory();","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"    public void constructor() {","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(Collections.emptyList(), inventory.getItemList());","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(NullPointerException.class, () -\u003e inventory.resetData(null));","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"    public void resetData_withValidReadOnlyInventory_replacesData() {","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"        Inventory newData \u003d getTypicalInventory();","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"        inventory.resetData(newData);","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(newData, inventory);","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"        Item editedPie \u003d new ItemBuilder(APPLE_PIE).withTags(VALID_TAG_POPULAR).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"        List\u003cItem\u003e newItems \u003d Arrays.asList(APPLE_PIE, editedPie);","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"        InventoryStub newData \u003d new InventoryStub(newItems);","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(DuplicateItemException.class, () -\u003e inventory.resetData(newData));","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"    public void hasItem_nullItem_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(NullPointerException.class, () -\u003e inventory.hasItem(null));","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"bryanwee023"},"content":"    public void hasInventory_itemNotInInventory_returnsFalse() {","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(inventory.hasItem(APPLE_PIE));","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"bryanwee023"},"content":"    public void hasItem_itemInInventory_returnsTrue() {","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"bryanwee023"},"content":"        inventory.addItem(APPLE_PIE);","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"bryanwee023"},"content":"        assertTrue(inventory.hasItem(APPLE_PIE));","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"bryanwee023"},"content":"    public void hasItem_itemWithSameIdentityFieldsInInventory_returnsTrue() {","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"bryanwee023"},"content":"        inventory.addItem(APPLE_PIE);","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"bryanwee023"},"content":"        Item editedPie \u003d new ItemBuilder(APPLE_PIE).withTags(VALID_TAG_POPULAR).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"bryanwee023"},"content":"        assertTrue(inventory.hasItem(editedPie));","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"bryanwee023"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e inventory.getItemList().remove(0));","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"bryanwee023"},"content":"     * A stub ReadOnlyInventory whose item list can violate interface constraints.","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":86,"author":{"gitId":"bryanwee023"},"content":"    private static class InventoryStub implements ReadOnlyInventory {","lastModifiedDate":"2021-10-01"},{"lineNumber":87,"author":{"gitId":"bryanwee023"},"content":"        private final ObservableList\u003cItem\u003e items \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-01"},{"lineNumber":88,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":89,"author":{"gitId":"bryanwee023"},"content":"        InventoryStub(Collection\u003cItem\u003e items) {","lastModifiedDate":"2021-10-01"},{"lineNumber":90,"author":{"gitId":"bryanwee023"},"content":"            this.items.setAll(items);","lastModifiedDate":"2021-10-01"},{"lineNumber":91,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":92,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":93,"author":{"gitId":"bryanwee023"},"content":"        @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":94,"author":{"gitId":"bryanwee023"},"content":"        public ObservableList\u003cItem\u003e getItemList() {","lastModifiedDate":"2021-10-01"},{"lineNumber":95,"author":{"gitId":"bryanwee023"},"content":"            return items;","lastModifiedDate":"2021-10-01"},{"lineNumber":96,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":97,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":98,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":99,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"bryanwee023":99}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_ITEMS;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.TypicalItems.APPLE_PIE;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.TypicalItems.BANANA_MUFFIN;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.testutil.InventoryBuilder;","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(new Inventory(), new Inventory(modelManager.getInventory()));","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"        userPrefs.setInventoryFilePath(Paths.get(\"inventory/file/path\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"        userPrefs.setInventoryFilePath(Paths.get(\"new/inventory/file/path\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"    public void setInventoryFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-10-04"},{"lineNumber":65,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setInventoryFilePath(null));","lastModifiedDate":"2021-10-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"bryanwee023"},"content":"    public void setInventoryFilePath_validPath_setsInventoryFilePath() {","lastModifiedDate":"2021-10-04"},{"lineNumber":70,"author":{"gitId":"bryanwee023"},"content":"        Path path \u003d Paths.get(\"inventory/file/path\");","lastModifiedDate":"2021-10-04"},{"lineNumber":71,"author":{"gitId":"bryanwee023"},"content":"        modelManager.setInventoryFilePath(path);","lastModifiedDate":"2021-10-04"},{"lineNumber":72,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(path, modelManager.getInventoryFilePath());","lastModifiedDate":"2021-10-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"bryanwee023"},"content":"    public void hasItem_nullItem_throwsNullPointerException() {","lastModifiedDate":"2021-10-04"},{"lineNumber":77,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasItem(null));","lastModifiedDate":"2021-10-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"bryanwee023"},"content":"    public void hasItem_itemNotInInventory_returnsFalse() {","lastModifiedDate":"2021-10-04"},{"lineNumber":82,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(modelManager.hasItem(APPLE_PIE));","lastModifiedDate":"2021-10-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"bryanwee023"},"content":"    public void hasItem_itemInInventory_returnsTrue() {","lastModifiedDate":"2021-10-04"},{"lineNumber":87,"author":{"gitId":"bryanwee023"},"content":"        modelManager.addItem(APPLE_PIE);","lastModifiedDate":"2021-10-04"},{"lineNumber":88,"author":{"gitId":"bryanwee023"},"content":"        assertTrue(modelManager.hasItem(APPLE_PIE));","lastModifiedDate":"2021-10-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"bryanwee023"},"content":"    public void getFilteredItemList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-04"},{"lineNumber":93,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredItemList().remove(0));","lastModifiedDate":"2021-10-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"bryanwee023"},"content":"        Inventory inventory \u003d new InventoryBuilder().withItem(APPLE_PIE).withItem(BANANA_MUFFIN).build();","lastModifiedDate":"2021-10-04"},{"lineNumber":99,"author":{"gitId":"bryanwee023"},"content":"        Inventory differentInventory \u003d new Inventory();","lastModifiedDate":"2021-10-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"bryanwee023"},"content":"        modelManager \u003d new ModelManager(inventory, userPrefs);","lastModifiedDate":"2021-10-04"},{"lineNumber":104,"author":{"gitId":"bryanwee023"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(inventory, userPrefs);","lastModifiedDate":"2021-10-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"bryanwee023"},"content":"        // different inventory -\u003e returns false","lastModifiedDate":"2021-10-04"},{"lineNumber":117,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentInventory, userPrefs)));","lastModifiedDate":"2021-10-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"bryanwee023"},"content":"        String[] keywords \u003d APPLE_PIE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-10-04"},{"lineNumber":121,"author":{"gitId":"bryanwee023"},"content":"        modelManager.updateFilteredItemList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-10-04"},{"lineNumber":122,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(modelManager.equals(new ModelManager(inventory, userPrefs)));","lastModifiedDate":"2021-10-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"bryanwee023"},"content":"        modelManager.updateFilteredItemList(PREDICATE_SHOW_ALL_ITEMS);","lastModifiedDate":"2021-10-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"bryanwee023"},"content":"        differentUserPrefs.setInventoryFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":130,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(modelManager.equals(new ModelManager(inventory, differentUserPrefs)));","lastModifiedDate":"2021-10-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"bryanwee023":35,"-":97}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"    public void setInventoryFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setInventoryFilePath(null));","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"bryanwee023":2,"-":19}},{"path":"src/test/java/seedu/address/model/item/ItemTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.model.item;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_BAGEL;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BAGEL;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_POPULAR;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.TypicalItems.APPLE_PIE;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.TypicalItems.BAGEL;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.TypicalItems.BANANA_MUFFIN;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.testutil.ItemBuilder;","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"public class ItemTest {","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"        Item item \u003d new ItemBuilder().build();","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e item.getTags().remove(0));","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"    public void isSameItem() {","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"        assertTrue(APPLE_PIE.isSameItem(APPLE_PIE));","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(APPLE_PIE.isSameItem(null));","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"        // same name, different id, all other attributes different -\u003e returns true","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"        Item editedPie \u003d new ItemBuilder(APPLE_PIE).withId(\"#123456\").build();","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"        assertTrue(APPLE_PIE.isSameItem(editedPie));","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"        // different name, same id, all other attributes different -\u003e returns true","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"        editedPie \u003d new ItemBuilder(APPLE_PIE).withName(\"Cherry Pie\").build();","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"        assertTrue(APPLE_PIE.isSameItem(editedPie));","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"        // different name, different id, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"        editedPie \u003d new ItemBuilder(APPLE_PIE)","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"                .withName(VALID_NAME_BAGEL).withId(VALID_ID_BAGEL).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(APPLE_PIE.isSameItem(editedPie));","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"        Item editedBagel \u003d new ItemBuilder(BAGEL)","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"                .withName(VALID_NAME_BAGEL.toUpperCase()).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(BANANA_MUFFIN.isSameItem(editedBagel));","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"    public void equals() {","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"        Item pieCopy \u003d new ItemBuilder(APPLE_PIE).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"        assertTrue(APPLE_PIE.equals(pieCopy));","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"        assertTrue(APPLE_PIE.equals(APPLE_PIE));","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"bryanwee023"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(APPLE_PIE.equals(null));","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"bryanwee023"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(APPLE_PIE.equals(5));","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"bryanwee023"},"content":"        // different item -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(APPLE_PIE.equals(BANANA_MUFFIN));","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"bryanwee023"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"bryanwee023"},"content":"        Item editedPie \u003d new ItemBuilder(APPLE_PIE).withName(VALID_NAME_BAGEL).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(APPLE_PIE.equals(editedPie));","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"bryanwee023"},"content":"        // different id -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"bryanwee023"},"content":"        editedPie \u003d new ItemBuilder(APPLE_PIE).withId(VALID_ID_BAGEL).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(APPLE_PIE.equals(editedPie));","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"bryanwee023"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"bryanwee023"},"content":"        editedPie \u003d new ItemBuilder(APPLE_PIE).withTags(VALID_TAG_POPULAR).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(APPLE_PIE.equals(editedPie));","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"bryanwee023":83}},{"path":"src/test/java/seedu/address/model/item/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.model.item;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.testutil.ItemBuilder;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"        // different item -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Apple\"));","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"        assertTrue(predicate.test(new ItemBuilder().withName(\"Apple Pie\").build()));","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Banana\", \"Pie\"));","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"        assertTrue(predicate.test(new ItemBuilder().withName(\"Apple Pie\").build()));","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aPplE\", \"pIe\"));","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"        assertTrue(predicate.test(new ItemBuilder().withName(\"Apple Pie\").build()));","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(predicate.test(new ItemBuilder().withName(\"Apple Pie\").build()));","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"bryanwee023"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Chocochip\", \"Cookie\"));","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(predicate.test(new ItemBuilder().withName(\"Apple Pie Banana Muffin\").build()));","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"bryanwee023"},"content":"        // Keywords match id and tag, but does not match name","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"bryanwee023"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"#12345\", \"baked\"));","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(predicate.test(new ItemBuilder().withName(\"Apple Pie\").withId(\"#12345\").withTags(\"baked\").build()));","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"bryanwee023":15,"-":55}},{"path":"src/test/java/seedu/address/model/item/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.model.item;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(Name.isValidName(\"biscuit*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"        assertTrue(Name.isValidName(\"butter biscuit\")); // alphabets only","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"        assertTrue(Name.isValidName(\"100 plus\")); // alphanumeric characters","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"        assertTrue(Name.isValidName(\"Butter Biscuit\")); // with capital letters","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"        assertTrue(Name.isValidName(\"Butter Butter Butter Butter Butter Biscuit\")); // long names","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"bryanwee023":6,"-":34}},{"path":"src/test/java/seedu/address/model/item/UniqueItemListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.model.item;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_POPULAR;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.TypicalItems.APPLE_PIE;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.TypicalItems.BANANA_MUFFIN;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"import java.util.List;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.exceptions.DuplicateItemException;","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.exceptions.ItemNotFoundException;","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.testutil.ItemBuilder;","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"public class UniqueItemListTest {","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"    private final UniqueItemList uniqueItemList \u003d new UniqueItemList();","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"    public void contains_nullItem_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueItemList.contains(null));","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"    public void contains_itemNotInList_returnsFalse() {","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(uniqueItemList.contains(APPLE_PIE));","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"    public void contains_itemInList_returnsTrue() {","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"        uniqueItemList.add(APPLE_PIE);","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"        assertTrue(uniqueItemList.contains(APPLE_PIE));","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"    public void contains_itemWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"        uniqueItemList.add(APPLE_PIE);","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"        Item editedPie \u003d new ItemBuilder(APPLE_PIE).withTags(VALID_TAG_POPULAR)","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"                .build();","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"        assertTrue(uniqueItemList.contains(editedPie));","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"    public void add_nullItem_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueItemList.add(null));","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"    public void add_duplicateItem_throwsDuplicateItemException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"        uniqueItemList.add(APPLE_PIE);","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(DuplicateItemException.class, () -\u003e uniqueItemList.add(APPLE_PIE));","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"bryanwee023"},"content":"    public void setItem_nullTargetItem_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueItemList.setItem(null, APPLE_PIE));","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"bryanwee023"},"content":"    public void setItem_nullEditedItem_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueItemList.setItem(APPLE_PIE, null));","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"bryanwee023"},"content":"    public void setItem_targetItemNotInList_throwsItemNotFoundException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(ItemNotFoundException.class, () -\u003e uniqueItemList.setItem(APPLE_PIE, APPLE_PIE));","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"bryanwee023"},"content":"    public void setItem_editedItemIsSameItem_success() {","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"bryanwee023"},"content":"        uniqueItemList.add(APPLE_PIE);","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"bryanwee023"},"content":"        uniqueItemList.setItem(APPLE_PIE, APPLE_PIE);","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"bryanwee023"},"content":"        UniqueItemList expectedUniqueItemList \u003d new UniqueItemList();","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"bryanwee023"},"content":"        expectedUniqueItemList.add(APPLE_PIE);","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(expectedUniqueItemList, uniqueItemList);","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"bryanwee023"},"content":"    public void setItem_editedItemHasSameIdentity_success() {","lastModifiedDate":"2021-10-01"},{"lineNumber":86,"author":{"gitId":"bryanwee023"},"content":"        uniqueItemList.add(APPLE_PIE);","lastModifiedDate":"2021-10-01"},{"lineNumber":87,"author":{"gitId":"bryanwee023"},"content":"        Item editedPie \u003d new ItemBuilder(APPLE_PIE).withTags(VALID_TAG_POPULAR).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":88,"author":{"gitId":"bryanwee023"},"content":"        uniqueItemList.setItem(APPLE_PIE, editedPie);","lastModifiedDate":"2021-10-01"},{"lineNumber":89,"author":{"gitId":"bryanwee023"},"content":"        UniqueItemList expectedUniqueItemList \u003d new UniqueItemList();","lastModifiedDate":"2021-10-01"},{"lineNumber":90,"author":{"gitId":"bryanwee023"},"content":"        expectedUniqueItemList.add(editedPie);","lastModifiedDate":"2021-10-01"},{"lineNumber":91,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(expectedUniqueItemList, uniqueItemList);","lastModifiedDate":"2021-10-01"},{"lineNumber":92,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":93,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":94,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":95,"author":{"gitId":"bryanwee023"},"content":"    public void setItem_editedItemHasDifferentIdentity_success() {","lastModifiedDate":"2021-10-01"},{"lineNumber":96,"author":{"gitId":"bryanwee023"},"content":"        uniqueItemList.add(APPLE_PIE);","lastModifiedDate":"2021-10-01"},{"lineNumber":97,"author":{"gitId":"bryanwee023"},"content":"        uniqueItemList.setItem(APPLE_PIE, BANANA_MUFFIN);","lastModifiedDate":"2021-10-01"},{"lineNumber":98,"author":{"gitId":"bryanwee023"},"content":"        UniqueItemList expectedUniqueItemList \u003d new UniqueItemList();","lastModifiedDate":"2021-10-01"},{"lineNumber":99,"author":{"gitId":"bryanwee023"},"content":"        expectedUniqueItemList.add(BANANA_MUFFIN);","lastModifiedDate":"2021-10-01"},{"lineNumber":100,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(expectedUniqueItemList, uniqueItemList);","lastModifiedDate":"2021-10-01"},{"lineNumber":101,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":102,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":103,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":104,"author":{"gitId":"bryanwee023"},"content":"    public void setItem_editedItemHasNonUniqueIdentity_throwsDuplicateItemException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":105,"author":{"gitId":"bryanwee023"},"content":"        uniqueItemList.add(APPLE_PIE);","lastModifiedDate":"2021-10-01"},{"lineNumber":106,"author":{"gitId":"bryanwee023"},"content":"        uniqueItemList.add(BANANA_MUFFIN);","lastModifiedDate":"2021-10-01"},{"lineNumber":107,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(DuplicateItemException.class, () -\u003e uniqueItemList.setItem(APPLE_PIE, BANANA_MUFFIN));","lastModifiedDate":"2021-10-01"},{"lineNumber":108,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":109,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":110,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":111,"author":{"gitId":"bryanwee023"},"content":"    public void remove_nullItem_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":112,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueItemList.remove(null));","lastModifiedDate":"2021-10-01"},{"lineNumber":113,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":114,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":115,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":116,"author":{"gitId":"bryanwee023"},"content":"    public void remove_itemDoesNotExist_throwsItemNotFoundException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":117,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(ItemNotFoundException.class, () -\u003e uniqueItemList.remove(APPLE_PIE));","lastModifiedDate":"2021-10-01"},{"lineNumber":118,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":119,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":120,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":121,"author":{"gitId":"bryanwee023"},"content":"    public void remove_existingItem_removesItem() {","lastModifiedDate":"2021-10-01"},{"lineNumber":122,"author":{"gitId":"bryanwee023"},"content":"        uniqueItemList.add(APPLE_PIE);","lastModifiedDate":"2021-10-01"},{"lineNumber":123,"author":{"gitId":"bryanwee023"},"content":"        uniqueItemList.remove(APPLE_PIE);","lastModifiedDate":"2021-10-01"},{"lineNumber":124,"author":{"gitId":"bryanwee023"},"content":"        UniqueItemList expectedUniqueItemList \u003d new UniqueItemList();","lastModifiedDate":"2021-10-01"},{"lineNumber":125,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(expectedUniqueItemList, uniqueItemList);","lastModifiedDate":"2021-10-01"},{"lineNumber":126,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":127,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":128,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":129,"author":{"gitId":"bryanwee023"},"content":"    public void setItems_nullUniqueItemList_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":130,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueItemList.setItems((UniqueItemList) null));","lastModifiedDate":"2021-10-01"},{"lineNumber":131,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":132,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":133,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":134,"author":{"gitId":"bryanwee023"},"content":"    public void setItems_uniqueItemList_replacesOwnListWithProvidedUniqueItemList() {","lastModifiedDate":"2021-10-01"},{"lineNumber":135,"author":{"gitId":"bryanwee023"},"content":"        uniqueItemList.add(APPLE_PIE);","lastModifiedDate":"2021-10-01"},{"lineNumber":136,"author":{"gitId":"bryanwee023"},"content":"        UniqueItemList expectedUniqueItemList \u003d new UniqueItemList();","lastModifiedDate":"2021-10-01"},{"lineNumber":137,"author":{"gitId":"bryanwee023"},"content":"        uniqueItemList.add(BANANA_MUFFIN);","lastModifiedDate":"2021-10-01"},{"lineNumber":138,"author":{"gitId":"bryanwee023"},"content":"        this.uniqueItemList.setItems(expectedUniqueItemList);","lastModifiedDate":"2021-10-01"},{"lineNumber":139,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(expectedUniqueItemList, this.uniqueItemList);","lastModifiedDate":"2021-10-01"},{"lineNumber":140,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":141,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":142,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":143,"author":{"gitId":"bryanwee023"},"content":"    public void setItems_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":144,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueItemList.setItems((List\u003cItem\u003e) null));","lastModifiedDate":"2021-10-01"},{"lineNumber":145,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":146,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":147,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":148,"author":{"gitId":"bryanwee023"},"content":"    public void setItems_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-10-01"},{"lineNumber":149,"author":{"gitId":"bryanwee023"},"content":"        uniqueItemList.add(APPLE_PIE);","lastModifiedDate":"2021-10-01"},{"lineNumber":150,"author":{"gitId":"bryanwee023"},"content":"        List\u003cItem\u003e itemList \u003d Collections.singletonList(BANANA_MUFFIN);","lastModifiedDate":"2021-10-01"},{"lineNumber":151,"author":{"gitId":"bryanwee023"},"content":"        uniqueItemList.setItems(itemList);","lastModifiedDate":"2021-10-01"},{"lineNumber":152,"author":{"gitId":"bryanwee023"},"content":"        UniqueItemList expectedUniqueItemList \u003d new UniqueItemList();","lastModifiedDate":"2021-10-01"},{"lineNumber":153,"author":{"gitId":"bryanwee023"},"content":"        expectedUniqueItemList.add(BANANA_MUFFIN);","lastModifiedDate":"2021-10-01"},{"lineNumber":154,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(expectedUniqueItemList, uniqueItemList);","lastModifiedDate":"2021-10-01"},{"lineNumber":155,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":156,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":157,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":158,"author":{"gitId":"bryanwee023"},"content":"    public void setItems_listWithDuplicateItems_throwsDuplicateItemException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":159,"author":{"gitId":"bryanwee023"},"content":"        List\u003cItem\u003e listWithDuplicateItems \u003d Arrays.asList(APPLE_PIE, APPLE_PIE);","lastModifiedDate":"2021-10-01"},{"lineNumber":160,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(DuplicateItemException.class, () -\u003e uniqueItemList.setItems(listWithDuplicateItems));","lastModifiedDate":"2021-10-01"},{"lineNumber":161,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":162,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":163,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":164,"author":{"gitId":"bryanwee023"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":165,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-10-01"},{"lineNumber":166,"author":{"gitId":"bryanwee023"},"content":"            -\u003e uniqueItemList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-10-01"},{"lineNumber":167,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":168,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"bryanwee023":168}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedItemTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.storage.JsonAdaptedItem.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.TypicalItems.BANANA_MUFFIN;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"import java.util.List;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.Name;","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"public class JsonAdaptedItemTest {","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"    private static final String INVALID_NAME \u003d \"Chicken!\";","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"    private static final String INVALID_TAG \u003d \"#tasty\";","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"    private static final String VALID_NAME \u003d BANANA_MUFFIN.getName().toString();","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"    private static final String VALID_ID \u003d BANANA_MUFFIN.getId().toString();","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BANANA_MUFFIN.getTags().stream()","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"    public void toModelType_validItemDetails_returnsItem() throws Exception {","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"        JsonAdaptedItem item \u003d new JsonAdaptedItem(BANANA_MUFFIN);","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(BANANA_MUFFIN, item.toModelType());","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"        JsonAdaptedItem item \u003d","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"                new JsonAdaptedItem(INVALID_NAME, VALID_ID, VALID_TAGS);","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, item::toModelType);","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"        JsonAdaptedItem item \u003d new JsonAdaptedItem(null, VALID_ID, VALID_TAGS);","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, item::toModelType);","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"        JsonAdaptedItem item \u003d","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"                new JsonAdaptedItem(VALID_NAME, VALID_ID, invalidTags);","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(IllegalValueException.class, item::toModelType);","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"bryanwee023":57}},{"path":"src/test/java/seedu/address/storage/JsonInventoryStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.TypicalItems.APPLE_PIE;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.TypicalItems.HONEY_CAKE;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.TypicalItems.ICE_CREAM;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.TypicalItems.getTypicalInventory;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.Inventory;","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.ReadOnlyInventory;","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"public class JsonInventoryStorageTest {","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonInventoryStorageTest\");","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"    @TempDir","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"    public Path testFolder;","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"    public void readInventory_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(NullPointerException.class, () -\u003e readInventory(null));","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"    private java.util.Optional\u003cReadOnlyInventory\u003e readInventory(String filePath) throws Exception {","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"        return new JsonInventoryStorage(Paths.get(filePath)).readInventory(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"                : null;","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"        assertFalse(readInventory(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(DataConversionException.class, () -\u003e readInventory(\"notJsonFormatInventory.json\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"    public void readInventory_invalidItemInventory_throwDataConversionException() {","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(DataConversionException.class, () -\u003e readInventory(\"invalidItemInventory.json\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"    public void readInventory_invalidAndValidItemInventory_throwDataConversionException() {","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(DataConversionException.class, () -\u003e readInventory(\"invalidAndValidItemInventory.json\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":61,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":62,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":63,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"    public void readAndSaveInventory_allInOrder_success() throws Exception {","lastModifiedDate":"2021-10-04"},{"lineNumber":65,"author":{"gitId":"bryanwee023"},"content":"        Path filePath \u003d testFolder.resolve(\"TempInventory.json\");","lastModifiedDate":"2021-10-04"},{"lineNumber":66,"author":{"gitId":"bryanwee023"},"content":"        Inventory original \u003d getTypicalInventory();","lastModifiedDate":"2021-10-04"},{"lineNumber":67,"author":{"gitId":"bryanwee023"},"content":"        JsonInventoryStorage jsonInventoryStorage \u003d new JsonInventoryStorage(filePath);","lastModifiedDate":"2021-10-04"},{"lineNumber":68,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":69,"author":{"gitId":"bryanwee023"},"content":"        // Save in new file and read back","lastModifiedDate":"2021-10-04"},{"lineNumber":70,"author":{"gitId":"bryanwee023"},"content":"        jsonInventoryStorage.saveInventory(original, filePath);","lastModifiedDate":"2021-10-04"},{"lineNumber":71,"author":{"gitId":"bryanwee023"},"content":"        ReadOnlyInventory readBack \u003d jsonInventoryStorage.readInventory(filePath).get();","lastModifiedDate":"2021-10-04"},{"lineNumber":72,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(original, new Inventory(readBack));","lastModifiedDate":"2021-10-04"},{"lineNumber":73,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":74,"author":{"gitId":"bryanwee023"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2021-10-04"},{"lineNumber":75,"author":{"gitId":"bryanwee023"},"content":"        original.addItem(HONEY_CAKE);","lastModifiedDate":"2021-10-04"},{"lineNumber":76,"author":{"gitId":"bryanwee023"},"content":"        original.removeItem(APPLE_PIE);","lastModifiedDate":"2021-10-04"},{"lineNumber":77,"author":{"gitId":"bryanwee023"},"content":"        jsonInventoryStorage.saveInventory(original, filePath);","lastModifiedDate":"2021-10-04"},{"lineNumber":78,"author":{"gitId":"bryanwee023"},"content":"        readBack \u003d jsonInventoryStorage.readInventory(filePath).get();","lastModifiedDate":"2021-10-04"},{"lineNumber":79,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(original, new Inventory(readBack));","lastModifiedDate":"2021-10-04"},{"lineNumber":80,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":81,"author":{"gitId":"bryanwee023"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2021-10-04"},{"lineNumber":82,"author":{"gitId":"bryanwee023"},"content":"        original.addItem(ICE_CREAM);","lastModifiedDate":"2021-10-04"},{"lineNumber":83,"author":{"gitId":"bryanwee023"},"content":"        jsonInventoryStorage.saveInventory(original); // file path not specified","lastModifiedDate":"2021-10-04"},{"lineNumber":84,"author":{"gitId":"bryanwee023"},"content":"        readBack \u003d jsonInventoryStorage.readInventory().get(); // file path not specified","lastModifiedDate":"2021-10-04"},{"lineNumber":85,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(original, new Inventory(readBack));","lastModifiedDate":"2021-10-04"},{"lineNumber":86,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":87,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":88,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":89,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":90,"author":{"gitId":"bryanwee023"},"content":"    public void saveInventory_nullInventory_throwsNullPointerException() {","lastModifiedDate":"2021-10-04"},{"lineNumber":91,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveInventory(null, \"SomeFile.json\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":92,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":93,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":94,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":95,"author":{"gitId":"bryanwee023"},"content":"     * Saves {@code inventory} at the specified {@code filePath}.","lastModifiedDate":"2021-10-04"},{"lineNumber":96,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":97,"author":{"gitId":"bryanwee023"},"content":"    private void saveInventory(ReadOnlyInventory inventory, String filePath) {","lastModifiedDate":"2021-10-04"},{"lineNumber":98,"author":{"gitId":"bryanwee023"},"content":"        try {","lastModifiedDate":"2021-10-04"},{"lineNumber":99,"author":{"gitId":"bryanwee023"},"content":"            new JsonInventoryStorage(Paths.get(filePath))","lastModifiedDate":"2021-10-04"},{"lineNumber":100,"author":{"gitId":"bryanwee023"},"content":"                    .saveInventory(inventory, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-10-04"},{"lineNumber":101,"author":{"gitId":"bryanwee023"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-10-04"},{"lineNumber":102,"author":{"gitId":"bryanwee023"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2021-10-04"},{"lineNumber":103,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":104,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":105,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":106,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":107,"author":{"gitId":"bryanwee023"},"content":"    public void saveInventory_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-10-04"},{"lineNumber":108,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveInventory(new Inventory(), null));","lastModifiedDate":"2021-10-04"},{"lineNumber":109,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":110,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"bryanwee023":110}},{"path":"src/test/java/seedu/address/storage/JsonSerializableInventoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.Inventory;","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.testutil.TypicalItems;","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"public class JsonSerializableInventoryTest {","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableInventoryTest\");","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"    private static final Path TYPICAL_ITEMS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalItemInventory.json\");","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"    private static final Path INVALID_ITEM_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidItemInventory.json\");","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"    private static final Path DUPLICATE_ITEM_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateItemInventory.json\");","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"    public void toModelType_typicalItemsFile_success() throws Exception {","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"        JsonSerializableInventory dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_ITEMS_FILE,","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"                JsonSerializableInventory.class).get();","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"        Inventory inventoryFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"        Inventory typicalItemInventory \u003d TypicalItems.getTypicalInventory();","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(inventoryFromFile, typicalItemInventory);","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"    public void toModelType_invalidItemFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"        JsonSerializableInventory dataFromFile \u003d JsonUtil.readJsonFile(INVALID_ITEM_FILE,","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"                JsonSerializableInventory.class).get();","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"    public void toModelType_duplicateItems_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"        JsonSerializableInventory dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_ITEM_FILE,","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"                JsonSerializableInventory.class).get();","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableInventory.MESSAGE_DUPLICATE_ITEM,","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"bryanwee023":47}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"bryanwee023"},"content":"        userPrefs.setInventoryFilePath(Paths.get(\"inventory.json\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"bryanwee023":1,"-":122}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.testutil.TypicalItems.getTypicalInventory;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.Inventory;","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.ReadOnlyInventory;","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"        JsonInventoryStorage jsonInventoryStorage \u003d new JsonInventoryStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"        storageManager \u003d new StorageManager(jsonInventoryStorage, userPrefsStorage);","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"    public void inventoryReadSave() throws Exception {","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"         * {@link JsonInventoryStorage} class.","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonInventoryStorageTest} class.","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"        Inventory original \u003d getTypicalInventory();","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"        storageManager.saveInventory(original);","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"        ReadOnlyInventory retrieved \u003d storageManager.readInventory().get();","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"        assertEquals(original, new Inventory(retrieved));","lastModifiedDate":"2021-10-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"    public void getInventoryFilePath() {","lastModifiedDate":"2021-10-04"},{"lineNumber":65,"author":{"gitId":"bryanwee023"},"content":"        assertNotNull(storageManager.getInventoryFilePath());","lastModifiedDate":"2021-10-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bryanwee023":14,"-":54}},{"path":"src/test/java/seedu/address/testutil/EditItemDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.logic.commands.EditCommand.EditItemDescriptor;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.Name;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":" * A utility class to help with building EditItemDescriptor objects.","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"public class EditItemDescriptorBuilder {","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"    private EditItemDescriptor descriptor;","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"    public EditItemDescriptorBuilder() {","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"        descriptor \u003d new EditItemDescriptor();","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"    public EditItemDescriptorBuilder(EditItemDescriptor descriptor) {","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"        this.descriptor \u003d new EditItemDescriptor(descriptor);","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"     * Returns an {@code EditItemDescriptor} with fields containing {@code item}\u0027s details","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"    public EditItemDescriptorBuilder(Item item) {","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"        descriptor \u003d new EditItemDescriptor();","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"        descriptor.setName(item.getName());","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"        descriptor.setId(item.getId());","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"        descriptor.setTags(item.getTags());","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"     * Sets the {@code Name} of the {@code EditItemDescriptor} that we are building.","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"    public EditItemDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"        return this;","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"     * Sets the id of the {@code EditItemDescriptor} that we are building.","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"    public EditItemDescriptorBuilder withId(String id) {","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"        descriptor.setId(id);","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"        return this;","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditItemDescriptor}","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"     * that we are building.","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"    public EditItemDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"        return this;","lastModifiedDate":"2021-10-04"},{"lineNumber":61,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":62,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":63,"author":{"gitId":"bryanwee023"},"content":"    public EditItemDescriptor build() {","lastModifiedDate":"2021-10-04"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"        return descriptor;","lastModifiedDate":"2021-10-04"},{"lineNumber":65,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":66,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"bryanwee023":66}},{"path":"src/test/java/seedu/address/testutil/InventoryBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.Inventory;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":" * A utility class to help with building Inventory objects.","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":" *     {@code AddressBook ab \u003d new InventoryBuilder().withItem(\"Pie\", \"Pudding\").build();}","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"public class InventoryBuilder {","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"    private Inventory inventory;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"    public InventoryBuilder() {","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"        inventory \u003d new Inventory();","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"    public InventoryBuilder(Inventory inventory) {","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"        this.inventory \u003d inventory;","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"     * Adds a new {@code Item} to the {@code Inventory} that we are building.","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"    public InventoryBuilder withItem(Item item) {","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"        inventory.addItem(item);","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"        return this;","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"    public Inventory build() {","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"        return inventory;","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"bryanwee023":34}},{"path":"src/test/java/seedu/address/testutil/ItemBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.Name;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":" * A utility class to help with building Item objects.","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"public class ItemBuilder {","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":"    public static final String DEFAULT_NAME \u003d \"Cream Puff\";","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"    public static final String DEFAULT_ID \u003d \"#654321\";","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"    private Name name;","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"    private String id;","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"     * Creates a {@code ItemBuilder} with the default details.","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"    public ItemBuilder() {","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"        id \u003d DEFAULT_ID;","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"     * Initializes the ItemBuilder with the data of {@code itemToCopy}.","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"    public ItemBuilder(Item itemToCopy) {","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"        name \u003d itemToCopy.getName();","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"        id \u003d itemToCopy.getId();","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"        tags \u003d new HashSet\u003c\u003e(itemToCopy.getTags());","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"     * Sets the {@code Name} of the {@code Item} that we are building.","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"    public ItemBuilder withName(String name) {","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"        return this;","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"     * Sets the {@code id} of the {@code Item} that we are building.","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"    public ItemBuilder withId(String id) {","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"        this.id \u003d id;","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"        return this;","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Item} that we are building.","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"    public ItemBuilder withTags(String ... tags) {","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"bryanwee023"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"bryanwee023"},"content":"        return this;","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"bryanwee023"},"content":"    public Item build() {","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"bryanwee023"},"content":"        return new Item(name, id, tags);","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"bryanwee023":69}},{"path":"src/test/java/seedu/address/testutil/ItemUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.logic.commands.EditCommand.EditItemDescriptor;","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":" * A utility class for Item.","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":"public class ItemUtil {","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"     * Returns an add command string for adding the {@code item}.","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"    public static String getAddCommand(Item item) {","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getItemDetails(item);","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"     * Returns the part of command string for the given {@code item}\u0027s details.","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"    public static String getItemDetails(Item item) {","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"        sb.append(PREFIX_NAME + item.getName().fullName + \" \");","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"        sb.append(PREFIX_ID + item.getId() + \" \");","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"        item.getTags().stream().forEach(","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"        );","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"        return sb.toString();","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"     * Returns the part of command string for the given {@code EditItemDescriptor}\u0027s details.","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"    public static String getEditItemDescriptorDetails(EditItemDescriptor descriptor) {","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"        descriptor.getId().ifPresent(id -\u003e sb.append(PREFIX_ID).append(id).append(\" \"));","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"            } else {","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"            }","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"        return sb.toString();","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"bryanwee023":56}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"     * Returns the middle index of the item in the {@code model}\u0027s item list.","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"        return Index.fromOneBased(model.getFilteredItemList().size() / 2);","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"     * Returns the last index of the item in the {@code model}\u0027s item list.","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"        return Index.fromOneBased(model.getFilteredItemList().size());","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"     * Returns the item in the {@code model}\u0027s item list at {@code index}.","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"    public static Item getItem(Model model, Index index) {","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"        return model.getFilteredItemList().get(index.getZeroBased());","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bryanwee023":8,"-":47}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"    public static final Index INDEX_FIRST_ITEM \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"    public static final Index INDEX_SECOND_ITEM \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"    public static final Index INDEX_THIRD_ITEM \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"bryanwee023":3,"-":9}},{"path":"src/test/java/seedu/address/testutil/TypicalItems.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanwee023"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BAGEL;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_DONUT;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_BAKED;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"bryanwee023"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_POPULAR;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"bryanwee023"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"bryanwee023"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"bryanwee023"},"content":"import java.util.List;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.Inventory;","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"bryanwee023"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"bryanwee023"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"bryanwee023"},"content":" * A utility class containing a list of {@code Item} objects to be used in tests.","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"bryanwee023"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"bryanwee023"},"content":"public class TypicalItems {","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"bryanwee023"},"content":"    public static final Item APPLE_PIE \u003d new ItemBuilder().withName(\"Apple Pie\")","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"bryanwee023"},"content":"            .withId(\"#222222\")","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"bryanwee023"},"content":"            .withTags(\"baked\").build();","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"bryanwee023"},"content":"    public static final Item BANANA_MUFFIN \u003d new ItemBuilder().withName(\"Banana Muffin\")","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"bryanwee023"},"content":"            .withId(\"#333333\")","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"bryanwee023"},"content":"            .withTags(\"baked\", \"bestseller\").build();","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"bryanwee023"},"content":"    public static final Item CHOCOCHIP \u003d new ItemBuilder().withName(\"Chocolate Chip Cookie\")","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"bryanwee023"},"content":"            .withId(\"#444444\")","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"bryanwee023"},"content":"            .withTags(\"baked\").build();","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"bryanwee023"},"content":"    public static final Item DALGONA_COFFEE \u003d new ItemBuilder().withName(\"Dalgona Coffee\")","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"bryanwee023"},"content":"            .withId(\"#555555\").build();","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"bryanwee023"},"content":"    public static final Item EGGNOG \u003d new ItemBuilder().withName(\"Egg Nog\")","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"bryanwee023"},"content":"            .withId(\"#666666\").build();","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"bryanwee023"},"content":"    public static final Item FOREST_CAKE \u003d new ItemBuilder().withName(\"Forest Cake\")","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"bryanwee023"},"content":"            .withId(\"#777777\").build();","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"bryanwee023"},"content":"    public static final Item GRANOLA_BAR \u003d new ItemBuilder().withName(\"Granola Bar\")","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"bryanwee023"},"content":"            .withId(\"#888888\").build();","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"bryanwee023"},"content":"    // Manually added","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"bryanwee023"},"content":"    public static final Item HONEY_CAKE \u003d new ItemBuilder().withName(\"Honey Cake\").withId(\"#999999\").build();","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"bryanwee023"},"content":"    public static final Item ICE_CREAM \u003d new ItemBuilder().withName(\"Ice Cream\").withId(\"#000000\").build();","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"bryanwee023"},"content":"    // Manually added - Item\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"bryanwee023"},"content":"    public static final Item BAGEL \u003d new ItemBuilder()","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"bryanwee023"},"content":"            .withName(VALID_NAME_BAGEL).withId(\"#123456\").withTags(VALID_TAG_BAKED).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"bryanwee023"},"content":"    public static final Item DONUT \u003d new ItemBuilder()","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"bryanwee023"},"content":"            .withName(VALID_NAME_DONUT).withId(\"#789012\").withTags(VALID_TAG_BAKED, VALID_TAG_POPULAR)","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"bryanwee023"},"content":"            .build();","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"bryanwee023"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"bryanwee023"},"content":"    private TypicalItems() {} // prevents instantiation","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"bryanwee023"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"bryanwee023"},"content":"     * Returns an {@code Inventory} with all the typical items.","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"bryanwee023"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"bryanwee023"},"content":"    public static Inventory getTypicalInventory() {","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"bryanwee023"},"content":"        Inventory typicalInventory \u003d new Inventory();","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"bryanwee023"},"content":"        for (Item item : getTypicalItems()) {","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"bryanwee023"},"content":"            typicalInventory.addItem(item);","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"bryanwee023"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"bryanwee023"},"content":"        return typicalInventory;","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"bryanwee023"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"bryanwee023"},"content":"    public static List\u003cItem\u003e getTypicalItems() {","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"bryanwee023"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(APPLE_PIE, BANANA_MUFFIN, CHOCOCHIP,","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"bryanwee023"},"content":"                DALGONA_COFFEE, EGGNOG, FOREST_CAKE, GRANOLA_BAR));","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"bryanwee023"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"bryanwee023"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"bryanwee023":68}}]
