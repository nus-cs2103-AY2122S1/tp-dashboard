[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jianh0ng"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-T13-3/tp/actions/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-T13-3/tp/actions)","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"jianh0ng"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).\u003cbr/\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"jianh0ng"},"content":"The project is a desktop application (called Trace2Gather) used for managing a hotel,","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"jianh0ng"},"content":"for ease of tracking guests and rooms status for contact tracing.\u003cbr/\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"jianh0ng"},"content":"For the detailed documentation of this project, see the **[Address Book Product Website](https://ay2122s1-cs2103t-t13-3.github.io/tp/)**.","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"jianh0ng":5,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"jianh0ng"},"content":"    archiveName \u003d \u0027trace2gather.jar\u0027","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"jianh0ng"},"content":"run {","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"jianh0ng"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jianh0ng":3,"-":73}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"### Prof Damith \u0026 Abhiman Yadav","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"\u003cimg src\u003d\"images/johndoe.png\" width\u003d\"200px\"\u003e \u003cimg src\u003d\"images/johndoe.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[[homepage](http://www.comp.nus.edu.sg/~damithch)]","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"[[github](https://github.com/johndoe)]","lastModifiedDate":"2020-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Role: Project Advisor","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"darrenhoon"},"content":"### Darren Hoon","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"darrenhoon"},"content":"\u003cimg src\u003d\"images/darrenhoon.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"darrenhoon"},"content":"[[github](https://github.com/darrenhoon)]","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"darrenhoon"},"content":"[[portfolio](team/darren.md)]","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"darrenhoon"},"content":"* Role: Developer","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"darrenhoon"},"content":"* Responsibilities: DevOps, UI","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"darrenhoon"},"content":"### Liew Jian Hong","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"jianh0ng"},"content":"\u003cimg src\u003d\"images/jianh0ng.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"jianh0ng"},"content":"[[github](http://github.com/jianh0ng)] [[portfolio](team/jianhong.md)]","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"darrenhoon"},"content":"### Ye Pei Lin","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"peilinye"},"content":"\u003cimg src\u003d\"images/peilinye.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"peilinye"},"content":"[[github](http://github.com/peilinye)]","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"peilinye"},"content":"[[portfolio](team/peilinye.md)]","lastModifiedDate":"2021-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2021-09-24"},{"lineNumber":48,"author":{"gitId":"peilinye"},"content":"* Responsibilities: Data, UI","lastModifiedDate":"2021-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"darrenhoon"},"content":"### Fong Mun Kit, Wilbur","lastModifiedDate":"2021-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"wilburrito"},"content":"\u003cimg src\u003d\"images/wilburrito.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"wilburrito"},"content":"[[github](http://github.com/wilburrito)]","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"wilburrito"},"content":"[[portfolio](team/wilbur.md)]","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"wilburrito"},"content":"* Responsibilities: DevOps, Data","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":60,"author":{"gitId":"BananaTechs"},"content":"### Thomas Edward Hogben","lastModifiedDate":"2021-09-25"},{"lineNumber":61,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":62,"author":{"gitId":"darrenhoon"},"content":"\u003cimg src\u003d\"images/bananatechs.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":63,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":64,"author":{"gitId":"BananaTechs"},"content":"[[github](http://github.com/BananaTechs)]","lastModifiedDate":"2021-09-25"},{"lineNumber":65,"author":{"gitId":"BananaTechs"},"content":"[[portfolio](team/thomashogben.md)]","lastModifiedDate":"2021-09-25"},{"lineNumber":66,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":67,"author":{"gitId":"BananaTechs"},"content":"* Role: **Developer**","lastModifiedDate":"2021-09-25"},{"lineNumber":68,"author":{"gitId":"BananaTechs"},"content":"* Responsibilities: **Data**","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"peilinye":4,"jianh0ng":2,"BananaTechs":5,"-":37,"wilburrito":4,"darrenhoon":16}},{"path":"docs/Configuration.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-06-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-06-07"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"title: Configuration Guide","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-06-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Certain properties of the application can be controlled (e.g user preferences file location, logging level) through the configuration file (default: `config.json`).","lastModifiedDate":"2020-06-07"}],"authorContributionMap":{"-":5,"darrenhoon":1}},{"path":"docs/DevOps.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"title: DevOps Guide","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Build automation","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"This project uses Gradle for **build automation and dependency management**. **You are recommended to read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)**.","lastModifiedDate":"2020-06-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Given below are how to use Gradle for some important project tasks.","lastModifiedDate":"2020-05-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **`clean`**: Deletes the files created during the previous build tasks (e.g. files in the `build` folder).\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  e.g. `./gradlew clean`","lastModifiedDate":"2020-05-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **`shadowJar`**: Uses the ShadowJar plugin to creat a fat JAR file in the `build/lib` folder, *if the current file is outdated*.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  e.g. `./gradlew shadowJar`.","lastModifiedDate":"2020-05-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **`run`**: Builds and runs the application.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  **`runShadow`**: Builds the application as a fat JAR, and then runs it.","lastModifiedDate":"2020-05-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  **`checkstyleTest`**: Runs the code style check for the test code base.","lastModifiedDate":"2020-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **`test`**: Runs all tests.\u003c","lastModifiedDate":"2020-05-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * `./gradlew test` — Runs all tests","lastModifiedDate":"2020-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * `./gradlew clean test` — Cleans the project and runs tests","lastModifiedDate":"2020-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Continuous integration (CI)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files (in the `.github/workflows` folder). No further setting up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### Code coverage","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"As part of CI, this project uses Codecov to generate coverage reports. Here are the steps to set up CodeCov for a fork of this repository.","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"1. Sign up with Codecov using your GitHub account [here](https://codecov.io/signup).","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Once you are inside Codecov web app, add your fork to CodeCov.","lastModifiedDate":"2020-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. Get the Markdown code for the Codecov badge provided in `Settings \u003e Badges` and update the `docs/index.md` of your repo with it so that the badge [![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3) in that page reflects the coverage of your project.","lastModifiedDate":"2020-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"### Repository-wide checks","lastModifiedDate":"2020-07-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"In addition to running Gradle checks, CI includes some repository-wide checks. Unlike the Gradle checks which only cover files used in the build process, these repository-wide checks cover all files in the repository. They check for repository rules which are hard to enforce on development machines such as line ending requirements.","lastModifiedDate":"2020-07-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such as macOS and Linux. To run all checks locally on these operating systems, execute the following in the repository root directory:","lastModifiedDate":"2020-07-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"`./config/travis/run-checks.sh`","lastModifiedDate":"2020-07-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Any warnings or errors will be printed out to the console.","lastModifiedDate":"2020-07-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"**If adding new checks:**","lastModifiedDate":"2020-07-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Checks are implemented as executable `check-*` scripts within the `.github` directory. The `run-checks.sh` script will automatically pick up and run files named as such. That is, you can add more such files if you need and the CI will do the rest.","lastModifiedDate":"2020-07-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Check scripts should print out errors in the format `SEVERITY:FILENAME:LINE: MESSAGE`","lastModifiedDate":"2020-07-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  * SEVERITY is either ERROR or WARN.","lastModifiedDate":"2020-07-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  * FILENAME is the path to the file relative to the current directory.","lastModifiedDate":"2020-07-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  * LINE is the line of the file where the error occurred and MESSAGE is the message explaining the error.","lastModifiedDate":"2020-07-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Check scripts must exit with a non-zero exit code if any errors occur.","lastModifiedDate":"2020-07-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"## Making a release","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Here are the steps to create a new release.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"1. Update the version number in [`MainApp.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java).","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"1. Generate a fat JAR file using Gradle (i.e., `gradlew shadowJar`).","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"1. Tag the repo with the version number. e.g. `v0.1`","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"1. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you created.","lastModifiedDate":"2020-05-26"}],"authorContributionMap":{"-":78,"darrenhoon":1}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"darrenhoon"},"content":"* stores the address book data.","lastModifiedDate":"2021-09-25"},{"lineNumber":125,"author":{"gitId":"darrenhoon"},"content":"    * All `Person` objects are contained in a `UniquePersonList` object.","lastModifiedDate":"2021-09-25"},{"lineNumber":126,"author":{"gitId":"darrenhoon"},"content":"    * All `Room` objects are contained in a `RoomList` object.","lastModifiedDate":"2021-09-25"},{"lineNumber":127,"author":{"gitId":"jianh0ng"},"content":"    * All `Residency` objects are contained in a `ResidencyBook` object.","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"darrenhoon"},"content":"* stores the currently \u0027selected\u0027 object(s) (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-09-25"},{"lineNumber":129,"author":{"gitId":"darrenhoon"},"content":"    * `Person` objects are stored in `ObservableList\u003cPerson\u003e`","lastModifiedDate":"2021-09-25"},{"lineNumber":130,"author":{"gitId":"darrenhoon"},"content":"    * `Room` objects are stored in `ObservableList\u003cRoom\u003e`","lastModifiedDate":"2021-09-25"},{"lineNumber":131,"author":{"gitId":"jianh0ng"},"content":"    * `Residency` objects are stored in `ObservableList\u003cResidency\u003e`","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"darrenhoon"},"content":"### Guest and Room search feature","lastModifiedDate":"2021-10-20"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"darrenhoon"},"content":"#### Implementation","lastModifiedDate":"2021-10-20"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"darrenhoon"},"content":"The search mechanism is facilitated by `LogicManager`. It extends `Logic` and its invocation is via the `AddressBookParser`.","lastModifiedDate":"2021-10-20"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"darrenhoon"},"content":"* `AddressBookParser#parseCommand()` — Interprets the command the user inputs to invoke the `FindGuestCommand` and `FindRoomCommand`.","lastModifiedDate":"2021-10-20"},{"lineNumber":170,"author":{"gitId":"darrenhoon"},"content":"* `FindGuestCommand#execute()` — Finds the guest in the hotel with matching name","lastModifiedDate":"2021-10-20"},{"lineNumber":171,"author":{"gitId":"darrenhoon"},"content":"* `FindRoomCommand#execute()` — Finds the room in the hotel with matching room number","lastModifiedDate":"2021-10-20"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"darrenhoon"},"content":"Given below is an example usage scenario and how the search mechanism behaves at each step.","lastModifiedDate":"2021-10-20"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"darrenhoon"},"content":"Step 1. User searches for the data entry desired.","lastModifiedDate":"2021-10-20"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"darrenhoon"},"content":"![SearchGuest](images/SearchGuest.png)","lastModifiedDate":"2021-10-20"},{"lineNumber":180,"author":{"gitId":"darrenhoon"},"content":"![SearchRoom](images/SearchRoom.png)","lastModifiedDate":"2021-10-20"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"darrenhoon"},"content":"Step 2. Hit Enter.","lastModifiedDate":"2021-10-20"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"darrenhoon"},"content":"![SearchGuestResult](images/SearchGuestResult.png)","lastModifiedDate":"2021-10-20"},{"lineNumber":185,"author":{"gitId":"darrenhoon"},"content":"![SearchRoomResult](images/SearchRoomResult.png)","lastModifiedDate":"2021-10-20"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"wilburrito"},"content":"The Rooms / Guests that have matching names will appear in their respective lists.","lastModifiedDate":"2021-10-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"darrenhoon"},"content":"**Aspect: How search guest / room executes:**","lastModifiedDate":"2021-10-20"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"darrenhoon"},"content":"* The string name / room number will be passed into a predicate checker to check if any of the data present contains the information as requested.","lastModifiedDate":"2021-10-20"},{"lineNumber":194,"author":{"gitId":"darrenhoon"},"content":"    * Pros: Consistent implementation - similar to the other commands.","lastModifiedDate":"2021-10-20"},{"lineNumber":195,"author":{"gitId":"darrenhoon"},"content":"    * Cons: Increased need for good file system and extensive application of Object-Oriented Principles required.","lastModifiedDate":"2021-10-20"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"jianh0ng"},"content":"    ","lastModifiedDate":"2021-10-07"},{"lineNumber":198,"author":{"gitId":"peilinye"},"content":"### Listing rooms by vacancy feature","lastModifiedDate":"2021-10-20"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":200,"author":{"gitId":"peilinye"},"content":"#### Implementation","lastModifiedDate":"2021-10-20"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":202,"author":{"gitId":"peilinye"},"content":"The list mechanism is facilitated by `LogicManager`. It extends `Logic` and its invocation is via the `AddressBookParser`.","lastModifiedDate":"2021-10-20"},{"lineNumber":203,"author":{"gitId":"peilinye"},"content":"It implements the following key operations.","lastModifiedDate":"2021-11-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":205,"author":{"gitId":"peilinye"},"content":"* `AddressBookParser#parseCommand()` — Interprets the command the user inputs to invoke the `ListCommand`.","lastModifiedDate":"2021-10-20"},{"lineNumber":206,"author":{"gitId":"peilinye"},"content":"* `ListCommand#execute()` — Executes the relevant `ListCommand`.","lastModifiedDate":"2021-11-04"},{"lineNumber":207,"author":{"gitId":"peilinye"},"content":"* `Model#updateFilteredRoomList()` — Filters the list of rooms based on their vacancy status and updates the internal list of rooms to be displayed by the UI.","lastModifiedDate":"2021-11-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":209,"author":{"gitId":"peilinye"},"content":"This operation is exposed in the `Model` interface as `Model#updateFilteredRoomList()`.","lastModifiedDate":"2021-10-20"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":211,"author":{"gitId":"peilinye"},"content":"The following sequence diagram shows the interactions between objects of the Logic component for the list vacant room mechanism.","lastModifiedDate":"2021-11-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":213,"author":{"gitId":"peilinye"},"content":"![Interactions Inside the Logic Component for the `list rooms vacant` Command](images/ListRoomsByVacancySequenceDiagram.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":215,"author":{"gitId":"peilinye"},"content":"The `list rooms occupied` command works the same way, except a `RoomIsOccupiedPredicate` is passed as argument when calling `Model#updateFilteredRoomList()`.","lastModifiedDate":"2021-11-04"},{"lineNumber":216,"author":{"gitId":"peilinye"},"content":"The rooms of the specified vacancy status will appear in the room list.","lastModifiedDate":"2021-10-20"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":218,"author":{"gitId":"peilinye"},"content":"#### Design considerations:","lastModifiedDate":"2021-10-20"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":220,"author":{"gitId":"peilinye"},"content":"**Aspect: How list room occupied / vacant executes:**","lastModifiedDate":"2021-10-20"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":222,"author":{"gitId":"peilinye"},"content":"* The `ParserUtil` checks that the `ListRoomArg` is valid (either \"occupied\" or \"vacant\" and not any other arguments), and the `ListCommandParser` creates a predicate object for `Model#updateFilteredRoomList()` to filter the rooms based on.","lastModifiedDate":"2021-11-04"},{"lineNumber":223,"author":{"gitId":"peilinye"},"content":"    * Pros: Consistency - similar implementation as the command to list all rooms, list all guests and list all records.","lastModifiedDate":"2021-11-04"},{"lineNumber":224,"author":{"gitId":"peilinye"},"content":"    * Cons: This implementation does not fully adhere to OOP principles like inheritance. No new command classes such as `ListVacantRoomCommand` and `ListOccupiedRoomCommand`.","lastModifiedDate":"2021-11-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":226,"author":{"gitId":"wilburrito"},"content":"### Uniqueness of Guests [coming soon]","lastModifiedDate":"2021-10-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":228,"author":{"gitId":"wilburrito"},"content":"#### Implementation","lastModifiedDate":"2021-10-21"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":230,"author":{"gitId":"wilburrito"},"content":"The mechanism guaranteeing the uniqueness of Guests is facilitated by the `Nric` class, and its invocation is via `AddressBookParser`.","lastModifiedDate":"2021-10-21"},{"lineNumber":231,"author":{"gitId":"wilburrito"},"content":"* `AddressBookParser#parseCommand()`  — Interprets the command the user inputs to invoke the `AddCommandParser`.","lastModifiedDate":"2021-10-21"},{"lineNumber":232,"author":{"gitId":"wilburrito"},"content":"* `ParserUtil#parseNric()`  — checks whether a `Person` object already exists with the same Nric.","lastModifiedDate":"2021-10-21"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":234,"author":{"gitId":"wilburrito"},"content":"#### Design considerations:","lastModifiedDate":"2021-10-21"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":236,"author":{"gitId":"wilburrito"},"content":"**Aspect: How duplicates are avoided:**","lastModifiedDate":"2021-10-21"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":238,"author":{"gitId":"wilburrito"},"content":"* An `AddCommand` that wants to add a `Person` with an `Nric` that another existing `Person` already will be considered an invalid command.","lastModifiedDate":"2021-10-21"},{"lineNumber":239,"author":{"gitId":"wilburrito"},"content":"    * Uniqueness  —  This mechanism will help to prevent the adding of duplicate `Person` objects.","lastModifiedDate":"2021-10-21"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"jianh0ng"},"content":"### Past Records Feature","lastModifiedDate":"2021-10-21"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":243,"author":{"gitId":"jianh0ng"},"content":"This section describes how past residencies are stored such that it can be displayed/searched for contact tracing.","lastModifiedDate":"2021-10-21"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":245,"author":{"gitId":"jianh0ng"},"content":"The past residencies are read from the same json data file as the other components in the `AddressBook`, through the `JsonAdaptedResidencyBook` class.","lastModifiedDate":"2021-10-21"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":247,"author":{"gitId":"jianh0ng"},"content":"They are stored in a `ResidencyBook`, similar to the one storing current residencies.","lastModifiedDate":"2021-10-21"},{"lineNumber":248,"author":{"gitId":"jianh0ng"},"content":"![Relationship of AddressBook and ResidencyBook](images/AddressBookSubset.png)","lastModifiedDate":"2021-10-21"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":250,"author":{"gitId":"jianh0ng"},"content":"This `ResidencyBook` only calls upon `ResidencyBook#register(Residency)` but not `ResidencyBook#remove(Residency)` to prevent editing","lastModifiedDate":"2021-10-21"},{"lineNumber":251,"author":{"gitId":"jianh0ng"},"content":"of the records stored.","lastModifiedDate":"2021-10-21"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":253,"author":{"gitId":"jianh0ng"},"content":"It is exposed in `ModelManager#getFilteredRecordList()`, `ModelManager#updateFilteredRecordList()`, `","lastModifiedDate":"2021-10-21"},{"lineNumber":254,"author":{"gitId":"jianh0ng"},"content":"LogicManager#getFilteredRecordList()` where the contents are stored in a `FilteredList` for display in the UI.","lastModifiedDate":"2021-10-21"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":256,"author":{"gitId":"jianh0ng"},"content":"#### Design considerations:","lastModifiedDate":"2021-10-21"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":258,"author":{"gitId":"jianh0ng"},"content":"* Possible location of storage of past residencies.","lastModifiedDate":"2021-10-21"},{"lineNumber":259,"author":{"gitId":"jianh0ng"},"content":"    * Second file.","lastModifiedDate":"2021-10-21"},{"lineNumber":260,"author":{"gitId":"jianh0ng"},"content":"    * Pros: Keeping past residency storage separate from the main data storage minimises any mixup in the storing of information.","lastModifiedDate":"2021-10-21"},{"lineNumber":261,"author":{"gitId":"jianh0ng"},"content":"    * Cons: This requires the file to store its own set of persons and rooms and because the residency keeps minimal information in order to minimise","lastModifiedDate":"2021-10-21"},{"lineNumber":262,"author":{"gitId":"jianh0ng"},"content":"      space required for the storage file, it results in redundancy when storing the same information across 2 files. Changes also have to be written twice.","lastModifiedDate":"2021-10-21"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":264,"author":{"gitId":"jianh0ng"},"content":"* Consistency","lastModifiedDate":"2021-10-21"},{"lineNumber":265,"author":{"gitId":"jianh0ng"},"content":"    * The `ResidencyBook` of past records in `AddressBook` mirrors the storage of guests, rooms and current residencies. A `FilteredList`","lastModifiedDate":"2021-10-21"},{"lineNumber":266,"author":{"gitId":"jianh0ng"},"content":"      in `ModelManager` to represent the records also helps maintain the consistency and readability of the code.","lastModifiedDate":"2021-10-21"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":268,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":273,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":274,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":275,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":276,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"jianh0ng"},"content":"* hotel receptionist","lastModifiedDate":"2021-09-23"},{"lineNumber":287,"author":{"gitId":"jianh0ng"},"content":"* has a need to manage a significant number of guests and rooms","lastModifiedDate":"2021-09-23"},{"lineNumber":288,"author":{"gitId":"peilinye"},"content":"* prefers desktop apps over other types","lastModifiedDate":"2021-10-20"},{"lineNumber":289,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":291,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"jianh0ng"},"content":"**Value proposition**: manage both guests and rooms faster than a typical mouse/GUI driven app","lastModifiedDate":"2021-09-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                   | see usage instructions         | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"jianh0ng"},"content":"| `* * *`  | user                                       | add a guest as a contact       | check them into rooms                                                  |","lastModifiedDate":"2021-09-23"},{"lineNumber":304,"author":{"gitId":"darrenhoon"},"content":"| `* * *`  | user                                       | check guests into rooms        | admit them into our hotel                                              |","lastModifiedDate":"2021-09-25"},{"lineNumber":305,"author":{"gitId":"darrenhoon"},"content":"| `* * *`  | user                                       | check guests out of rooms      | free up the room and have their information in the archive                                                  |","lastModifiedDate":"2021-09-25"},{"lineNumber":306,"author":{"gitId":"jianh0ng"},"content":"| `* * *`  | user                                       | search for vacant rooms        | assign guests to a vacant room                                         |","lastModifiedDate":"2021-09-23"},{"lineNumber":307,"author":{"gitId":"jianh0ng"},"content":"| `* * *`  | user                                       | delete guests                  | remove them if the wrong details are entered                           |","lastModifiedDate":"2021-09-23"},{"lineNumber":308,"author":{"gitId":"peilinye"},"content":"| `* * *`  | user                                       | list all guests and rooms      | check all the statuses                                                 |","lastModifiedDate":"2021-09-24"},{"lineNumber":309,"author":{"gitId":"jianh0ng"},"content":"| `*`      | user with many guests in the address book  | sort guests  by name           | locate a guest easily                                                  |","lastModifiedDate":"2021-09-23"},{"lineNumber":310,"author":{"gitId":"peilinye"},"content":"| `* *`    | user                                       | search guests by their name    | find a guest\u0027s details easily                                          |","lastModifiedDate":"2021-09-24"},{"lineNumber":311,"author":{"gitId":"peilinye"},"content":"| `* * *`  | user who has to track past records of guests | perform queries on past data | check records of past guests and details of their stay                 |","lastModifiedDate":"2021-10-20"},{"lineNumber":312,"author":{"gitId":"peilinye"},"content":"| `* *`    | user                                       | add rooms with specified tags  | keep track of different types of rooms in my hotel                     |","lastModifiedDate":"2021-10-20"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"darrenhoon"},"content":"### Use Cases","lastModifiedDate":"2021-10-25"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":318,"author":{"gitId":"darrenhoon"},"content":"Refer to [_Use Cases_](UseCases.md).","lastModifiedDate":"2021-10-25"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"darrenhoon"},"content":"2. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-10-26"},{"lineNumber":324,"author":{"gitId":"darrenhoon"},"content":"3. Should work without being connected to the Internet.","lastModifiedDate":"2021-10-26"},{"lineNumber":325,"author":{"gitId":"darrenhoon"},"content":"4. Should be able to use most basic commands within a day of usage.","lastModifiedDate":"2021-10-26"},{"lineNumber":326,"author":{"gitId":"darrenhoon"},"content":"5. User should be able to identify key information on the GUI quickly using colour coded text.","lastModifiedDate":"2021-10-26"},{"lineNumber":327,"author":{"gitId":"darrenhoon"},"content":"6. The system should respond within two seconds of a command input.","lastModifiedDate":"2021-10-26"},{"lineNumber":328,"author":{"gitId":"darrenhoon"},"content":"7. The product is not required to handle the printing of reports.","lastModifiedDate":"2021-10-26"},{"lineNumber":329,"author":{"gitId":"darrenhoon"},"content":"8. The rooms show what type of rooms they are, such as First Class or Standard etc.","lastModifiedDate":"2021-10-26"},{"lineNumber":330,"author":{"gitId":"darrenhoon"},"content":"9. Guests have tags assigned to them to better identify them.","lastModifiedDate":"2021-10-26"},{"lineNumber":331,"author":{"gitId":"darrenhoon"},"content":"10. The data integrity of the application is preserved in the event where the application closes unexpectedly.","lastModifiedDate":"2021-10-26"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"peilinye":22,"jianh0ng":28,"-":294,"wilburrito":10,"darrenhoon":36}},{"path":"docs/Documentation.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"title: Documentation Guide","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"**Setting up and maintaining the project website:**","lastModifiedDate":"2020-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* We use [**Jekyll**](https://jekyllrb.com/) to manage documentation.","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* The `docs/` folder is used for documentation.","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* To learn how set it up and maintain the project website, follow the guide [_[se-edu/guides] **Using Jekyll for project documentation**_](https://se-education.org/guides/tutorials/jekyll.html).","lastModifiedDate":"2020-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"* Note these points when adapting the documentation to a different project/product:","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  * The \u0027Site-wide settings\u0027 section of the page linked above has information on how to update site-wide elements such as the top navigation bar.","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * :bulb: In addition to updating content files, you might have to update the config files `docs\\_config.yml` and `docs\\_sass\\minima\\_base.scss` (which contains a reference to `AB-3` that comes into play when converting documentation pages to PDF format).","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* If you are using Intellij for editing documentation files, you can consider enabling \u0027soft wrapping\u0027 for `*.md` files, as explained in [_[se-edu/guides] **Intellij IDEA: Useful settings**_](https://se-education.org/guides/tutorials/intellijUsefulSettings.html#enabling-soft-wrapping)","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Style guidance:**","lastModifiedDate":"2020-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Follow the [**_Google developer documentation style guide_**](https://developers.google.com/style).","lastModifiedDate":"2020-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Also relevant is the [_[se-edu/guides] **Markdown coding standard**_](https://se-education.org/guides/conventions/markdown.html)","lastModifiedDate":"2020-06-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**Diagrams:**","lastModifiedDate":"2020-06-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* See the [_[se-edu/guides] **Using PlantUML**_](https://se-education.org/guides/tutorials/plantUml.html)","lastModifiedDate":"2020-06-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"**Converting a document to the PDF format:**","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* See the guide [_[se-edu/guides] **Saving web documents as PDF files**_](https://se-education.org/guides/tutorials/savingPdf.html)","lastModifiedDate":"2020-06-07"}],"authorContributionMap":{"-":28,"darrenhoon":1}},{"path":"docs/Logging.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-06-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-06-07"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"title: Logging Guide","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-06-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* We are using `java.util.logging` package for logging.","lastModifiedDate":"2020-06-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* The `LogsCenter` class is used to manage the logging levels and logging destinations.","lastModifiedDate":"2020-06-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"*  The `Logger` for a class can be obtained using `LogsCenter.getLogger(Class)` which will log messages according to the specified logging level.","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"*  Log messages are output through the console and to a `.log` file.","lastModifiedDate":"2020-06-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"*  The output logging level can be controlled using the `logLevel` setting in the configuration file (See the [Configuration guide](Configuration.md) section).","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"* **When choosing a level for a log message**, follow the conventions given in [_[se-edu/guides] Java: Logging conventions_](https://se-education.org/guides/conventions/java/logging.html).","lastModifiedDate":"2020-06-07"}],"authorContributionMap":{"-":10,"darrenhoon":1}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"title: Setting Up and Getting Started","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   1. Run the `seedu.address.Main` and try a few commands.","lastModifiedDate":"2020-06-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"-":54,"darrenhoon":1}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"title: Testing Guide","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   e.g. `seedu.address.commons.StringUtilTest`","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"   e.g. `seedu.address.storage.StorageManagerTest`","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   e.g. `seedu.address.logic.LogicManagerTest`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":35,"darrenhoon":1}},{"path":"docs/UseCases.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"---","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"layout: page","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"title: Use Cases","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"---","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"This page contains the use cases in our project. The sections below have been segmented to major sections where each","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"use case is classified under to allow for easier navigation.","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"For all use cases below, the **System** is the `Trace2Gather` and the **Actor** is the `user`, unless specified otherwise.","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"* Table of Contents ","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"{:toc}","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":"## Guest","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":"### Use case: Add a guest","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"darrenhoon"},"content":"**MSS**","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"darrenhoon"},"content":"1.  User requests to add a guest and inputs the necessary parameters.","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"darrenhoon"},"content":"2.  Trace2Gather adds the guest with the input details.","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"darrenhoon"},"content":"3.  Trace2Gather displays a message to the user indicating that the guest has been added.","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"darrenhoon"},"content":"    ","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"darrenhoon"},"content":"    Use case ends.","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"darrenhoon"},"content":"**Extensions**","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"darrenhoon"},"content":"* 1a. There are missing parameters or input is not in the correct format.","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"darrenhoon"},"content":"    * 1a1. Trace2Gather displays a message indicating to the user the required parameters.","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"darrenhoon"},"content":"    * 1a2. User inputs the parameters again until all required parameters are input. ","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"darrenhoon"},"content":"      ","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"darrenhoon"},"content":"        Use case resumes at step 2.","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"darrenhoon"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"darrenhoon"},"content":"### Use case: Edit a guest","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"darrenhoon"},"content":"**MSS**","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"darrenhoon"},"content":"1.  User requests to list guests.","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"darrenhoon"},"content":"2.  Trace2Gather shows a list of guests.","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"darrenhoon"},"content":"3.  User requests to edit a guest at a specific index in the list.","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"darrenhoon"},"content":"4.  Trace2Gather edits the guest.","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"darrenhoon"},"content":"    ","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"darrenhoon"},"content":"    Use case ends.","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"darrenhoon"},"content":"**Extensions**","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"darrenhoon"},"content":"* 2a. The list is empty. ","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"darrenhoon"},"content":"  ","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"darrenhoon"},"content":"    Use case ends.","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"darrenhoon"},"content":"* 2b. The given index is invalid.","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"darrenhoon"},"content":"    * 2b1. Trace2Gather displays a message indicating to the user the required format.","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"darrenhoon"},"content":"    * 2b2. User edits the index to the correct index.","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"darrenhoon"},"content":"      ","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"darrenhoon"},"content":"        Use case resumes at step 3.","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"darrenhoon"},"content":"* 2c. The input command is not in the correct format.","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"darrenhoon"},"content":"    * 2c1. Trace2Gather displays a message indicating to the user the required format.","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"darrenhoon"},"content":"    * 2c2. User edits the input to the correct format.","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"darrenhoon"},"content":"      ","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"darrenhoon"},"content":"        Use case resumes at step 3.","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"darrenhoon"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"darrenhoon"},"content":"### Use case: Retrieve all guests","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"darrenhoon"},"content":"**MSS**","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"darrenhoon"},"content":"1.  User requests to retrieve all the entries of guests.","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"darrenhoon"},"content":"2.  User is able to view all the entries of guests.","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"darrenhoon"},"content":"    ","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"darrenhoon"},"content":"    Use case ends.","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"darrenhoon"},"content":"### Use case: Search for guest(s) by name","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"darrenhoon"},"content":"**MSS**","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"darrenhoon"},"content":"1.  User requests to find a specific guest using the name of the guest.","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"darrenhoon"},"content":"2.  User is able to view all guests with the same name.","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"darrenhoon"},"content":"    ","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"darrenhoon"},"content":"    Use case ends.","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"darrenhoon"},"content":"**Extensions**","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"darrenhoon"},"content":"* 1a. The list containing guests with the same name is empty.","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"darrenhoon"},"content":"  ","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"darrenhoon"},"content":"    Use case ends.","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"darrenhoon"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"darrenhoon"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"darrenhoon"},"content":"## Room","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"darrenhoon"},"content":"### Use case: Add room(s)","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"darrenhoon"},"content":"**MSS**","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"darrenhoon"},"content":"1.  User requests to add a room or multiple rooms along with their tags to indicate properties about the room.","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"darrenhoon"},"content":"2.  Trace2Gather adds the room(s) with the tagged properties details.","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"darrenhoon"},"content":"3.  Trace2Gather displays a message to the user indicating that the room(s) has been added.","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"darrenhoon"},"content":"    ","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"darrenhoon"},"content":"    Use case ends.","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"darrenhoon"},"content":"**Extensions**","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"darrenhoon"},"content":"* 1a. There are missing parameters or input is not in the correct format.","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"darrenhoon"},"content":"    * 1a1. Trace2Gather displays a message indicating to the user the required parameters.","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"darrenhoon"},"content":"    * 1a2. User inputs the parameters again until all required parameters are input.","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"darrenhoon"},"content":"      ","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"darrenhoon"},"content":"        Use case resumes at step 2.","lastModifiedDate":"2021-10-26"},{"lineNumber":110,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"darrenhoon"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"darrenhoon"},"content":"### Use case: Search for room(s)","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"darrenhoon"},"content":"**MSS**","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"darrenhoon"},"content":"1.  User requests to find a specific room / some rooms using the room number.","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"darrenhoon"},"content":"2.  User is able to view all rooms as specified.","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"darrenhoon"},"content":"    Use case ends.","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"darrenhoon"},"content":"**Extensions**","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"darrenhoon"},"content":"* 1a. The list containing room(s) with desired room number(s) is empty.","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":124,"author":{"gitId":"darrenhoon"},"content":"  Use case ends.","lastModifiedDate":"2021-10-26"},{"lineNumber":125,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":126,"author":{"gitId":"darrenhoon"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":127,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":128,"author":{"gitId":"darrenhoon"},"content":"### Use case: Retrieve all occupied rooms","lastModifiedDate":"2021-10-26"},{"lineNumber":129,"author":{"gitId":"darrenhoon"},"content":"**MSS**","lastModifiedDate":"2021-10-26"},{"lineNumber":130,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":131,"author":{"gitId":"darrenhoon"},"content":"1.  User requests to retrieve all occupied rooms.","lastModifiedDate":"2021-10-26"},{"lineNumber":132,"author":{"gitId":"darrenhoon"},"content":"2.  User is able to view all the entries of occupied rooms.","lastModifiedDate":"2021-10-26"},{"lineNumber":133,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"darrenhoon"},"content":"    Use case ends.","lastModifiedDate":"2021-10-26"},{"lineNumber":135,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"darrenhoon"},"content":"**Extensions**","lastModifiedDate":"2021-10-26"},{"lineNumber":137,"author":{"gitId":"darrenhoon"},"content":"* 1a. The list containing all occupied rooms is empty.","lastModifiedDate":"2021-10-26"},{"lineNumber":138,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":139,"author":{"gitId":"darrenhoon"},"content":"  Use case ends.","lastModifiedDate":"2021-10-26"},{"lineNumber":140,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"darrenhoon"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":143,"author":{"gitId":"darrenhoon"},"content":"### Use case: Retrieve all vacant rooms","lastModifiedDate":"2021-10-26"},{"lineNumber":144,"author":{"gitId":"darrenhoon"},"content":"**MSS**","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":146,"author":{"gitId":"darrenhoon"},"content":"1.  User requests to retrieve all vacant rooms.","lastModifiedDate":"2021-10-26"},{"lineNumber":147,"author":{"gitId":"darrenhoon"},"content":"2.  User is able to view all vacant rooms.","lastModifiedDate":"2021-10-26"},{"lineNumber":148,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":149,"author":{"gitId":"darrenhoon"},"content":"    Use case ends.","lastModifiedDate":"2021-10-26"},{"lineNumber":150,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":151,"author":{"gitId":"darrenhoon"},"content":"**Extensions**","lastModifiedDate":"2021-10-26"},{"lineNumber":152,"author":{"gitId":"darrenhoon"},"content":"* 1a. The list containing all vacant rooms is empty.","lastModifiedDate":"2021-10-26"},{"lineNumber":153,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":154,"author":{"gitId":"darrenhoon"},"content":"  Use case ends.","lastModifiedDate":"2021-10-26"},{"lineNumber":155,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":156,"author":{"gitId":"darrenhoon"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":157,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":158,"author":{"gitId":"darrenhoon"},"content":"### Use case: Retrieve all rooms","lastModifiedDate":"2021-10-26"},{"lineNumber":159,"author":{"gitId":"darrenhoon"},"content":"**MSS**","lastModifiedDate":"2021-10-26"},{"lineNumber":160,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":161,"author":{"gitId":"darrenhoon"},"content":"1.  User requests to retrieve all the entries of rooms.","lastModifiedDate":"2021-10-26"},{"lineNumber":162,"author":{"gitId":"darrenhoon"},"content":"2.  User is able to view all the entries of rooms.","lastModifiedDate":"2021-10-26"},{"lineNumber":163,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":164,"author":{"gitId":"darrenhoon"},"content":"    Use case ends.","lastModifiedDate":"2021-10-26"},{"lineNumber":165,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":166,"author":{"gitId":"darrenhoon"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":167,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":168,"author":{"gitId":"darrenhoon"},"content":"### Use case: Check-in guest(s) to a room","lastModifiedDate":"2021-10-26"},{"lineNumber":169,"author":{"gitId":"darrenhoon"},"content":"**MSS**","lastModifiedDate":"2021-10-25"},{"lineNumber":170,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":171,"author":{"gitId":"darrenhoon"},"content":"1.  User requests check-in guest(s) into a room using guest list index.","lastModifiedDate":"2021-10-26"},{"lineNumber":172,"author":{"gitId":"darrenhoon"},"content":"2.  Trace2Gather adds the guest(s) into the corresponding room.","lastModifiedDate":"2021-10-26"},{"lineNumber":173,"author":{"gitId":"darrenhoon"},"content":"3.  Trace2Gather displays a message to the user indicating that the room(s) has been added.","lastModifiedDate":"2021-10-26"},{"lineNumber":174,"author":{"gitId":"darrenhoon"},"content":"4.  Occupancy status of specified room is updated, and the guest(s) are shown in the room.","lastModifiedDate":"2021-10-26"},{"lineNumber":175,"author":{"gitId":"darrenhoon"},"content":"    ","lastModifiedDate":"2021-10-26"},{"lineNumber":176,"author":{"gitId":"darrenhoon"},"content":"    Use case ends.","lastModifiedDate":"2021-10-26"},{"lineNumber":177,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":178,"author":{"gitId":"darrenhoon"},"content":"**Extensions**","lastModifiedDate":"2021-10-26"},{"lineNumber":179,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":180,"author":{"gitId":"darrenhoon"},"content":"* 1a. Guest index is not valid","lastModifiedDate":"2021-10-26"},{"lineNumber":181,"author":{"gitId":"darrenhoon"},"content":"    * 1a1. Trace2Gather displays a message indicating to the user that the command is invalid.","lastModifiedDate":"2021-10-26"},{"lineNumber":182,"author":{"gitId":"darrenhoon"},"content":"    * 1a2. User changes the index to be correct.","lastModifiedDate":"2021-10-26"},{"lineNumber":183,"author":{"gitId":"darrenhoon"},"content":"      ","lastModifiedDate":"2021-10-26"},{"lineNumber":184,"author":{"gitId":"darrenhoon"},"content":"        Use case resumes at step 2.","lastModifiedDate":"2021-10-26"},{"lineNumber":185,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":186,"author":{"gitId":"darrenhoon"},"content":"* 1b. Guest(s) is already in another room.","lastModifiedDate":"2021-10-26"},{"lineNumber":187,"author":{"gitId":"darrenhoon"},"content":"    * 1a1. Trace2Gather displays a message indicating to the user the guests that already have a room.","lastModifiedDate":"2021-10-26"},{"lineNumber":188,"author":{"gitId":"darrenhoon"},"content":"    ","lastModifiedDate":"2021-10-26"},{"lineNumber":189,"author":{"gitId":"darrenhoon"},"content":"        Use case ends.","lastModifiedDate":"2021-10-26"},{"lineNumber":190,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":191,"author":{"gitId":"darrenhoon"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":192,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":193,"author":{"gitId":"darrenhoon"},"content":"### Use case: Check-out room","lastModifiedDate":"2021-10-26"},{"lineNumber":194,"author":{"gitId":"darrenhoon"},"content":"**MSS**","lastModifiedDate":"2021-10-26"},{"lineNumber":195,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":196,"author":{"gitId":"darrenhoon"},"content":"1.  User requests to check-out guest(s) current in a room.","lastModifiedDate":"2021-10-26"},{"lineNumber":197,"author":{"gitId":"darrenhoon"},"content":"2.  Room and its guests are added into History list.","lastModifiedDate":"2021-10-26"},{"lineNumber":198,"author":{"gitId":"darrenhoon"},"content":"3.  Trace2Gather removes the guest(s) from room.","lastModifiedDate":"2021-10-26"},{"lineNumber":199,"author":{"gitId":"darrenhoon"},"content":"4.  Trace2Gather displays a message to the user indicating that the room(s) has been checked-out.","lastModifiedDate":"2021-10-26"},{"lineNumber":200,"author":{"gitId":"darrenhoon"},"content":"5.  Occupancy status of specified room is updated.","lastModifiedDate":"2021-10-26"},{"lineNumber":201,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":202,"author":{"gitId":"darrenhoon"},"content":"    Use case ends.","lastModifiedDate":"2021-10-25"},{"lineNumber":203,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":204,"author":{"gitId":"darrenhoon"},"content":"**Extensions**","lastModifiedDate":"2021-10-26"},{"lineNumber":205,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":206,"author":{"gitId":"darrenhoon"},"content":"* 1a. Room is empty.","lastModifiedDate":"2021-10-26"},{"lineNumber":207,"author":{"gitId":"darrenhoon"},"content":"    * 1a1. Trace2Gather displays a message indicating to the user that the room is vacant.","lastModifiedDate":"2021-10-26"},{"lineNumber":208,"author":{"gitId":"darrenhoon"},"content":"      Use case ends.","lastModifiedDate":"2021-10-26"},{"lineNumber":209,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":210,"author":{"gitId":"darrenhoon"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":211,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":212,"author":{"gitId":"darrenhoon"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-26"},{"lineNumber":213,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":214,"author":{"gitId":"darrenhoon"},"content":"## History","lastModifiedDate":"2021-10-26"},{"lineNumber":215,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":216,"author":{"gitId":"darrenhoon"},"content":"### Use case: Retrieve all history records","lastModifiedDate":"2021-10-26"},{"lineNumber":217,"author":{"gitId":"darrenhoon"},"content":"**MSS**","lastModifiedDate":"2021-10-26"},{"lineNumber":218,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":219,"author":{"gitId":"darrenhoon"},"content":"1.  User requests to retrieve all history record entries.","lastModifiedDate":"2021-10-26"},{"lineNumber":220,"author":{"gitId":"darrenhoon"},"content":"2.  User is able to view all history record entries.","lastModifiedDate":"2021-10-26"},{"lineNumber":221,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":222,"author":{"gitId":"darrenhoon"},"content":"    Use case ends.","lastModifiedDate":"2021-10-26"},{"lineNumber":223,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":224,"author":{"gitId":"darrenhoon"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":225,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":226,"author":{"gitId":"darrenhoon"},"content":"### Use case: Search for specific history record","lastModifiedDate":"2021-10-26"},{"lineNumber":227,"author":{"gitId":"darrenhoon"},"content":"**MSS**","lastModifiedDate":"2021-10-26"},{"lineNumber":228,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":229,"author":{"gitId":"darrenhoon"},"content":"1.  User requests to find a specific history record using either room number or guest name.","lastModifiedDate":"2021-10-26"},{"lineNumber":230,"author":{"gitId":"darrenhoon"},"content":"2.  User is able to view all history records as specified.","lastModifiedDate":"2021-10-26"},{"lineNumber":231,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":232,"author":{"gitId":"darrenhoon"},"content":"    Use case ends.","lastModifiedDate":"2021-10-26"},{"lineNumber":233,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":234,"author":{"gitId":"darrenhoon"},"content":"**Extensions**","lastModifiedDate":"2021-10-26"},{"lineNumber":235,"author":{"gitId":"darrenhoon"},"content":"* 1a. The list containing history records with desired history record(s) is empty.","lastModifiedDate":"2021-10-26"},{"lineNumber":236,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":237,"author":{"gitId":"darrenhoon"},"content":"  Use case ends.","lastModifiedDate":"2021-10-26"},{"lineNumber":238,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":239,"author":{"gitId":"darrenhoon"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":240,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":241,"author":{"gitId":"darrenhoon"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-25"},{"lineNumber":242,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"darrenhoon":242}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"peilinye"},"content":"Welcome to the Trace2Gather User Guide. Trace2Gather is a **desktop app for managing hotel rooms and guests, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Trace2Gather can get your hotel management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"peilinye"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"peilinye"},"content":"This user guide is designed to provide documentation for any user of Trace2Gather, as all users will have access to the features documented here.","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"jianh0ng"},"content":"1. Download the latest `trace2gather.jar` from [here](https://https://github.com/AY2122S1-CS2103T-T13-3/tp/releases).","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"peilinye"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for Trace2Gather.","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"jianh0ng"},"content":"   * **`list guests`** : Lists all guests.","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"peilinye"},"content":"   * **`addroom`**`5 t/typeA` : Adds 5 rooms of type A to the room list.","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"jianh0ng"},"content":"   * **`add`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 id/S98765432H` : Adds a contact named `John Doe` to the Trace2Gather.","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"wilburrito"},"content":"   * **`checkin`**`005 g/1` : Checks in the 1st guest into the 5th room.","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"peilinye"},"content":"   * **`clear`** : Deletes all rooms, guests and past records.","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"wilburrito"},"content":"* All commands are in lower case, e.g. add, record, guest, addroom, etc.","lastModifiedDate":"2021-11-01"},{"lineNumber":52,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"jianh0ng"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/Quarantine` or as `n/John Doe`.","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"jianh0ng"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/Quarantine`, `t/SeafoodAllergy` etc.","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":68,"author":{"gitId":"jianh0ng"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"darrenhoon"},"content":"Shows a message explaning how to access the [help page](https://ay2122s1-cs2103t-t13-3.github.io/tp/UserGuide.html).","lastModifiedDate":"2021-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"darrenhoon"},"content":"## Guest","lastModifiedDate":"2021-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"jianh0ng"},"content":"### Adding a guest: `add`","lastModifiedDate":"2021-09-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"jianh0ng"},"content":"Adds a guest into Trace2Gather.","lastModifiedDate":"2021-09-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"jianh0ng"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS id/NRIC [t/TAG]…​`","lastModifiedDate":"2021-11-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"wilburrito"},"content":"Acceptable format for keywords:\u003cbr/\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":90,"author":{"gitId":"wilburrito"},"content":"1. Names: No special characters, but spaces are allowed.","lastModifiedDate":"2021-11-01"},{"lineNumber":91,"author":{"gitId":"wilburrito"},"content":"2. Phone Number: Digits only, and at least 3 digits long.","lastModifiedDate":"2021-11-01"},{"lineNumber":92,"author":{"gitId":"wilburrito"},"content":"3. Email: Must follow the format of xxx@yyy.zzz. \u003cbr/\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":93,"author":{"gitId":"wilburrito"},"content":"4. Address: Special characters like `#` are allowed for address purposes, must not be blank.","lastModifiedDate":"2021-11-01"},{"lineNumber":94,"author":{"gitId":"jianh0ng"},"content":"5. Id: Accommodates for international guests who may have longer identification numbers and/or special characters. Must not be an empty string, and no limit on the length.","lastModifiedDate":"2021-11-02"},{"lineNumber":95,"author":{"gitId":"wilburrito"},"content":"6. Tags: No whitespaces within a tag.","lastModifiedDate":"2021-11-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"jianh0ng"},"content":"A guest can have any number of tags (including 0).","lastModifiedDate":"2021-09-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2021-11-01"},{"lineNumber":102,"author":{"gitId":"jianh0ng"},"content":"Two guests who have identical IDs are considered identical.","lastModifiedDate":"2021-11-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"jianh0ng"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 id/S98765432G`","lastModifiedDate":"2021-11-02"},{"lineNumber":107,"author":{"gitId":"jianh0ng"},"content":"* `add n/Betsy Crowe t/Quarantine e/betsycrowe@example.com a/Crowe Lane id/S98765431G p/1234567 t/SeafoodAllergy`","lastModifiedDate":"2021-11-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"jianh0ng"},"content":"### Listing all guests : `list guests`","lastModifiedDate":"2021-09-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"jianh0ng"},"content":"Shows a list of all guests in Trace2Gather.","lastModifiedDate":"2021-09-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"jianh0ng"},"content":"Format: `list guests`","lastModifiedDate":"2021-09-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":115,"author":{"gitId":"jianh0ng"},"content":"### Editing a guest : `edit`","lastModifiedDate":"2021-09-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"jianh0ng"},"content":"Edits an existing guest in Trace2Gather.","lastModifiedDate":"2021-09-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"jianh0ng"},"content":"* Edits the guest at the specified `INDEX`. The index refers to the index number shown in the displayed guest list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-09-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"jianh0ng"},"content":"* When editing tags, the existing tags of the guest will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2021-09-29"},{"lineNumber":124,"author":{"gitId":"jianh0ng"},"content":"* You can remove all the guest’s tags by typing `t/` without","lastModifiedDate":"2021-09-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"wilburrito"},"content":"Acceptable format for keywords:","lastModifiedDate":"2021-11-01"},{"lineNumber":128,"author":{"gitId":"wilburrito"},"content":"1. Names: No special characters, but spaces are allowed.","lastModifiedDate":"2021-11-01"},{"lineNumber":129,"author":{"gitId":"wilburrito"},"content":"2. Phone Number: Digits only, and at least 3 digits long.","lastModifiedDate":"2021-11-01"},{"lineNumber":130,"author":{"gitId":"wilburrito"},"content":"3. Email: Must follow the format of xxx@yyy.zzz. \u003cbr/\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":131,"author":{"gitId":"wilburrito"},"content":"4. Address: Special characters like `#` are allowed for address purposes, must not be blank.","lastModifiedDate":"2021-11-01"},{"lineNumber":132,"author":{"gitId":"jianh0ng"},"content":"5. ID: Accommodates for international guests who may have longer identification numbers and/or special characters. Must not be an empty string, and no limit on the length.","lastModifiedDate":"2021-11-02"},{"lineNumber":133,"author":{"gitId":"wilburrito"},"content":"6. Tags: No whitespaces within a tag.","lastModifiedDate":"2021-11-01"},{"lineNumber":134,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"jianh0ng"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st guest to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2021-09-29"},{"lineNumber":138,"author":{"gitId":"jianh0ng"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd guest to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2021-09-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"wilburrito"},"content":"### Locating guests by name: `guest`","lastModifiedDate":"2021-10-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"jianh0ng"},"content":"Find guests whose names contain any of the given keywords.","lastModifiedDate":"2021-09-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"wilburrito"},"content":"Format: `guest KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-10-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"jianh0ng"},"content":"* Guests matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2021-09-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"wilburrito"},"content":"* `guest John` returns `john` and `John Doe`","lastModifiedDate":"2021-10-11"},{"lineNumber":155,"author":{"gitId":"wilburrito"},"content":"* `guest alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":156,"author":{"gitId":"peilinye"},"content":"  ![guestsearch](images/Guestalexdavid1.png)","lastModifiedDate":"2021-10-22"},{"lineNumber":157,"author":{"gitId":"peilinye"},"content":"  ![guestsearch](images/Guestalexdavid2.png)","lastModifiedDate":"2021-10-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"jianh0ng"},"content":"## Room","lastModifiedDate":"2021-09-29"},{"lineNumber":161,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":162,"author":{"gitId":"peilinye"},"content":"### Adding rooms : `addroom`","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"peilinye"},"content":"Adds the specified number of rooms with the specified tag(s).","lastModifiedDate":"2021-10-22"},{"lineNumber":165,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"peilinye"},"content":"Format: `addroom NUMBER_OF_ROOMS t/tag [t/tag]...`","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":168,"author":{"gitId":"peilinye"},"content":"* Adds the specified `NUMBER_OF_ROOMS` of type `tag` to the end of the list of rooms.","lastModifiedDate":"2021-10-22"},{"lineNumber":169,"author":{"gitId":"peilinye"},"content":"* The specified number of rooms **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-22"},{"lineNumber":170,"author":{"gitId":"peilinye"},"content":"* A maximum of 999 rooms are allowed.","lastModifiedDate":"2021-10-30"},{"lineNumber":171,"author":{"gitId":"peilinye"},"content":"* Note: There should be no whitespace within a tag.","lastModifiedDate":"2021-10-30"},{"lineNumber":172,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":173,"author":{"gitId":"peilinye"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"peilinye"},"content":"A room can have one or more tags.","lastModifiedDate":"2021-10-22"},{"lineNumber":175,"author":{"gitId":"peilinye"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":177,"author":{"gitId":"wilburrito"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-10-31"},{"lineNumber":178,"author":{"gitId":"wilburrito"},"content":"You can only add up to 999 rooms.","lastModifiedDate":"2021-10-31"},{"lineNumber":179,"author":{"gitId":"wilburrito"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":180,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":181,"author":{"gitId":"peilinye"},"content":"Examples:","lastModifiedDate":"2021-10-21"},{"lineNumber":182,"author":{"gitId":"peilinye"},"content":"* `addroom 5 t/typeA`","lastModifiedDate":"2021-10-21"},{"lineNumber":183,"author":{"gitId":"peilinye"},"content":"* `addroom 10 t/typeB t/reserved`","lastModifiedDate":"2021-10-21"},{"lineNumber":184,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":185,"author":{"gitId":"BananaTechs"},"content":"### Checking into a room : `checkin`","lastModifiedDate":"2021-09-25"},{"lineNumber":186,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":187,"author":{"gitId":"jianh0ng"},"content":"Checks in a group of guests into a room. ","lastModifiedDate":"2021-09-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":189,"author":{"gitId":"BananaTechs"},"content":"Format: `checkin ROOM_INDEX g/GUEST_INDEX [g/GUEST_INDEX]...`","lastModifiedDate":"2021-09-25"},{"lineNumber":190,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":191,"author":{"gitId":"BananaTechs"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2021-09-25"},{"lineNumber":192,"author":{"gitId":"jianh0ng"},"content":"1. A room can have more than one guest.\u003cbr/\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":193,"author":{"gitId":"jianh0ng"},"content":"2. If you cannot check in guests to a room, check that the room index and guest index(es) are the ones you can see on the panels. Otherwise use the command `list rooms` and `list guests` to show all rooms and guests.","lastModifiedDate":"2021-11-02"},{"lineNumber":194,"author":{"gitId":"BananaTechs"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":195,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":196,"author":{"gitId":"wilburrito"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-10-31"},{"lineNumber":197,"author":{"gitId":"wilburrito"},"content":"However, you cannot check in the same guest to multiple rooms.","lastModifiedDate":"2021-10-31"},{"lineNumber":198,"author":{"gitId":"wilburrito"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":202,"author":{"gitId":"jianh0ng"},"content":"The indexes refer to the index numbers shown in the displayed guest/room list.","lastModifiedDate":"2021-09-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-09-25"},{"lineNumber":205,"author":{"gitId":"BananaTechs"},"content":"* `checkin 5 g/1`","lastModifiedDate":"2021-09-25"},{"lineNumber":206,"author":{"gitId":"peilinye"},"content":"* `checkin 3 g/2 g/3 g/6` ![checkin3](images/Checkin3.png)","lastModifiedDate":"2021-10-22"},{"lineNumber":207,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":208,"author":{"gitId":"BananaTechs"},"content":"### Checking out of a room : `checkout`","lastModifiedDate":"2021-09-25"},{"lineNumber":209,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":210,"author":{"gitId":"jianh0ng"},"content":"Checks out a group of guests from a room.","lastModifiedDate":"2021-09-29"},{"lineNumber":211,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":212,"author":{"gitId":"BananaTechs"},"content":"Format: `checkout ROOM_INDEX`","lastModifiedDate":"2021-09-25"},{"lineNumber":213,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":214,"author":{"gitId":"BananaTechs"},"content":"The room index refers to the index number shown in the displayed room list.","lastModifiedDate":"2021-09-25"},{"lineNumber":215,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":216,"author":{"gitId":"BananaTechs"},"content":"Example:","lastModifiedDate":"2021-09-25"},{"lineNumber":217,"author":{"gitId":"peilinye"},"content":"* `checkout 4` ![checkout4](images/Checkout4.png)","lastModifiedDate":"2021-10-22"},{"lineNumber":218,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":219,"author":{"gitId":"darrenhoon"},"content":"### Locating a specific room : `room`","lastModifiedDate":"2021-10-08"},{"lineNumber":220,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":221,"author":{"gitId":"darrenhoon"},"content":"Shows a list of rooms that match the room numbers provided.","lastModifiedDate":"2021-10-08"},{"lineNumber":222,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":223,"author":{"gitId":"peilinye"},"content":"Format: `room ROOM_NUMBER [MORE_ROOM_NUMBERS]`","lastModifiedDate":"2021-10-22"},{"lineNumber":224,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":225,"author":{"gitId":"darrenhoon"},"content":"Example:","lastModifiedDate":"2021-10-08"},{"lineNumber":226,"author":{"gitId":"peilinye"},"content":"* `room 001 002` ![room001002](images/Room001002.png)","lastModifiedDate":"2021-10-22"},{"lineNumber":227,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":228,"author":{"gitId":"peilinye"},"content":"### Listing all rooms : `list rooms`","lastModifiedDate":"2021-09-24"},{"lineNumber":229,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":230,"author":{"gitId":"jianh0ng"},"content":"Shows a list of all rooms in Trace2Gather.","lastModifiedDate":"2021-09-29"},{"lineNumber":231,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":232,"author":{"gitId":"peilinye"},"content":"Format: `list rooms`","lastModifiedDate":"2021-09-24"},{"lineNumber":233,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":234,"author":{"gitId":"peilinye"},"content":"### Listing all occupied rooms : `list rooms occupied`","lastModifiedDate":"2021-09-27"},{"lineNumber":235,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":236,"author":{"gitId":"jianh0ng"},"content":"Shows a list of all rooms that are occupied in Trace2Gather.","lastModifiedDate":"2021-09-29"},{"lineNumber":237,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":238,"author":{"gitId":"peilinye"},"content":"Format: `list rooms occupied`","lastModifiedDate":"2021-09-27"},{"lineNumber":239,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":240,"author":{"gitId":"peilinye"},"content":"### Listing all vacant rooms : `list rooms vacant`","lastModifiedDate":"2021-09-24"},{"lineNumber":241,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":242,"author":{"gitId":"jianh0ng"},"content":"Shows a list of all rooms that are vacant in Trace2Gather.","lastModifiedDate":"2021-09-29"},{"lineNumber":243,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":244,"author":{"gitId":"peilinye"},"content":"Format: `list rooms vacant`","lastModifiedDate":"2021-09-24"},{"lineNumber":245,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":246,"author":{"gitId":"jianh0ng"},"content":"## Records","lastModifiedDate":"2021-10-21"},{"lineNumber":247,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":248,"author":{"gitId":"jianh0ng"},"content":"### Listing all records : `list records`","lastModifiedDate":"2021-10-21"},{"lineNumber":249,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":250,"author":{"gitId":"jianh0ng"},"content":"Shows a list of past residencies in Trace2Gather.","lastModifiedDate":"2021-10-21"},{"lineNumber":251,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":252,"author":{"gitId":"jianh0ng"},"content":"Format: `list records`","lastModifiedDate":"2021-10-21"},{"lineNumber":253,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":254,"author":{"gitId":"jianh0ng"},"content":"### Locating specific records: `record`","lastModifiedDate":"2021-10-21"},{"lineNumber":255,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":256,"author":{"gitId":"jianh0ng"},"content":"Shows the records that match all the keywords provided (i.e. `AND` search) (**not** case-sensitive, at least 1).\u003cbr/\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":257,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":258,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":259,"author":{"gitId":"jianh0ng"},"content":"Format: `record KEYWORD_ONE... `","lastModifiedDate":"2021-10-21"},{"lineNumber":260,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":261,"author":{"gitId":"wilburrito"},"content":"Keywords include: dates of stay, names, and room numbers.\u003cbr/\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":262,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":263,"author":{"gitId":"wilburrito"},"content":"Acceptable format for keywords:\u003cbr/\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":264,"author":{"gitId":"wilburrito"},"content":"1. Dates of stay: YYYY-MM-DD.","lastModifiedDate":"2021-11-01"},{"lineNumber":265,"author":{"gitId":"wilburrito"},"content":"2. Names: No special characters, but spaces are allowed.","lastModifiedDate":"2021-11-01"},{"lineNumber":266,"author":{"gitId":"wilburrito"},"content":"3. Room Numbers: must be in its 3-digit format, e.g. 001, 233, 999.\u003cbr/\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":267,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":268,"author":{"gitId":"jianh0ng"},"content":"Example: \u003cbr/\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":269,"author":{"gitId":"wilburrito"},"content":"`record Alex` shows the residencies Alex had in the past.\u003cbr/\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":270,"author":{"gitId":"wilburrito"},"content":"`record 001` shows the residencies Room 001 had in the past.\u003cbr/\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":271,"author":{"gitId":"wilburrito"},"content":"`record Alex 001` shows the residencies that involve Alex staying in Room 001 in the past.\u003cbr/\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":272,"author":{"gitId":"jianh0ng"},"content":"`record Alex Bernice` shows the residencies Alex and Bernice had together in the past.\u003cbr/\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":273,"author":{"gitId":"jianh0ng"},"content":"`record 2021-10-31` shows the past residences that include the specified date (both checkin and checkout included).","lastModifiedDate":"2021-11-02"},{"lineNumber":274,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":275,"author":{"gitId":"darrenhoon"},"content":"## Database / Storage","lastModifiedDate":"2021-09-24"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"jianh0ng"},"content":"Clears all entries from Trace2Gather.","lastModifiedDate":"2021-09-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"wilburrito"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-10-31"},{"lineNumber":284,"author":{"gitId":"wilburrito"},"content":"Using this command will clear your JSON file, which means that all your room and guest objects will be erased.","lastModifiedDate":"2021-10-31"},{"lineNumber":285,"author":{"gitId":"wilburrito"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":286,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":287,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"jianh0ng"},"content":"Trace2Gather data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-09-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":299,"author":{"gitId":"jianh0ng"},"content":"Trace2Gather data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-09-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":301,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":302,"author":{"gitId":"jianh0ng"},"content":"If your changes to the data file makes its format invalid, Trace2Gather will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-09-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":305,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"jianh0ng"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous Trace2Gather home folder.","lastModifiedDate":"2021-09-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"peilinye"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS nric/NRIC [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 nric/S9943233F t/friend t/colleague`","lastModifiedDate":"2021-10-22"},{"lineNumber":323,"author":{"gitId":"peilinye"},"content":"**Addroom** | `addroom NUMBER_OF_ROOMS t/tag [t/tag]...`\u003cbr\u003e e.g., `addroom 5 t/typeA`","lastModifiedDate":"2021-10-22"},{"lineNumber":324,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"peilinye"},"content":"**Checkin** | `checkin ROOM_INDEX g/GUEST_INDEX [g/GUEST_INDEX]...`\u003cbr\u003e e.g., `checkin 5 g/1`","lastModifiedDate":"2021-10-22"},{"lineNumber":326,"author":{"gitId":"peilinye"},"content":"**Checkout** | `checkout ROOM_INDEX`\u003cbr\u003e e.g., `checkout 4`","lastModifiedDate":"2021-10-22"},{"lineNumber":327,"author":{"gitId":"-"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"peilinye"},"content":"**Exit** | `exit`","lastModifiedDate":"2021-10-22"},{"lineNumber":329,"author":{"gitId":"wilburrito"},"content":"**Guest** | `guest KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `guest James Jake`","lastModifiedDate":"2021-10-11"},{"lineNumber":330,"author":{"gitId":"peilinye"},"content":"**List** | `list guests`, `list records`, `list rooms`, `list rooms occupied`, `list rooms vacant`","lastModifiedDate":"2021-10-22"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"peilinye"},"content":"**Record** | `record KEYWORD_ONE...`\u003cbr\u003e e.g., `record Alex`, `record 001`","lastModifiedDate":"2021-10-22"},{"lineNumber":333,"author":{"gitId":"peilinye"},"content":"**Room** | `room ROOM_NUMBER [MORE_ROOM_NUMBERS]`\u003cbr\u003e e.g., `room 001 002`","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"peilinye":55,"jianh0ng":60,"BananaTechs":18,"-":147,"wilburrito":42,"darrenhoon":11}},{"path":"docs/diagrams/AddressBookSubset.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jianh0ng"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"jianh0ng"},"content":"!include style.puml","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"jianh0ng"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"jianh0ng"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"jianh0ng"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"jianh0ng"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"jianh0ng"},"content":"Interface ReadOnlyAddressBook \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"jianh0ng"},"content":"Interface ReadOnlyResidencyBook \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"jianh0ng"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"jianh0ng"},"content":"Class AddressBook","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"jianh0ng"},"content":"Class ReadOnlyAddressBook","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"jianh0ng"},"content":"Class Model","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"jianh0ng"},"content":"Class ModelManager","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"jianh0ng"},"content":"Class ResidencyBook","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"jianh0ng"},"content":"Class Residency","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"jianh0ng"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"jianh0ng"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"jianh0ng"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"jianh0ng"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"jianh0ng"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"jianh0ng"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"jianh0ng"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"jianh0ng"},"content":"AddressBook *-left-\u003e \"2\" ReadOnlyResidencyBook","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"jianh0ng"},"content":"ResidencyBook .up.|\u003e ReadOnlyResidencyBook","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"jianh0ng"},"content":"ResidencyBook --\u003e \"~*\" Residency","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"jianh0ng"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"jianh0ng":34}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"AddressBook *-down-\u003e \"1\" RoomList","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"AddressBook *-down-\u003e \"1\" ResidencyBook","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"UniqueTagList *-right-\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"RoomList -down-\u003e Room","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":"ResidencyBook -down-\u003e \"*\" Residency","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":"ResidencyBook -down-\u003e Room","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"darrenhoon"},"content":"ResidencyBook -down-\u003e Person","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"darrenhoon"},"content":"Residency -down-\u003e Person","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"darrenhoon"},"content":"Residency -down-\u003e Room","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"darrenhoon"},"content":"Room -down-\u003e RoomNumber","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"darrenhoon"},"content":"Room -down-\u003e Vacancy","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":22,"darrenhoon":11}},{"path":"docs/diagrams/ListRoomsByVacancySequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"peilinye"},"content":"@startuml","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"peilinye"},"content":"!include style.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"peilinye"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"peilinye"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"peilinye"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"peilinye"},"content":"participant \":ListCommandParser\" as ListCommandParser LOGIC_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"peilinye"},"content":"participant \"l:ListCommand\" as ListCommand LOGIC_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"peilinye"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"peilinye"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\nParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"peilinye"},"content":"end box","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"peilinye"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"peilinye"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"peilinye"},"content":"end box","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"peilinye"},"content":"[-\u003e LogicManager : execute(\"list rooms vacant\")","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"peilinye"},"content":"activate LogicManager","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"peilinye"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"list rooms vacant\")","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"peilinye"},"content":"activate AddressBookParser","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"peilinye"},"content":"create ListCommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"peilinye"},"content":"AddressBookParser -\u003e ListCommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"peilinye"},"content":"activate ListCommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"peilinye"},"content":"ListCommandParser --\u003e AddressBookParser","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"peilinye"},"content":"deactivate ListCommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"peilinye"},"content":"AddressBookParser -\u003e ListCommandParser : parse(\"rooms vacant\")","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"peilinye"},"content":"activate ListCommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"peilinye"},"content":"ListCommandParser -\u003e ParserUtil : parseListType(\"rooms\")","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"peilinye"},"content":"activate ParserUtil","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"peilinye"},"content":"ParserUtil --\u003e ListCommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"peilinye"},"content":"deactivate ParserUtil","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"peilinye"},"content":"ListCommandParser -\u003e ParserUtil : parseListRoomArgument(\"vacant\")","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"peilinye"},"content":"activate ParserUtil","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"peilinye"},"content":"ParserUtil --\u003e ListCommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"peilinye"},"content":"deactivate ParserUtil","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"peilinye"},"content":"create ListCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"peilinye"},"content":"ListCommandParser -\u003e ListCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"peilinye"},"content":"activate ListCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"peilinye"},"content":"ListCommand --\u003e ListCommandParser : l","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"peilinye"},"content":"deactivate ListCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"peilinye"},"content":"ListCommandParser --\u003e AddressBookParser : l","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"peilinye"},"content":"deactivate ListCommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"peilinye"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"peilinye"},"content":"ListCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"peilinye"},"content":"destroy ListCommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"peilinye"},"content":"AddressBookParser --\u003e LogicManager : l","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"peilinye"},"content":"deactivate AddressBookParser","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"peilinye"},"content":"LogicManager -\u003e ListCommand : execute()","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"peilinye"},"content":"activate ListCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"peilinye"},"content":"ListCommand -\u003e Model : updateFilteredRoomList(RoomIsVacantPredicate)","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"peilinye"},"content":"activate Model","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"peilinye"},"content":"Model --\u003e ListCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"peilinye"},"content":"deactivate Model","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"peilinye"},"content":"create CommandResult","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"peilinye"},"content":"ListCommand -\u003e CommandResult","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"peilinye"},"content":"activate CommandResult","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"peilinye"},"content":"CommandResult --\u003e ListCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"peilinye"},"content":"deactivate CommandResult","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"peilinye"},"content":"ListCommand --\u003e LogicManager : result","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"peilinye"},"content":"deactivate ListCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"peilinye"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"peilinye"},"content":"deactivate LogicManager","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"peilinye"},"content":"@enduml","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"peilinye":82}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface ReadOnlyAddressBook \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface ReadOnlyUserPrefs \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-05-13"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"Interface ReadOnlyResidencyBook \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"darrenhoon"},"content":"Class Nric","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"darrenhoon"},"content":"Class RoomList","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"darrenhoon"},"content":"Class Room","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"darrenhoon"},"content":"Class RoomNumber","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"darrenhoon"},"content":"Class Vacancy","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"darrenhoon"},"content":"Class ResidencyBook","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"darrenhoon"},"content":"Class Residency","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"darrenhoon"},"content":"Person *--\u003e Nric","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"darrenhoon"},"content":"AddressBook *--\u003e \"1\" RoomList","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"darrenhoon"},"content":"RoomList --\u003e \"~* all\" Room","lastModifiedDate":"2021-09-20"},{"lineNumber":60,"author":{"gitId":"darrenhoon"},"content":"Room *--\u003e RoomNumber","lastModifiedDate":"2021-09-20"},{"lineNumber":61,"author":{"gitId":"darrenhoon"},"content":"Room *--\u003e Vacancy","lastModifiedDate":"2021-09-20"},{"lineNumber":62,"author":{"gitId":"darrenhoon"},"content":"Room *--\u003e \"*\" Person","lastModifiedDate":"2021-09-20"},{"lineNumber":63,"author":{"gitId":"peilinye"},"content":"Room *--\u003e \"1..*\" Tag","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"jianh0ng"},"content":"AddressBook *-left-\u003e \"2\" ReadOnlyResidencyBook","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"darrenhoon"},"content":"ResidencyBook .up.|\u003e ReadOnlyResidencyBook","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"darrenhoon"},"content":"ResidencyBook --\u003e \"~*\" Residency","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"darrenhoon"},"content":"ResidencyBook --\u003e \"~*\" Room","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"darrenhoon"},"content":"ResidencyBook --\u003e \"~*\" Person","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"darrenhoon"},"content":"Residency --\u003e \"1...*\" Person","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"darrenhoon"},"content":"Residency --\u003e \"1\" Room","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"ModelManager --\u003e\"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"peilinye":1,"jianh0ng":2,"-":55,"darrenhoon":22}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface UserPrefsStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Interface Storage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Interface AddressBookStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"wilburrito"},"content":"Class JsonAdaptedRoom","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"darrenhoon"},"content":"Class JsonAdaptedResidencyBook","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"jianh0ng"},"content":"Class JsonAdaptedResidency","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"wilburrito"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedRoom","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"jianh0ng"},"content":"JsonAdaptedResidencyBook --\u003e \"*\" JsonAdaptedResidency","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"jianh0ng"},"content":"JsonSerializableAddressBook --\u003e \"2\" JsonAdaptedResidencyBook","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jianh0ng":4,"-":43,"wilburrito":2,"darrenhoon":1}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"wilburrito"},"content":"Class RoomListPanel","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":"Class RoomCard","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":"Class ResidencyListPanel","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":"Class ResidencyCard","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"wilburrito"},"content":"MainWindow *-down-\u003e \"1\" RoomListPanel","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"darrenhoon"},"content":"MainWindow *-down-\u003e \"1\" ResidencyListPanel","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"darrenhoon"},"content":"RoomListPanel -down-\u003e \"*\" RoomCard","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"darrenhoon"},"content":"ResidencyListPanel -down-\u003e \"*\" ResidencyCard","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"darrenhoon"},"content":"RoomListPanel --|\u003e UiPart","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"darrenhoon"},"content":"RoomCard --|\u003e UiPart","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"darrenhoon"},"content":"ResidencyListPanel --|\u003e UiPart","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"darrenhoon"},"content":"ResidencyCard --|\u003e UiPart","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"darrenhoon"},"content":"RoomCard ..\u003e Model","lastModifiedDate":"2021-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":60,"wilburrito":2,"darrenhoon":11}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"title: Trace2Gather","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-T13-3/tp/branch/master/graph/badge.svg?token\u003dBA7MNU8LJR)](https://codecov.io/gh/AY2122S1-CS2103T-T13-3/tp)","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"**Trace2Gather is a desktop application for hotel staff to manage their guests for contact tracing purposes.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"* If you are interested in using Trace2Gather, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"* If you are interested about developing Trace2Gather, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":14,"wilburrito":1,"darrenhoon":4}},{"path":"docs/team/darren.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"---","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"layout: page","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"title: Darren Hoon\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"---","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"# Project: Trace2Gather","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"Trace2Gather is a desktop address book application used for managing hotel guests and rooms. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"## New Feature(s)","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"  1. Linked Database\u0027s Room details to GUI, where Rooms are displayed on the GUI\u0027s list of rooms.","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"        * What it does: Allows users to visually see the rooms that were saved in the database and their last updated status.","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"        * Justification: This feature improves the product significantly because being able to visually check a room\u0027s status, such as its Occupancy Status, helps it\u0027s users to identify a room\u0027s status quickly and increases response time to the user requesting such information.","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"        * Highlights: This enhancement affects user interaction with the application. It required an in-depth analysis and understanding of the GUI codebase and jackSon\u0027s syntax, such as @FXML tags having only small characters","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":"        * Credit: jackSon documentation, stackOverflow","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":"  2. Find Room command to enable users to search for specific rooms","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":"        * What it does: Allows users to search for specific rooms in the given list of rooms","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"darrenhoon"},"content":"        * Justification: This feature improves the product significantly as being able to quickly search for specific rooms helps the user to retrieve information about the room faster as compared to manually scrolling down till they find the room","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"darrenhoon"},"content":"        * Highlights: This enhancement required us to put ourselves in the shoes of a potential user and what were the pain points that might arise from our application without this feature.","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"darrenhoon"},"content":"        * Credit: Existing UML Diagrams, Well-thought out code structure that enables easy extensibility.","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"darrenhoon"},"content":"  3. GUI Updates (elaborated in below section on GUI)","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"darrenhoon"},"content":"        * What it does: Allow users to see in detail the changes to the state of the application based on their actions","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"darrenhoon"},"content":"        * Justification: Being able to visually see which guests are in which rooms or who stayed in the vicinity and their corresponding information fast enables faster retrieval of information","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"darrenhoon"},"content":"        * Highlights: These enhancements enabled us to visually check if our system is registering the changes based on the commands we type","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"darrenhoon"},"content":"        * Credit: Original AB3 team for making the code structure highly extensible","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"darrenhoon"},"content":"## Code Contributed","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"darrenhoon"},"content":"[RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dt13-3\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-09-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003ddarrenhoon\u0026tabRepo\u003dAY2122S1-CS2103T-T13-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"darrenhoon"},"content":"#### Testing","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"darrenhoon"},"content":"* Room: TypicalRooms, RoomBuilder, RoomListTest","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"darrenhoon"},"content":"* Logic:","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"darrenhoon"},"content":"    * AddressBookParserTest: `FindRoomCommand`","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"darrenhoon"},"content":"    * FindRoomCommandParserTest","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"darrenhoon"},"content":"    * FindRoomCommandTest","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"darrenhoon"},"content":"* Model:","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"darrenhoon"},"content":"    * ResidencyTest","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"darrenhoon"},"content":"#### GUI","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"darrenhoon"},"content":"* Amended GUI to reflect addressBook.json values for Room","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"darrenhoon"},"content":"* Added styling to indicate vacancy status of rooms","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"darrenhoon"},"content":"* Included guests to rooms shown on GUI, along with appropriate styling","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"darrenhoon"},"content":"* Added History list in GUI along with its card styling","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"darrenhoon"},"content":"#### Misc","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"darrenhoon"},"content":"* Provided boilerplate code for team to start work in first week of team project","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"darrenhoon"},"content":"* Added Room, RoomNumber, Vacancy objects","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":52,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":53,"author":{"gitId":"darrenhoon"},"content":"## Documentation","lastModifiedDate":"2021-09-24"},{"lineNumber":54,"author":{"gitId":"darrenhoon"},"content":"* User Guide:","lastModifiedDate":"2021-09-24"},{"lineNumber":55,"author":{"gitId":"darrenhoon"},"content":"  * Redirected Help Window\u0027s link to our project\u0027s User Guide page","lastModifiedDate":"2021-09-24"},{"lineNumber":56,"author":{"gitId":"darrenhoon"},"content":"* Developer Guide:","lastModifiedDate":"2021-09-24"},{"lineNumber":57,"author":{"gitId":"darrenhoon"},"content":"    * Amended UML Diagrams","lastModifiedDate":"2021-09-24"},{"lineNumber":58,"author":{"gitId":"darrenhoon"},"content":"* Use Cases:","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"darrenhoon"},"content":"    * Created Use Cases page along with respective use cases","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":61,"author":{"gitId":"darrenhoon"},"content":"## Community","lastModifiedDate":"2021-09-24"},{"lineNumber":62,"author":{"gitId":"darrenhoon"},"content":"* PRs reviewed (with non-trivial review comments): [\\#144](https://github.com/nus-cs2103-AY2122S1/ip/pull/144), [\\#486](https://github.com/nus-cs2103-AY2122S1/ip/pull/486), [\\#173](https://github.com/nus-cs2103-AY2122S1/ip/pull/173)","lastModifiedDate":"2021-09-24"},{"lineNumber":63,"author":{"gitId":"darrenhoon"},"content":"* Contributed to forum discussions: [\\#176](https://github.com/nus-cs2103-AY2122S1/forum/issues/176), [\\#183](https://github.com/nus-cs2103-AY2122S1/forum/issues/183), [\\#296](https://github.com/nus-cs2103-AY2122S1/forum/issues/296)","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"darrenhoon"},"content":"* Updated module setup guide for all students to reflect latest intelliJ settings: [\\#3](https://github.com/se-edu/guides/pull/3)","lastModifiedDate":"2021-09-24"},{"lineNumber":65,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":66,"author":{"gitId":"darrenhoon"},"content":"## Additional","lastModifiedDate":"2021-09-24"},{"lineNumber":67,"author":{"gitId":"darrenhoon"},"content":"* Designed our icon using TraceTogether\u0027s logo as reference","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"darrenhoon":67}},{"path":"docs/team/jianhong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jianh0ng"},"content":"---","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"jianh0ng"},"content":"layout: page","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"jianh0ng"},"content":"title: Jian Hong\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"jianh0ng"},"content":"---","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"jianh0ng"},"content":"### Project: Trace2Gather","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"jianh0ng"},"content":"Trace2Gather is a desktop address book application used for managing hotel guests and rooms. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"jianh0ng"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"jianh0ng"},"content":"* **New Feature**: Edited the ability to list guests and added the ability to list rooms.","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"jianh0ng"},"content":"    * What it does: Allows the user to list all guests and rooms","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"jianh0ng"},"content":"    * Justification: This feature improves the product significantly because a hotel receptionist needs to be able to see all guests and rooms to track their statuses.","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"jianh0ng"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"jianh0ng"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"jianh0ng"},"content":"    * User Guide:","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"jianh0ng"},"content":"        * Added documentation for the features `list room` and `list guests`","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"jianh0ng"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"jianh0ng"},"content":"        * Added target user profile, value proposition and use cases.","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"jianh0ng":22}},{"path":"docs/team/peilinye.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"peilinye"},"content":"---","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"peilinye"},"content":"layout: page","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"peilinye"},"content":"title: Peilin\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"peilinye"},"content":"---","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"peilinye"},"content":"# Project: Trace2Gather","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"peilinye"},"content":"Trace2Gather is a desktop address book application used for managing hotel guests and rooms. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"peilinye"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"peilinye"},"content":"## New Feature(s)","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"peilinye"},"content":"1. Added the functionality of listing rooms by vacancy status.","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"peilinye"},"content":"    * What it does: Shows users the rooms that are vacant or occupied in the GUI.","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"peilinye"},"content":"    * Justification: This feature improves the product significantly by making it more convenient for users to see all rooms that are either vacant or occupied.","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"peilinye"},"content":"## Code contributed","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"peilinye"},"content":"[RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/) (To Be Updated)","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"peilinye"},"content":"* Added UI components necessary for displaying the list of rooms","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"peilinye"},"content":"## Documentation","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"peilinye"},"content":"* User Guide:","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"peilinye"},"content":"  * Added the documentation for the features `list rooms vacant` and `list rooms occupied`.","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"peilinye"},"content":"* Developer Guide:","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"peilinye"},"content":"  * Added use cases, user stories.","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"peilinye":25}},{"path":"docs/team/thomashogben.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"BananaTechs"},"content":"---","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"BananaTechs"},"content":"layout: page","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"BananaTechs"},"content":"title: Thomas\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"BananaTechs"},"content":"---","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"BananaTechs"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"BananaTechs"},"content":"Trace2Gather is a desktop address book application used for managing hotel guests and rooms. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"BananaTechs"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"BananaTechs"},"content":"## New Features:","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"BananaTechs"},"content":"1. `checkin` and `checkout`: Added the ability to check guests in and out of rooms.","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"BananaTechs"},"content":"    * **What it does**: allows the user to assign guests to a room and keep track of which rooms are occupied, as well as check them out when they leave the hotel.","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"BananaTechs"},"content":"    * **Justification**: This feature is indispensable for managing hotels. It\u0027s the whole point, innit? :P","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"BananaTechs"},"content":"    * **Highlights**: This enhancement required adding a fair bit of miscellaneous functionality to other classes that will be important for future additions to the project.","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"BananaTechs"},"content":"    * **Credits**: Original AB3 team, Darren for Room functionality","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"BananaTechs"},"content":"## Further Code contributed:","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"BananaTechs"},"content":"[RepoSense link]() [Coming Soon]","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"BananaTechs"},"content":"* **Testing**:","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"BananaTechs"},"content":"  * `CheckInCommand`, `CheckOutCommand`","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"BananaTechs"},"content":"  * `CheckInCommandParser`, `CheckOutCommandParser`","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"BananaTechs"},"content":"  * Added `TypicalAddressBook`","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"BananaTechs"},"content":"  * Misc. functionality","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"BananaTechs"},"content":"* **Enhancements**:","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"BananaTechs"},"content":"    * Rewrote `Vacancy` class, greatly simplifying it and vanquishing bugs","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"BananaTechs"},"content":"    * Misc. functionality","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"BananaTechs"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"BananaTechs"},"content":"    * User Guide:","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"BananaTechs"},"content":"        * Added documentation for the features `checkin` and `checkout`","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"BananaTechs":34}},{"path":"docs/team/wilbur.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"---","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"layout: page","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"title: Wilbur\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"---","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"### Project: Trace2Gather","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"Trace2Gather is a desktop address book application used for managing hotel guests and rooms. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"wilburrito"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"wilburrito"},"content":"## New Feature(s)","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"wilburrito"},"content":"1. Added the ability to search for guests by name.","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"wilburrito"},"content":"    * Mirrors the logic from AB3 to search for Persons, with a different keyword.","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"wilburrito"},"content":"    * Credit: Original AB3 team.","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"wilburrito"},"content":"2. Change the identification logic for Person objects.","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"wilburrito"},"content":"   * Persons were initially identified by an `Id` field, which was regenerated every time Trace2Gather is opened.","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"wilburrito"},"content":"   * Changed the `Id` field to an `Nric` field instead, which guarantees uniqueness and may eliminate bugs.","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"wilburrito"},"content":"   * Edited the storage such that the `Nric` of a person is stored in ","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"wilburrito"},"content":"* Edited logic for prevention of duplicate person objects","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"wilburrito"},"content":"* **Code contributed**:","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"wilburrito"},"content":"  [RepoSense link]()","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"wilburrito"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"wilburrito"},"content":"    * User Guide:","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"wilburrito"},"content":"        * Adapted user guide to suit our project.","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"wilburrito"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"wilburrito"},"content":"        * Adapted UML diagrams to suit our project.","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"wilburrito"},"content":"        * Adapted developer guide to suit our project.","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"wilburrito"},"content":"    * Miscellaneous","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"wilburrito"},"content":"        * Adapted documentation to remove traces of AB3.","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"wilburrito":32}},{"path":"src/main/java/seedu/address/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2019-02-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application.","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"-":24,"wilburrito":1}},{"path":"src/main/java/seedu/address/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"jianh0ng"},"content":"    private static final double DEFAULT_WIDTH \u003d 1500;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jianh0ng":1,"-":78}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"jianh0ng"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"jianh0ng"},"content":"            \"The person index provided is invalid. Index should be one that is displayed in the Guests panel below.\";","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"jianh0ng"},"content":"    public static final String MESSAGE_INVALID_ROOM_DISPLAYED_INDEX \u003d","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"jianh0ng"},"content":"            \"The room index provided is invalid. Index should be one that is displayed in the Rooms panel below.\";","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"    public static final String MESSAGE_ROOM_LISTED_OVERVIEW \u003d \"Rooms filtered!\";","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"jianh0ng"},"content":"    public static final String MESSAGE_RECORDS_LISTED_OVERVIEW \u003d \"Records filtered!\";","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jianh0ng":5,"-":11,"darrenhoon":1}},{"path":"src/main/java/seedu/address/commons/core/listroomargs/ListRoomArg.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peilinye"},"content":"package seedu.address.commons.core.listroomargs;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"peilinye"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"peilinye"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"peilinye"},"content":"public class ListRoomArg {","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"peilinye"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"List room extra arguments should be \u0027vacant\u0027 or \u0027occupied\u0027.\";","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"peilinye"},"content":"    private static final String VACANT \u003d \"vacant\";","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"peilinye"},"content":"    private static final String OCCUPIED \u003d \"occupied\";","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"peilinye"},"content":"    private String arg;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"peilinye"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"peilinye"},"content":"     * Constructs a ListRoomArgType object with the given argument.","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"peilinye"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"peilinye"},"content":"     * @param arg","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"peilinye"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"peilinye"},"content":"    public ListRoomArg(String arg) {","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"peilinye"},"content":"        requireNonNull(arg);","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"peilinye"},"content":"        checkArgument(isValidListType(arg), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"peilinye"},"content":"        this.arg \u003d arg;","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"peilinye"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"peilinye"},"content":"     * Returns true if a given string is a valid additional argument to list room.","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"peilinye"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"peilinye"},"content":"    public static boolean isValidListType(String type) {","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"peilinye"},"content":"        return type.equals(VACANT) || type.equals(OCCUPIED);","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"peilinye"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"peilinye"},"content":"     * Returns true if the ListRoomArg is \"vacant\".","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"peilinye"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"peilinye"},"content":"    public boolean isVacant() {","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"peilinye"},"content":"        return this.arg.equals(VACANT);","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"peilinye"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"peilinye"},"content":"     * Returns true if the ListRoomArg is \"occupied\".","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"peilinye"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"peilinye"},"content":"    public boolean isOccupied() {","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"peilinye"},"content":"        return this.arg.equals(OCCUPIED);","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"peilinye"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"peilinye"},"content":"     * Returns true if both refer to ListRoomArg with the same argument.","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"peilinye"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"peilinye"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"peilinye"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"peilinye"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"peilinye"},"content":"                || (other instanceof ListRoomArg // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"peilinye"},"content":"                \u0026\u0026 arg.equals(((ListRoomArg) other).arg)); // state check","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"peilinye"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"peilinye":54}},{"path":"src/main/java/seedu/address/commons/core/listtype/ListType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianh0ng"},"content":"package seedu.address.commons.core.listtype;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"jianh0ng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"jianh0ng"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"jianh0ng"},"content":"public class ListType {","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"jianh0ng"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"List types should be \u0027rooms\u0027, \u0027guests\u0027 or \u0027records\u0027.\";","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"jianh0ng"},"content":"    private static final String ROOMS \u003d \"rooms\";","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"jianh0ng"},"content":"    private static final String GUESTS \u003d \"guests\";","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"jianh0ng"},"content":"    private static final String RECORDS \u003d \"records\";","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"jianh0ng"},"content":"    private String type;","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"jianh0ng"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"jianh0ng"},"content":"     * Constructs a ListType object with given type.","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"jianh0ng"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"jianh0ng"},"content":"     * @param type","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"jianh0ng"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"jianh0ng"},"content":"    public ListType(String type) {","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"jianh0ng"},"content":"        requireNonNull(type);","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"jianh0ng"},"content":"        checkArgument(isValidListType(type), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"jianh0ng"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"jianh0ng"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"jianh0ng"},"content":"     * Returns true if a given string is a valid list type.","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"jianh0ng"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"jianh0ng"},"content":"    public static boolean isValidListType(String type) {","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"jianh0ng"},"content":"        return type.equals(ROOMS) || type.equals(GUESTS) || type.equals(RECORDS);","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"jianh0ng"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"jianh0ng"},"content":"     * Returns true if the ListType is a GUESTS type.","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"jianh0ng"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"jianh0ng"},"content":"    public boolean isGuestsType() {","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"jianh0ng"},"content":"        return this.type.equals(GUESTS);","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"jianh0ng"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"jianh0ng"},"content":"     * Returns true if the ListType is a ROOMS type.","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"jianh0ng"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"jianh0ng"},"content":"    public boolean isRoomsType() {","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"jianh0ng"},"content":"        return this.type.equals(ROOMS);","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"jianh0ng"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"jianh0ng"},"content":"     * Returns true if the ListType is a RECORDS type.","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"jianh0ng"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"jianh0ng"},"content":"    public boolean isRecordsType() {","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"jianh0ng"},"content":"        return this.type.equals(RECORDS);","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"peilinye"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"peilinye"},"content":"     * Returns true if both refer to ListType with the same argument.","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"peilinye"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"peilinye"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"peilinye"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"peilinye"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"peilinye"},"content":"                || (other instanceof ListType // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"peilinye"},"content":"                \u0026\u0026 type.equals(((ListType) other).type)); // state check","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"jianh0ng"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"peilinye":10,"jianh0ng":52}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.model.residency.Residency;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"import seedu.address.model.room.Room;","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":38,"author":{"gitId":"darrenhoon"},"content":"    /** Returns an unmodifiable view of the filtered list of rooms */","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"darrenhoon"},"content":"    ObservableList\u003cRoom\u003e getFilteredRoomList();","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"jianh0ng"},"content":"    /** Returns an unmodifiable view of the filtered list of records */","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"jianh0ng"},"content":"    ObservableList\u003cResidency\u003e getFilteredRecordList();","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"jianh0ng":5,"-":50,"darrenhoon":4}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.model.residency.Residency;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":"import seedu.address.model.room.Room;","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":69,"author":{"gitId":"darrenhoon"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":70,"author":{"gitId":"darrenhoon"},"content":"    public ObservableList\u003cRoom\u003e getFilteredRoomList() {","lastModifiedDate":"2021-09-23"},{"lineNumber":71,"author":{"gitId":"darrenhoon"},"content":"        return model.getFilteredRoomList();","lastModifiedDate":"2021-09-23"},{"lineNumber":72,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":73,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":74,"author":{"gitId":"jianh0ng"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"jianh0ng"},"content":"    public ObservableList\u003cResidency\u003e getFilteredRecordList() {","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"jianh0ng"},"content":"        return model.getFilteredRecordList();","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jianh0ng":6,"-":81,"darrenhoon":6}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"jianh0ng"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a guest to the address book. \"","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"jianh0ng"},"content":"            + PREFIX_NRIC + \"ID \"","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"jianh0ng"},"content":"            + PREFIX_TAG + \"SeafoodAllergy\";","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"jianh0ng"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New guest added: %1$s\";","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"jianh0ng"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This guest already exists in the address book\";","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jianh0ng":5,"-":62,"darrenhoon":1}},{"path":"src/main/java/seedu/address/logic/commands/AddRoomCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peilinye"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"peilinye"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"peilinye"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"peilinye"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"peilinye"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"peilinye"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"peilinye"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"peilinye"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"peilinye"},"content":"import seedu.address.model.room.Room;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"peilinye"},"content":"import seedu.address.model.room.RoomNumber;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"peilinye"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"peilinye"},"content":"public class AddRoomCommand extends Command {","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"peilinye"},"content":"    public static final String COMMAND_WORD \u003d \"addroom\";","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"peilinye"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"peilinye"},"content":"            + \": Adds the specified number of rooms with the specified type. \"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"peilinye"},"content":"            + \"Maximum number of rooms allowed is 999.\\n\"","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"peilinye"},"content":"            + \"Parameters: NUMBER_OF_ROOMS (must be a positive integer) \"","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"peilinye"},"content":"            + PREFIX_TAG + \"TAG\\n\"","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"peilinye"},"content":"            + \"Example: \" + COMMAND_WORD + \" 50 \"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"peilinye"},"content":"            + PREFIX_TAG + \"normal\";","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"peilinye"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"%1$s new rooms of type %2$s added.\";","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"peilinye"},"content":"    public static final String MESSAGE_EXCEEDED_MAX_NUMBER_OF_ROOMS \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"peilinye"},"content":"            \"Adding %1$s rooms exceeds maximum 999 rooms allowed.\";","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"peilinye"},"content":"    public static final String MESSAGE_INVALID_INTEGER \u003d \"The number of rooms to add should be a positive integer\";","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"peilinye"},"content":"    private final int number;","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"peilinye"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"peilinye"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"peilinye"},"content":"     * Creates an AddRoomCommand to add the specified number of {@code Rooms} with the specified {@code Tags}","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"peilinye"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"peilinye"},"content":"     * @param number The number of rooms to be added.","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"peilinye"},"content":"     * @param tags The tags to be set for the rooms.","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"peilinye"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"peilinye"},"content":"    public AddRoomCommand(int number, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"peilinye"},"content":"        requireAllNonNull(number, tags);","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"peilinye"},"content":"        this.number \u003d number;","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"peilinye"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"peilinye"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"peilinye"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"peilinye"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"peilinye"},"content":"        int numRooms \u003d model.getNumberOfRooms();","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"peilinye"},"content":"        if (this.number + numRooms \u003e 999) {","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"peilinye"},"content":"            throw new CommandException(String.format(MESSAGE_EXCEEDED_MAX_NUMBER_OF_ROOMS, number));","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"peilinye"},"content":"        int totalNumOfRooms \u003d numRooms + number;","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"peilinye"},"content":"        for (int i \u003d numRooms + 1; i \u003c\u003d totalNumOfRooms; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"peilinye"},"content":"            String roomNumber \u003d String.format(\"%03d\", i);","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"peilinye"},"content":"            Room room \u003d new Room(new RoomNumber(roomNumber), tags);","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"peilinye"},"content":"            model.addRoom(room);","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"peilinye"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, number, tags.toString()));","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"peilinye"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"peilinye"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"peilinye"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"peilinye"},"content":"                || (other instanceof AddRoomCommand // instanceof handles nulls","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"peilinye"},"content":"                \u0026\u0026 number \u003d\u003d ((AddRoomCommand) other).number","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"peilinye"},"content":"                \u0026\u0026 tags.equals(((AddRoomCommand) other).tags));","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"peilinye"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"peilinye":75}},{"path":"src/main/java/seedu/address/logic/commands/CheckInCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BananaTechs"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"BananaTechs"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"BananaTechs"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"BananaTechs"},"content":"import java.util.List;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"BananaTechs"},"content":"import java.util.Set;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.room.Room;","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.room.Vacancy;","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"BananaTechs"},"content":"/**","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"BananaTechs"},"content":" * Checks a group of persons into a room","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"BananaTechs"},"content":" */","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"BananaTechs"},"content":"public class CheckInCommand extends Command {","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"BananaTechs"},"content":"    public static final String COMMAND_WORD \u003d \"checkin\";","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"BananaTechs"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"jianh0ng"},"content":"            + \": Checks in guests to a room \"","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"jianh0ng"},"content":"            + \"using their index numbers used in the displayed guest list.\\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"BananaTechs"},"content":"            + \"Parameters: INDEX_ROOM (must be a positive integer) \"","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"BananaTechs"},"content":"            + \"g/ [GUEST_INDEX] (can be used multiple times)\\n\"","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"BananaTechs"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"BananaTechs"},"content":"            + \"g/ 43 g/ 22\";","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"BananaTechs"},"content":"    public static final String MESSAGE_CHECKIN_SUCCESS \u003d \"Room Checked In: %1$s\";","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"BananaTechs"},"content":"    public static final String MESSAGE_NO_GUESTS \u003d \"At least one person must be checked into the room.\";","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"BananaTechs"},"content":"    public static final String MESSAGE_ROOM_IS_OCCUPIED \u003d \"Room is currently occupied.\";","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"jianh0ng"},"content":"    public static final String MESSAGE_PERSON_ALREADY_CHECKED_IN \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"jianh0ng"},"content":"            \"One or more guests have already been checked into another room.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"jianh0ng"},"content":"    public static final String MESSAGE_PERSON_INVALID_INDEX \u003d \"Invalid guest number for one or more guests.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"jianh0ng"},"content":"    public static final String MESSAGE_ROOM_INVALID_INDEX \u003d \"Invalid room number.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"BananaTechs"},"content":"    private final Index roomIndex;","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"BananaTechs"},"content":"    private final List\u003cIndex\u003e guestIndexes;","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"BananaTechs"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"BananaTechs"},"content":"     * @param roomIndex The index of the room to be checked into","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"BananaTechs"},"content":"     * @param guestIndexes A list of the indexes of guests to check into the room","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"BananaTechs"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":46,"author":{"gitId":"BananaTechs"},"content":"    public CheckInCommand(Index roomIndex, List\u003cIndex\u003e guestIndexes) {","lastModifiedDate":"2021-09-24"},{"lineNumber":47,"author":{"gitId":"BananaTechs"},"content":"        this.roomIndex \u003d roomIndex;","lastModifiedDate":"2021-09-24"},{"lineNumber":48,"author":{"gitId":"BananaTechs"},"content":"        this.guestIndexes \u003d guestIndexes;","lastModifiedDate":"2021-09-24"},{"lineNumber":49,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":51,"author":{"gitId":"BananaTechs"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"BananaTechs"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"BananaTechs"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-09-24"},{"lineNumber":54,"author":{"gitId":"BananaTechs"},"content":"        List\u003cPerson\u003e lastShownPersonList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-09-24"},{"lineNumber":55,"author":{"gitId":"BananaTechs"},"content":"        List\u003cRoom\u003e lastShownRoomList \u003d model.getFilteredRoomList();","lastModifiedDate":"2021-09-24"},{"lineNumber":56,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":57,"author":{"gitId":"BananaTechs"},"content":"        if (roomIndex.getZeroBased() \u003e\u003d lastShownRoomList.size()) {","lastModifiedDate":"2021-09-24"},{"lineNumber":58,"author":{"gitId":"BananaTechs"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ROOM_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-24"},{"lineNumber":59,"author":{"gitId":"BananaTechs"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":60,"author":{"gitId":"BananaTechs"},"content":"        for (Index guestIndex : guestIndexes) {","lastModifiedDate":"2021-09-24"},{"lineNumber":61,"author":{"gitId":"BananaTechs"},"content":"            if (guestIndex.getZeroBased() \u003e\u003d lastShownPersonList.size()) {","lastModifiedDate":"2021-09-24"},{"lineNumber":62,"author":{"gitId":"BananaTechs"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-24"},{"lineNumber":63,"author":{"gitId":"BananaTechs"},"content":"            }","lastModifiedDate":"2021-09-24"},{"lineNumber":64,"author":{"gitId":"BananaTechs"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":65,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":66,"author":{"gitId":"BananaTechs"},"content":"        Room roomToEdit \u003d lastShownRoomList.get(roomIndex.getZeroBased());","lastModifiedDate":"2021-09-24"},{"lineNumber":67,"author":{"gitId":"BananaTechs"},"content":"        if (model.getResidency(roomToEdit).isPresent()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"BananaTechs"},"content":"            throw new CommandException(MESSAGE_ROOM_IS_OCCUPIED);","lastModifiedDate":"2021-09-25"},{"lineNumber":69,"author":{"gitId":"BananaTechs"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":70,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":71,"author":{"gitId":"BananaTechs"},"content":"        Set\u003cPerson\u003e guests \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-09-24"},{"lineNumber":72,"author":{"gitId":"BananaTechs"},"content":"        for (Index guestIndex : guestIndexes) {","lastModifiedDate":"2021-09-24"},{"lineNumber":73,"author":{"gitId":"BananaTechs"},"content":"            Person guestToAdd \u003d lastShownPersonList.get(guestIndex.getZeroBased());","lastModifiedDate":"2021-09-24"},{"lineNumber":74,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"BananaTechs"},"content":"            if (model.getResidency(guestToAdd).isPresent()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"BananaTechs"},"content":"                throw new CommandException(","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"BananaTechs"},"content":"                        String.format(MESSAGE_PERSON_ALREADY_CHECKED_IN, guestIndex.getOneBased()));","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"BananaTechs"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"BananaTechs"},"content":"            guests.add(guestToAdd);","lastModifiedDate":"2021-09-24"},{"lineNumber":81,"author":{"gitId":"BananaTechs"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":82,"author":{"gitId":"BananaTechs"},"content":"        if (guests.isEmpty()) {","lastModifiedDate":"2021-09-24"},{"lineNumber":83,"author":{"gitId":"BananaTechs"},"content":"            throw new CommandException(MESSAGE_NO_GUESTS);","lastModifiedDate":"2021-09-24"},{"lineNumber":84,"author":{"gitId":"BananaTechs"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":85,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":86,"author":{"gitId":"peilinye"},"content":"        Room editedRoom \u003d new Room(roomToEdit.getRoomNumber(), Vacancy.OCCUPIED, guests, roomToEdit.getTags());","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":88,"author":{"gitId":"BananaTechs"},"content":"        model.setRoom(roomToEdit, editedRoom);","lastModifiedDate":"2021-09-24"},{"lineNumber":89,"author":{"gitId":"BananaTechs"},"content":"        model.register(editedRoom, guests);","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"BananaTechs"},"content":"        model.updateFilteredRoomList(Model.PREDICATE_SHOW_ALL_ROOMS);","lastModifiedDate":"2021-09-24"},{"lineNumber":91,"author":{"gitId":"jianh0ng"},"content":"        model.updateFilteredRecordList(Model.PREDICATE_SHOW_ALL_RECORDS);","lastModifiedDate":"2021-11-01"},{"lineNumber":92,"author":{"gitId":"BananaTechs"},"content":"        return new CommandResult(String.format(MESSAGE_CHECKIN_SUCCESS, editedRoom));","lastModifiedDate":"2021-09-24"},{"lineNumber":93,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":94,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":95,"author":{"gitId":"BananaTechs"},"content":"    @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":96,"author":{"gitId":"BananaTechs"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-24"},{"lineNumber":97,"author":{"gitId":"BananaTechs"},"content":"        // short circuit if same object","lastModifiedDate":"2021-09-24"},{"lineNumber":98,"author":{"gitId":"BananaTechs"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-09-24"},{"lineNumber":99,"author":{"gitId":"BananaTechs"},"content":"            return true;","lastModifiedDate":"2021-09-24"},{"lineNumber":100,"author":{"gitId":"BananaTechs"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":101,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":102,"author":{"gitId":"BananaTechs"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-09-24"},{"lineNumber":103,"author":{"gitId":"BananaTechs"},"content":"        if (!(other instanceof CheckInCommand)) {","lastModifiedDate":"2021-09-24"},{"lineNumber":104,"author":{"gitId":"BananaTechs"},"content":"            return false;","lastModifiedDate":"2021-09-24"},{"lineNumber":105,"author":{"gitId":"BananaTechs"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":106,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":107,"author":{"gitId":"BananaTechs"},"content":"        // state check","lastModifiedDate":"2021-09-24"},{"lineNumber":108,"author":{"gitId":"BananaTechs"},"content":"        CheckInCommand c \u003d (CheckInCommand) other;","lastModifiedDate":"2021-09-24"},{"lineNumber":109,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":110,"author":{"gitId":"BananaTechs"},"content":"        return roomIndex.equals(c.roomIndex)","lastModifiedDate":"2021-09-24"},{"lineNumber":111,"author":{"gitId":"BananaTechs"},"content":"                \u0026\u0026 guestIndexes.equals(c.guestIndexes);","lastModifiedDate":"2021-09-24"},{"lineNumber":112,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":113,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":114,"author":{"gitId":"BananaTechs"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"peilinye":1,"jianh0ng":7,"BananaTechs":106}},{"path":"src/main/java/seedu/address/logic/commands/CheckOutCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BananaTechs"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"BananaTechs"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"BananaTechs"},"content":"import java.util.List;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"BananaTechs"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.residency.Residency;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.room.Room;","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"BananaTechs"},"content":"/**","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"BananaTechs"},"content":" * Checks out all the persons in a room","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"BananaTechs"},"content":" */","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"BananaTechs"},"content":"public class CheckOutCommand extends Command {","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"BananaTechs"},"content":"    public static final String COMMAND_WORD \u003d \"checkout\";","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"BananaTechs"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"jianh0ng"},"content":"            + \": Checks out all the guests in a room \"","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"jianh0ng"},"content":"            + \"using it\u0027s index number in the displayed list (not room number).\\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"BananaTechs"},"content":"            + \"Parameters: INDEX_ROOM (must be a positive integer)\\n\"","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"BananaTechs"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"BananaTechs"},"content":"    public static final String MESSAGE_CHECKOUT_SUCCESS \u003d \"Room Checked Out: %1$s\";","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"BananaTechs"},"content":"    public static final String MESSAGE_ROOM_IS_VACANT \u003d \"Room is already vacant.\";","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"BananaTechs"},"content":"    private final Index roomIndex;","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"BananaTechs"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"BananaTechs"},"content":"     * Creates a CheckOutCommand to check out the {@code Room} at the specified {@code Index}.","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"BananaTechs"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"BananaTechs"},"content":"    public CheckOutCommand(Index roomIndex) {","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"BananaTechs"},"content":"        this.roomIndex \u003d roomIndex;","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"BananaTechs"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"BananaTechs"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"BananaTechs"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"BananaTechs"},"content":"        List\u003cRoom\u003e lastShownRoomList \u003d model.getFilteredRoomList();","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"BananaTechs"},"content":"        if (roomIndex.getZeroBased() \u003e\u003d lastShownRoomList.size()) {","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"BananaTechs"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ROOM_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-24"},{"lineNumber":46,"author":{"gitId":"BananaTechs"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":47,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":48,"author":{"gitId":"BananaTechs"},"content":"        Room roomToEdit \u003d lastShownRoomList.get(roomIndex.getZeroBased());","lastModifiedDate":"2021-09-24"},{"lineNumber":49,"author":{"gitId":"BananaTechs"},"content":"        Optional\u003cResidency\u003e residency \u003d model.getResidency(roomToEdit);","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"BananaTechs"},"content":"        if (residency.isEmpty()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"BananaTechs"},"content":"            throw new CommandException(MESSAGE_ROOM_IS_VACANT);","lastModifiedDate":"2021-09-25"},{"lineNumber":52,"author":{"gitId":"BananaTechs"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":54,"author":{"gitId":"BananaTechs"},"content":"        //Resets room to default (vacant, no guests)","lastModifiedDate":"2021-09-24"},{"lineNumber":55,"author":{"gitId":"peilinye"},"content":"        Room editedRoom \u003d new Room(roomToEdit.getRoomNumber(), roomToEdit.getTags());","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"BananaTechs"},"content":"        model.setRoom(roomToEdit, editedRoom);","lastModifiedDate":"2021-09-24"},{"lineNumber":57,"author":{"gitId":"jianh0ng"},"content":"        residency.ifPresent(model::record);","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"BananaTechs"},"content":"        residency.ifPresent(model::removeResidency);","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"BananaTechs"},"content":"        residency.ifPresent(Residency::checkOut);","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"BananaTechs"},"content":"        model.updateFilteredRoomList(Model.PREDICATE_SHOW_ALL_ROOMS);","lastModifiedDate":"2021-09-24"},{"lineNumber":61,"author":{"gitId":"BananaTechs"},"content":"        return new CommandResult(String.format(MESSAGE_CHECKOUT_SUCCESS, editedRoom));","lastModifiedDate":"2021-09-24"},{"lineNumber":62,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":64,"author":{"gitId":"BananaTechs"},"content":"    @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":65,"author":{"gitId":"BananaTechs"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-24"},{"lineNumber":66,"author":{"gitId":"BananaTechs"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-24"},{"lineNumber":67,"author":{"gitId":"BananaTechs"},"content":"                || (other instanceof CheckOutCommand // instanceof handles nulls","lastModifiedDate":"2021-09-24"},{"lineNumber":68,"author":{"gitId":"BananaTechs"},"content":"                \u0026\u0026 roomIndex.equals(((CheckOutCommand) other).roomIndex)); // state check","lastModifiedDate":"2021-09-24"},{"lineNumber":69,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":70,"author":{"gitId":"BananaTechs"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"peilinye":1,"jianh0ng":3,"BananaTechs":66}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"BananaTechs"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.residency.Residency;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"BananaTechs"},"content":"    public static final String MESSAGE_PERSON_CHECKED_IN \u003d \"%1$s is still checked into Room %2$s\";","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"BananaTechs"},"content":"        Optional\u003cResidency\u003e residency \u003d model.getResidency(personToDelete);","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"BananaTechs"},"content":"        if (residency.isPresent()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"BananaTechs"},"content":"            throw new CommandException(","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"BananaTechs"},"content":"                    String.format(MESSAGE_PERSON_CHECKED_IN, personToDelete.getName(), residency.get().getRoom()));","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"BananaTechs"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"BananaTechs":10,"-":53}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"wilburrito"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"darrenhoon"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Guest: %1$s\";","lastModifiedDate":"2021-11-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"wilburrito"},"content":"        Nric updatedNric \u003d editPersonDescriptor.getNric().orElse(personToEdit.getNric());","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":105,"author":{"gitId":"jianh0ng"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedNric, updatedTags);","lastModifiedDate":"2021-11-02"},{"lineNumber":106,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"wilburrito"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"wilburrito"},"content":"    public String toString() {","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"wilburrito"},"content":"        return this.editPersonDescriptor.toString();","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":140,"author":{"gitId":"wilburrito"},"content":"        private Nric nric;","lastModifiedDate":"2021-10-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":153,"author":{"gitId":"wilburrito"},"content":"            setNric(toCopy.nric);","lastModifiedDate":"2021-10-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"wilburrito"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, nric, address, tags);","lastModifiedDate":"2021-10-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"wilburrito"},"content":"        public void setNric(Nric nric) {","lastModifiedDate":"2021-10-13"},{"lineNumber":190,"author":{"gitId":"wilburrito"},"content":"            this.nric \u003d nric;","lastModifiedDate":"2021-10-13"},{"lineNumber":191,"author":{"gitId":"wilburrito"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":192,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":193,"author":{"gitId":"wilburrito"},"content":"        public Optional\u003cNric\u003e getNric() {","lastModifiedDate":"2021-10-13"},{"lineNumber":194,"author":{"gitId":"wilburrito"},"content":"            return Optional.ofNullable(nric);","lastModifiedDate":"2021-10-13"},{"lineNumber":195,"author":{"gitId":"wilburrito"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":196,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"wilburrito"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":223,"author":{"gitId":"wilburrito"},"content":"        public String toString() {","lastModifiedDate":"2021-10-13"},{"lineNumber":224,"author":{"gitId":"wilburrito"},"content":"            return this.name.toString() + this.phone.toString() + this.email.toString() + this.email.toString()","lastModifiedDate":"2021-10-13"},{"lineNumber":225,"author":{"gitId":"wilburrito"},"content":"                    + this.nric.toString() + this.address.toString() + this.tags.toString();","lastModifiedDate":"2021-10-13"},{"lineNumber":226,"author":{"gitId":"wilburrito"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":227,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":244,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":246,"author":{"gitId":"wilburrito"},"content":"                    \u0026\u0026 getNric().equals(e.getNric())","lastModifiedDate":"2021-10-13"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":251,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"jianh0ng":1,"BananaTechs":1,"-":223,"wilburrito":25,"darrenhoon":1}},{"path":"src/main/java/seedu/address/logic/commands/FindGuestCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"wilburrito"},"content":" * Finds and lists all Guests in Trace2Gather whose name contains any of the argument keywords.","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"wilburrito"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"wilburrito"},"content":"public class FindGuestCommand extends Command {","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"wilburrito"},"content":"    public static final String COMMAND_WORD \u003d \"guest\";","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"wilburrito"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all guests whose names contain any of \"","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"wilburrito"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"wilburrito"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"wilburrito"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"wilburrito"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"wilburrito"},"content":"    public FindGuestCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"wilburrito"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"wilburrito"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"wilburrito"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"wilburrito"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"wilburrito"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"wilburrito"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"wilburrito"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"wilburrito"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"wilburrito"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"wilburrito"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"wilburrito"},"content":"                || (other instanceof FindGuestCommand // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"wilburrito"},"content":"                \u0026\u0026 predicate.equals(((FindGuestCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"wilburrito"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"wilburrito":41}},{"path":"src/main/java/seedu/address/logic/commands/FindRecordCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianh0ng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"jianh0ng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.model.residency.exceptions.ResidencyContainsKeywordsPredicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"jianh0ng"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"jianh0ng"},"content":" * Finds and lists all past residencies in Trace2Gather whose data contains any of the argument keywords.","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"jianh0ng"},"content":" * Keyword matching is case sensitive.","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"jianh0ng"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"jianh0ng"},"content":"public class FindRecordCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"jianh0ng"},"content":"    public static final String COMMAND_WORD \u003d \"record\";","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"jianh0ng"},"content":"    //TODO add desc","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"jianh0ng"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds the records with the given keywords.\";","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"jianh0ng"},"content":"    private final ResidencyContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"jianh0ng"},"content":"    public FindRecordCommand(ResidencyContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"jianh0ng"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"jianh0ng"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"jianh0ng"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"jianh0ng"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"jianh0ng"},"content":"        model.updateFilteredRecordList(predicate);","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"jianh0ng"},"content":"        return new CommandResult(Messages.MESSAGE_RECORDS_LISTED_OVERVIEW);","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"jianh0ng"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"jianh0ng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"jianh0ng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"jianh0ng"},"content":"                || (other instanceof FindRecordCommand // instanceof handles nulls","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"jianh0ng"},"content":"                \u0026\u0026 predicate.equals(((FindRecordCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"jianh0ng"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"jianh0ng":40}},{"path":"src/main/java/seedu/address/logic/commands/FindRoomCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"import seedu.address.model.room.RoomNumberContainsKeywordsPredicate;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":" * Finds and lists all rooms in address book whose room number contains any of the argument keywords.","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"public class FindRoomCommand extends Command {","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"    public static final String COMMAND_WORD \u003d \"room\";","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds the specific room number\";","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":"    private final RoomNumberContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"darrenhoon"},"content":"    public FindRoomCommand(RoomNumberContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"darrenhoon"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"darrenhoon"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"darrenhoon"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"darrenhoon"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"darrenhoon"},"content":"        model.updateFilteredRoomList(predicate);","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"darrenhoon"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"darrenhoon"},"content":"                String.format(Messages.MESSAGE_ROOM_LISTED_OVERVIEW));","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"darrenhoon"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"darrenhoon"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"darrenhoon"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"darrenhoon"},"content":"                || (other instanceof FindRoomCommand // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"darrenhoon"},"content":"                \u0026\u0026 predicate.equals(((FindRoomCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"darrenhoon":38}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"jianh0ng"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"jianh0ng"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_RECORDS;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"jianh0ng"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_ROOMS;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"peilinye"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"peilinye"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.commons.core.listtype.ListType;","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"peilinye"},"content":"import seedu.address.model.room.Room;","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"jianh0ng"},"content":"    public static final String MESSAGE_SUCCESS_GUESTS \u003d \"Listed all guests\";","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"jianh0ng"},"content":"    public static final String MESSAGE_SUCCESS_ROOMS \u003d \"Listed all rooms\";","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"jianh0ng"},"content":"    public static final String MESSAGE_SUCCESS_RECORDS \u003d \"Listed all records\";","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"peilinye"},"content":"    public static final String MESSAGE_SUCCESS_ROOMS_TYPE \u003d \"Listed all rooms of indicated type\";","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"jianh0ng"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"peilinye"},"content":"            + \": Lists guests or rooms based on given arguments.\\n\"","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"jianh0ng"},"content":"            + \"Parameters: LISTTYPE (\u0027guests\u0027, \u0027rooms\u0027 or \u0027records\u0027), \"","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"peilinye"},"content":"            + \"(optional) LISTROOMARG (\u0027vacant\u0027 or \u0027occupied\u0027) (only for listing rooms).\\n\"","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"peilinye"},"content":"            + \"Examples: \" + COMMAND_WORD + \" guests, \"","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"jianh0ng"},"content":"            + COMMAND_WORD + \" records, \"","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"peilinye"},"content":"            + COMMAND_WORD + \" rooms, \"","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"peilinye"},"content":"            + COMMAND_WORD + \" rooms occupied, \"","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"peilinye"},"content":"            + COMMAND_WORD + \" rooms vacant\";","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"jianh0ng"},"content":"    private ListType listType;","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"peilinye"},"content":"    private Predicate\u003cRoom\u003e predicate;","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"jianh0ng"},"content":"    public ListCommand(ListType listType) {","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"jianh0ng"},"content":"        this.listType \u003d listType;","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"peilinye"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"peilinye"},"content":"     * Constructs a ListCommand object with the ListType and predicate.","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"peilinye"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"peilinye"},"content":"     * @param listType The type to be listed.","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"peilinye"},"content":"     * @param predicate The predicate to filter the objects to be listed by.","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"peilinye"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"peilinye"},"content":"    public ListCommand(ListType listType, Predicate\u003cRoom\u003e predicate) {","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"peilinye"},"content":"        this.listType \u003d listType;","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"peilinye"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"jianh0ng"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"jianh0ng"},"content":"     * Returns true if the ListCommand lists guests.","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"jianh0ng"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"jianh0ng"},"content":"    public boolean isGuests() {","lastModifiedDate":"2021-09-19"},{"lineNumber":65,"author":{"gitId":"jianh0ng"},"content":"        return this.listType.isGuestsType();","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"jianh0ng"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":69,"author":{"gitId":"jianh0ng"},"content":"     * Returns true if the ListCommand lists rooms.","lastModifiedDate":"2021-09-19"},{"lineNumber":70,"author":{"gitId":"jianh0ng"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":71,"author":{"gitId":"jianh0ng"},"content":"    public boolean isRooms() {","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"jianh0ng"},"content":"        return this.listType.isRoomsType();","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":74,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"jianh0ng"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"jianh0ng"},"content":"     * Returns true if the ListCommand lists records.","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"jianh0ng"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"jianh0ng"},"content":"    public boolean isRecords() {","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"jianh0ng"},"content":"        return this.listType.isRecordsType();","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"jianh0ng"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"jianh0ng"},"content":"        if (this.isGuests()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"jianh0ng"},"content":"            return new CommandResult(MESSAGE_SUCCESS_GUESTS);","lastModifiedDate":"2021-09-19"},{"lineNumber":88,"author":{"gitId":"jianh0ng"},"content":"        } else if (this.isRooms()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":89,"author":{"gitId":"peilinye"},"content":"            if (this.predicate \u003d\u003d null) {","lastModifiedDate":"2021-09-26"},{"lineNumber":90,"author":{"gitId":"jianh0ng"},"content":"                model.updateFilteredRoomList(PREDICATE_SHOW_ALL_ROOMS);","lastModifiedDate":"2021-09-19"},{"lineNumber":91,"author":{"gitId":"jianh0ng"},"content":"                return new CommandResult(MESSAGE_SUCCESS_ROOMS);","lastModifiedDate":"2021-09-19"},{"lineNumber":92,"author":{"gitId":"peilinye"},"content":"            } else {","lastModifiedDate":"2021-09-26"},{"lineNumber":93,"author":{"gitId":"peilinye"},"content":"                model.updateFilteredRoomList(predicate);","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"peilinye"},"content":"                return new CommandResult(MESSAGE_SUCCESS_ROOMS_TYPE);","lastModifiedDate":"2021-09-26"},{"lineNumber":95,"author":{"gitId":"peilinye"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":96,"author":{"gitId":"jianh0ng"},"content":"        } else if (this.isRecords()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"jianh0ng"},"content":"            model.updateFilteredRecordList(PREDICATE_SHOW_ALL_RECORDS);","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"jianh0ng"},"content":"            return new CommandResult(MESSAGE_SUCCESS_RECORDS);","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"jianh0ng"},"content":"        } else {","lastModifiedDate":"2021-09-19"},{"lineNumber":100,"author":{"gitId":"jianh0ng"},"content":"            throw new CommandException(MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"jianh0ng"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"peilinye"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"peilinye"},"content":"     * Returns true if the both are ListCommands with the same arguments.","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"peilinye"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"peilinye"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"peilinye"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"peilinye"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"peilinye"},"content":"            return true;","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"peilinye"},"content":"        } else if (other instanceof ListCommand) {","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"peilinye"},"content":"            ListCommand otherListCommand \u003d (ListCommand) other;","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"peilinye"},"content":"            return listType.equals(otherListCommand.listType)","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"peilinye"},"content":"                    \u0026\u0026 Objects.equals(predicate, otherListCommand.predicate);","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"peilinye"},"content":"        return false;","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"peilinye":44,"jianh0ng":51,"-":23}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"wilburrito"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"wilburrito"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"wilburrito"},"content":"                        PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_NRIC, PREFIX_TAG);","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"wilburrito"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_NRIC)","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"wilburrito"},"content":"        Nric nric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get());","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"wilburrito"},"content":"        Person person \u003d Person.createPerson(name, phone, email, address, nric, tagList);","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"-":56,"wilburrito":7}},{"path":"src/main/java/seedu/address/logic/parser/AddRoomCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peilinye"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"peilinye"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"peilinye"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"peilinye"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"peilinye"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"peilinye"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"peilinye"},"content":"import seedu.address.logic.commands.AddRoomCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"peilinye"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"peilinye"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"peilinye"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"peilinye"},"content":" * Parses input arguments and creates a new AddRoomCommand object","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"peilinye"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"peilinye"},"content":"public class AddRoomCommandParser implements Parser\u003cAddRoomCommand\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"peilinye"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"peilinye"},"content":"     * Parses the given {@code String} of arguments in the context of the AddRoomCommand","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"peilinye"},"content":"     * and returns an AddRoomCommand object for execution.","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"peilinye"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"peilinye"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"peilinye"},"content":"    public AddRoomCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"peilinye"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"peilinye"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TAG);","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"peilinye"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TAG)","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"peilinye"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"peilinye"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"peilinye"},"content":"                    AddRoomCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"peilinye"},"content":"        int numberOfRooms;","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"peilinye"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"peilinye"},"content":"            numberOfRooms \u003d ParserUtil.parseNumber(argMultimap.getPreamble());","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"peilinye"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"peilinye"},"content":"            throw new ParseException(AddRoomCommand.MESSAGE_INVALID_INTEGER);","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"peilinye"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"peilinye"},"content":"        return new AddRoomCommand(numberOfRooms, tagList);","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"peilinye"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"peilinye"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"peilinye"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"peilinye"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"peilinye"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"peilinye"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"peilinye"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"peilinye":54}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"peilinye"},"content":"import seedu.address.logic.commands.AddRoomCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"import seedu.address.logic.commands.CheckInCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"wilburrito"},"content":"import seedu.address.logic.commands.CheckOutCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"wilburrito"},"content":"import seedu.address.logic.commands.FindGuestCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.logic.commands.FindRecordCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"wilburrito"},"content":"import seedu.address.logic.commands.FindRoomCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"darrenhoon"},"content":"        /*","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"darrenhoon"},"content":"        */","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"wilburrito"},"content":"        case FindGuestCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"wilburrito"},"content":"            return new FindGuestCommandParser().parse(arguments);","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"darrenhoon"},"content":"        case FindRoomCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"darrenhoon"},"content":"            return new FindRoomCommandParser().parse(arguments);","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"jianh0ng"},"content":"        case FindRecordCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"jianh0ng"},"content":"            return new FindRecordCommandParser().parse(arguments);","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"jianh0ng"},"content":"            return new ListCommandParser().parse(arguments);","lastModifiedDate":"2021-09-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":87,"author":{"gitId":"BananaTechs"},"content":"        case CheckInCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-23"},{"lineNumber":88,"author":{"gitId":"BananaTechs"},"content":"            return new CheckInCommandParser().parse(arguments);","lastModifiedDate":"2021-09-24"},{"lineNumber":89,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":90,"author":{"gitId":"BananaTechs"},"content":"        case CheckOutCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-23"},{"lineNumber":91,"author":{"gitId":"BananaTechs"},"content":"            return new CheckOutCommandParser().parse(arguments);","lastModifiedDate":"2021-09-24"},{"lineNumber":92,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":93,"author":{"gitId":"peilinye"},"content":"        case AddRoomCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"peilinye"},"content":"            return new AddRoomCommandParser().parse(arguments);","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"peilinye":4,"jianh0ng":5,"BananaTechs":6,"-":74,"wilburrito":7,"darrenhoon":5}},{"path":"src/main/java/seedu/address/logic/parser/CheckInCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BananaTechs"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"BananaTechs"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"BananaTechs"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GUEST;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"BananaTechs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"BananaTechs"},"content":"import java.util.List;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.logic.commands.CheckInCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"BananaTechs"},"content":"/**","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"BananaTechs"},"content":" * Parses input arguments and creates a new CheckInCommand object","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"BananaTechs"},"content":" */","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"BananaTechs"},"content":"public class CheckInCommandParser implements Parser\u003cCheckInCommand\u003e {","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"BananaTechs"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"BananaTechs"},"content":"     * Parses the given {@code String} of arguments in the context of the CheckInCommand","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"BananaTechs"},"content":"     * and returns a CheckInCommand object for execution.","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"BananaTechs"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"BananaTechs"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"BananaTechs"},"content":"    @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"BananaTechs"},"content":"    public CheckInCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"BananaTechs"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"BananaTechs"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_GUEST);","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"BananaTechs"},"content":"        Index roomIndex;","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"BananaTechs"},"content":"        try {","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"BananaTechs"},"content":"            roomIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"BananaTechs"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"jianh0ng"},"content":"            throw new ParseException(CheckInCommand.MESSAGE_ROOM_INVALID_INDEX);","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"BananaTechs"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"BananaTechs"},"content":"        List\u003cString\u003e guestList \u003d argMultimap.getAllValues(PREFIX_GUEST);","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"BananaTechs"},"content":"        List\u003cIndex\u003e guestIndexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"BananaTechs"},"content":"        try {","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"BananaTechs"},"content":"            for (String guestString : guestList) {","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"BananaTechs"},"content":"                guestIndexes.add(ParserUtil.parseIndex(guestString));","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"BananaTechs"},"content":"            }","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"BananaTechs"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"jianh0ng"},"content":"            throw new ParseException(CheckInCommand.MESSAGE_PERSON_INVALID_INDEX);","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"BananaTechs"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":46,"author":{"gitId":"BananaTechs"},"content":"        return new CheckInCommand(roomIndex, guestIndexes);","lastModifiedDate":"2021-09-24"},{"lineNumber":47,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":48,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":49,"author":{"gitId":"BananaTechs"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"jianh0ng":2,"BananaTechs":47}},{"path":"src/main/java/seedu/address/logic/parser/CheckOutCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BananaTechs"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"BananaTechs"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"BananaTechs"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.logic.commands.CheckOutCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"BananaTechs"},"content":"/**","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"BananaTechs"},"content":" * Parses input arguments and creates a new CheckOutCommand object","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"BananaTechs"},"content":" */","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"BananaTechs"},"content":"public class CheckOutCommandParser implements Parser\u003cCheckOutCommand\u003e {","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"BananaTechs"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"BananaTechs"},"content":"     * Parses the given {@code String} of arguments in the context of the CheckOutCommand","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"BananaTechs"},"content":"     * and returns a CheckOutCommand object for execution.","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"BananaTechs"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"BananaTechs"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"BananaTechs"},"content":"    @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"BananaTechs"},"content":"    public CheckOutCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"BananaTechs"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"BananaTechs"},"content":"        try {","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"BananaTechs"},"content":"            Index roomIndex \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"BananaTechs"},"content":"            return new CheckOutCommand(roomIndex);","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"BananaTechs"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"BananaTechs"},"content":"            throw new ParseException(","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"BananaTechs"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, CheckOutCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"BananaTechs"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"BananaTechs"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"BananaTechs":32}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"BananaTechs"},"content":"    public static final Prefix PREFIX_GUEST \u003d new Prefix(\"g/\");","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"    public static final Prefix PREFIX_NRIC \u003d new Prefix(\"id/\");","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"BananaTechs":1,"-":15,"darrenhoon":1}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"wilburrito"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"wilburrito"},"content":"                        PREFIX_NRIC, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"wilburrito"},"content":"        if (argMultimap.getValue(PREFIX_NRIC).isPresent()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"wilburrito"},"content":"            editPersonDescriptor.setNric((ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get())));","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"wilburrito"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":81,"wilburrito":6}},{"path":"src/main/java/seedu/address/logic/parser/FindGuestCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"import seedu.address.logic.commands.FindGuestCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"wilburrito"},"content":" * Parses input arguments and creates a new FindGuestCommand object","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"wilburrito"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"wilburrito"},"content":"public class FindGuestCommandParser implements Parser\u003cFindGuestCommand\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"wilburrito"},"content":"     * Parses the given {@code String} of arguments in the context of the FindGuestCommand","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"wilburrito"},"content":"     * and returns a FindGuestCommand object for execution.","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"wilburrito"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"wilburrito"},"content":"    public FindGuestCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"wilburrito"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"wilburrito"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"wilburrito"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"wilburrito"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindGuestCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"wilburrito"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"wilburrito"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"wilburrito"},"content":"        return new FindGuestCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"wilburrito"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"wilburrito":31}},{"path":"src/main/java/seedu/address/logic/parser/FindRecordCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianh0ng"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"jianh0ng"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.logic.commands.FindRecordCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.model.residency.exceptions.ResidencyContainsKeywordsPredicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"jianh0ng"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"jianh0ng"},"content":" * Parses input arguments and creates a new FindRecordCommand object.","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"jianh0ng"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"jianh0ng"},"content":"public class FindRecordCommandParser implements Parser\u003cFindRecordCommand\u003e {","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"jianh0ng"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"jianh0ng"},"content":"     * Parses the given {@code String} of arguments in the context of the FindRecordCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"jianh0ng"},"content":"     * returns a FindRoomCommand object for execution.","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"jianh0ng"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"jianh0ng"},"content":"     * @param args takes in a String args in the context of the FindRecordCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"jianh0ng"},"content":"     * @return returns a FindRecordCommand object for execution","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"jianh0ng"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"jianh0ng"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"jianh0ng"},"content":"    public FindRecordCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"jianh0ng"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"jianh0ng"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"jianh0ng"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"jianh0ng"},"content":"                    FindRecordCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"jianh0ng"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"jianh0ng"},"content":"        String[] recordKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"jianh0ng"},"content":"        return new FindRecordCommand(new ResidencyContainsKeywordsPredicate(Arrays.asList(recordKeywords)));","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"jianh0ng"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"jianh0ng":35}},{"path":"src/main/java/seedu/address/logic/parser/FindRoomCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"import seedu.address.logic.commands.FindRoomCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"import seedu.address.model.room.RoomNumberContainsKeywordsPredicate;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":" * Parses input arguments and creates a new FindRoomCommand object.","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"public class FindRoomCommandParser implements Parser\u003cFindRoomCommand\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"     * Parses the given {@code String} of arguments in the context of the FindRoomCommand","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":"     * returns a FindRoomCommand object for execution.","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":"     * @param args takes in a String args in the context of the FindRoomCommand","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"darrenhoon"},"content":"     * @return returns a FindRoomCommand object for execution","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"darrenhoon"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"darrenhoon"},"content":"    public FindRoomCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"darrenhoon"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"darrenhoon"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"darrenhoon"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"darrenhoon"},"content":"                    FindRoomCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"darrenhoon"},"content":"        String[] roomNumberKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"darrenhoon"},"content":"        return new FindRoomCommand(new RoomNumberContainsKeywordsPredicate(Arrays.asList(roomNumberKeywords)));","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"darrenhoon":34}},{"path":"src/main/java/seedu/address/logic/parser/ListCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianh0ng"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"peilinye"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"peilinye"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"peilinye"},"content":"import seedu.address.commons.core.listroomargs.ListRoomArg;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.commons.core.listtype.ListType;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"peilinye"},"content":"import seedu.address.model.room.Room;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"peilinye"},"content":"import seedu.address.model.room.RoomIsOccupiedPredicate;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"peilinye"},"content":"import seedu.address.model.room.RoomIsVacantPredicate;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"jianh0ng"},"content":"public class ListCommandParser implements Parser\u003cListCommand\u003e {","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"jianh0ng"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"jianh0ng"},"content":"     * Parses the given {@code String} of arguments in the context of the ListCommand","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"jianh0ng"},"content":"     * and returns a ListCommand object for execution.","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"jianh0ng"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"jianh0ng"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"jianh0ng"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"jianh0ng"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"jianh0ng"},"content":"    public ListCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"peilinye"},"content":"        // check for empty arguments","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"peilinye"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"peilinye"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"peilinye"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"peilinye"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"peilinye"},"content":"        String[] argsArr \u003d trimmedArgs.split(\" \", 2);","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"peilinye"},"content":"        String type \u003d argsArr[0];","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"peilinye"},"content":"        ListType listType \u003d ParserUtil.parseListType(type);","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"peilinye"},"content":"        if (argsArr.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"jianh0ng"},"content":"            return new ListCommand(listType);","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"peilinye"},"content":"        } else {","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"peilinye"},"content":"            // list guests command should not have extra arguments","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"jianh0ng"},"content":"            if (listType.isGuestsType() || listType.isRecordsType()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"peilinye"},"content":"                throw new ParseException(","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"peilinye"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"peilinye"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"peilinye"},"content":"            String listRoomArgument \u003d argsArr[1];","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"peilinye"},"content":"            ListRoomArg arg \u003d ParserUtil.parseListRoomArgument(listRoomArgument);","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"peilinye"},"content":"            return new ListCommand(listType, getListRoomPredicate(arg));","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"peilinye"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"peilinye"},"content":"     * Returns the Predicate corresponding to the {@code ListRoomArg}.","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"peilinye"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"peilinye"},"content":"     * @param argument","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"peilinye"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"peilinye"},"content":"    public Predicate\u003cRoom\u003e getListRoomPredicate(ListRoomArg argument) {","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"peilinye"},"content":"        if (argument.isVacant()) {","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"peilinye"},"content":"            return new RoomIsVacantPredicate();","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"peilinye"},"content":"        } else {","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"peilinye"},"content":"            return new RoomIsOccupiedPredicate();","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"jianh0ng"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"peilinye":40,"jianh0ng":21}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"peilinye"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"peilinye"},"content":"import seedu.address.commons.core.listroomargs.ListRoomArg;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.commons.core.listtype.ListType;","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"wilburrito"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"wilburrito"},"content":"     * Parses a {@code String nric} into an {@code Nric}.","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"wilburrito"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"wilburrito"},"content":"     * @throws ParseException if the given {@code String nric} is invalid.","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"wilburrito"},"content":"    public static Nric parseNric(String nric) throws ParseException {","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"wilburrito"},"content":"        requireNonNull(nric);","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"wilburrito"},"content":"        String trimmedNric \u003d nric.trim();","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"wilburrito"},"content":"        if (!Nric.isValidNric(trimmedNric)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"wilburrito"},"content":"            throw new ParseException(Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"wilburrito"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"wilburrito"},"content":"        return new Nric(trimmedNric);","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":142,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":143,"author":{"gitId":"jianh0ng"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":144,"author":{"gitId":"jianh0ng"},"content":"     * Parses a {@code String list type} into a {@code ListType}.","lastModifiedDate":"2021-09-19"},{"lineNumber":145,"author":{"gitId":"jianh0ng"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-09-19"},{"lineNumber":146,"author":{"gitId":"jianh0ng"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":147,"author":{"gitId":"jianh0ng"},"content":"     * @throws ParseException if the given {@code list type} is invalid.","lastModifiedDate":"2021-09-19"},{"lineNumber":148,"author":{"gitId":"jianh0ng"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":149,"author":{"gitId":"jianh0ng"},"content":"    public static ListType parseListType(String type) throws ParseException {","lastModifiedDate":"2021-09-19"},{"lineNumber":150,"author":{"gitId":"jianh0ng"},"content":"        requireNonNull(type);","lastModifiedDate":"2021-09-19"},{"lineNumber":151,"author":{"gitId":"jianh0ng"},"content":"        String trimmedType \u003d type.trim();","lastModifiedDate":"2021-09-19"},{"lineNumber":152,"author":{"gitId":"jianh0ng"},"content":"        if (!ListType.isValidListType(trimmedType)) {","lastModifiedDate":"2021-09-19"},{"lineNumber":153,"author":{"gitId":"peilinye"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-06"},{"lineNumber":154,"author":{"gitId":"peilinye"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListType.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2021-10-06"},{"lineNumber":155,"author":{"gitId":"jianh0ng"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":156,"author":{"gitId":"jianh0ng"},"content":"        return new ListType(trimmedType);","lastModifiedDate":"2021-09-19"},{"lineNumber":157,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":158,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":159,"author":{"gitId":"peilinye"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":160,"author":{"gitId":"peilinye"},"content":"     * Parses a {@code String list room argument} into a {@code ListRoomArg}.","lastModifiedDate":"2021-09-26"},{"lineNumber":161,"author":{"gitId":"peilinye"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-09-26"},{"lineNumber":162,"author":{"gitId":"peilinye"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":163,"author":{"gitId":"peilinye"},"content":"     * @throws ParseException if the given {@code list room argument} is invalid.","lastModifiedDate":"2021-09-26"},{"lineNumber":164,"author":{"gitId":"peilinye"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":165,"author":{"gitId":"peilinye"},"content":"    public static ListRoomArg parseListRoomArgument(String arg) throws ParseException {","lastModifiedDate":"2021-09-26"},{"lineNumber":166,"author":{"gitId":"peilinye"},"content":"        requireNonNull(arg);","lastModifiedDate":"2021-09-26"},{"lineNumber":167,"author":{"gitId":"peilinye"},"content":"        String trimmedArg \u003d arg.trim();","lastModifiedDate":"2021-09-26"},{"lineNumber":168,"author":{"gitId":"peilinye"},"content":"        if (!ListRoomArg.isValidListType(trimmedArg)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":169,"author":{"gitId":"peilinye"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-06"},{"lineNumber":170,"author":{"gitId":"peilinye"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListRoomArg.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2021-10-06"},{"lineNumber":171,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":172,"author":{"gitId":"peilinye"},"content":"        return new ListRoomArg(trimmedArg);","lastModifiedDate":"2021-09-26"},{"lineNumber":173,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":174,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":175,"author":{"gitId":"peilinye"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":176,"author":{"gitId":"peilinye"},"content":"     * Parses {@code oneBasedIndex} into an {@code Integer} and returns it.","lastModifiedDate":"2021-10-18"},{"lineNumber":177,"author":{"gitId":"peilinye"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-18"},{"lineNumber":178,"author":{"gitId":"peilinye"},"content":"     * @throws ParseException if the specified integer is invalid (not non-zero unsigned integer).","lastModifiedDate":"2021-10-18"},{"lineNumber":179,"author":{"gitId":"peilinye"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":180,"author":{"gitId":"peilinye"},"content":"    public static Integer parseNumber(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2021-10-24"},{"lineNumber":181,"author":{"gitId":"peilinye"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2021-10-18"},{"lineNumber":182,"author":{"gitId":"peilinye"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":183,"author":{"gitId":"peilinye"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-10-28"},{"lineNumber":184,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":185,"author":{"gitId":"peilinye"},"content":"        return Integer.parseInt(trimmedIndex);","lastModifiedDate":"2021-10-18"},{"lineNumber":186,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":187,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"peilinye":32,"jianh0ng":15,"-":124,"wilburrito":17}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"BananaTechs"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"BananaTechs"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.residency.ReadOnlyResidencyBook;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.residency.Residency;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.residency.ResidencyBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.model.room.Room;","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.model.room.RoomList;","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":25,"author":{"gitId":"jianh0ng"},"content":"    private final RoomList rooms;","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"BananaTechs"},"content":"    private final ResidencyBook residencyBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"jianh0ng"},"content":"    private final ResidencyBook recordsBook;","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":38,"author":{"gitId":"jianh0ng"},"content":"        rooms \u003d new RoomList();","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"jianh0ng"},"content":"        residencyBook \u003d new ResidencyBook(false);","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"jianh0ng"},"content":"        recordsBook \u003d new ResidencyBook(true);","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"jianh0ng"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"jianh0ng"},"content":"     * Replaces the contents of the room list with {@code rooms}.","lastModifiedDate":"2021-09-19"},{"lineNumber":65,"author":{"gitId":"jianh0ng"},"content":"     * {@code rooms} must not contain duplicate rooms.","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"jianh0ng"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"jianh0ng"},"content":"    public void setRooms(List\u003cRoom\u003e rooms) {","lastModifiedDate":"2021-09-19"},{"lineNumber":68,"author":{"gitId":"jianh0ng"},"content":"        this.rooms.setRooms(rooms);","lastModifiedDate":"2021-09-19"},{"lineNumber":69,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":70,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":71,"author":{"gitId":"jianh0ng"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"jianh0ng"},"content":"     * Replaces the contents of the residency list with {@code residencies}.","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"jianh0ng"},"content":"     * {@code residencies} must not contain duplicate residencies.","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"jianh0ng"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"BananaTechs"},"content":"    public void setResidencies(List\u003cResidency\u003e residencies) {","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"BananaTechs"},"content":"        this.residencyBook.setResidencies(residencies);","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"jianh0ng"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"jianh0ng"},"content":"     * Replaces the contents of the residency records with {@code records}.","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"jianh0ng"},"content":"     * {@code records} must not contain duplicate residencies.","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"jianh0ng"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"jianh0ng"},"content":"    public void setRecords(List\u003cResidency\u003e records) {","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"jianh0ng"},"content":"        this.recordsBook.setResidencies(records);","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":94,"author":{"gitId":"jianh0ng"},"content":"        setRooms(newData.getRoomList());","lastModifiedDate":"2021-09-19"},{"lineNumber":95,"author":{"gitId":"BananaTechs"},"content":"        setResidencies(newData.getResidencyList());","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"jianh0ng"},"content":"        setRecords(newData.getRecordsList());","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"BananaTechs"},"content":"    //// (person / room)-level operations","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":109,"author":{"gitId":"jianh0ng"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":110,"author":{"gitId":"jianh0ng"},"content":"     * Returns true if a room with the same identity as {@code room} exists in the address book.","lastModifiedDate":"2021-09-19"},{"lineNumber":111,"author":{"gitId":"jianh0ng"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":112,"author":{"gitId":"jianh0ng"},"content":"    public boolean hasRoom(Room room) {","lastModifiedDate":"2021-09-19"},{"lineNumber":113,"author":{"gitId":"jianh0ng"},"content":"        requireNonNull(room);","lastModifiedDate":"2021-09-19"},{"lineNumber":114,"author":{"gitId":"jianh0ng"},"content":"        return rooms.contains(room);","lastModifiedDate":"2021-09-19"},{"lineNumber":115,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":116,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"jianh0ng"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":126,"author":{"gitId":"jianh0ng"},"content":"     * Adds a room to the address book.","lastModifiedDate":"2021-09-19"},{"lineNumber":127,"author":{"gitId":"jianh0ng"},"content":"     * The room must not already exist in the address book.","lastModifiedDate":"2021-09-19"},{"lineNumber":128,"author":{"gitId":"jianh0ng"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":129,"author":{"gitId":"jianh0ng"},"content":"    public void addRoom(Room r) {","lastModifiedDate":"2021-09-19"},{"lineNumber":130,"author":{"gitId":"jianh0ng"},"content":"        rooms.add(r);","lastModifiedDate":"2021-09-19"},{"lineNumber":131,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":132,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":141,"author":{"gitId":"darrenhoon"},"content":"        //TODO: might need to update this if we want UI to display people in the room, and their names updated too","lastModifiedDate":"2021-10-02"},{"lineNumber":142,"author":{"gitId":"darrenhoon"},"content":"        for (Room room: rooms) {","lastModifiedDate":"2021-10-02"},{"lineNumber":143,"author":{"gitId":"darrenhoon"},"content":"            if (room.isVacant()) {","lastModifiedDate":"2021-10-02"},{"lineNumber":144,"author":{"gitId":"darrenhoon"},"content":"                continue;","lastModifiedDate":"2021-10-02"},{"lineNumber":145,"author":{"gitId":"darrenhoon"},"content":"            } else {","lastModifiedDate":"2021-10-02"},{"lineNumber":146,"author":{"gitId":"darrenhoon"},"content":"                if (room.getGuests().contains(target)) {","lastModifiedDate":"2021-10-02"},{"lineNumber":147,"author":{"gitId":"darrenhoon"},"content":"                    Room editedRoom \u003d room.replaceGuest(target, editedPerson);","lastModifiedDate":"2021-10-02"},{"lineNumber":148,"author":{"gitId":"darrenhoon"},"content":"                    setRoom(room, editedRoom);","lastModifiedDate":"2021-10-02"},{"lineNumber":149,"author":{"gitId":"darrenhoon"},"content":"                } else {","lastModifiedDate":"2021-10-02"},{"lineNumber":150,"author":{"gitId":"darrenhoon"},"content":"                    continue;","lastModifiedDate":"2021-10-02"},{"lineNumber":151,"author":{"gitId":"darrenhoon"},"content":"                }","lastModifiedDate":"2021-10-02"},{"lineNumber":152,"author":{"gitId":"darrenhoon"},"content":"            }","lastModifiedDate":"2021-10-02"},{"lineNumber":153,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":155,"author":{"gitId":"BananaTechs"},"content":"        residencyBook.edit(target, editedPerson);","lastModifiedDate":"2021-10-06"},{"lineNumber":156,"author":{"gitId":"BananaTechs"},"content":"        recordsBook.edit(target, editedPerson);","lastModifiedDate":"2021-10-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":159,"author":{"gitId":"BananaTechs"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":160,"author":{"gitId":"BananaTechs"},"content":"     * Replaces the given room {@code target} with {@code editedRoom}.","lastModifiedDate":"2021-09-24"},{"lineNumber":161,"author":{"gitId":"BananaTechs"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-09-24"},{"lineNumber":162,"author":{"gitId":"BananaTechs"},"content":"     * The room identity of {@code editedRoom} must not be the same as another existing room in the address book.","lastModifiedDate":"2021-09-24"},{"lineNumber":163,"author":{"gitId":"BananaTechs"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":164,"author":{"gitId":"BananaTechs"},"content":"    public void setRoom(Room target, Room editedRoom) {","lastModifiedDate":"2021-09-24"},{"lineNumber":165,"author":{"gitId":"BananaTechs"},"content":"        requireNonNull(editedRoom);","lastModifiedDate":"2021-09-24"},{"lineNumber":166,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":167,"author":{"gitId":"BananaTechs"},"content":"        rooms.setRoom(target, editedRoom);","lastModifiedDate":"2021-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"BananaTechs"},"content":"    //// residency-level operations","lastModifiedDate":"2021-10-06"},{"lineNumber":179,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":180,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":181,"author":{"gitId":"darrenhoon"},"content":"     * Registers a residency using a Room object and guests as a Set of person objects.","lastModifiedDate":"2021-10-07"},{"lineNumber":182,"author":{"gitId":"darrenhoon"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":183,"author":{"gitId":"darrenhoon"},"content":"     * @param room Room object.","lastModifiedDate":"2021-10-07"},{"lineNumber":184,"author":{"gitId":"jianh0ng"},"content":"     * @param guests Set of Person objects residing in the room.","lastModifiedDate":"2021-10-11"},{"lineNumber":185,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":186,"author":{"gitId":"BananaTechs"},"content":"    public void register(Room room, Set\u003cPerson\u003e guests) {","lastModifiedDate":"2021-10-06"},{"lineNumber":187,"author":{"gitId":"darrenhoon"},"content":"        requireNonNull(room);","lastModifiedDate":"2021-10-07"},{"lineNumber":188,"author":{"gitId":"darrenhoon"},"content":"        requireNonNull(guests);","lastModifiedDate":"2021-10-07"},{"lineNumber":189,"author":{"gitId":"BananaTechs"},"content":"        residencyBook.register(room, guests);","lastModifiedDate":"2021-10-06"},{"lineNumber":190,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":191,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":192,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":193,"author":{"gitId":"darrenhoon"},"content":"     * Registers a residency using a Residency object.","lastModifiedDate":"2021-10-07"},{"lineNumber":194,"author":{"gitId":"darrenhoon"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":195,"author":{"gitId":"darrenhoon"},"content":"     * @param residency Residency object that contains a Room object and guests as a Set of person objects.","lastModifiedDate":"2021-10-07"},{"lineNumber":196,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":197,"author":{"gitId":"BananaTechs"},"content":"    public void register(Residency residency) {","lastModifiedDate":"2021-10-06"},{"lineNumber":198,"author":{"gitId":"darrenhoon"},"content":"        requireNonNull(residency);","lastModifiedDate":"2021-10-07"},{"lineNumber":199,"author":{"gitId":"BananaTechs"},"content":"        residencyBook.register(residency);","lastModifiedDate":"2021-10-06"},{"lineNumber":200,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":201,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":202,"author":{"gitId":"jianh0ng"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":203,"author":{"gitId":"jianh0ng"},"content":"     * Registers a residency into the recordsBook using a Residency object.","lastModifiedDate":"2021-10-11"},{"lineNumber":204,"author":{"gitId":"jianh0ng"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":205,"author":{"gitId":"jianh0ng"},"content":"     * @param residency Residency object that contains a Room object and guests as a Set of person objects.","lastModifiedDate":"2021-10-10"},{"lineNumber":206,"author":{"gitId":"jianh0ng"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":207,"author":{"gitId":"jianh0ng"},"content":"    public void record(Residency residency) {","lastModifiedDate":"2021-10-10"},{"lineNumber":208,"author":{"gitId":"jianh0ng"},"content":"        requireNonNull(residency);","lastModifiedDate":"2021-10-10"},{"lineNumber":209,"author":{"gitId":"jianh0ng"},"content":"        recordsBook.register(residency);","lastModifiedDate":"2021-10-10"},{"lineNumber":210,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":211,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":212,"author":{"gitId":"BananaTechs"},"content":"    public void removeResidency(Residency residency) {","lastModifiedDate":"2021-10-06"},{"lineNumber":213,"author":{"gitId":"BananaTechs"},"content":"        residencyBook.remove(residency);","lastModifiedDate":"2021-10-06"},{"lineNumber":214,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":215,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":216,"author":{"gitId":"BananaTechs"},"content":"    public Optional\u003cResidency\u003e getResidency(Room room) {","lastModifiedDate":"2021-10-06"},{"lineNumber":217,"author":{"gitId":"BananaTechs"},"content":"        return residencyBook.getResidency(room);","lastModifiedDate":"2021-10-06"},{"lineNumber":218,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":219,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":220,"author":{"gitId":"BananaTechs"},"content":"    public Optional\u003cResidency\u003e getResidency(Person person) {","lastModifiedDate":"2021-10-06"},{"lineNumber":221,"author":{"gitId":"BananaTechs"},"content":"        return residencyBook.getResidency(person);","lastModifiedDate":"2021-10-06"},{"lineNumber":222,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":223,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":224,"author":{"gitId":"jianh0ng"},"content":"    public Optional\u003cResidency\u003e getRecord(Room room) {","lastModifiedDate":"2021-10-10"},{"lineNumber":225,"author":{"gitId":"jianh0ng"},"content":"        return recordsBook.getResidency(room);","lastModifiedDate":"2021-10-10"},{"lineNumber":226,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":227,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":228,"author":{"gitId":"jianh0ng"},"content":"    public Optional\u003cResidency\u003e getRecord(Person person) {","lastModifiedDate":"2021-10-10"},{"lineNumber":229,"author":{"gitId":"jianh0ng"},"content":"        return recordsBook.getResidency(person);","lastModifiedDate":"2021-10-10"},{"lineNumber":230,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":231,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":245,"author":{"gitId":"jianh0ng"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":246,"author":{"gitId":"jianh0ng"},"content":"    public ObservableList\u003cRoom\u003e getRoomList() {","lastModifiedDate":"2021-09-20"},{"lineNumber":247,"author":{"gitId":"jianh0ng"},"content":"        return rooms.asUnmodifiableObservableList();","lastModifiedDate":"2021-09-20"},{"lineNumber":248,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":249,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":250,"author":{"gitId":"BananaTechs"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":251,"author":{"gitId":"BananaTechs"},"content":"    public ObservableList\u003cResidency\u003e getResidencyList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":252,"author":{"gitId":"BananaTechs"},"content":"        return residencyBook.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-06"},{"lineNumber":253,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":254,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":255,"author":{"gitId":"BananaTechs"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":256,"author":{"gitId":"BananaTechs"},"content":"    public ReadOnlyResidencyBook getResidencyBook() {","lastModifiedDate":"2021-10-06"},{"lineNumber":257,"author":{"gitId":"BananaTechs"},"content":"        return residencyBook;","lastModifiedDate":"2021-10-06"},{"lineNumber":258,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":259,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":260,"author":{"gitId":"jianh0ng"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":261,"author":{"gitId":"jianh0ng"},"content":"    public ObservableList\u003cResidency\u003e getRecordsList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":262,"author":{"gitId":"jianh0ng"},"content":"        return recordsBook.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-10"},{"lineNumber":263,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":264,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":265,"author":{"gitId":"jianh0ng"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":266,"author":{"gitId":"jianh0ng"},"content":"    public ReadOnlyResidencyBook getRecordsBook() {","lastModifiedDate":"2021-10-10"},{"lineNumber":267,"author":{"gitId":"jianh0ng"},"content":"        return recordsBook;","lastModifiedDate":"2021-10-10"},{"lineNumber":268,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":269,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":270,"author":{"gitId":"jianh0ng"},"content":"    @SuppressWarnings(\"checkstyle:CommentsIndentation\")","lastModifiedDate":"2021-10-10"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":274,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":275,"author":{"gitId":"darrenhoon"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons)","lastModifiedDate":"2021-09-23"},{"lineNumber":276,"author":{"gitId":"BananaTechs"},"content":"                \u0026\u0026 rooms.equals(((AddressBook) other).rooms)","lastModifiedDate":"2021-10-07"},{"lineNumber":277,"author":{"gitId":"jianh0ng"},"content":"                \u0026\u0026 residencyBook.equals(((AddressBook) other).residencyBook)","lastModifiedDate":"2021-10-10"},{"lineNumber":278,"author":{"gitId":"jianh0ng"},"content":"                \u0026\u0026 recordsBook.equals(((AddressBook) other).recordsBook));","lastModifiedDate":"2021-10-10"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":285,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jianh0ng":82,"BananaTechs":56,"-":120,"darrenhoon":27}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"BananaTechs"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"BananaTechs"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.residency.Residency;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.residency.exceptions.DuplicatePersonRegException;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.residency.exceptions.DuplicateRoomRegException;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.residency.exceptions.ResidencyNotFoundException;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.model.room.Room;","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"jianh0ng"},"content":"    Predicate\u003cRoom\u003e PREDICATE_SHOW_ALL_ROOMS \u003d unused -\u003e true;","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"jianh0ng"},"content":"    Predicate\u003cResidency\u003e PREDICATE_SHOW_ALL_RECORDS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"peilinye"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"peilinye"},"content":"     * Returns true if a room with the same room number as {@code room} exists in the address book.","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"peilinye"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"peilinye"},"content":"    boolean hasRoom(Room room);","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":93,"author":{"gitId":"BananaTechs"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":94,"author":{"gitId":"BananaTechs"},"content":"     * Replaces the given room {@code target} with {@code editedRoom}.","lastModifiedDate":"2021-09-24"},{"lineNumber":95,"author":{"gitId":"BananaTechs"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-09-24"},{"lineNumber":96,"author":{"gitId":"BananaTechs"},"content":"     * The room identity of {@code editedRoom} must not be the same as another existing room in the address book.","lastModifiedDate":"2021-09-24"},{"lineNumber":97,"author":{"gitId":"BananaTechs"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":98,"author":{"gitId":"BananaTechs"},"content":"    void setRoom(Room target, Room editedRoom);","lastModifiedDate":"2021-09-24"},{"lineNumber":99,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":100,"author":{"gitId":"BananaTechs"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"BananaTechs"},"content":"     * Registers the residency of a set of guests in a room.","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"BananaTechs"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"BananaTechs"},"content":"     * @param room The {@code Room} to stay in","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"BananaTechs"},"content":"     * @param guests The {@code Set} of {@code Person}s to stay in the room","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"BananaTechs"},"content":"     * @throws DuplicateRoomRegException if the {@code Room} is already registered.","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"BananaTechs"},"content":"     * @throws DuplicatePersonRegException if any {@code Person} is already registered.","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"BananaTechs"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"BananaTechs"},"content":"    void register(Room room, Set\u003cPerson\u003e guests);","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"BananaTechs"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"BananaTechs"},"content":"     * Removes and de-registers a {@code Residency}, making the room and guests","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"BananaTechs"},"content":"     * available for new registrations.","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"BananaTechs"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"BananaTechs"},"content":"     * @throws ResidencyNotFoundException if the given residency is not registered.","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"BananaTechs"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"BananaTechs"},"content":"    void removeResidency(Residency residency);","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":118,"author":{"gitId":"BananaTechs"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":119,"author":{"gitId":"BananaTechs"},"content":"     * Gets the {@code Residency} containing this {@code Room}, if it exists.","lastModifiedDate":"2021-10-06"},{"lineNumber":120,"author":{"gitId":"BananaTechs"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":121,"author":{"gitId":"BananaTechs"},"content":"     * @param room The room to get the residency of","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"BananaTechs"},"content":"     * @return An {@code Optional} with the {@code Residency} present if it exists,","lastModifiedDate":"2021-10-06"},{"lineNumber":123,"author":{"gitId":"BananaTechs"},"content":"     *         otherwise an empty Optional","lastModifiedDate":"2021-10-06"},{"lineNumber":124,"author":{"gitId":"BananaTechs"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":125,"author":{"gitId":"BananaTechs"},"content":"    Optional\u003cResidency\u003e getResidency(Room room);","lastModifiedDate":"2021-10-06"},{"lineNumber":126,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":127,"author":{"gitId":"BananaTechs"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"BananaTechs"},"content":"     * Gets the {@code Residency} containing this {@code Person}, if it exists.","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"BananaTechs"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":130,"author":{"gitId":"BananaTechs"},"content":"     * @param guest The {@code Person} to get the residency of","lastModifiedDate":"2021-10-06"},{"lineNumber":131,"author":{"gitId":"BananaTechs"},"content":"     * @return An {@code Optional} with the {@code Residency} present if it exists,","lastModifiedDate":"2021-10-06"},{"lineNumber":132,"author":{"gitId":"BananaTechs"},"content":"     *         otherwise an empty Optional","lastModifiedDate":"2021-10-06"},{"lineNumber":133,"author":{"gitId":"BananaTechs"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":134,"author":{"gitId":"BananaTechs"},"content":"    Optional\u003cResidency\u003e getResidency(Person guest);","lastModifiedDate":"2021-10-06"},{"lineNumber":135,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":139,"author":{"gitId":"jianh0ng"},"content":"    /** Returns an unmodifiable view of the filtered room list */","lastModifiedDate":"2021-09-19"},{"lineNumber":140,"author":{"gitId":"jianh0ng"},"content":"    ObservableList\u003cRoom\u003e getFilteredRoomList();","lastModifiedDate":"2021-09-19"},{"lineNumber":141,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":142,"author":{"gitId":"peilinye"},"content":"    /** Returns the number of rooms in the filtered room list */","lastModifiedDate":"2021-10-23"},{"lineNumber":143,"author":{"gitId":"peilinye"},"content":"    Integer getNumberOfRooms();","lastModifiedDate":"2021-10-23"},{"lineNumber":144,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":145,"author":{"gitId":"jianh0ng"},"content":"    /** Returns an unmodifiable view of the filtered record list */","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"jianh0ng"},"content":"    ObservableList\u003cResidency\u003e getFilteredRecordList();","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":154,"author":{"gitId":"jianh0ng"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":155,"author":{"gitId":"jianh0ng"},"content":"     * Updates the filter of the filtered room list to filter by the given {@code predicate}.","lastModifiedDate":"2021-09-19"},{"lineNumber":156,"author":{"gitId":"jianh0ng"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-09-19"},{"lineNumber":157,"author":{"gitId":"jianh0ng"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":158,"author":{"gitId":"jianh0ng"},"content":"    void updateFilteredRoomList(Predicate\u003cRoom\u003e predicate);","lastModifiedDate":"2021-09-19"},{"lineNumber":159,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":160,"author":{"gitId":"jianh0ng"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":161,"author":{"gitId":"jianh0ng"},"content":"     * Updates the filter of the filtered record list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-19"},{"lineNumber":162,"author":{"gitId":"jianh0ng"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-10-19"},{"lineNumber":163,"author":{"gitId":"jianh0ng"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":164,"author":{"gitId":"jianh0ng"},"content":"    void updateFilteredRecordList(Predicate\u003cResidency\u003e predicate);","lastModifiedDate":"2021-10-19"},{"lineNumber":165,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":166,"author":{"gitId":"jianh0ng"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":167,"author":{"gitId":"jianh0ng"},"content":"     * Adds the given room.","lastModifiedDate":"2021-09-20"},{"lineNumber":168,"author":{"gitId":"jianh0ng"},"content":"     * {@code room} must not already exist in the address book.","lastModifiedDate":"2021-09-20"},{"lineNumber":169,"author":{"gitId":"jianh0ng"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":170,"author":{"gitId":"jianh0ng"},"content":"    void addRoom(Room room);","lastModifiedDate":"2021-09-20"},{"lineNumber":171,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":172,"author":{"gitId":"jianh0ng"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":173,"author":{"gitId":"jianh0ng"},"content":"     * Records the past residency of a set of guests in a room.","lastModifiedDate":"2021-10-11"},{"lineNumber":174,"author":{"gitId":"jianh0ng"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":175,"author":{"gitId":"jianh0ng"},"content":"     * @param residency The residency to be recorded.","lastModifiedDate":"2021-10-11"},{"lineNumber":176,"author":{"gitId":"jianh0ng"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":177,"author":{"gitId":"jianh0ng"},"content":"    void record(Residency residency);","lastModifiedDate":"2021-10-11"},{"lineNumber":178,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"peilinye":8,"jianh0ng":35,"BananaTechs":49,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"BananaTechs"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"BananaTechs"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.residency.Residency;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.model.room.Room;","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"jianh0ng"},"content":"    private final FilteredList\u003cRoom\u003e filteredRooms;","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"jianh0ng"},"content":"    private final FilteredList\u003cResidency\u003e filteredRecords;","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"jianh0ng"},"content":"        filteredRooms \u003d new FilteredList\u003c\u003e(this.addressBook.getRoomList());","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"jianh0ng"},"content":"        filteredRecords \u003d new FilteredList\u003c\u003e(this.addressBook.getRecordsList());","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"peilinye"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"peilinye"},"content":"    public boolean hasRoom(Room room) {","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"peilinye"},"content":"        requireNonNull(room);","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"peilinye"},"content":"        return addressBook.hasRoom(room);","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":129,"author":{"gitId":"BananaTechs"},"content":"    @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":130,"author":{"gitId":"BananaTechs"},"content":"    public void setRoom(Room target, Room editedRoom) {","lastModifiedDate":"2021-09-24"},{"lineNumber":131,"author":{"gitId":"BananaTechs"},"content":"        requireAllNonNull(target, editedRoom);","lastModifiedDate":"2021-09-24"},{"lineNumber":132,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":133,"author":{"gitId":"BananaTechs"},"content":"        addressBook.setRoom(target, editedRoom);","lastModifiedDate":"2021-09-24"},{"lineNumber":134,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":135,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":136,"author":{"gitId":"jianh0ng"},"content":"    @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":137,"author":{"gitId":"jianh0ng"},"content":"    public void addRoom(Room room) {","lastModifiedDate":"2021-09-20"},{"lineNumber":138,"author":{"gitId":"jianh0ng"},"content":"        addressBook.addRoom(room);","lastModifiedDate":"2021-09-20"},{"lineNumber":139,"author":{"gitId":"jianh0ng"},"content":"        updateFilteredRoomList(PREDICATE_SHOW_ALL_ROOMS);","lastModifiedDate":"2021-09-20"},{"lineNumber":140,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":141,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":142,"author":{"gitId":"BananaTechs"},"content":"    public void register(Room room, Set\u003cPerson\u003e guests) {","lastModifiedDate":"2021-10-06"},{"lineNumber":143,"author":{"gitId":"BananaTechs"},"content":"        addressBook.register(room, guests);","lastModifiedDate":"2021-10-06"},{"lineNumber":144,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":145,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":146,"author":{"gitId":"BananaTechs"},"content":"    public void removeResidency(Residency residency) {","lastModifiedDate":"2021-10-06"},{"lineNumber":147,"author":{"gitId":"BananaTechs"},"content":"        addressBook.removeResidency(residency);","lastModifiedDate":"2021-10-06"},{"lineNumber":148,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":149,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":150,"author":{"gitId":"BananaTechs"},"content":"    public Optional\u003cResidency\u003e getResidency(Room room) {","lastModifiedDate":"2021-10-06"},{"lineNumber":151,"author":{"gitId":"BananaTechs"},"content":"        return addressBook.getResidency(room);","lastModifiedDate":"2021-10-06"},{"lineNumber":152,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":153,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":154,"author":{"gitId":"BananaTechs"},"content":"    public Optional\u003cResidency\u003e getResidency(Person guest) {","lastModifiedDate":"2021-10-06"},{"lineNumber":155,"author":{"gitId":"BananaTechs"},"content":"        return addressBook.getResidency(guest);","lastModifiedDate":"2021-10-06"},{"lineNumber":156,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":157,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":158,"author":{"gitId":"jianh0ng"},"content":"    public void record(Residency residency) {","lastModifiedDate":"2021-10-11"},{"lineNumber":159,"author":{"gitId":"jianh0ng"},"content":"        addressBook.record(residency);","lastModifiedDate":"2021-10-11"},{"lineNumber":160,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":161,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":162,"author":{"gitId":"jianh0ng"},"content":"    public Optional\u003cResidency\u003e getRecord(Room room) {","lastModifiedDate":"2021-10-10"},{"lineNumber":163,"author":{"gitId":"jianh0ng"},"content":"        return addressBook.getRecord(room);","lastModifiedDate":"2021-10-10"},{"lineNumber":164,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":165,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":166,"author":{"gitId":"jianh0ng"},"content":"    public Optional\u003cResidency\u003e getRecord(Person guest) {","lastModifiedDate":"2021-10-10"},{"lineNumber":167,"author":{"gitId":"jianh0ng"},"content":"        return addressBook.getRecord(guest);","lastModifiedDate":"2021-10-10"},{"lineNumber":168,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":169,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":187,"author":{"gitId":"darrenhoon"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Room List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-23"},{"lineNumber":188,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":189,"author":{"gitId":"jianh0ng"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":190,"author":{"gitId":"jianh0ng"},"content":"     * Returns an unmodifiable view of the list of {@code Room} backed by the internal list of","lastModifiedDate":"2021-09-19"},{"lineNumber":191,"author":{"gitId":"jianh0ng"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2021-09-19"},{"lineNumber":192,"author":{"gitId":"jianh0ng"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":193,"author":{"gitId":"jianh0ng"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":194,"author":{"gitId":"jianh0ng"},"content":"    public ObservableList\u003cRoom\u003e getFilteredRoomList() {","lastModifiedDate":"2021-09-19"},{"lineNumber":195,"author":{"gitId":"jianh0ng"},"content":"        return filteredRooms;","lastModifiedDate":"2021-09-19"},{"lineNumber":196,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":197,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":198,"author":{"gitId":"peilinye"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":199,"author":{"gitId":"peilinye"},"content":"     * Returns the number of rooms in the room list.","lastModifiedDate":"2021-10-23"},{"lineNumber":200,"author":{"gitId":"peilinye"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":201,"author":{"gitId":"peilinye"},"content":"    public Integer getNumberOfRooms() {","lastModifiedDate":"2021-10-23"},{"lineNumber":202,"author":{"gitId":"peilinye"},"content":"        return filteredRooms.size();","lastModifiedDate":"2021-10-23"},{"lineNumber":203,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":204,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":205,"author":{"gitId":"jianh0ng"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":206,"author":{"gitId":"jianh0ng"},"content":"    public void updateFilteredRoomList(Predicate\u003cRoom\u003e predicate) {","lastModifiedDate":"2021-09-19"},{"lineNumber":207,"author":{"gitId":"jianh0ng"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-09-19"},{"lineNumber":208,"author":{"gitId":"jianh0ng"},"content":"        filteredRooms.setPredicate(predicate);","lastModifiedDate":"2021-09-19"},{"lineNumber":209,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":210,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":211,"author":{"gitId":"jianh0ng"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Record List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":212,"author":{"gitId":"jianh0ng"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":213,"author":{"gitId":"jianh0ng"},"content":"     * Returns an unmodifiable view of the list of {@code Residency} backed by the internal list of","lastModifiedDate":"2021-10-19"},{"lineNumber":214,"author":{"gitId":"jianh0ng"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2021-10-19"},{"lineNumber":215,"author":{"gitId":"jianh0ng"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":216,"author":{"gitId":"jianh0ng"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":217,"author":{"gitId":"jianh0ng"},"content":"    public ObservableList\u003cResidency\u003e getFilteredRecordList() {","lastModifiedDate":"2021-10-19"},{"lineNumber":218,"author":{"gitId":"jianh0ng"},"content":"        return filteredRecords;","lastModifiedDate":"2021-10-19"},{"lineNumber":219,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":220,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":221,"author":{"gitId":"jianh0ng"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":222,"author":{"gitId":"jianh0ng"},"content":"    public void updateFilteredRecordList(Predicate\u003cResidency\u003e predicate) {","lastModifiedDate":"2021-10-19"},{"lineNumber":223,"author":{"gitId":"jianh0ng"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-19"},{"lineNumber":224,"author":{"gitId":"jianh0ng"},"content":"        filteredRecords.setPredicate(predicate);","lastModifiedDate":"2021-10-19"},{"lineNumber":225,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":226,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":227,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":243,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":244,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"peilinye":13,"jianh0ng":55,"BananaTechs":26,"-":151,"darrenhoon":2}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.residency.ReadOnlyResidencyBook;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.residency.Residency;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.model.room.Room;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"jianh0ng"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"jianh0ng"},"content":"     * Returns an unmodifiable view of the rooms list.","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"jianh0ng"},"content":"     * This list will not contain any duplicate rooms.","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"jianh0ng"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"jianh0ng"},"content":"    ObservableList\u003cRoom\u003e getRoomList();","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"BananaTechs"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"BananaTechs"},"content":"     * Returns an unmodifiable view of the residencies list.","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"BananaTechs"},"content":"     * This list will not contain any duplicate residencies.","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"BananaTechs"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"BananaTechs"},"content":"    ObservableList\u003cResidency\u003e getResidencyList();","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"BananaTechs"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"BananaTechs"},"content":"     * Returns an unmodifiable view of the residency book.","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"BananaTechs"},"content":"     * This will not contain any duplicate residencies.","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"BananaTechs"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"BananaTechs"},"content":"    ReadOnlyResidencyBook getResidencyBook();","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"jianh0ng"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"jianh0ng"},"content":"     * Returns an unmodifiable view of the residencies records list.","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"jianh0ng"},"content":"     * This list will not contain any duplicate residencies.","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"jianh0ng"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"jianh0ng"},"content":"    ObservableList\u003cResidency\u003e getRecordsList();","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"jianh0ng"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"jianh0ng"},"content":"     * Returns an unmodifiable view of the residency records book.","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"jianh0ng"},"content":"     * This will not contain any duplicate residencies.","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"jianh0ng"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"jianh0ng"},"content":"    ReadOnlyResidencyBook getRecordsBook();","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jianh0ng":18,"BananaTechs":14,"-":17}},{"path":"src/main/java/seedu/address/model/person/Nric.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"import seedu.address.model.person.exceptions.InvalidNricException;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":" * The ID field of a person. Used to distinguish between different Persons,","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":" * especially if they have the same name.","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"wilburrito"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"public class Nric {","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"wilburrito"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"jianh0ng"},"content":"            \"IDs must not be empty or only whitespace characters\";","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"wilburrito"},"content":"    public static final String NOT_APPLICABLE_TO_PERSON \u003d \"NOT APPLICABLE\";","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"wilburrito"},"content":"    public final String value;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"wilburrito"},"content":"     * Constructor for Nric object.","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"wilburrito"},"content":"    public Nric(String ic) {","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"wilburrito"},"content":"        this.value \u003d ic;","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"wilburrito"},"content":"     * Default constructor for Nric object; used if person for some reason does not","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"wilburrito"},"content":"     * have an Nric number; usually a foreigner.","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"wilburrito"},"content":"    protected Nric() {","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"wilburrito"},"content":"        this.value \u003d NOT_APPLICABLE_TO_PERSON;","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"wilburrito"},"content":"     * Constructs an Id object using given Integer Id.","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"wilburrito"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"wilburrito"},"content":"     * @param ic the Nric of the guest, stored as a String.","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"wilburrito"},"content":"     * @return a unique Nric object.","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"wilburrito"},"content":"    public static Nric of(String ic) {","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"wilburrito"},"content":"        requireNonNull(ic);","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"wilburrito"},"content":"        if (ic.isEmpty()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"wilburrito"},"content":"            throw new InvalidNricException();","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"wilburrito"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"wilburrito"},"content":"        return new Nric(ic);","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"wilburrito"},"content":"     * Evaluates if an Nric provided is valid to be a Person\u0027s Nric.","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"wilburrito"},"content":"     * In other words, it checks for null or whether the string is empty.","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"wilburrito"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"wilburrito"},"content":"     * @param ic the String of a supposed Nric.","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"wilburrito"},"content":"     * @return boolean to indicate if string is non-empty.","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"wilburrito"},"content":"    public static boolean isValidNric(String ic) {","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"wilburrito"},"content":"        requireNonNull(ic);","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"wilburrito"},"content":"        return (ic.length() \u003e 0);","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"wilburrito"},"content":"     * Returns the Nric object\u0027s value.","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"wilburrito"},"content":"     * @return the String that the Nric object contains.","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"wilburrito"},"content":"    public String getValue() {","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"wilburrito"},"content":"        return this.value;","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"wilburrito"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"wilburrito"},"content":"    public String toString() {","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"wilburrito"},"content":"        return this.value;","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"wilburrito"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"wilburrito"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"wilburrito"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"wilburrito"},"content":"                || (other instanceof Nric","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"wilburrito"},"content":"                \u0026\u0026 ((Nric) other).value.equals(this.value));","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"wilburrito"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"wilburrito"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"wilburrito"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"wilburrito"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"jianh0ng":1,"wilburrito":85}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"wilburrito"},"content":"    private final Nric nric;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"jianh0ng"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Nric nric, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"wilburrito"},"content":"        requireAllNonNull(name, phone, email, address, nric, tags);","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"wilburrito"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"BananaTechs"},"content":"     * Creates a new {@code Person} with the specified data fields, and generates a new {@code Id} for them.","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"wilburrito"},"content":"    public static Person createPerson(Name name, Phone phone, Email email, Address address, Nric nric, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"jianh0ng"},"content":"        return new Person(name, phone, email, address, nric, tags);","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":65,"author":{"gitId":"wilburrito"},"content":"    public Nric getNric() {","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"wilburrito"},"content":"        return nric;","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":68,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"wilburrito"},"content":"     * Returns true if both persons have the same nric.","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"wilburrito"},"content":"                \u0026\u0026 otherPerson.getNric().equals(getNric());","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"wilburrito"},"content":"        return otherPerson.getNric().equals(getNric());","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"wilburrito"},"content":"        /*","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"wilburrito"},"content":"        otherPerson.getName().equals(getName())","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":111,"author":{"gitId":"wilburrito"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags())","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"wilburrito"},"content":"         */","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"darrenhoon"},"content":"        //return Objects.hash(name, phone, email, address, tags, id);","lastModifiedDate":"2021-10-05"},{"lineNumber":119,"author":{"gitId":"wilburrito"},"content":"        return Objects.hash(name, phone, email, address, nric, tags);","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"darrenhoon"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2021-09-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"darrenhoon"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2021-09-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"darrenhoon"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2021-09-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                .append(getAddress())","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"darrenhoon"},"content":"                .append(\"; Id: \")","lastModifiedDate":"2021-11-01"},{"lineNumber":133,"author":{"gitId":"wilburrito"},"content":"                .append(getNric());","lastModifiedDate":"2021-10-13"},{"lineNumber":134,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":135,"author":{"gitId":"darrenhoon"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2021-09-19"},{"lineNumber":136,"author":{"gitId":"darrenhoon"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":137,"author":{"gitId":"darrenhoon"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2021-09-19"},{"lineNumber":138,"author":{"gitId":"darrenhoon"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2021-09-19"},{"lineNumber":139,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jianh0ng":2,"BananaTechs":1,"-":111,"wilburrito":16,"darrenhoon":13}},{"path":"src/main/java/seedu/address/model/person/exceptions/InvalidNricException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":" * Signals that the Id given is invalid since Ids need to be non-negative","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"public class InvalidNricException extends RuntimeException {}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"wilburrito":1,"darrenhoon":5}},{"path":"src/main/java/seedu/address/model/residency/ReadOnlyResidencyBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BananaTechs"},"content":"package seedu.address.model.residency;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"BananaTechs"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"BananaTechs"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.room.Room;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"BananaTechs"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"BananaTechs"},"content":" * Unmodifiable view of a residency book","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"BananaTechs"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"BananaTechs"},"content":"public interface ReadOnlyResidencyBook {","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"BananaTechs"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"BananaTechs"},"content":"     * Returns an unmodifiable view of the person to residency map.","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"BananaTechs"},"content":"     * This map will not contain any duplicate registrations.","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"BananaTechs"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"BananaTechs"},"content":"    Map\u003cPerson, Residency\u003e getGuestMap();","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"BananaTechs"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"BananaTechs"},"content":"     * Returns an unmodifiable view of the room to residency map.","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"BananaTechs"},"content":"     * This map will not contain any duplicate registrations.","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"BananaTechs"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"BananaTechs"},"content":"    Map\u003cRoom, Residency\u003e getRoomMap();","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"BananaTechs"},"content":"    ObservableList\u003cResidency\u003e asUnmodifiableObservableList();","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"BananaTechs"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"BananaTechs":27}},{"path":"src/main/java/seedu/address/model/residency/Residency.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BananaTechs"},"content":"package seedu.address.model.residency;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"BananaTechs"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"BananaTechs"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"BananaTechs"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"jianh0ng"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"BananaTechs"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"BananaTechs"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"BananaTechs"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.residency.exceptions.AlreadyCheckedOutException;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.room.Room;","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"BananaTechs"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"BananaTechs"},"content":" * Encapsulates the stay of a guest in a room.","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"BananaTechs"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"BananaTechs"},"content":"public class Residency {","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"BananaTechs"},"content":"    private final Room room;","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"BananaTechs"},"content":"    private final Set\u003cPerson\u003e guests;","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"BananaTechs"},"content":"    private LocalDateTime checkInTime;","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"BananaTechs"},"content":"    private LocalDateTime checkOutTime;","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"darrenhoon"},"content":"     * Constructor for Residency object.","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"BananaTechs"},"content":"     * Automatically sets the check in time to the current time.","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"darrenhoon"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"darrenhoon"},"content":"     * @param room Room object where guests stay in.","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"darrenhoon"},"content":"     * @param guests Set of Person objects who stayed in this room.","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"BananaTechs"},"content":"    public Residency(Room room, Set\u003cPerson\u003e guests) {","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"BananaTechs"},"content":"        this(room, guests, LocalDateTime.now(), null);","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"BananaTechs"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"BananaTechs"},"content":"     * Constructor for Residency object.","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"BananaTechs"},"content":"     * Allows for setting a custom check in time.","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"BananaTechs"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"BananaTechs"},"content":"     * @param room Room object where guests stay in.","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"BananaTechs"},"content":"     * @param guests Set of Person objects who stayed in this room.","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"BananaTechs"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"BananaTechs"},"content":"    public Residency(Room room, Set\u003cPerson\u003e guests, LocalDateTime checkInTime, LocalDateTime checkOutTime) {","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"BananaTechs"},"content":"        requireNonNull(room);","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"BananaTechs"},"content":"        requireAllNonNull(guests);","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"BananaTechs"},"content":"        this.room \u003d room;","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"BananaTechs"},"content":"        this.guests \u003d guests;","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"BananaTechs"},"content":"        this.checkInTime \u003d checkInTime;","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"BananaTechs"},"content":"        this.checkOutTime \u003d checkOutTime;","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"darrenhoon"},"content":"     * Returns the Room object in this Residency object.","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"darrenhoon"},"content":"     * @return Room object.","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"BananaTechs"},"content":"    public Room getRoom() {","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"BananaTechs"},"content":"        return room;","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":61,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":62,"author":{"gitId":"BananaTechs"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":63,"author":{"gitId":"darrenhoon"},"content":"     * Returns the Set of Person objects in this Residency object.","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"darrenhoon"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"BananaTechs"},"content":"     * @return An unmodifiable set of guests.","lastModifiedDate":"2021-10-04"},{"lineNumber":66,"author":{"gitId":"BananaTechs"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":67,"author":{"gitId":"BananaTechs"},"content":"    public Set\u003cPerson\u003e getGuests() {","lastModifiedDate":"2021-10-04"},{"lineNumber":68,"author":{"gitId":"BananaTechs"},"content":"        return Collections.unmodifiableSet(guests);","lastModifiedDate":"2021-10-04"},{"lineNumber":69,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":70,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":71,"author":{"gitId":"BananaTechs"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":72,"author":{"gitId":"BananaTechs"},"content":"     * Replaces a guest object with its updated Person object.","lastModifiedDate":"2021-10-04"},{"lineNumber":73,"author":{"gitId":"BananaTechs"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":74,"author":{"gitId":"BananaTechs"},"content":"     * @param personToEdit The Person object to replace","lastModifiedDate":"2021-10-04"},{"lineNumber":75,"author":{"gitId":"BananaTechs"},"content":"     * @param editedPerson The Person object to replace with","lastModifiedDate":"2021-10-04"},{"lineNumber":76,"author":{"gitId":"BananaTechs"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":77,"author":{"gitId":"BananaTechs"},"content":"    public void setGuest(Person personToEdit, Person editedPerson) {","lastModifiedDate":"2021-10-04"},{"lineNumber":78,"author":{"gitId":"BananaTechs"},"content":"        guests.remove(personToEdit);","lastModifiedDate":"2021-10-04"},{"lineNumber":79,"author":{"gitId":"BananaTechs"},"content":"        guests.add(editedPerson);","lastModifiedDate":"2021-10-04"},{"lineNumber":80,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":81,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"BananaTechs"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"BananaTechs"},"content":"     * Sets the check out time to the current time.","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"BananaTechs"},"content":"     * This cannot be changed in the future.","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"BananaTechs"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"BananaTechs"},"content":"     * @throws AlreadyCheckedOutException if this method has been called before.","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"BananaTechs"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":88,"author":{"gitId":"BananaTechs"},"content":"    public void checkOut() {","lastModifiedDate":"2021-10-16"},{"lineNumber":89,"author":{"gitId":"BananaTechs"},"content":"        if (checkOutTime !\u003d null) {","lastModifiedDate":"2021-10-16"},{"lineNumber":90,"author":{"gitId":"BananaTechs"},"content":"            throw new AlreadyCheckedOutException();","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"BananaTechs"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":92,"author":{"gitId":"BananaTechs"},"content":"        checkOutTime \u003d LocalDateTime.now();","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"BananaTechs"},"content":"    public LocalDateTime getCheckInTime() {","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"BananaTechs"},"content":"        return this.checkInTime;","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":98,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":99,"author":{"gitId":"BananaTechs"},"content":"    public Optional\u003cLocalDateTime\u003e getCheckOutTime() {","lastModifiedDate":"2021-10-16"},{"lineNumber":100,"author":{"gitId":"BananaTechs"},"content":"        return Optional.ofNullable(this.checkOutTime);","lastModifiedDate":"2021-10-16"},{"lineNumber":101,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":102,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":103,"author":{"gitId":"darrenhoon"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"darrenhoon"},"content":"    public String toString() {","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"jianh0ng"},"content":"        String message \u003d String.format(\"Room [%s], Guests [%s], CheckInTime [%s], CheckOutTime [%s]\",","lastModifiedDate":"2021-11-01"},{"lineNumber":106,"author":{"gitId":"jianh0ng"},"content":"                room, guests, checkInTime, checkOutTime);","lastModifiedDate":"2021-11-01"},{"lineNumber":107,"author":{"gitId":"darrenhoon"},"content":"        return message;","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"darrenhoon"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"darrenhoon"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":112,"author":{"gitId":"jianh0ng"},"content":"        if (this.checkOutTime \u003d\u003d null) {","lastModifiedDate":"2021-11-02"},{"lineNumber":113,"author":{"gitId":"darrenhoon"},"content":"            return other \u003d\u003d this","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"darrenhoon"},"content":"                    || (other instanceof Residency","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"BananaTechs"},"content":"                    \u0026\u0026 ((Residency) other).room.equals(this.room)","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"jianh0ng"},"content":"                    \u0026\u0026 ((Residency) other).guests.equals(this.guests)","lastModifiedDate":"2021-11-02"},{"lineNumber":117,"author":{"gitId":"jianh0ng"},"content":"                    \u0026\u0026 ((Residency) other).checkInTime.truncatedTo(ChronoUnit.MINUTES)","lastModifiedDate":"2021-11-02"},{"lineNumber":118,"author":{"gitId":"jianh0ng"},"content":"                    .equals(this.checkInTime.truncatedTo(ChronoUnit.MINUTES)));","lastModifiedDate":"2021-11-02"},{"lineNumber":119,"author":{"gitId":"jianh0ng"},"content":"        } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":120,"author":{"gitId":"jianh0ng"},"content":"            return other \u003d\u003d this","lastModifiedDate":"2021-11-02"},{"lineNumber":121,"author":{"gitId":"jianh0ng"},"content":"                    || (other instanceof Residency","lastModifiedDate":"2021-11-02"},{"lineNumber":122,"author":{"gitId":"jianh0ng"},"content":"                    \u0026\u0026 ((Residency) other).room.equals(this.room)","lastModifiedDate":"2021-11-02"},{"lineNumber":123,"author":{"gitId":"jianh0ng"},"content":"                    \u0026\u0026 ((Residency) other).guests.equals(this.guests)","lastModifiedDate":"2021-11-02"},{"lineNumber":124,"author":{"gitId":"jianh0ng"},"content":"                    \u0026\u0026 ((Residency) other).checkInTime.truncatedTo(ChronoUnit.MINUTES)","lastModifiedDate":"2021-11-02"},{"lineNumber":125,"author":{"gitId":"jianh0ng"},"content":"                    .equals(this.checkInTime.truncatedTo(ChronoUnit.MINUTES))","lastModifiedDate":"2021-11-02"},{"lineNumber":126,"author":{"gitId":"jianh0ng"},"content":"                    \u0026\u0026 ((Residency) other).checkOutTime.truncatedTo(ChronoUnit.MINUTES)","lastModifiedDate":"2021-11-02"},{"lineNumber":127,"author":{"gitId":"jianh0ng"},"content":"                    .equals(this.checkOutTime.truncatedTo(ChronoUnit.MINUTES)));","lastModifiedDate":"2021-11-02"},{"lineNumber":128,"author":{"gitId":"jianh0ng"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":129,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":130,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":131,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":132,"author":{"gitId":"darrenhoon"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":133,"author":{"gitId":"darrenhoon"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-05"},{"lineNumber":134,"author":{"gitId":"jianh0ng"},"content":"        return Objects.hash(room, guests, checkInTime, checkOutTime);","lastModifiedDate":"2021-11-02"},{"lineNumber":135,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"BananaTechs"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"jianh0ng":19,"BananaTechs":89,"darrenhoon":28}},{"path":"src/main/java/seedu/address/model/residency/ResidencyBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BananaTechs"},"content":"package seedu.address.model.residency;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"BananaTechs"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"BananaTechs"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"BananaTechs"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"jianh0ng"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"BananaTechs"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"BananaTechs"},"content":"import java.util.List;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"BananaTechs"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"BananaTechs"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"BananaTechs"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"jianh0ng"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"BananaTechs"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"BananaTechs"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.residency.exceptions.DuplicatePersonRegException;","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.residency.exceptions.DuplicateRoomRegException;","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.residency.exceptions.ResidencyNotFoundException;","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.room.Room;","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"BananaTechs"},"content":"public class ResidencyBook implements ReadOnlyResidencyBook {","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"BananaTechs"},"content":"    private final ObservableList\u003cResidency\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"BananaTechs"},"content":"    private final ObservableList\u003cResidency\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"BananaTechs"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"BananaTechs"},"content":"    private final HashMap\u003cRoom, Residency\u003e roomMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"BananaTechs"},"content":"    private final HashMap\u003cPerson, Residency\u003e guestMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"jianh0ng"},"content":"    private final boolean allowDuplicates;","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"jianh0ng"},"content":"    public ResidencyBook(boolean allowDuplicates) {","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"jianh0ng"},"content":"        this.allowDuplicates \u003d allowDuplicates;","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"BananaTechs"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"BananaTechs"},"content":"     * Registers the residency of a set of guests in a room.","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"BananaTechs"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"BananaTechs"},"content":"     * @param room The {@code Room} to stay in","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"BananaTechs"},"content":"     * @param guests The {@code Set} of {@code Person}s to stay in the room","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"BananaTechs"},"content":"     * @throws DuplicateRoomRegException if the {@code Room} is already registered.","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"BananaTechs"},"content":"     * @throws DuplicatePersonRegException if any {@code Person} is already registered.","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"BananaTechs"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"BananaTechs"},"content":"    public void register(Room room, Set\u003cPerson\u003e guests) {","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"BananaTechs"},"content":"        requireNonNull(room);","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"BananaTechs"},"content":"        requireAllNonNull(guests);","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"BananaTechs"},"content":"        register(new Residency(room, guests));","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"BananaTechs"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"BananaTechs"},"content":"     * Registers a {@code Residency}.","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"BananaTechs"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"BananaTechs"},"content":"    public void register(Residency residency) {","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"BananaTechs"},"content":"        requireNonNull(residency);","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"BananaTechs"},"content":"        Room room \u003d residency.getRoom();","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"BananaTechs"},"content":"        Set\u003cPerson\u003e guests \u003d residency.getGuests();","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"jianh0ng"},"content":"        if (roomMap.containsKey(room) \u0026\u0026 !allowDuplicates) {","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"BananaTechs"},"content":"            throw new DuplicateRoomRegException();","lastModifiedDate":"2021-10-04"},{"lineNumber":62,"author":{"gitId":"BananaTechs"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":63,"author":{"gitId":"BananaTechs"},"content":"        for (Person guest : guests) {","lastModifiedDate":"2021-10-04"},{"lineNumber":64,"author":{"gitId":"jianh0ng"},"content":"            if (guestMap.containsKey(guest) \u0026\u0026 !allowDuplicates) {","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"BananaTechs"},"content":"                throw new DuplicatePersonRegException(guest);","lastModifiedDate":"2021-10-04"},{"lineNumber":66,"author":{"gitId":"BananaTechs"},"content":"            }","lastModifiedDate":"2021-10-04"},{"lineNumber":67,"author":{"gitId":"BananaTechs"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":68,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":69,"author":{"gitId":"BananaTechs"},"content":"        internalList.add(residency);","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"BananaTechs"},"content":"        roomMap.put(room, residency);","lastModifiedDate":"2021-10-04"},{"lineNumber":71,"author":{"gitId":"BananaTechs"},"content":"        for (Person guest : guests) {","lastModifiedDate":"2021-10-04"},{"lineNumber":72,"author":{"gitId":"BananaTechs"},"content":"            guestMap.put(guest, residency);","lastModifiedDate":"2021-10-04"},{"lineNumber":73,"author":{"gitId":"BananaTechs"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":74,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":75,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":76,"author":{"gitId":"BananaTechs"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":77,"author":{"gitId":"BananaTechs"},"content":"     * Removes and de-registers a {@code Residency}, making the room and guests","lastModifiedDate":"2021-10-04"},{"lineNumber":78,"author":{"gitId":"BananaTechs"},"content":"     * available for new registrations.","lastModifiedDate":"2021-10-04"},{"lineNumber":79,"author":{"gitId":"BananaTechs"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"BananaTechs"},"content":"     * @throws ResidencyNotFoundException if the given residency is not registered.","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"BananaTechs"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":82,"author":{"gitId":"BananaTechs"},"content":"    public void remove(Residency residency) {","lastModifiedDate":"2021-10-04"},{"lineNumber":83,"author":{"gitId":"BananaTechs"},"content":"        requireNonNull(residency);","lastModifiedDate":"2021-10-04"},{"lineNumber":84,"author":{"gitId":"BananaTechs"},"content":"        Room room \u003d residency.getRoom();","lastModifiedDate":"2021-10-04"},{"lineNumber":85,"author":{"gitId":"BananaTechs"},"content":"        Set\u003cPerson\u003e guests \u003d residency.getGuests();","lastModifiedDate":"2021-10-04"},{"lineNumber":86,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":87,"author":{"gitId":"BananaTechs"},"content":"        if (!internalList.contains(residency)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"BananaTechs"},"content":"            throw new ResidencyNotFoundException();","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"BananaTechs"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"BananaTechs"},"content":"        internalList.remove(residency);","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"BananaTechs"},"content":"        roomMap.remove(room);","lastModifiedDate":"2021-10-04"},{"lineNumber":93,"author":{"gitId":"BananaTechs"},"content":"        for (Person guest : guests) {","lastModifiedDate":"2021-10-04"},{"lineNumber":94,"author":{"gitId":"BananaTechs"},"content":"            guestMap.remove(guest);","lastModifiedDate":"2021-10-04"},{"lineNumber":95,"author":{"gitId":"BananaTechs"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":96,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":97,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":98,"author":{"gitId":"BananaTechs"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":99,"author":{"gitId":"BananaTechs"},"content":"     * Replaces a {@code Person} object with a new one in the relevant {@code Residency},","lastModifiedDate":"2021-10-04"},{"lineNumber":100,"author":{"gitId":"BananaTechs"},"content":"     * if it exists, and updates the registries accordingly.","lastModifiedDate":"2021-10-04"},{"lineNumber":101,"author":{"gitId":"BananaTechs"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":102,"author":{"gitId":"BananaTechs"},"content":"     * @param personToEdit The Person object to replace","lastModifiedDate":"2021-10-04"},{"lineNumber":103,"author":{"gitId":"BananaTechs"},"content":"     * @param editedPerson The Person object to replace with","lastModifiedDate":"2021-10-04"},{"lineNumber":104,"author":{"gitId":"BananaTechs"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":105,"author":{"gitId":"BananaTechs"},"content":"    public void edit(Person personToEdit, Person editedPerson) {","lastModifiedDate":"2021-10-04"},{"lineNumber":106,"author":{"gitId":"BananaTechs"},"content":"        requireAllNonNull(personToEdit, editedPerson);","lastModifiedDate":"2021-10-04"},{"lineNumber":107,"author":{"gitId":"jianh0ng"},"content":"        List\u003cResidency\u003e residencies \u003d getResidencies(personToEdit);","lastModifiedDate":"2021-10-28"},{"lineNumber":108,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":109,"author":{"gitId":"jianh0ng"},"content":"        for (Residency residency : residencies) {","lastModifiedDate":"2021-10-28"},{"lineNumber":110,"author":{"gitId":"BananaTechs"},"content":"            remove(residency);","lastModifiedDate":"2021-10-04"},{"lineNumber":111,"author":{"gitId":"BananaTechs"},"content":"            residency.setGuest(personToEdit, editedPerson);","lastModifiedDate":"2021-10-04"},{"lineNumber":112,"author":{"gitId":"BananaTechs"},"content":"            register(residency);","lastModifiedDate":"2021-10-04"},{"lineNumber":113,"author":{"gitId":"jianh0ng"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":114,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":115,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":116,"author":{"gitId":"BananaTechs"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":117,"author":{"gitId":"BananaTechs"},"content":"     * Gets the {@code Residency} containing this {@code Room}, if it exists.","lastModifiedDate":"2021-10-04"},{"lineNumber":118,"author":{"gitId":"BananaTechs"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":119,"author":{"gitId":"BananaTechs"},"content":"     * @param room The room to get the residency of","lastModifiedDate":"2021-10-04"},{"lineNumber":120,"author":{"gitId":"BananaTechs"},"content":"     * @return An {@code Optional} with the {@code Residency} present if it exists,","lastModifiedDate":"2021-10-04"},{"lineNumber":121,"author":{"gitId":"BananaTechs"},"content":"     *         otherwise an empty Optional","lastModifiedDate":"2021-10-04"},{"lineNumber":122,"author":{"gitId":"BananaTechs"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":123,"author":{"gitId":"BananaTechs"},"content":"    public Optional\u003cResidency\u003e getResidency(Room room) {","lastModifiedDate":"2021-10-04"},{"lineNumber":124,"author":{"gitId":"BananaTechs"},"content":"        requireNonNull(room);","lastModifiedDate":"2021-10-04"},{"lineNumber":125,"author":{"gitId":"BananaTechs"},"content":"        return Optional.ofNullable(roomMap.get(room));","lastModifiedDate":"2021-10-04"},{"lineNumber":126,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":127,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":128,"author":{"gitId":"BananaTechs"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":129,"author":{"gitId":"BananaTechs"},"content":"     * Gets the {@code Residency} containing this {@code Person}, if it exists.","lastModifiedDate":"2021-10-04"},{"lineNumber":130,"author":{"gitId":"BananaTechs"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":131,"author":{"gitId":"BananaTechs"},"content":"     * @param guest The {@code Person} to get the residency of","lastModifiedDate":"2021-10-04"},{"lineNumber":132,"author":{"gitId":"BananaTechs"},"content":"     * @return An {@code Optional} with the {@code Residency} present if it exists,","lastModifiedDate":"2021-10-04"},{"lineNumber":133,"author":{"gitId":"BananaTechs"},"content":"     *         otherwise an empty Optional","lastModifiedDate":"2021-10-04"},{"lineNumber":134,"author":{"gitId":"BananaTechs"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":135,"author":{"gitId":"BananaTechs"},"content":"    public Optional\u003cResidency\u003e getResidency(Person guest) {","lastModifiedDate":"2021-10-04"},{"lineNumber":136,"author":{"gitId":"BananaTechs"},"content":"        requireNonNull(guest);","lastModifiedDate":"2021-10-04"},{"lineNumber":137,"author":{"gitId":"BananaTechs"},"content":"        return Optional.ofNullable(guestMap.get(guest));","lastModifiedDate":"2021-10-04"},{"lineNumber":138,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":139,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":140,"author":{"gitId":"jianh0ng"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":141,"author":{"gitId":"jianh0ng"},"content":"     * Gets the List of {@code Residency} containing this {@code Person}, if it exists.","lastModifiedDate":"2021-10-28"},{"lineNumber":142,"author":{"gitId":"jianh0ng"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":143,"author":{"gitId":"jianh0ng"},"content":"     * @param guest The {@code Person} to get the residency of","lastModifiedDate":"2021-10-28"},{"lineNumber":144,"author":{"gitId":"jianh0ng"},"content":"     * @return A {@code List} with the {@code Residency} that the {@code Person} is in.","lastModifiedDate":"2021-10-28"},{"lineNumber":145,"author":{"gitId":"jianh0ng"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":146,"author":{"gitId":"jianh0ng"},"content":"    public List\u003cResidency\u003e getResidencies(Person guest) {","lastModifiedDate":"2021-10-28"},{"lineNumber":147,"author":{"gitId":"jianh0ng"},"content":"        requireNonNull(guest);","lastModifiedDate":"2021-10-28"},{"lineNumber":148,"author":{"gitId":"jianh0ng"},"content":"        List\u003cResidency\u003e relevantResidencies \u003d internalList.stream()","lastModifiedDate":"2021-10-28"},{"lineNumber":149,"author":{"gitId":"jianh0ng"},"content":"                .filter(residency -\u003e residency.getGuests().contains(guest)).collect(Collectors.toUnmodifiableList());","lastModifiedDate":"2021-10-28"},{"lineNumber":150,"author":{"gitId":"jianh0ng"},"content":"        List\u003cResidency\u003e results \u003d relevantResidencies;","lastModifiedDate":"2021-10-28"},{"lineNumber":151,"author":{"gitId":"jianh0ng"},"content":"        return results;","lastModifiedDate":"2021-10-28"},{"lineNumber":152,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":153,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":154,"author":{"gitId":"BananaTechs"},"content":"    public void setResidencies(List\u003cResidency\u003e residencies) {","lastModifiedDate":"2021-10-05"},{"lineNumber":155,"author":{"gitId":"BananaTechs"},"content":"        internalList.clear();","lastModifiedDate":"2021-10-06"},{"lineNumber":156,"author":{"gitId":"BananaTechs"},"content":"        guestMap.clear();","lastModifiedDate":"2021-10-05"},{"lineNumber":157,"author":{"gitId":"BananaTechs"},"content":"        roomMap.clear();","lastModifiedDate":"2021-10-05"},{"lineNumber":158,"author":{"gitId":"BananaTechs"},"content":"        for (Residency residency : residencies) {","lastModifiedDate":"2021-10-05"},{"lineNumber":159,"author":{"gitId":"BananaTechs"},"content":"            register(residency);","lastModifiedDate":"2021-10-05"},{"lineNumber":160,"author":{"gitId":"BananaTechs"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":161,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":162,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":163,"author":{"gitId":"BananaTechs"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":164,"author":{"gitId":"BananaTechs"},"content":"    public Map\u003cPerson, Residency\u003e getGuestMap() {","lastModifiedDate":"2021-10-04"},{"lineNumber":165,"author":{"gitId":"BananaTechs"},"content":"        return Collections.unmodifiableMap(guestMap);","lastModifiedDate":"2021-10-04"},{"lineNumber":166,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":167,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":168,"author":{"gitId":"BananaTechs"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":169,"author":{"gitId":"BananaTechs"},"content":"    public Map\u003cRoom, Residency\u003e getRoomMap() {","lastModifiedDate":"2021-10-04"},{"lineNumber":170,"author":{"gitId":"BananaTechs"},"content":"        return Collections.unmodifiableMap(roomMap);","lastModifiedDate":"2021-10-04"},{"lineNumber":171,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":172,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":173,"author":{"gitId":"BananaTechs"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":174,"author":{"gitId":"BananaTechs"},"content":"    public ObservableList\u003cResidency\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-06"},{"lineNumber":175,"author":{"gitId":"jianh0ng"},"content":"        Comparator\u003cResidency\u003e cmp \u003d new Comparator\u003cResidency\u003e() {","lastModifiedDate":"2021-10-28"},{"lineNumber":176,"author":{"gitId":"jianh0ng"},"content":"            @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":177,"author":{"gitId":"jianh0ng"},"content":"            public int compare(Residency o1, Residency o2) {","lastModifiedDate":"2021-10-28"},{"lineNumber":178,"author":{"gitId":"jianh0ng"},"content":"                return o2.getCheckInTime().compareTo(o1.getCheckInTime());","lastModifiedDate":"2021-10-28"},{"lineNumber":179,"author":{"gitId":"jianh0ng"},"content":"            }","lastModifiedDate":"2021-10-28"},{"lineNumber":180,"author":{"gitId":"jianh0ng"},"content":"        };","lastModifiedDate":"2021-10-28"},{"lineNumber":181,"author":{"gitId":"jianh0ng"},"content":"        FXCollections.sort(internalList, cmp);","lastModifiedDate":"2021-10-28"},{"lineNumber":182,"author":{"gitId":"jianh0ng"},"content":"        return FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-28"},{"lineNumber":183,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":184,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":185,"author":{"gitId":"BananaTechs"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":186,"author":{"gitId":"BananaTechs"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":187,"author":{"gitId":"BananaTechs"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":188,"author":{"gitId":"BananaTechs"},"content":"                || (other instanceof ResidencyBook // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":189,"author":{"gitId":"jianh0ng"},"content":"                \u0026\u0026 allowDuplicates \u003d\u003d ((ResidencyBook) other).allowDuplicates","lastModifiedDate":"2021-10-11"},{"lineNumber":190,"author":{"gitId":"BananaTechs"},"content":"                \u0026\u0026 internalList.equals(((ResidencyBook) other).internalList));","lastModifiedDate":"2021-10-07"},{"lineNumber":191,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":192,"author":{"gitId":"BananaTechs"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"jianh0ng":36,"BananaTechs":156}},{"path":"src/main/java/seedu/address/model/residency/exceptions/AlreadyCheckedOutException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BananaTechs"},"content":"package seedu.address.model.residency.exceptions;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"BananaTechs"},"content":"public class AlreadyCheckedOutException extends RuntimeException {","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"BananaTechs"},"content":"    public AlreadyCheckedOutException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"BananaTechs"},"content":"        super(\"This Residency has already been checked out.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"BananaTechs"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"BananaTechs":7}},{"path":"src/main/java/seedu/address/model/residency/exceptions/DuplicatePersonRegException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BananaTechs"},"content":"package seedu.address.model.residency.exceptions;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"BananaTechs"},"content":"public class DuplicatePersonRegException extends RuntimeException {","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"BananaTechs"},"content":"    public DuplicatePersonRegException(Person person) {","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"BananaTechs"},"content":"        super(person.getName() + \" is already checked into another room.\");","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"BananaTechs"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"BananaTechs":9}},{"path":"src/main/java/seedu/address/model/residency/exceptions/DuplicateRoomRegException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BananaTechs"},"content":"package seedu.address.model.residency.exceptions;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"BananaTechs"},"content":"public class DuplicateRoomRegException extends RuntimeException {","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"jianh0ng"},"content":"    public static final String MESSAGE \u003d \"This room is currently occupied.\";","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"BananaTechs"},"content":"    public DuplicateRoomRegException() {","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"jianh0ng"},"content":"        super(MESSAGE);","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"BananaTechs"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"jianh0ng":2,"BananaTechs":6}},{"path":"src/main/java/seedu/address/model/residency/exceptions/ResidencyContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianh0ng"},"content":"package seedu.address.model.residency.exceptions;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"jianh0ng"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"jianh0ng"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.model.residency.Residency;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"jianh0ng"},"content":"public class ResidencyContainsKeywordsPredicate implements Predicate\u003cResidency\u003e {","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"jianh0ng"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"jianh0ng"},"content":"    public ResidencyContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"jianh0ng"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"jianh0ng"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"jianh0ng"},"content":"    public boolean test(Residency residency) {","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"jianh0ng"},"content":"        return keywords.stream().allMatch(keyword -\u003e residency.toString().contains(keyword));","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"jianh0ng"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"jianh0ng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"jianh0ng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"jianh0ng"},"content":"                || (other instanceof ResidencyContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"jianh0ng"},"content":"                \u0026\u0026 keywords.equals(((ResidencyContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"jianh0ng"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"jianh0ng":27}},{"path":"src/main/java/seedu/address/model/residency/exceptions/ResidencyNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BananaTechs"},"content":"package seedu.address.model.residency.exceptions;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"BananaTechs"},"content":"public class ResidencyNotFoundException extends RuntimeException {","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"BananaTechs"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"BananaTechs":4}},{"path":"src/main/java/seedu/address/model/room/Room.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.room;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"peilinye"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"BananaTechs"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"import java.util.Set;","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"peilinye"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Room {","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"BananaTechs"},"content":"    private final RoomNumber roomNumber;","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"BananaTechs"},"content":"    private final Vacancy vacancy;","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"    private final Set\u003cPerson\u003e guests \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"peilinye"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"darrenhoon"},"content":"     * Constructs a {@code Room}.","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param roomNumber A valid room number.","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"peilinye"},"content":"    public Room(RoomNumber roomNumber, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.roomNumber \u003d roomNumber;","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"BananaTechs"},"content":"        vacancy \u003d Vacancy.VACANT;","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"peilinye"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"jianh0ng"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"darrenhoon"},"content":"     * Constructs a Room given its roomNumber, vacancy, status and list of guests.","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"jianh0ng"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"darrenhoon"},"content":"     * @param roomNumber RoomNumber roomNumber","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"BananaTechs"},"content":"     * @param vacancy Vacant if room has no guests.","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"jianh0ng"},"content":"     * @param guests List of guests in the room.","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"jianh0ng"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"peilinye"},"content":"    public Room(RoomNumber roomNumber, Vacancy vacancy, Set\u003cPerson\u003e guests, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"peilinye"},"content":"        requireAllNonNull(roomNumber, vacancy, tags);","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.roomNumber \u003d roomNumber;","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"BananaTechs"},"content":"        this.vacancy \u003d vacancy;","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"darrenhoon"},"content":"        this.guests.addAll(guests);","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"peilinye"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"darrenhoon"},"content":"    public RoomNumber getRoomNumber() {","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"jianh0ng"},"content":"        return roomNumber;","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"BananaTechs"},"content":"    public Vacancy getVacancy() {","lastModifiedDate":"2021-09-25"},{"lineNumber":50,"author":{"gitId":"BananaTechs"},"content":"        return this.vacancy;","lastModifiedDate":"2021-09-25"},{"lineNumber":51,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"darrenhoon"},"content":"     * Returns an immutable person set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"darrenhoon"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"darrenhoon"},"content":"    public Set\u003cPerson\u003e getGuests() {","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"darrenhoon"},"content":"        return Collections.unmodifiableSet(guests);","lastModifiedDate":"2021-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":61,"author":{"gitId":"peilinye"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"peilinye"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"peilinye"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"peilinye"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"peilinye"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"peilinye"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"BananaTechs"},"content":"    public boolean isVacant() {","lastModifiedDate":"2021-09-25"},{"lineNumber":70,"author":{"gitId":"BananaTechs"},"content":"        return vacancy.isVacant();","lastModifiedDate":"2021-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":73,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":74,"author":{"gitId":"peilinye"},"content":"     * Returns true if both rooms have the same {@code RoomNumber}.","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":76,"author":{"gitId":"darrenhoon"},"content":"    public boolean isSameRoom(Room otherRoom) {","lastModifiedDate":"2021-09-23"},{"lineNumber":77,"author":{"gitId":"darrenhoon"},"content":"        if (otherRoom \u003d\u003d this) {","lastModifiedDate":"2021-09-23"},{"lineNumber":78,"author":{"gitId":"darrenhoon"},"content":"            return true;","lastModifiedDate":"2021-09-23"},{"lineNumber":79,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":80,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":81,"author":{"gitId":"darrenhoon"},"content":"        return otherRoom !\u003d null","lastModifiedDate":"2021-09-23"},{"lineNumber":82,"author":{"gitId":"darrenhoon"},"content":"                \u0026\u0026 otherRoom.getRoomNumber().equals(getRoomNumber());","lastModifiedDate":"2021-09-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":85,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":86,"author":{"gitId":"darrenhoon"},"content":"     * Finds a guest to replace his/her details with updated information.","lastModifiedDate":"2021-10-02"},{"lineNumber":87,"author":{"gitId":"darrenhoon"},"content":"     * @param oldGuest the guest in the current guests","lastModifiedDate":"2021-10-02"},{"lineNumber":88,"author":{"gitId":"darrenhoon"},"content":"     * @param editedGuest the guest with the updated information","lastModifiedDate":"2021-10-02"},{"lineNumber":89,"author":{"gitId":"darrenhoon"},"content":"     * @return Room that contained the edited guests","lastModifiedDate":"2021-10-02"},{"lineNumber":90,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":91,"author":{"gitId":"darrenhoon"},"content":"    public Room replaceGuest(Person oldGuest, Person editedGuest) {","lastModifiedDate":"2021-10-02"},{"lineNumber":92,"author":{"gitId":"darrenhoon"},"content":"        Set\u003cPerson\u003e editedGuests \u003d guests;","lastModifiedDate":"2021-10-02"},{"lineNumber":93,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":94,"author":{"gitId":"darrenhoon"},"content":"        if (editedGuests.contains(oldGuest)) {","lastModifiedDate":"2021-10-02"},{"lineNumber":95,"author":{"gitId":"darrenhoon"},"content":"            editedGuests.remove(oldGuest);","lastModifiedDate":"2021-10-02"},{"lineNumber":96,"author":{"gitId":"darrenhoon"},"content":"            editedGuests.add(editedGuest);","lastModifiedDate":"2021-10-02"},{"lineNumber":97,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":98,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":99,"author":{"gitId":"peilinye"},"content":"        return new Room(roomNumber, vacancy, editedGuests, tags);","lastModifiedDate":"2021-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2021-09-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return roomNumber.toString();","lastModifiedDate":"2021-09-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-09-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                || (other instanceof Room","lastModifiedDate":"2021-09-13"},{"lineNumber":111,"author":{"gitId":"darrenhoon"},"content":"                \u0026\u0026 roomNumber.equals(((Room) other).roomNumber)","lastModifiedDate":"2021-09-25"},{"lineNumber":112,"author":{"gitId":"darrenhoon"},"content":"                \u0026\u0026 vacancy.equals(((Room) other).vacancy)","lastModifiedDate":"2021-09-25"},{"lineNumber":113,"author":{"gitId":"peilinye"},"content":"                \u0026\u0026 guests.equals(((Room) other).guests)","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"peilinye"},"content":"                \u0026\u0026 tags.equals(((Room) other).tags));","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-13"},{"lineNumber":119,"author":{"gitId":"darrenhoon"},"content":"        return Objects.hash(roomNumber, vacancy, guests);","lastModifiedDate":"2021-09-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"peilinye":21,"jianh0ng":11,"BananaTechs":10,"-":38,"darrenhoon":41}},{"path":"src/main/java/seedu/address/model/room/RoomIsOccupiedPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peilinye"},"content":"package seedu.address.model.room;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"peilinye"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"peilinye"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"peilinye"},"content":" * Tests that a {@code Room}\u0027s {@code Vacancy} status is occupied.","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"peilinye"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"peilinye"},"content":"public class RoomIsOccupiedPredicate implements Predicate\u003cRoom\u003e {","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"peilinye"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"peilinye"},"content":"    public boolean test(Room room) {","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"peilinye"},"content":"        return !room.isVacant();","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"peilinye"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"peilinye"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"peilinye"},"content":"        return (other instanceof RoomIsOccupiedPredicate);","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"peilinye"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"peilinye":19}},{"path":"src/main/java/seedu/address/model/room/RoomIsVacantPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peilinye"},"content":"package seedu.address.model.room;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"peilinye"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"peilinye"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"peilinye"},"content":" * Tests that a {@code Room}\u0027s {@code Vacancy} status is vacant.","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"peilinye"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"peilinye"},"content":"public class RoomIsVacantPredicate implements Predicate\u003cRoom\u003e {","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"peilinye"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"peilinye"},"content":"    public boolean test(Room room) {","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"peilinye"},"content":"        return room.isVacant();","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"peilinye"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"peilinye"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"peilinye"},"content":"        return (other instanceof RoomIsVacantPredicate);","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"peilinye"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"peilinye":19}},{"path":"src/main/java/seedu/address/model/room/RoomList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.room;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"jianh0ng"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"jianh0ng"},"content":"import java.util.List;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"import seedu.address.model.room.exceptions.DuplicateRoomException;","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"import seedu.address.model.room.exceptions.RoomNotFoundException;","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class RoomList implements Iterable\u003cRoom\u003e {","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cRoom\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cRoom\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"darrenhoon"},"content":"     * Adds a room to the list.","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"darrenhoon"},"content":"     * The room must not already exist in the list.","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void add(Room toAdd) {","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"darrenhoon"},"content":"            throw new DuplicateRoomException();","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"darrenhoon"},"content":"     * Replaces the room {@code target} in the list with {@code editedRoom}.","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"darrenhoon"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"darrenhoon"},"content":"     * The room identity of {@code editedRoom} must not be the same as another existing room in the list.","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"darrenhoon"},"content":"    public void setRoom(Room target, Room editedRoom) {","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"darrenhoon"},"content":"        requireAllNonNull(target, editedRoom);","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"darrenhoon"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"darrenhoon"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"darrenhoon"},"content":"            throw new RoomNotFoundException();","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"darrenhoon"},"content":"        if (!target.isSameRoom(editedRoom) \u0026\u0026 contains(editedRoom)) {","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"darrenhoon"},"content":"            throw new DuplicateRoomException();","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"darrenhoon"},"content":"        internalList.set(index, editedRoom);","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"darrenhoon"},"content":"     * Removes the equivalent room from the list.","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"darrenhoon"},"content":"     * The room must exist in the list.","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":57,"author":{"gitId":"darrenhoon"},"content":"    public void remove(Room toRemove) {","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"darrenhoon"},"content":"            throw new RoomNotFoundException();","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"darrenhoon"},"content":"    public void setRooms(RoomList replacement) {","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"darrenhoon"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"darrenhoon"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-09-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":69,"author":{"gitId":"jianh0ng"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":70,"author":{"gitId":"jianh0ng"},"content":"     * Replaces the contents of this list with {@code rooms}.","lastModifiedDate":"2021-09-19"},{"lineNumber":71,"author":{"gitId":"jianh0ng"},"content":"     * {@code rooms} must not contain duplicate persons.","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"jianh0ng"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"jianh0ng"},"content":"    public void setRooms(List\u003cRoom\u003e rooms) {","lastModifiedDate":"2021-09-19"},{"lineNumber":74,"author":{"gitId":"jianh0ng"},"content":"        requireAllNonNull(rooms);","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"darrenhoon"},"content":"        if (!roomsAreUnique(rooms)) {","lastModifiedDate":"2021-09-23"},{"lineNumber":76,"author":{"gitId":"darrenhoon"},"content":"            throw new DuplicateRoomException();","lastModifiedDate":"2021-09-23"},{"lineNumber":77,"author":{"gitId":"jianh0ng"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":78,"author":{"gitId":"darrenhoon"},"content":"        internalList.setAll(rooms);","lastModifiedDate":"2021-09-23"},{"lineNumber":79,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-09-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public ObservableList\u003cRoom\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-09-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-09-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":88,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":89,"author":{"gitId":"darrenhoon"},"content":"     * Returns true if the list contains an equivalent room as the given argument.","lastModifiedDate":"2021-09-23"},{"lineNumber":90,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":91,"author":{"gitId":"darrenhoon"},"content":"    public boolean contains(Room toCheck) {","lastModifiedDate":"2021-09-23"},{"lineNumber":92,"author":{"gitId":"darrenhoon"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-09-23"},{"lineNumber":93,"author":{"gitId":"darrenhoon"},"content":"        return internalList.stream().anyMatch(toCheck::isSameRoom);","lastModifiedDate":"2021-09-23"},{"lineNumber":94,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":95,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public Iterator\u003cRoom\u003e iterator() {","lastModifiedDate":"2021-09-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-09-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                || (other instanceof RoomList // instanceof handles nulls","lastModifiedDate":"2021-09-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                \u0026\u0026 internalList.equals(((RoomList) other).internalList));","lastModifiedDate":"2021-09-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-09-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":112,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":113,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":114,"author":{"gitId":"darrenhoon"},"content":"     * Returns true if {@code rooms} contains only unique rooms.","lastModifiedDate":"2021-09-23"},{"lineNumber":115,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":116,"author":{"gitId":"darrenhoon"},"content":"    private boolean roomsAreUnique(List\u003cRoom\u003e rooms) {","lastModifiedDate":"2021-09-23"},{"lineNumber":117,"author":{"gitId":"darrenhoon"},"content":"        for (int i \u003d 0; i \u003c rooms.size() - 1; i++) {","lastModifiedDate":"2021-09-23"},{"lineNumber":118,"author":{"gitId":"darrenhoon"},"content":"            for (int j \u003d i + 1; j \u003c rooms.size(); j++) {","lastModifiedDate":"2021-09-23"},{"lineNumber":119,"author":{"gitId":"darrenhoon"},"content":"                if (rooms.get(i).isSameRoom(rooms.get(j))) {","lastModifiedDate":"2021-09-23"},{"lineNumber":120,"author":{"gitId":"darrenhoon"},"content":"                    return false;","lastModifiedDate":"2021-09-23"},{"lineNumber":121,"author":{"gitId":"darrenhoon"},"content":"                }","lastModifiedDate":"2021-09-23"},{"lineNumber":122,"author":{"gitId":"darrenhoon"},"content":"            }","lastModifiedDate":"2021-09-23"},{"lineNumber":123,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":124,"author":{"gitId":"darrenhoon"},"content":"        return true;","lastModifiedDate":"2021-09-23"},{"lineNumber":125,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"peilinye":1,"jianh0ng":9,"-":66,"darrenhoon":50}},{"path":"src/main/java/seedu/address/model/room/RoomNumber.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package seedu.address.model.room;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"public class RoomNumber {","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"            \"Room numbers should only contain numbers, and it must be 3 digits long\";","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"    public final String value;","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"     * Constructs a {@code RoomNumber}.","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":"     * @param roomNumber A valid room number.","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":"    public RoomNumber(String roomNumber) {","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"darrenhoon"},"content":"        requireNonNull(roomNumber);","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"darrenhoon"},"content":"        checkArgument(isValidRoomNumber(roomNumber), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"darrenhoon"},"content":"        this.value \u003d roomNumber;","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"darrenhoon"},"content":"     * Returns true if a given string is a valid room number.","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"darrenhoon"},"content":"    public static boolean isValidRoomNumber(String test) {","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"darrenhoon"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"darrenhoon"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"darrenhoon"},"content":"    public String toString() {","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"darrenhoon"},"content":"        return value;","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"darrenhoon"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"darrenhoon"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"darrenhoon"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"darrenhoon"},"content":"                || (other instanceof RoomNumber // instanceof handles nulls","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"darrenhoon"},"content":"                \u0026\u0026 value.equals(((RoomNumber) other).value)); // state check","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"darrenhoon"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"darrenhoon"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"darrenhoon"},"content":"        return value.hashCode();","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"darrenhoon":49}},{"path":"src/main/java/seedu/address/model/room/RoomNumberContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package seedu.address.model.room;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":" * Tests that a {@code Room}\u0027s {@code RoomNumber} matches any of the keywords given.","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"public class RoomNumberContainsKeywordsPredicate implements Predicate\u003cRoom\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"    public RoomNumberContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":"    public boolean test(Room room) {","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"darrenhoon"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"darrenhoon"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(room.getRoomNumber().value, keyword));","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"darrenhoon"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"darrenhoon"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"darrenhoon"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"darrenhoon"},"content":"                || (other instanceof RoomNumberContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"darrenhoon"},"content":"                \u0026\u0026 keywords.equals(((RoomNumberContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"darrenhoon":30}},{"path":"src/main/java/seedu/address/model/room/Vacancy.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package seedu.address.model.room;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"BananaTechs"},"content":"public abstract class Vacancy {","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"BananaTechs"},"content":"    public static final Vacancy VACANT \u003d new Vacant();","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"BananaTechs"},"content":"    public static final Vacancy OCCUPIED \u003d new Occupied();","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"BananaTechs"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"BananaTechs"},"content":"     * Returns a {@code Vacancy} of either vacant or occupied.","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"BananaTechs"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"BananaTechs"},"content":"    public static Vacancy of(boolean isVacant) {","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"        requireAllNonNull(isVacant);","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"BananaTechs"},"content":"        return isVacant","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"BananaTechs"},"content":"                ? VACANT","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"BananaTechs"},"content":"                : OCCUPIED;","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"BananaTechs"},"content":"    public abstract boolean isVacant();","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"BananaTechs"},"content":"    private static class Vacant extends Vacancy {","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"BananaTechs"},"content":"        @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"BananaTechs"},"content":"        public boolean isVacant() {","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"BananaTechs"},"content":"            return true;","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"darrenhoon"},"content":"        @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"darrenhoon"},"content":"        public String toString() {","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"BananaTechs"},"content":"            return \"Vacant\";","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"darrenhoon"},"content":"        @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"darrenhoon"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"BananaTechs"},"content":"            return other instanceof Vacant;","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"BananaTechs"},"content":"    private static class Occupied extends Vacancy {","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"darrenhoon"},"content":"        @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"BananaTechs"},"content":"        public boolean isVacant() {","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"BananaTechs"},"content":"            return false;","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"BananaTechs"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":46,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":47,"author":{"gitId":"BananaTechs"},"content":"        @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":48,"author":{"gitId":"BananaTechs"},"content":"        public String toString() {","lastModifiedDate":"2021-09-24"},{"lineNumber":49,"author":{"gitId":"BananaTechs"},"content":"            return \"Occupied\";","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"BananaTechs"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":51,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":52,"author":{"gitId":"BananaTechs"},"content":"        @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":53,"author":{"gitId":"BananaTechs"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-09-24"},{"lineNumber":54,"author":{"gitId":"BananaTechs"},"content":"            return other instanceof Occupied;","lastModifiedDate":"2021-09-24"},{"lineNumber":55,"author":{"gitId":"BananaTechs"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":56,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"BananaTechs":34,"darrenhoon":24}},{"path":"src/main/java/seedu/address/model/room/exceptions/DuplicateRoomException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package seedu.address.model.room.exceptions;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":" * Signals that the operation will result in duplicate Rooms (Rooms are considered duplicates if they have the same","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":" * identity).","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"public class DuplicateRoomException extends RuntimeException {","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"    public DuplicateRoomException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"        super(\"Operation would result in duplicate rooms\");","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"darrenhoon":11}},{"path":"src/main/java/seedu/address/model/room/exceptions/RoomNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package seedu.address.model.room.exceptions;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":" * Signals that the operation is unable to find the specified room.","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"public class RoomNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"darrenhoon":6}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"jianh0ng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"wilburrito"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.model.residency.Residency;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":"import seedu.address.model.room.Room;","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":"import seedu.address.model.room.RoomNumber;","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"BananaTechs"},"content":"            Person.createPerson(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"wilburrito"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), new Nric(\"S98765432N\"),","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"jianh0ng"},"content":"                    Set.of()),","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"BananaTechs"},"content":"            Person.createPerson(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"wilburrito"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), new Nric(\"S98765432M\"),","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"jianh0ng"},"content":"                    Set.of()),","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"BananaTechs"},"content":"            Person.createPerson(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"),","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"wilburrito"},"content":"                new Email(\"charlotte@example.com\"),","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"wilburrito"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new Nric(\"S98765432L\"),","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"jianh0ng"},"content":"                    Set.of()),","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"BananaTechs"},"content":"            Person.createPerson(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"wilburrito"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new Nric(\"S98765432K\"),","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"jianh0ng"},"content":"                    Set.of()),","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"BananaTechs"},"content":"            Person.createPerson(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"wilburrito"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), new Nric(\"S98765432J\"),","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"jianh0ng"},"content":"                    Set.of()),","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"BananaTechs"},"content":"            Person.createPerson(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"wilburrito"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new Nric(\"S98765432I\"),","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"jianh0ng"},"content":"                    Set.of())","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"wilburrito"},"content":"        for (Room sampleRoom : getSampleRooms()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"wilburrito"},"content":"            sampleAb.addRoom(sampleRoom);","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"wilburrito"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"jianh0ng"},"content":"        for (Residency sampleResidency : getSampleResidency()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"jianh0ng"},"content":"            sampleAb.record(sampleResidency);","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"jianh0ng"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":73,"author":{"gitId":"darrenhoon"},"content":"    public static Room[] getSampleRooms() {","lastModifiedDate":"2021-09-23"},{"lineNumber":74,"author":{"gitId":"darrenhoon"},"content":"        return new Room[] {","lastModifiedDate":"2021-09-23"},{"lineNumber":75,"author":{"gitId":"peilinye"},"content":"            new Room(new RoomNumber(\"001\"), getTagSet(\"normal\")),","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"peilinye"},"content":"            new Room(new RoomNumber(\"002\"), getTagSet(\"normal\")),","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"peilinye"},"content":"            new Room(new RoomNumber(\"003\"), getTagSet(\"normal\")),","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"peilinye"},"content":"            new Room(new RoomNumber(\"004\"), getTagSet(\"normal\")),","lastModifiedDate":"2021-10-16"},{"lineNumber":79,"author":{"gitId":"peilinye"},"content":"            new Room(new RoomNumber(\"005\"), getTagSet(\"normal\")),","lastModifiedDate":"2021-10-16"},{"lineNumber":80,"author":{"gitId":"darrenhoon"},"content":"        };","lastModifiedDate":"2021-09-23"},{"lineNumber":81,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":82,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"jianh0ng"},"content":"    public static Residency[] getSampleResidency() {","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"jianh0ng"},"content":"        Person[] guests \u003d getSamplePersons();","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"jianh0ng"},"content":"        Person[] guestsOne \u003d new Person[] {guests[0], guests[1], guests[2]};","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"jianh0ng"},"content":"        Person[] guestsTwo \u003d new Person[] {guests[3], guests[4], guests[5]};","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"jianh0ng"},"content":"        Set\u003cPerson\u003e guestsOneSet \u003d Arrays.stream(guestsOne).collect(Collectors.toSet());","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"jianh0ng"},"content":"        Set\u003cPerson\u003e guestsTwoSet \u003d Arrays.stream(guestsTwo).collect(Collectors.toSet());","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"jianh0ng"},"content":"        Room[] rooms \u003d getSampleRooms();","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"jianh0ng"},"content":"        return new Residency[] {","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"jianh0ng"},"content":"            new Residency(rooms[0], guestsOneSet, LocalDateTime.now().minusDays(1), LocalDateTime.now()),","lastModifiedDate":"2021-10-28"},{"lineNumber":93,"author":{"gitId":"jianh0ng"},"content":"            new Residency(rooms[1], guestsTwoSet, LocalDateTime.now().minusDays(1), LocalDateTime.now())","lastModifiedDate":"2021-10-28"},{"lineNumber":94,"author":{"gitId":"jianh0ng"},"content":"        };","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"peilinye":5,"jianh0ng":25,"BananaTechs":6,"-":42,"wilburrito":11,"darrenhoon":7}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"wilburrito"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"wilburrito"},"content":"    private final String nric;","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"wilburrito"},"content":"                             @JsonProperty(\"nric\") String nric, @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"wilburrito"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"wilburrito"},"content":"        nric \u003d source.getNric().value;","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"wilburrito"},"content":"        if (nric \u003d\u003d null) {","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"wilburrito"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Nric.class.getSimpleName()));","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"BananaTechs"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":112,"author":{"gitId":"wilburrito"},"content":"        if (!Nric.isValidNric(nric)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"wilburrito"},"content":"            throw new IllegalValueException(Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"BananaTechs"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":115,"author":{"gitId":"wilburrito"},"content":"        final Nric modelNric \u003d Nric.of(nric);","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"jianh0ng"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelNric, modelTags);","lastModifiedDate":"2021-11-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jianh0ng":1,"BananaTechs":3,"-":106,"wilburrito":10}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedResidency.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BananaTechs"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"BananaTechs"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"BananaTechs"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"BananaTechs"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"BananaTechs"},"content":"import java.util.List;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"BananaTechs"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"BananaTechs"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"BananaTechs"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"BananaTechs"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"BananaTechs"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"wilburrito"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.residency.Residency;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.room.Room;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.room.RoomNumber;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"BananaTechs"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"BananaTechs"},"content":" * Jackson-friendly version of {@link Residency}.","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"BananaTechs"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"BananaTechs"},"content":"class JsonAdaptedResidency {","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"BananaTechs"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Residency\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"BananaTechs"},"content":"    public static final String MESSAGE_DATETIME_CONSTRAINTS_FORMAT \u003d \"Residency\u0027s %s format is incorrect.\";","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"BananaTechs"},"content":"    private final String roomNumber;","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"wilburrito"},"content":"    private final String[] guestNrics;","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"BananaTechs"},"content":"    private final String checkInTime;","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"BananaTechs"},"content":"    private final String checkOutTime;","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"BananaTechs"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"BananaTechs"},"content":"     * Constructs a {@code JsonAdaptedResidency} with the given residency details.","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"BananaTechs"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"BananaTechs"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"BananaTechs"},"content":"    public JsonAdaptedResidency(@JsonProperty(\"roomNumber\") String roomNumber,","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"BananaTechs"},"content":"                                @JsonProperty(\"guestNRICs\") String[] guestNrics,","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"BananaTechs"},"content":"                                @JsonProperty(\"checkInTime\") String checkInTime,","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"BananaTechs"},"content":"                                @JsonProperty(\"checkOutTime\") String checkOutTime) {","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"BananaTechs"},"content":"        this.roomNumber \u003d roomNumber;","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"wilburrito"},"content":"        this.guestNrics \u003d guestNrics;","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"BananaTechs"},"content":"        this.checkInTime \u003d checkInTime;","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"BananaTechs"},"content":"        this.checkOutTime \u003d checkOutTime;","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"BananaTechs"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"BananaTechs"},"content":"     * Converts a given {@code Residency} into this class for Jackson use.","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"BananaTechs"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"BananaTechs"},"content":"    public JsonAdaptedResidency(Residency source) {","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"BananaTechs"},"content":"        roomNumber \u003d source.getRoom().getRoomNumber().value;","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"wilburrito"},"content":"        List\u003cString\u003e nrics \u003d source.getGuests()","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"BananaTechs"},"content":"                                  .stream()","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"wilburrito"},"content":"                                  .map(person -\u003e person.getNric().value)","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"BananaTechs"},"content":"                                  .collect(Collectors.toList());","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"wilburrito"},"content":"        guestNrics \u003d new String[nrics.size()];","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"wilburrito"},"content":"        for (int i \u003d 0; i \u003c nrics.size(); i++) {","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"wilburrito"},"content":"            guestNrics[i] \u003d nrics.get(i);","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"BananaTechs"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"BananaTechs"},"content":"        checkInTime \u003d source.getCheckInTime().toString();","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"BananaTechs"},"content":"        checkOutTime \u003d source.getCheckOutTime().map(LocalDateTime::toString).orElseGet(() -\u003e null);","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"BananaTechs"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"BananaTechs"},"content":"     * Converts this Jackson-friendly adapted residency object into the model\u0027s {@code Residency} object.","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"BananaTechs"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"BananaTechs"},"content":"    public Residency toModelType(Map\u003cNric, Person\u003e nricPersonMap,","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"BananaTechs"},"content":"                                 Map\u003cRoomNumber, Room\u003e roomNumberRoomMap) throws IllegalValueException {","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"BananaTechs"},"content":"        // TODO: Check if any data constraints are violated","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"BananaTechs"},"content":"        Set\u003cPerson\u003e guests \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"wilburrito"},"content":"        for (String nric : guestNrics) {","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"wilburrito"},"content":"            Nric something \u003d Nric.of(nric);","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"wilburrito"},"content":"            Person x \u003d nricPersonMap.get(something);","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"wilburrito"},"content":"            guests.add(x);","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"BananaTechs"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"BananaTechs"},"content":"        Room room \u003d roomNumberRoomMap.get(new RoomNumber(roomNumber));","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"BananaTechs"},"content":"        if (room \u003d\u003d null) {","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"BananaTechs"},"content":"            throw new IllegalValueException(RoomNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"BananaTechs"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"BananaTechs"},"content":"        if (checkInTime \u003d\u003d null) {","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"BananaTechs"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"check in time\"));","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"BananaTechs"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"BananaTechs"},"content":"        LocalDateTime checkIn;","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"BananaTechs"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"BananaTechs"},"content":"            checkIn \u003d LocalDateTime.parse(checkInTime);","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"BananaTechs"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"BananaTechs"},"content":"            throw new IllegalValueException(String.format(MESSAGE_DATETIME_CONSTRAINTS_FORMAT, \"check in time\"));","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"BananaTechs"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"BananaTechs"},"content":"        // TODO: Check if check out time is before check in time","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"BananaTechs"},"content":"        LocalDateTime checkOut;","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"BananaTechs"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"BananaTechs"},"content":"            checkOut \u003d checkOutTime !\u003d null ? LocalDateTime.parse(checkOutTime) : null;","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"BananaTechs"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"BananaTechs"},"content":"            throw new IllegalValueException(String.format(MESSAGE_DATETIME_CONSTRAINTS_FORMAT, \"check out time\"));","lastModifiedDate":"2021-10-22"},{"lineNumber":101,"author":{"gitId":"BananaTechs"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"BananaTechs"},"content":"        return new Residency(room, guests, checkIn, checkOut);","lastModifiedDate":"2021-10-16"},{"lineNumber":104,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"BananaTechs"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"BananaTechs":93,"wilburrito":12}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedResidencyBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BananaTechs"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"BananaTechs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"BananaTechs"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"BananaTechs"},"content":"import java.util.List;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"BananaTechs"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"BananaTechs"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"BananaTechs"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"BananaTechs"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"wilburrito"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.residency.ReadOnlyResidencyBook;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.residency.Residency;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.residency.ResidencyBook;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.room.Room;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.room.RoomNumber;","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"BananaTechs"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"BananaTechs"},"content":" * Jackson-friendly version of {@link ResidencyBook}.","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"BananaTechs"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"BananaTechs"},"content":"public class JsonAdaptedResidencyBook {","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"BananaTechs"},"content":"    private final List\u003cJsonAdaptedResidency\u003e residencies \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"BananaTechs"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"BananaTechs"},"content":"     * Constructs a {@code JsonAdaptedResidencyBook} with the given residencies.","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"BananaTechs"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"BananaTechs"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"BananaTechs"},"content":"    public JsonAdaptedResidencyBook(@JsonProperty(\"residencies\") List\u003cJsonAdaptedResidency\u003e residencies) {","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"BananaTechs"},"content":"        this.residencies.addAll(residencies);","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"BananaTechs"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"BananaTechs"},"content":"     * Converts a given {@code ResidencyBook} into this class for Jackson use.","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"BananaTechs"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"BananaTechs"},"content":"    public JsonAdaptedResidencyBook(ReadOnlyResidencyBook residencyBook) {","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"BananaTechs"},"content":"        this.residencies.addAll(residencyBook.asUnmodifiableObservableList()","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"BananaTechs"},"content":"                                             .stream()","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"BananaTechs"},"content":"                                             .map(JsonAdaptedResidency::new)","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"BananaTechs"},"content":"                                             .collect(Collectors.toList()));","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"BananaTechs"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"BananaTechs"},"content":"     * Converts this Jackson-friendly adapted residency book object into the model\u0027s {@code ResidencyBook} object.","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"BananaTechs"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"BananaTechs"},"content":"    public ResidencyBook toModelType(List\u003cPerson\u003e persons,","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"BananaTechs"},"content":"                                     List\u003cRoom\u003e rooms,","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"BananaTechs"},"content":"                                     boolean allowDuplicates) throws IllegalValueException {","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"jianh0ng"},"content":"        ResidencyBook residencyBook \u003d new ResidencyBook(allowDuplicates);","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"wilburrito"},"content":"        Map\u003cNric, Person\u003e nricPersonMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"BananaTechs"},"content":"        Map\u003cRoomNumber, Room\u003e roomNumberRoomMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"BananaTechs"},"content":"        for (Person person : persons) {","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"wilburrito"},"content":"            nricPersonMap.put(person.getNric(), person);","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"BananaTechs"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"BananaTechs"},"content":"        for (Room room : rooms) {","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"BananaTechs"},"content":"            roomNumberRoomMap.put(room.getRoomNumber(), room);","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"BananaTechs"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"BananaTechs"},"content":"        for (JsonAdaptedResidency jsonAdaptedResidency : residencies) {","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"wilburrito"},"content":"            Residency residency \u003d jsonAdaptedResidency.toModelType(nricPersonMap, roomNumberRoomMap);","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"BananaTechs"},"content":"            residencyBook.register(residency);","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"BananaTechs"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"BananaTechs"},"content":"        return residencyBook;","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"BananaTechs"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"jianh0ng":2,"BananaTechs":68,"wilburrito":4}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedRoom.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jianh0ng"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"peilinye"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"peilinye"},"content":"import java.util.List;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"import java.util.Set;","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"jianh0ng"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"jianh0ng"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"jianh0ng"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.model.room.Room;","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"import seedu.address.model.room.RoomNumber;","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"import seedu.address.model.room.Vacancy;","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"peilinye"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"jianh0ng"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"jianh0ng"},"content":" * Jackson-friendly version of {@link Room}.","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"jianh0ng"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"jianh0ng"},"content":"class JsonAdaptedRoom {","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"darrenhoon"},"content":"    public final String roomNumber;","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"BananaTechs"},"content":"    private final boolean isVacant;","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"darrenhoon"},"content":"    private final Set\u003cJsonAdaptedPerson\u003e guests \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"peilinye"},"content":"    private final Set\u003cJsonAdaptedTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"jianh0ng"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"jianh0ng"},"content":"     * Constructs a {@code JsonAdaptedRoom} with the given room details.","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"jianh0ng"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"jianh0ng"},"content":"    @JsonCreator","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"BananaTechs"},"content":"    public JsonAdaptedRoom(@JsonProperty(\"roomNumber\") String roomNumber, @JsonProperty(\"isVacant\") boolean isVacant,","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"peilinye"},"content":"        @JsonProperty(\"guests\") Set\u003cJsonAdaptedPerson\u003e guests, @JsonProperty(\"tags\") Set\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"jianh0ng"},"content":"        this.roomNumber \u003d roomNumber;","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"jianh0ng"},"content":"        this.isVacant \u003d isVacant;","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"jianh0ng"},"content":"        if (guests !\u003d null) {","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"jianh0ng"},"content":"            this.guests.addAll(guests);","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"jianh0ng"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"peilinye"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"jianh0ng"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"jianh0ng"},"content":"     * Converts a given {@code Room} into this class for Jackson use.","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"jianh0ng"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"jianh0ng"},"content":"    public JsonAdaptedRoom(Room source) {","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"darrenhoon"},"content":"        roomNumber \u003d source.getRoomNumber().value;","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"BananaTechs"},"content":"        isVacant \u003d source.getVacancy().isVacant();","lastModifiedDate":"2021-09-25"},{"lineNumber":48,"author":{"gitId":"jianh0ng"},"content":"        guests.addAll(source.getGuests().stream()","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"jianh0ng"},"content":"                .map(JsonAdaptedPerson::new)","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"jianh0ng"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"peilinye"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"peilinye"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"peilinye"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"jianh0ng"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"jianh0ng"},"content":"     * Converts this Jackson-friendly adapted room object into the model\u0027s {@code Room} object.","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"jianh0ng"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"jianh0ng"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted room.","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"jianh0ng"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"jianh0ng"},"content":"    public Room toModelType() throws IllegalValueException {","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"darrenhoon"},"content":"        final Set\u003cPerson\u003e roomGuests \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"jianh0ng"},"content":"        for (JsonAdaptedPerson person: guests) {","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"jianh0ng"},"content":"            roomGuests.add(person.toModelType());","lastModifiedDate":"2021-09-19"},{"lineNumber":65,"author":{"gitId":"jianh0ng"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"peilinye"},"content":"        final List\u003cTag\u003e roomTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"peilinye"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"peilinye"},"content":"            roomTags.add(tag.toModelType());","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"jianh0ng"},"content":"        //TODO: insert validity checks and exception handling","lastModifiedDate":"2021-11-01"},{"lineNumber":71,"author":{"gitId":"darrenhoon"},"content":"        final RoomNumber modelRoomNumber \u003d new RoomNumber(roomNumber);","lastModifiedDate":"2021-09-23"},{"lineNumber":72,"author":{"gitId":"BananaTechs"},"content":"        final Vacancy modelVacancy \u003d Vacancy.of(isVacant);","lastModifiedDate":"2021-09-25"},{"lineNumber":73,"author":{"gitId":"darrenhoon"},"content":"        final Set\u003cPerson\u003e modelGuests \u003d roomGuests;","lastModifiedDate":"2021-09-23"},{"lineNumber":74,"author":{"gitId":"peilinye"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(roomTags);","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":76,"author":{"gitId":"peilinye"},"content":"        return new Room(modelRoomNumber, modelVacancy, modelGuests, modelTags);","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":78,"author":{"gitId":"jianh0ng"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"peilinye":15,"jianh0ng":48,"BananaTechs":4,"darrenhoon":11}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"wilburrito"},"content":"//import seedu.address.model.person.Id;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.residency.Residency;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.residency.ResidencyBook;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.model.room.Room;","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"jianh0ng"},"content":"    public static final String MESSAGE_DUPLICATE_ROOM \u003d \"Rooms list contains duplicate room(s).\";","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"jianh0ng"},"content":"    private final List\u003cJsonAdaptedRoom\u003e rooms \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"BananaTechs"},"content":"    private final JsonAdaptedResidencyBook residencyBook;","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"jianh0ng"},"content":"    private final JsonAdaptedResidencyBook recordsBook;","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"wilburrito"},"content":"    //private final int idCounter;","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"BananaTechs"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons, rooms, residency book and id counter.","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"jianh0ng"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"BananaTechs"},"content":"                                       @JsonProperty(\"rooms\") List\u003cJsonAdaptedRoom\u003e rooms,","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"BananaTechs"},"content":"                                       @JsonProperty(\"residencyBook\") JsonAdaptedResidencyBook residencyBook,","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"jianh0ng"},"content":"                                       @JsonProperty(\"recordsBook\") JsonAdaptedResidencyBook recordsBook,","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"BananaTechs"},"content":"                                       @JsonProperty(\"id counter\") int idCounter) {","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"jianh0ng"},"content":"        this.rooms.addAll(rooms);","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"BananaTechs"},"content":"        this.residencyBook \u003d residencyBook;","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"jianh0ng"},"content":"        this.recordsBook \u003d recordsBook;","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"jianh0ng"},"content":"        rooms.addAll(source.getRoomList().stream().map(JsonAdaptedRoom::new).collect(Collectors.toList()));","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"BananaTechs"},"content":"        residencyBook \u003d new JsonAdaptedResidencyBook(source.getResidencyBook());","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"jianh0ng"},"content":"        recordsBook \u003d new JsonAdaptedResidencyBook(source.getRecordsBook());","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"BananaTechs"},"content":"        addPersonsAndRooms(addressBook);","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"BananaTechs"},"content":"        addResidencies(addressBook);","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"BananaTechs"},"content":"        return addressBook;","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"BananaTechs"},"content":"    private void addPersonsAndRooms(AddressBook addressBook) throws IllegalValueException {","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"jianh0ng"},"content":"        for (JsonAdaptedRoom jsonAdaptedRoom : rooms) {","lastModifiedDate":"2021-09-19"},{"lineNumber":91,"author":{"gitId":"jianh0ng"},"content":"            Room room \u003d jsonAdaptedRoom.toModelType();","lastModifiedDate":"2021-09-19"},{"lineNumber":92,"author":{"gitId":"jianh0ng"},"content":"            if (addressBook.hasRoom(room)) {","lastModifiedDate":"2021-09-19"},{"lineNumber":93,"author":{"gitId":"jianh0ng"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_ROOM);","lastModifiedDate":"2021-09-19"},{"lineNumber":94,"author":{"gitId":"jianh0ng"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":95,"author":{"gitId":"jianh0ng"},"content":"            addressBook.addRoom(room);","lastModifiedDate":"2021-09-19"},{"lineNumber":96,"author":{"gitId":"jianh0ng"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":99,"author":{"gitId":"BananaTechs"},"content":"    private void addResidencies(AddressBook addressBook) throws IllegalValueException {","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"BananaTechs"},"content":"        ResidencyBook tempResidencyBook \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"jianh0ng"},"content":"                residencyBook.toModelType(addressBook.getPersonList(), addressBook.getRoomList(), false);","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"jianh0ng"},"content":"        ResidencyBook tempRecords \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"jianh0ng"},"content":"                recordsBook.toModelType(addressBook.getPersonList(), addressBook.getRoomList(), true);","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"BananaTechs"},"content":"        for (Residency residency : tempResidencyBook.asUnmodifiableObservableList()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"BananaTechs"},"content":"            addressBook.register(residency);","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"BananaTechs"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"jianh0ng"},"content":"        for (Residency residency: tempRecords.asUnmodifiableObservableList()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"jianh0ng"},"content":"            addressBook.record(residency);","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"jianh0ng"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":112,"author":{"gitId":"wilburrito"},"content":"    /*","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"BananaTechs"},"content":"    private void setId() {","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"BananaTechs"},"content":"        Id.setNextId(idCounter);","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"wilburrito"},"content":"    */","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jianh0ng":27,"BananaTechs":28,"-":58,"wilburrito":4}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s1-cs2103t-t13-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":101,"darrenhoon":1}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"darrenhoon"},"content":"    private RoomListPanel roomListPanel;","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"darrenhoon"},"content":"    private ResidencyListPanel residencyListPanel;","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"peilinye"},"content":"    @FXML","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"peilinye"},"content":"    private StackPane roomListPanelPlaceholder;","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"darrenhoon"},"content":"    @FXML","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"darrenhoon"},"content":"    private StackPane residencyListPanelPlaceholder;","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"darrenhoon"},"content":"        roomListPanel \u003d new RoomListPanel(logic.getFilteredRoomList());","lastModifiedDate":"2021-09-23"},{"lineNumber":125,"author":{"gitId":"peilinye"},"content":"        roomListPanelPlaceholder.getChildren().add(roomListPanel.getRoot());","lastModifiedDate":"2021-09-19"},{"lineNumber":126,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":127,"author":{"gitId":"jianh0ng"},"content":"        residencyListPanel \u003d new ResidencyListPanel(logic.getFilteredRecordList());","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"darrenhoon"},"content":"        residencyListPanelPlaceholder.getChildren().add(residencyListPanel.getRoot());","lastModifiedDate":"2021-10-17"},{"lineNumber":129,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"peilinye":5,"jianh0ng":1,"-":196,"darrenhoon":8}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"jianh0ng"},"content":"    private Label nric;","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"jianh0ng"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"jianh0ng"},"content":"        nric.setText(person.getNric().value);","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jianh0ng":3,"-":77}},{"path":"src/main/java/seedu/address/ui/ResidencyCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"import seedu.address.model.residency.Residency;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"public class ResidencyCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":"    private static final String FXML \u003d \"ResidencyListCard.fxml\";","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"darrenhoon"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"darrenhoon"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"darrenhoon"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"darrenhoon"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"darrenhoon"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"darrenhoon"},"content":"    public final Residency residency;","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"darrenhoon"},"content":"    @FXML","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"darrenhoon"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"darrenhoon"},"content":"    @FXML","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"darrenhoon"},"content":"    private Label id;","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"darrenhoon"},"content":"    @FXML","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"darrenhoon"},"content":"    private Label number;","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"darrenhoon"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"darrenhoon"},"content":"    private Label in;","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"darrenhoon"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"darrenhoon"},"content":"    private Label out;","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"darrenhoon"},"content":"    @FXML","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"darrenhoon"},"content":"    private FlowPane personInfo;","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"darrenhoon"},"content":"     * Creates a {@code ResidencyCode} with the given {@code Residency} and index to display.","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"darrenhoon"},"content":"    public ResidencyCard(Residency residency, int displayedIndex) {","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"darrenhoon"},"content":"        super(FXML);","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"darrenhoon"},"content":"        this.residency \u003d residency;","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"darrenhoon"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"darrenhoon"},"content":"        number.setText(residency.getRoom().getRoomNumber().value);","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"darrenhoon"},"content":"        in.setText(residency.getCheckInTime().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")));","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"darrenhoon"},"content":"        out.setText(residency.getCheckOutTime().get().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")));","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"darrenhoon"},"content":"        Set\u003cPerson\u003e guests \u003d residency.getGuests();","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"darrenhoon"},"content":"        guests.stream().map(person -\u003e {","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"darrenhoon"},"content":"            String cellInfo \u003d String.format(\"%s\\n%s\\n%s\\n%s\\n%s\",","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"darrenhoon"},"content":"                    person.getName().toString(),","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"darrenhoon"},"content":"                    person.getNric().toString(),","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"darrenhoon"},"content":"                    person.getPhone().toString(),","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"jianh0ng"},"content":"                    person.getAddress().toString(),","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"darrenhoon"},"content":"                    person.getEmail().toString()","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"darrenhoon"},"content":"            );","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"darrenhoon"},"content":"            return cellInfo;","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"darrenhoon"},"content":"        }).forEach(nricString -\u003e personInfo.getChildren().add(new Label(nricString)));","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"darrenhoon"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"darrenhoon"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"darrenhoon"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"darrenhoon"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"darrenhoon"},"content":"            return true;","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"darrenhoon"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"darrenhoon"},"content":"        if (!(other instanceof ResidencyCard)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"darrenhoon"},"content":"            return false;","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"darrenhoon"},"content":"        // state check","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"darrenhoon"},"content":"        ResidencyCard card \u003d (ResidencyCard) other;","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"darrenhoon"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"darrenhoon"},"content":"                \u0026\u0026 residency.equals(card.residency);","lastModifiedDate":"2021-10-17"},{"lineNumber":86,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"jianh0ng":1,"darrenhoon":86}},{"path":"src/main/java/seedu/address/ui/ResidencyListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"import seedu.address.model.residency.Residency;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"public class ResidencyListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"    private static final String FXML \u003d \"ResidencyListPanel.fxml\";","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ResidencyListPanel.class);","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":"    @FXML","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":"    private ListView\u003cResidency\u003e residencyListView;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"darrenhoon"},"content":"     * Creates a {@code ResidencyListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"darrenhoon"},"content":"    public ResidencyListPanel(ObservableList\u003cResidency\u003e residencyList) {","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"darrenhoon"},"content":"        super(FXML);","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"darrenhoon"},"content":"        residencyListView.setItems(residencyList);","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"darrenhoon"},"content":"        residencyListView.setCellFactory(listView -\u003e new ResidencyListPanel.ResidencyListViewCell());","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"darrenhoon"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Residency} using a {@code ResidencyCard}.","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"darrenhoon"},"content":"    class ResidencyListViewCell extends ListCell\u003cResidency\u003e {","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"darrenhoon"},"content":"        @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"darrenhoon"},"content":"        protected void updateItem(Residency residency, boolean empty) {","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"darrenhoon"},"content":"            super.updateItem(residency, empty);","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"darrenhoon"},"content":"            if (empty || residency \u003d\u003d null) {","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"darrenhoon"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"darrenhoon"},"content":"                setText(null);","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"darrenhoon"},"content":"            } else {","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"darrenhoon"},"content":"                setGraphic(new ResidencyCard(residency, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"darrenhoon"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"darrenhoon":46}},{"path":"src/main/java/seedu/address/ui/RoomCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peilinye"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"peilinye"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"peilinye"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"peilinye"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"peilinye"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"peilinye"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"peilinye"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"peilinye"},"content":"import seedu.address.model.room.Room;","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"peilinye"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"peilinye"},"content":" * A UI component that displays information of a {@code Room}.","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"peilinye"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"peilinye"},"content":"public class RoomCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"darrenhoon"},"content":"    private static final String FXML \u003d \"RoomListCard.fxml\";","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"darrenhoon"},"content":"    public final Room room;","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"peilinye"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"peilinye"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"peilinye"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"peilinye"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"peilinye"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"peilinye"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"peilinye"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"peilinye"},"content":"    @FXML","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"peilinye"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"darrenhoon"},"content":"    @FXML","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"darrenhoon"},"content":"    private Label number;","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"peilinye"},"content":"    @FXML","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"darrenhoon"},"content":"    private Label vacancy;","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"peilinye"},"content":"    @FXML","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"peilinye"},"content":"    private Label id;","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"peilinye"},"content":"    @FXML","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"peilinye"},"content":"    private FlowPane tags;","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"peilinye"},"content":"    @FXML","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"peilinye"},"content":"    private FlowPane guests;","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"peilinye"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"darrenhoon"},"content":"     * Creates a {@code RoomCode} with the given {@code Room} and index to display.","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"peilinye"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"peilinye"},"content":"    public RoomCard(Room room, int displayedIndex) {","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"peilinye"},"content":"        super(FXML);","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"peilinye"},"content":"        this.room \u003d room;","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"peilinye"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"darrenhoon"},"content":"        number.setText(room.getRoomNumber().value);","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"BananaTechs"},"content":"        vacancy.setText(room.getVacancy().toString());","lastModifiedDate":"2021-09-25"},{"lineNumber":59,"author":{"gitId":"peilinye"},"content":"        room.getTags().stream()","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"peilinye"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"peilinye"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"darrenhoon"},"content":"        if (room.getVacancy().toString().equals(\"Vacant\")) {","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"darrenhoon"},"content":"            vacancy.setStyle(\"-fx-text-fill: #1be3b2 !important;\");","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"darrenhoon"},"content":"        } else {","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"darrenhoon"},"content":"            vacancy.setStyle(\"-fx-text-fill: #f51d50 !important; -fx-font-style: italic !important;\");","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"darrenhoon"},"content":"        Set\u003cPerson\u003e allGuests \u003d room.getGuests();","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"darrenhoon"},"content":"        allGuests.stream().map(person -\u003e person.getName().toString())","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"darrenhoon"},"content":"                .forEach(nameString -\u003e guests.getChildren().add(new Label(nameString)));","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":74,"author":{"gitId":"peilinye"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"peilinye"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-19"},{"lineNumber":76,"author":{"gitId":"peilinye"},"content":"        // short circuit if same object","lastModifiedDate":"2021-09-19"},{"lineNumber":77,"author":{"gitId":"peilinye"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-09-19"},{"lineNumber":78,"author":{"gitId":"peilinye"},"content":"            return true;","lastModifiedDate":"2021-09-19"},{"lineNumber":79,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":80,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":81,"author":{"gitId":"peilinye"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-09-19"},{"lineNumber":82,"author":{"gitId":"peilinye"},"content":"        if (!(other instanceof RoomCard)) {","lastModifiedDate":"2021-09-19"},{"lineNumber":83,"author":{"gitId":"peilinye"},"content":"            return false;","lastModifiedDate":"2021-09-19"},{"lineNumber":84,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":85,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":86,"author":{"gitId":"peilinye"},"content":"        // state check","lastModifiedDate":"2021-09-19"},{"lineNumber":87,"author":{"gitId":"peilinye"},"content":"        RoomCard card \u003d (RoomCard) other;","lastModifiedDate":"2021-09-19"},{"lineNumber":88,"author":{"gitId":"peilinye"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-09-19"},{"lineNumber":89,"author":{"gitId":"peilinye"},"content":"                \u0026\u0026 room.equals(card.room);","lastModifiedDate":"2021-09-19"},{"lineNumber":90,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":91,"author":{"gitId":"peilinye"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"peilinye":65,"BananaTechs":1,"darrenhoon":25}},{"path":"src/main/java/seedu/address/ui/RoomListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peilinye"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"peilinye"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"peilinye"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"peilinye"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"peilinye"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"peilinye"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"peilinye"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"peilinye"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"peilinye"},"content":"import seedu.address.model.room.Room;","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"peilinye"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"peilinye"},"content":" * Panel containing the list of rooms.","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"peilinye"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"peilinye"},"content":"public class RoomListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"peilinye"},"content":"    private static final String FXML \u003d \"RoomListPanel.fxml\";","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"peilinye"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(RoomListPanel.class);","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"peilinye"},"content":"    @FXML","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"peilinye"},"content":"    private ListView\u003cRoom\u003e roomListView;","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"peilinye"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"darrenhoon"},"content":"     * Creates a {@code RoomListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"peilinye"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"peilinye"},"content":"    public RoomListPanel(ObservableList\u003cRoom\u003e roomList) {","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"peilinye"},"content":"        super(FXML);","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"peilinye"},"content":"        roomListView.setItems(roomList);","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"peilinye"},"content":"        roomListView.setCellFactory(listView -\u003e new RoomListViewCell());","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"peilinye"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"darrenhoon"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Room} using a {@code RoomCard}.","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"peilinye"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"peilinye"},"content":"    class RoomListViewCell extends ListCell\u003cRoom\u003e {","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"peilinye"},"content":"        @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"peilinye"},"content":"        protected void updateItem(Room room, boolean empty) {","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"peilinye"},"content":"            super.updateItem(room, empty);","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"peilinye"},"content":"            if (empty || room \u003d\u003d null) {","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"peilinye"},"content":"                setGraphic(null);","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"peilinye"},"content":"                setText(null);","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"peilinye"},"content":"            } else {","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"peilinye"},"content":"                setGraphic(new RoomCard(room, getIndex() + 1).getRoot());","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"peilinye"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"peilinye"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"peilinye":47,"darrenhoon":2}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"darrenhoon"},"content":".table-header {","lastModifiedDate":"2021-09-23"},{"lineNumber":311,"author":{"gitId":"darrenhoon"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-09-23"},{"lineNumber":312,"author":{"gitId":"darrenhoon"},"content":"    -fx-font-size: 20px;","lastModifiedDate":"2021-09-23"},{"lineNumber":313,"author":{"gitId":"darrenhoon"},"content":"    -fx-font-weight: 700;","lastModifiedDate":"2021-09-23"},{"lineNumber":314,"author":{"gitId":"darrenhoon"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-09-23"},{"lineNumber":315,"author":{"gitId":"darrenhoon"},"content":"    -fx-alignment: center;","lastModifiedDate":"2021-09-23"},{"lineNumber":316,"author":{"gitId":"darrenhoon"},"content":"    -fx-text-alignment: center;","lastModifiedDate":"2021-11-01"},{"lineNumber":317,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-09-23"},{"lineNumber":318,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":342,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":361,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":362,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":363,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":364,"author":{"gitId":"darrenhoon"},"content":"/*","lastModifiedDate":"2021-10-16"},{"lineNumber":365,"author":{"gitId":"darrenhoon"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ROOM STYLE \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":366,"author":{"gitId":"darrenhoon"},"content":" */","lastModifiedDate":"2021-10-16"},{"lineNumber":367,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":368,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":369,"author":{"gitId":"darrenhoon"},"content":"#guests {","lastModifiedDate":"2021-10-16"},{"lineNumber":370,"author":{"gitId":"darrenhoon"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2021-10-16"},{"lineNumber":371,"author":{"gitId":"darrenhoon"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2021-10-16"},{"lineNumber":372,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-10-16"},{"lineNumber":373,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":374,"author":{"gitId":"darrenhoon"},"content":"#guests .label {","lastModifiedDate":"2021-10-16"},{"lineNumber":375,"author":{"gitId":"darrenhoon"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-16"},{"lineNumber":376,"author":{"gitId":"darrenhoon"},"content":"    -fx-background-color: #caa224;","lastModifiedDate":"2021-10-16"},{"lineNumber":377,"author":{"gitId":"darrenhoon"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2021-10-16"},{"lineNumber":378,"author":{"gitId":"darrenhoon"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2021-10-16"},{"lineNumber":379,"author":{"gitId":"darrenhoon"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2021-10-16"},{"lineNumber":380,"author":{"gitId":"darrenhoon"},"content":"    -fx-font-size: 14;","lastModifiedDate":"2021-10-17"},{"lineNumber":381,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-10-16"},{"lineNumber":382,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":383,"author":{"gitId":"darrenhoon"},"content":".cell_occupancy_label {","lastModifiedDate":"2021-10-16"},{"lineNumber":384,"author":{"gitId":"darrenhoon"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-10-16"},{"lineNumber":385,"author":{"gitId":"darrenhoon"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2021-10-16"},{"lineNumber":386,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":387,"author":{"gitId":"darrenhoon"},"content":"    /*","lastModifiedDate":"2021-10-17"},{"lineNumber":388,"author":{"gitId":"darrenhoon"},"content":"    -fx-text-fill: #1be3b2 !important;","lastModifiedDate":"2021-10-17"},{"lineNumber":389,"author":{"gitId":"darrenhoon"},"content":"    -fx-background-color: #ac3cb7;","lastModifiedDate":"2021-10-17"},{"lineNumber":390,"author":{"gitId":"darrenhoon"},"content":"    */","lastModifiedDate":"2021-10-17"},{"lineNumber":391,"author":{"gitId":"darrenhoon"},"content":"    -fx-font-weight: 700 !important;","lastModifiedDate":"2021-10-16"},{"lineNumber":392,"author":{"gitId":"darrenhoon"},"content":"    -fx-background-radius: 10px;","lastModifiedDate":"2021-10-16"},{"lineNumber":393,"author":{"gitId":"darrenhoon"},"content":"    -fx-label-padding: 3px;","lastModifiedDate":"2021-10-16"},{"lineNumber":394,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-10-16"},{"lineNumber":395,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":396,"author":{"gitId":"darrenhoon"},"content":".cell_room_sub_label {","lastModifiedDate":"2021-10-16"},{"lineNumber":397,"author":{"gitId":"darrenhoon"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-10-16"},{"lineNumber":398,"author":{"gitId":"darrenhoon"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2021-10-16"},{"lineNumber":399,"author":{"gitId":"darrenhoon"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2021-10-16"},{"lineNumber":400,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-10-16"},{"lineNumber":401,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":402,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":403,"author":{"gitId":"darrenhoon"},"content":"/*","lastModifiedDate":"2021-10-17"},{"lineNumber":404,"author":{"gitId":"darrenhoon"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d HISTORY STYLE \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":405,"author":{"gitId":"darrenhoon"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":406,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":407,"author":{"gitId":"darrenhoon"},"content":"#personInfo {","lastModifiedDate":"2021-10-17"},{"lineNumber":408,"author":{"gitId":"darrenhoon"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2021-10-17"},{"lineNumber":409,"author":{"gitId":"darrenhoon"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2021-10-17"},{"lineNumber":410,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-10-17"},{"lineNumber":411,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":412,"author":{"gitId":"darrenhoon"},"content":"#personInfo .label {","lastModifiedDate":"2021-10-17"},{"lineNumber":413,"author":{"gitId":"darrenhoon"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-17"},{"lineNumber":414,"author":{"gitId":"darrenhoon"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2021-10-17"},{"lineNumber":415,"author":{"gitId":"darrenhoon"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2021-10-17"},{"lineNumber":416,"author":{"gitId":"darrenhoon"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2021-10-17"},{"lineNumber":417,"author":{"gitId":"darrenhoon"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2021-10-17"},{"lineNumber":418,"author":{"gitId":"darrenhoon"},"content":"    -fx-font-size: 14;","lastModifiedDate":"2021-10-17"},{"lineNumber":419,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-10-17"},{"lineNumber":420,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":421,"author":{"gitId":"darrenhoon"},"content":".cell_occupancy_label_checkin {","lastModifiedDate":"2021-10-25"},{"lineNumber":422,"author":{"gitId":"darrenhoon"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-10-25"},{"lineNumber":423,"author":{"gitId":"darrenhoon"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2021-10-25"},{"lineNumber":424,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":425,"author":{"gitId":"darrenhoon"},"content":"    /*","lastModifiedDate":"2021-10-25"},{"lineNumber":426,"author":{"gitId":"darrenhoon"},"content":"    -fx-text-fill: #1be3b2 !important;","lastModifiedDate":"2021-10-25"},{"lineNumber":427,"author":{"gitId":"darrenhoon"},"content":"    -fx-background-color: #ac3cb7;","lastModifiedDate":"2021-10-25"},{"lineNumber":428,"author":{"gitId":"darrenhoon"},"content":"    */","lastModifiedDate":"2021-10-25"},{"lineNumber":429,"author":{"gitId":"darrenhoon"},"content":"    -fx-font-weight: 700 !important;","lastModifiedDate":"2021-10-25"},{"lineNumber":430,"author":{"gitId":"darrenhoon"},"content":"    -fx-background-radius: 10px;","lastModifiedDate":"2021-10-25"},{"lineNumber":431,"author":{"gitId":"darrenhoon"},"content":"    -fx-label-padding: 3px;","lastModifiedDate":"2021-10-25"},{"lineNumber":432,"author":{"gitId":"darrenhoon"},"content":"    -fx-text-fill: #d6e31b !important;","lastModifiedDate":"2021-10-25"},{"lineNumber":433,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":434,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":435,"author":{"gitId":"darrenhoon"},"content":".cell_occupancy_label_checkout {","lastModifiedDate":"2021-10-25"},{"lineNumber":436,"author":{"gitId":"darrenhoon"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-10-25"},{"lineNumber":437,"author":{"gitId":"darrenhoon"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2021-10-25"},{"lineNumber":438,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":439,"author":{"gitId":"darrenhoon"},"content":"    /*","lastModifiedDate":"2021-10-25"},{"lineNumber":440,"author":{"gitId":"darrenhoon"},"content":"    -fx-text-fill: #1be3b2 !important;","lastModifiedDate":"2021-10-25"},{"lineNumber":441,"author":{"gitId":"darrenhoon"},"content":"    -fx-background-color: #ac3cb7;","lastModifiedDate":"2021-10-25"},{"lineNumber":442,"author":{"gitId":"darrenhoon"},"content":"    */","lastModifiedDate":"2021-10-25"},{"lineNumber":443,"author":{"gitId":"darrenhoon"},"content":"    -fx-font-weight: 700 !important;","lastModifiedDate":"2021-10-25"},{"lineNumber":444,"author":{"gitId":"darrenhoon"},"content":"    -fx-background-radius: 10px;","lastModifiedDate":"2021-10-25"},{"lineNumber":445,"author":{"gitId":"darrenhoon"},"content":"    -fx-label-padding: 3px;","lastModifiedDate":"2021-10-25"},{"lineNumber":446,"author":{"gitId":"darrenhoon"},"content":"    -fx-text-fill: #f5941d !important;","lastModifiedDate":"2021-10-25"},{"lineNumber":447,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":448,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":449,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":450,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":451,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":452,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":453,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":454,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":455,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"-":352,"darrenhoon":103}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"\u003cfx:root minHeight\u003d\"450\"","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"         minWidth\u003d\"800\"","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"         onCloseRequest\u003d\"#handleExit\"","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":"         title\u003d\"Trace2Gather\"","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":"         type\u003d\"javafx.stage.Stage\"","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":"         xmlns\u003d\"http://javafx.com/javafx/16\"","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"darrenhoon"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"darrenhoon"},"content":"\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"darrenhoon"},"content":"        \u003cStackPane VBox.vgrow\u003d\"ALWAYS\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"darrenhoon"},"content":"        \u003cStackPane VBox.vgrow\u003d\"ALWAYS\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":54,"author":{"gitId":"darrenhoon"},"content":"        \u003cHBox VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"darrenhoon"},"content":"          \u003cVBox fx:id\u003d\"roomList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"200\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"darrenhoon"},"content":"            \u003cHBox style\u003d\"-fx-text-alignment: center !important; -fx-alignment: center;\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":57,"author":{"gitId":"darrenhoon"},"content":"              \u003cLabel styleClass\u003d\"table-header\"\u003eRooms\u003c/Label\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":58,"author":{"gitId":"darrenhoon"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":63,"author":{"gitId":"darrenhoon"},"content":"            \u003cStackPane fx:id\u003d\"roomListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":65,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"darrenhoon"},"content":"          \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"200\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":68,"author":{"gitId":"darrenhoon"},"content":"            \u003cHBox style\u003d\"-fx-text-alignment: center !important; -fx-alignment: center;\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":69,"author":{"gitId":"darrenhoon"},"content":"              \u003cLabel styleClass\u003d\"table-header\"\u003eGuests\u003c/Label\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":70,"author":{"gitId":"darrenhoon"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":71,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":72,"author":{"gitId":"peilinye"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"peilinye"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":74,"author":{"gitId":"peilinye"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"darrenhoon"},"content":"            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":76,"author":{"gitId":"peilinye"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":77,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"darrenhoon"},"content":"          \u003cVBox fx:id\u003d\"residencyList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"200\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"darrenhoon"},"content":"            \u003cHBox style\u003d\"-fx-text-alignment: center !important; -fx-alignment: center;\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"darrenhoon"},"content":"              \u003cLabel styleClass\u003d\"table-header\"\u003eHistory\u003c/Label\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":81,"author":{"gitId":"darrenhoon"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":82,"author":{"gitId":"darrenhoon"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"darrenhoon"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"darrenhoon"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"darrenhoon"},"content":"            \u003cStackPane fx:id\u003d\"residencyListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":86,"author":{"gitId":"darrenhoon"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":88,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":89,"author":{"gitId":"darrenhoon"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"peilinye":5,"-":51,"darrenhoon":39}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"darrenhoon"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" prefWrapLength \u003d\"350\"/\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"jianh0ng"},"content":"      \u003cLabel fx:id\u003d\"nric\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$nric\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jianh0ng":1,"-":35,"darrenhoon":1}},{"path":"src/main/resources/view/ResidencyListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"darrenhoon"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"darrenhoon"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"darrenhoon"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"darrenhoon"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"darrenhoon"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"darrenhoon"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"darrenhoon"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"darrenhoon"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"darrenhoon"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"darrenhoon"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"darrenhoon"},"content":"                \u003cLabel fx:id\u003d\"number\" text\u003d\"\\$number\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"darrenhoon"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"darrenhoon"},"content":"            \u003cVBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"darrenhoon"},"content":"                \u003cLabel styleClass\u003d\"cell_room_sub_label\"\u003eCheck In: \u003c/Label\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"darrenhoon"},"content":"                \u003cLabel fx:id\u003d\"in\" text\u003d\"\\$in\" styleClass\u003d\"cell_occupancy_label_checkin\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"darrenhoon"},"content":"                \u003cLabel styleClass\u003d\"cell_room_sub_label\"\u003eCheck Out: \u003c/Label\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"darrenhoon"},"content":"                \u003cLabel fx:id\u003d\"out\" text\u003d\"\\$out\" styleClass\u003d\"cell_occupancy_label_checkout\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"darrenhoon"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"darrenhoon"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"darrenhoon"},"content":"                \u003cFlowPane fx:id\u003d\"personInfo\" prefWrapLength\u003d\"350\"/\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":47,"author":{"gitId":"darrenhoon"},"content":"                \u003cminWidth\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"darrenhoon"},"content":"                    \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"darrenhoon"},"content":"                \u003c/minWidth\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"darrenhoon"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"darrenhoon"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"darrenhoon"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"darrenhoon"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"darrenhoon":55}},{"path":"src/main/resources/view/ResidencyListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"    \u003cListView fx:id\u003d\"residencyListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"darrenhoon":8}},{"path":"src/main/resources/view/RoomListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"peilinye"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"darrenhoon"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"darrenhoon"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"darrenhoon"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"darrenhoon"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"darrenhoon"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"darrenhoon"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"darrenhoon"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"darrenhoon"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"darrenhoon"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"darrenhoon"},"content":"                \u003cLabel fx:id\u003d\"number\" text\u003d\"\\$number\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"darrenhoon"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"darrenhoon"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"darrenhoon"},"content":"                \u003cLabel styleClass\u003d\"cell_room_sub_label\"\u003eOccupancy Status: \u003c/Label\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"darrenhoon"},"content":"                \u003cLabel fx:id\u003d\"vacancy\" text\u003d\"\\$vacancy\" styleClass\u003d\"cell_occupancy_label\" /\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"darrenhoon"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"darrenhoon"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"darrenhoon"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"darrenhoon"},"content":"                \u003cFlowPane fx:id\u003d\"guests\" prefWrapLength\u003d\"350\"/\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"darrenhoon"},"content":"                \u003cminWidth\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"darrenhoon"},"content":"                    \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"darrenhoon"},"content":"                    \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"darrenhoon"},"content":"                \u003c/minWidth\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"darrenhoon"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"darrenhoon"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"darrenhoon"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"darrenhoon"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"peilinye":2,"darrenhoon":48}},{"path":"src/main/resources/view/RoomListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"    \u003cListView fx:id\u003d\"roomListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"darrenhoon":8}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"darrenhoon"},"content":"    /*","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"darrenhoon"},"content":"    */","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"jianh0ng"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD + \" guests\";","lastModifiedDate":"2021-09-19"},{"lineNumber":70,"author":{"gitId":"jianh0ng"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS_GUESTS, model);","lastModifiedDate":"2021-09-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"wilburrito"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + NRIC_DESC_AMY","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"jianh0ng"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"jianh0ng"},"content":"    public void getFilteredRecordList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"jianh0ng"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredRecordList().remove(0));","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":158,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":159,"author":{"gitId":"darrenhoon"},"content":"        //System.out.println(\"Expected Model is: \" + expectedModel.getFilteredPersonList());","lastModifiedDate":"2021-10-05"},{"lineNumber":160,"author":{"gitId":"darrenhoon"},"content":"        //System.out.println(\"Actual Model is: \" + model.getFilteredPersonList());","lastModifiedDate":"2021-10-05"},{"lineNumber":161,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jianh0ng":7,"-":158,"wilburrito":2,"darrenhoon":11}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"BananaTechs"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"BananaTechs"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.residency.Residency;","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.model.room.Room;","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"wilburrito"},"content":"        Person alice \u003d new PersonBuilder().withNric(\"Alice\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"wilburrito"},"content":"        Person bob \u003d new PersonBuilder().withNric(\"Bob\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"wilburrito"},"content":"        // different person because different nric -\u003e returns false","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"jianh0ng"},"content":"        @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":126,"author":{"gitId":"jianh0ng"},"content":"        public void addRoom(Room room) {","lastModifiedDate":"2021-09-20"},{"lineNumber":127,"author":{"gitId":"jianh0ng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-20"},{"lineNumber":128,"author":{"gitId":"jianh0ng"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":129,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"peilinye"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":141,"author":{"gitId":"peilinye"},"content":"        public boolean hasRoom(Room room) {","lastModifiedDate":"2021-10-23"},{"lineNumber":142,"author":{"gitId":"peilinye"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":143,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":144,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"BananaTechs"},"content":"        @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":156,"author":{"gitId":"BananaTechs"},"content":"        public void setRoom(Room target, Room editedRoom) {","lastModifiedDate":"2021-09-24"},{"lineNumber":157,"author":{"gitId":"BananaTechs"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-24"},{"lineNumber":158,"author":{"gitId":"BananaTechs"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":159,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":160,"author":{"gitId":"BananaTechs"},"content":"        @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":161,"author":{"gitId":"BananaTechs"},"content":"        public void register(Room room, Set\u003cPerson\u003e guests) {","lastModifiedDate":"2021-10-06"},{"lineNumber":162,"author":{"gitId":"BananaTechs"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-06"},{"lineNumber":163,"author":{"gitId":"BananaTechs"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":164,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":165,"author":{"gitId":"jianh0ng"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":166,"author":{"gitId":"jianh0ng"},"content":"        public void record(Residency residency) {","lastModifiedDate":"2021-10-11"},{"lineNumber":167,"author":{"gitId":"jianh0ng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-11"},{"lineNumber":168,"author":{"gitId":"jianh0ng"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":169,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":170,"author":{"gitId":"BananaTechs"},"content":"        @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":171,"author":{"gitId":"BananaTechs"},"content":"        public void removeResidency(Residency residency) {","lastModifiedDate":"2021-10-06"},{"lineNumber":172,"author":{"gitId":"BananaTechs"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-06"},{"lineNumber":173,"author":{"gitId":"BananaTechs"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":174,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":175,"author":{"gitId":"BananaTechs"},"content":"        @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":176,"author":{"gitId":"BananaTechs"},"content":"        public Optional\u003cResidency\u003e getResidency(Room room) {","lastModifiedDate":"2021-10-06"},{"lineNumber":177,"author":{"gitId":"BananaTechs"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-06"},{"lineNumber":178,"author":{"gitId":"BananaTechs"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":179,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":180,"author":{"gitId":"BananaTechs"},"content":"        @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":181,"author":{"gitId":"BananaTechs"},"content":"        public Optional\u003cResidency\u003e getResidency(Person guest) {","lastModifiedDate":"2021-10-06"},{"lineNumber":182,"author":{"gitId":"BananaTechs"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-06"},{"lineNumber":183,"author":{"gitId":"BananaTechs"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":184,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":195,"author":{"gitId":"jianh0ng"},"content":"        @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":196,"author":{"gitId":"jianh0ng"},"content":"        public ObservableList\u003cRoom\u003e getFilteredRoomList() {","lastModifiedDate":"2021-09-20"},{"lineNumber":197,"author":{"gitId":"jianh0ng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-20"},{"lineNumber":198,"author":{"gitId":"jianh0ng"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":199,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":200,"author":{"gitId":"peilinye"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":201,"author":{"gitId":"peilinye"},"content":"        public Integer getNumberOfRooms() {","lastModifiedDate":"2021-10-23"},{"lineNumber":202,"author":{"gitId":"peilinye"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":203,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":204,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":205,"author":{"gitId":"jianh0ng"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":206,"author":{"gitId":"jianh0ng"},"content":"        public ObservableList\u003cResidency\u003e getFilteredRecordList() {","lastModifiedDate":"2021-10-19"},{"lineNumber":207,"author":{"gitId":"jianh0ng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":208,"author":{"gitId":"jianh0ng"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":209,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":210,"author":{"gitId":"jianh0ng"},"content":"        @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":211,"author":{"gitId":"jianh0ng"},"content":"        public void updateFilteredRoomList(Predicate\u003cRoom\u003e predicate) {","lastModifiedDate":"2021-09-20"},{"lineNumber":212,"author":{"gitId":"jianh0ng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-20"},{"lineNumber":213,"author":{"gitId":"jianh0ng"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":214,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":215,"author":{"gitId":"jianh0ng"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":216,"author":{"gitId":"jianh0ng"},"content":"        public void updateFilteredRecordList(Predicate\u003cResidency\u003e predicate) {","lastModifiedDate":"2021-10-19"},{"lineNumber":217,"author":{"gitId":"jianh0ng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":218,"author":{"gitId":"jianh0ng"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":240,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"peilinye":10,"jianh0ng":31,"BananaTechs":28,"-":191,"wilburrito":3}},{"path":"src/test/java/seedu/address/logic/commands/AddRoomCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peilinye"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"peilinye"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"peilinye"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"peilinye"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"peilinye"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"peilinye"},"content":"import static seedu.address.model.util.SampleDataUtil.getTagSet;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"peilinye"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"peilinye"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"peilinye"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"peilinye"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"peilinye"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"peilinye"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"peilinye"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"peilinye"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"peilinye"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"peilinye"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"peilinye"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"peilinye"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"peilinye"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"peilinye"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"peilinye"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"peilinye"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"peilinye"},"content":"import seedu.address.model.residency.Residency;","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"peilinye"},"content":"import seedu.address.model.room.Room;","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"peilinye"},"content":"import seedu.address.model.room.RoomNumber;","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"peilinye"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"peilinye"},"content":"public class AddRoomCommandTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"peilinye"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"peilinye"},"content":"    public void constructor_nullTags_throwsNullPointerException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"peilinye"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddRoomCommand(1, null));","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"peilinye"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"peilinye"},"content":"    public void execute_roomAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"peilinye"},"content":"        ModelStubAcceptingRoomsAdded modelStub \u003d new ModelStubAcceptingRoomsAdded();","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"peilinye"},"content":"        Set\u003cTag\u003e tags \u003d getTagSet(\"a\");","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"peilinye"},"content":"        CommandResult commandResult \u003d new AddRoomCommand(10,","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"peilinye"},"content":"                tags).execute(modelStub);","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"peilinye"},"content":"        assertEquals(String.format(AddRoomCommand.MESSAGE_SUCCESS, 10, tags),","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"peilinye"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"peilinye"},"content":"        assertTrue(modelStub.hasRoom(new Room(new RoomNumber(\"005\"), tags)));","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"peilinye"},"content":"        assertEquals(modelStub.getNumberOfRooms(), 10);","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"peilinye"},"content":"        modelStub \u003d new ModelStubAcceptingRoomsAdded();","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"peilinye"},"content":"        commandResult \u003d new AddRoomCommand(3, tags).execute(modelStub);","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"peilinye"},"content":"        assertEquals(String.format(AddRoomCommand.MESSAGE_SUCCESS, 3, tags),","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"peilinye"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"peilinye"},"content":"        assertEquals(modelStub.roomsAdded, Arrays.asList(","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"peilinye"},"content":"                new Room(new RoomNumber(\"001\"), tags),","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"peilinye"},"content":"                new Room(new RoomNumber(\"002\"), tags),","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"peilinye"},"content":"                new Room(new RoomNumber(\"003\"), tags)));","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"peilinye"},"content":"        assertEquals(modelStub.getNumberOfRooms(), 3);","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"peilinye"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"peilinye"},"content":"    public void exceedingMaxAllowedRooms_throwsCommandException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"peilinye"},"content":"        Set\u003cTag\u003e tags \u003d getTagSet(\"normal\");","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"peilinye"},"content":"        AddRoomCommand addRoomCommand1 \u003d new AddRoomCommand(1, tags);","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"peilinye"},"content":"        AddRoomCommand addRoomCommand10 \u003d new AddRoomCommand(10, tags);","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"peilinye"},"content":"        ModelStub modelStub1 \u003d new ModelStubWithMaxRooms();","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"peilinye"},"content":"        assertThrows(CommandException.class, String.format(AddRoomCommand.MESSAGE_EXCEEDED_MAX_NUMBER_OF_ROOMS, 1), ()","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"peilinye"},"content":"            -\u003e addRoomCommand1.execute(modelStub1));","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"peilinye"},"content":"        assertThrows(CommandException.class, String.format(AddRoomCommand.MESSAGE_EXCEEDED_MAX_NUMBER_OF_ROOMS, 10), ()","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"peilinye"},"content":"            -\u003e addRoomCommand10.execute(modelStub1));","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"peilinye"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"peilinye"},"content":"    public void addingNumberOfRooms_cornerCases() throws Exception {","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"peilinye"},"content":"        Set\u003cTag\u003e tags \u003d getTagSet(\"normal\");","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"peilinye"},"content":"        ModelStub modelStub \u003d new ModelStubWith990Rooms();","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"peilinye"},"content":"        CommandResult commandResult \u003d new AddRoomCommand(9, tags).execute(modelStub);","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"peilinye"},"content":"        // successfully added 9 rooms","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"peilinye"},"content":"        assertEquals(String.format(AddRoomCommand.MESSAGE_SUCCESS, 9, tags),","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"peilinye"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"peilinye"},"content":"        ModelStub modelStub2 \u003d new ModelStubWith990Rooms();","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"peilinye"},"content":"        // command exception thrown when adding 10 rooms","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"peilinye"},"content":"        AddRoomCommand addRoomCommand10 \u003d new AddRoomCommand(10, tags);","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"peilinye"},"content":"        assertThrows(CommandException.class, String.format(AddRoomCommand.MESSAGE_EXCEEDED_MAX_NUMBER_OF_ROOMS, 10), ()","lastModifiedDate":"2021-10-28"},{"lineNumber":90,"author":{"gitId":"peilinye"},"content":"            -\u003e addRoomCommand10.execute(modelStub2));","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"peilinye"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"peilinye"},"content":"    public void equals() {","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"peilinye"},"content":"        Set\u003cTag\u003e tags \u003d getTagSet(\"normal\");","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"peilinye"},"content":"        Set\u003cTag\u003e tags1 \u003d getTagSet(\"aaaaa\");","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"peilinye"},"content":"        AddRoomCommand addOneNormalRoomCommand \u003d new AddRoomCommand(1, tags);","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"peilinye"},"content":"        AddRoomCommand addThreeNormalRoomsCommand \u003d new AddRoomCommand(3, tags);","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"peilinye"},"content":"        AddRoomCommand addOneAaaaaRoomCommand \u003d new AddRoomCommand(1, tags1);","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"peilinye"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"peilinye"},"content":"        assertTrue(addOneNormalRoomCommand.equals(addOneNormalRoomCommand));","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"peilinye"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"peilinye"},"content":"        AddRoomCommand addOneNormalRoomCommandCopy \u003d new AddRoomCommand(1, tags);","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"peilinye"},"content":"        assertTrue(addOneNormalRoomCommand.equals(addOneNormalRoomCommandCopy));","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"peilinye"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"peilinye"},"content":"        assertFalse(addOneNormalRoomCommand.equals(1));","lastModifiedDate":"2021-10-23"},{"lineNumber":111,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":112,"author":{"gitId":"peilinye"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-23"},{"lineNumber":113,"author":{"gitId":"peilinye"},"content":"        assertFalse(addOneNormalRoomCommand.equals(null));","lastModifiedDate":"2021-10-23"},{"lineNumber":114,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":115,"author":{"gitId":"peilinye"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-23"},{"lineNumber":116,"author":{"gitId":"peilinye"},"content":"        assertFalse(addOneNormalRoomCommand.equals(addThreeNormalRoomsCommand));","lastModifiedDate":"2021-10-23"},{"lineNumber":117,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":118,"author":{"gitId":"peilinye"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2021-10-23"},{"lineNumber":119,"author":{"gitId":"peilinye"},"content":"        assertFalse(addOneNormalRoomCommand.equals(addOneAaaaaRoomCommand));","lastModifiedDate":"2021-10-23"},{"lineNumber":120,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":121,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":122,"author":{"gitId":"peilinye"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":123,"author":{"gitId":"peilinye"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2021-10-23"},{"lineNumber":124,"author":{"gitId":"peilinye"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":125,"author":{"gitId":"peilinye"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2021-10-23"},{"lineNumber":126,"author":{"gitId":"peilinye"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":127,"author":{"gitId":"peilinye"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-23"},{"lineNumber":128,"author":{"gitId":"peilinye"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":129,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":130,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":131,"author":{"gitId":"peilinye"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":132,"author":{"gitId":"peilinye"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-10-23"},{"lineNumber":133,"author":{"gitId":"peilinye"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":134,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":135,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":136,"author":{"gitId":"peilinye"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":137,"author":{"gitId":"peilinye"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-10-23"},{"lineNumber":138,"author":{"gitId":"peilinye"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":139,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":140,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":141,"author":{"gitId":"peilinye"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":142,"author":{"gitId":"peilinye"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-10-23"},{"lineNumber":143,"author":{"gitId":"peilinye"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":144,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":145,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":146,"author":{"gitId":"peilinye"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":147,"author":{"gitId":"peilinye"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2021-10-23"},{"lineNumber":148,"author":{"gitId":"peilinye"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":149,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":150,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":151,"author":{"gitId":"peilinye"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":152,"author":{"gitId":"peilinye"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-10-23"},{"lineNumber":153,"author":{"gitId":"peilinye"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":154,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":155,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":156,"author":{"gitId":"peilinye"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":157,"author":{"gitId":"peilinye"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2021-10-23"},{"lineNumber":158,"author":{"gitId":"peilinye"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":159,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":160,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":161,"author":{"gitId":"peilinye"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":162,"author":{"gitId":"peilinye"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2021-10-23"},{"lineNumber":163,"author":{"gitId":"peilinye"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":164,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":165,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":166,"author":{"gitId":"peilinye"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":167,"author":{"gitId":"peilinye"},"content":"        public void addRoom(Room room) {","lastModifiedDate":"2021-10-23"},{"lineNumber":168,"author":{"gitId":"peilinye"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":169,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":170,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":171,"author":{"gitId":"peilinye"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":172,"author":{"gitId":"peilinye"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-23"},{"lineNumber":173,"author":{"gitId":"peilinye"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":174,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":175,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":176,"author":{"gitId":"peilinye"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":177,"author":{"gitId":"peilinye"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2021-10-23"},{"lineNumber":178,"author":{"gitId":"peilinye"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":179,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":180,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":181,"author":{"gitId":"peilinye"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":182,"author":{"gitId":"peilinye"},"content":"        public boolean hasRoom(Room room) {","lastModifiedDate":"2021-10-23"},{"lineNumber":183,"author":{"gitId":"peilinye"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":184,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":185,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":186,"author":{"gitId":"peilinye"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":187,"author":{"gitId":"peilinye"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2021-10-23"},{"lineNumber":188,"author":{"gitId":"peilinye"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":189,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":190,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":191,"author":{"gitId":"peilinye"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":192,"author":{"gitId":"peilinye"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2021-10-23"},{"lineNumber":193,"author":{"gitId":"peilinye"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":194,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":195,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":196,"author":{"gitId":"peilinye"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":197,"author":{"gitId":"peilinye"},"content":"        public void setRoom(Room target, Room editedRoom) {","lastModifiedDate":"2021-10-23"},{"lineNumber":198,"author":{"gitId":"peilinye"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":199,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":200,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":201,"author":{"gitId":"peilinye"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":202,"author":{"gitId":"peilinye"},"content":"        public void register(Room room, Set\u003cPerson\u003e guests) {","lastModifiedDate":"2021-10-23"},{"lineNumber":203,"author":{"gitId":"peilinye"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":204,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":205,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":206,"author":{"gitId":"peilinye"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":207,"author":{"gitId":"peilinye"},"content":"        public void record(Residency residency) {","lastModifiedDate":"2021-10-23"},{"lineNumber":208,"author":{"gitId":"peilinye"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":209,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":210,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":211,"author":{"gitId":"peilinye"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":212,"author":{"gitId":"peilinye"},"content":"        public void removeResidency(Residency residency) {","lastModifiedDate":"2021-10-23"},{"lineNumber":213,"author":{"gitId":"peilinye"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":214,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":215,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":216,"author":{"gitId":"peilinye"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":217,"author":{"gitId":"peilinye"},"content":"        public Optional\u003cResidency\u003e getResidency(Room room) {","lastModifiedDate":"2021-10-23"},{"lineNumber":218,"author":{"gitId":"peilinye"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":219,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":220,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":221,"author":{"gitId":"peilinye"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":222,"author":{"gitId":"peilinye"},"content":"        public Optional\u003cResidency\u003e getResidency(Person guest) {","lastModifiedDate":"2021-10-23"},{"lineNumber":223,"author":{"gitId":"peilinye"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":224,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":225,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":226,"author":{"gitId":"peilinye"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":227,"author":{"gitId":"peilinye"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-10-23"},{"lineNumber":228,"author":{"gitId":"peilinye"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":229,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":230,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":231,"author":{"gitId":"peilinye"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":232,"author":{"gitId":"peilinye"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-23"},{"lineNumber":233,"author":{"gitId":"peilinye"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":234,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":235,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":236,"author":{"gitId":"peilinye"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":237,"author":{"gitId":"peilinye"},"content":"        public ObservableList\u003cRoom\u003e getFilteredRoomList() {","lastModifiedDate":"2021-10-23"},{"lineNumber":238,"author":{"gitId":"peilinye"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":239,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":240,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":241,"author":{"gitId":"peilinye"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":242,"author":{"gitId":"peilinye"},"content":"        public Integer getNumberOfRooms() {","lastModifiedDate":"2021-10-23"},{"lineNumber":243,"author":{"gitId":"peilinye"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":244,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":245,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":246,"author":{"gitId":"peilinye"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":247,"author":{"gitId":"peilinye"},"content":"        public ObservableList\u003cResidency\u003e getFilteredRecordList() {","lastModifiedDate":"2021-10-23"},{"lineNumber":248,"author":{"gitId":"peilinye"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":249,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":250,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":251,"author":{"gitId":"peilinye"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":252,"author":{"gitId":"peilinye"},"content":"        public void updateFilteredRoomList(Predicate\u003cRoom\u003e predicate) {","lastModifiedDate":"2021-10-23"},{"lineNumber":253,"author":{"gitId":"peilinye"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":254,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":255,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":256,"author":{"gitId":"peilinye"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":257,"author":{"gitId":"peilinye"},"content":"        public void updateFilteredRecordList(Predicate\u003cResidency\u003e predicate) {","lastModifiedDate":"2021-10-23"},{"lineNumber":258,"author":{"gitId":"peilinye"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":259,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":260,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":261,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":262,"author":{"gitId":"peilinye"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":263,"author":{"gitId":"peilinye"},"content":"     * A Model stub that already contains the maximum number of rooms.","lastModifiedDate":"2021-10-23"},{"lineNumber":264,"author":{"gitId":"peilinye"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":265,"author":{"gitId":"peilinye"},"content":"    private class ModelStubWithMaxRooms extends ModelStub {","lastModifiedDate":"2021-10-23"},{"lineNumber":266,"author":{"gitId":"peilinye"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":267,"author":{"gitId":"peilinye"},"content":"        public Integer getNumberOfRooms() {","lastModifiedDate":"2021-10-23"},{"lineNumber":268,"author":{"gitId":"peilinye"},"content":"            return 999;","lastModifiedDate":"2021-10-23"},{"lineNumber":269,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":270,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":271,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":272,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":273,"author":{"gitId":"peilinye"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":274,"author":{"gitId":"peilinye"},"content":"     * A Model stub that already contains 990 rooms.","lastModifiedDate":"2021-10-23"},{"lineNumber":275,"author":{"gitId":"peilinye"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":276,"author":{"gitId":"peilinye"},"content":"    private class ModelStubWith990Rooms extends ModelStub {","lastModifiedDate":"2021-10-23"},{"lineNumber":277,"author":{"gitId":"peilinye"},"content":"        final ArrayList\u003cRoom\u003e roomsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":278,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":279,"author":{"gitId":"peilinye"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":280,"author":{"gitId":"peilinye"},"content":"        public Integer getNumberOfRooms() {","lastModifiedDate":"2021-10-23"},{"lineNumber":281,"author":{"gitId":"peilinye"},"content":"            return 990;","lastModifiedDate":"2021-10-23"},{"lineNumber":282,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":283,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":284,"author":{"gitId":"peilinye"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":285,"author":{"gitId":"peilinye"},"content":"        public void addRoom(Room room) {","lastModifiedDate":"2021-10-23"},{"lineNumber":286,"author":{"gitId":"peilinye"},"content":"            requireNonNull(room);","lastModifiedDate":"2021-10-23"},{"lineNumber":287,"author":{"gitId":"peilinye"},"content":"            roomsAdded.add(room);","lastModifiedDate":"2021-10-23"},{"lineNumber":288,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":289,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":290,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":291,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":292,"author":{"gitId":"peilinye"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":293,"author":{"gitId":"peilinye"},"content":"     * A Model stub that always accepts the rooms being added.","lastModifiedDate":"2021-10-23"},{"lineNumber":294,"author":{"gitId":"peilinye"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":295,"author":{"gitId":"peilinye"},"content":"    private class ModelStubAcceptingRoomsAdded extends ModelStub {","lastModifiedDate":"2021-10-23"},{"lineNumber":296,"author":{"gitId":"peilinye"},"content":"        final ArrayList\u003cRoom\u003e roomsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":297,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":298,"author":{"gitId":"peilinye"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":299,"author":{"gitId":"peilinye"},"content":"        public Integer getNumberOfRooms() {","lastModifiedDate":"2021-10-23"},{"lineNumber":300,"author":{"gitId":"peilinye"},"content":"            return roomsAdded.size();","lastModifiedDate":"2021-10-23"},{"lineNumber":301,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":302,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":303,"author":{"gitId":"peilinye"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":304,"author":{"gitId":"peilinye"},"content":"        public boolean hasRoom(Room room) {","lastModifiedDate":"2021-10-23"},{"lineNumber":305,"author":{"gitId":"peilinye"},"content":"            requireNonNull(room);","lastModifiedDate":"2021-10-23"},{"lineNumber":306,"author":{"gitId":"peilinye"},"content":"            return roomsAdded.stream().anyMatch(room::isSameRoom);","lastModifiedDate":"2021-10-23"},{"lineNumber":307,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":308,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":309,"author":{"gitId":"peilinye"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":310,"author":{"gitId":"peilinye"},"content":"        public void addRoom(Room room) {","lastModifiedDate":"2021-10-23"},{"lineNumber":311,"author":{"gitId":"peilinye"},"content":"            requireNonNull(room);","lastModifiedDate":"2021-10-23"},{"lineNumber":312,"author":{"gitId":"peilinye"},"content":"            roomsAdded.add(room);","lastModifiedDate":"2021-10-23"},{"lineNumber":313,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":314,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":315,"author":{"gitId":"peilinye"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":316,"author":{"gitId":"peilinye"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-23"},{"lineNumber":317,"author":{"gitId":"peilinye"},"content":"            return new AddressBook();","lastModifiedDate":"2021-10-23"},{"lineNumber":318,"author":{"gitId":"peilinye"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":319,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":320,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":321,"author":{"gitId":"peilinye"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"peilinye":321}},{"path":"src/test/java/seedu/address/logic/commands/CheckInCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BananaTechs"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"BananaTechs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"BananaTechs"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"BananaTechs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"BananaTechs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"BananaTechs"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"BananaTechs"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"BananaTechs"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ROOM;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"BananaTechs"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"BananaTechs"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_ROOM;","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"BananaTechs"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"BananaTechs"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"BananaTechs"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"BananaTechs"},"content":"import java.util.List;","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"BananaTechs"},"content":"import java.util.Set;","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"BananaTechs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.room.Room;","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.room.Vacancy;","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.testutil.RoomBuilder;","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"BananaTechs"},"content":"public class CheckInCommandTest {","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"BananaTechs"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"BananaTechs"},"content":"    @Test","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"BananaTechs"},"content":"    public void execute_validRoomIndexValidGuestList_success() {","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"BananaTechs"},"content":"        List\u003cIndex\u003e guestList \u003d Arrays.asList(INDEX_FIRST_PERSON, INDEX_SECOND_PERSON);","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"BananaTechs"},"content":"        Set\u003cPerson\u003e guestSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"BananaTechs"},"content":"        guestSet.add(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()));","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"BananaTechs"},"content":"        guestSet.add(model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased()));","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"BananaTechs"},"content":"        CheckInCommand checkInCommand \u003d new CheckInCommand(INDEX_FIRST_ROOM, guestList);","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"BananaTechs"},"content":"        Room roomToEdit \u003d model.getFilteredRoomList().get(INDEX_FIRST_ROOM.getZeroBased());","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"BananaTechs"},"content":"        Set\u003cPerson\u003e guests \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-09-24"},{"lineNumber":46,"author":{"gitId":"BananaTechs"},"content":"        guests.add(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()));","lastModifiedDate":"2021-09-24"},{"lineNumber":47,"author":{"gitId":"BananaTechs"},"content":"        guests.add(model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased()));","lastModifiedDate":"2021-09-24"},{"lineNumber":48,"author":{"gitId":"peilinye"},"content":"        Room editedRoom \u003d new Room(roomToEdit.getRoomNumber(), Vacancy.OCCUPIED, guests, roomToEdit.getTags());","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"BananaTechs"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-09-24"},{"lineNumber":51,"author":{"gitId":"BananaTechs"},"content":"        expectedModel.setRoom(roomToEdit, editedRoom);","lastModifiedDate":"2021-09-24"},{"lineNumber":52,"author":{"gitId":"BananaTechs"},"content":"        expectedModel.register(editedRoom, guestSet);","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":54,"author":{"gitId":"BananaTechs"},"content":"        String expectedMessage \u003d String.format(CheckInCommand.MESSAGE_CHECKIN_SUCCESS, editedRoom);","lastModifiedDate":"2021-09-24"},{"lineNumber":55,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":56,"author":{"gitId":"BananaTechs"},"content":"        assertCommandSuccess(checkInCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-09-24"},{"lineNumber":57,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":58,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":59,"author":{"gitId":"BananaTechs"},"content":"    @Test","lastModifiedDate":"2021-09-24"},{"lineNumber":60,"author":{"gitId":"BananaTechs"},"content":"    public void execute_invalidRoomIndex_throwsCommandException() {","lastModifiedDate":"2021-09-24"},{"lineNumber":61,"author":{"gitId":"BananaTechs"},"content":"        Index invalidRoomIndex \u003d Index.fromZeroBased(model.getFilteredRoomList().size());","lastModifiedDate":"2021-09-24"},{"lineNumber":62,"author":{"gitId":"BananaTechs"},"content":"        List\u003cIndex\u003e guestList \u003d Arrays.asList(INDEX_FIRST_PERSON, INDEX_SECOND_PERSON);","lastModifiedDate":"2021-09-24"},{"lineNumber":63,"author":{"gitId":"BananaTechs"},"content":"        CheckInCommand checkInCommand \u003d new CheckInCommand(invalidRoomIndex, guestList);","lastModifiedDate":"2021-09-24"},{"lineNumber":64,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":65,"author":{"gitId":"BananaTechs"},"content":"        assertCommandFailure(checkInCommand, model, Messages.MESSAGE_INVALID_ROOM_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-24"},{"lineNumber":66,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":67,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":68,"author":{"gitId":"BananaTechs"},"content":"    @Test","lastModifiedDate":"2021-09-24"},{"lineNumber":69,"author":{"gitId":"BananaTechs"},"content":"    public void execute_invalidGuestIndex_throwsCommandException() {","lastModifiedDate":"2021-09-24"},{"lineNumber":70,"author":{"gitId":"BananaTechs"},"content":"        Index invalidGuestIndex \u003d Index.fromZeroBased(model.getFilteredPersonList().size());","lastModifiedDate":"2021-09-24"},{"lineNumber":71,"author":{"gitId":"BananaTechs"},"content":"        List\u003cIndex\u003e guestList \u003d Arrays.asList(INDEX_FIRST_PERSON, INDEX_SECOND_PERSON, invalidGuestIndex);","lastModifiedDate":"2021-09-24"},{"lineNumber":72,"author":{"gitId":"BananaTechs"},"content":"        CheckInCommand checkInCommand \u003d new CheckInCommand(INDEX_FIRST_ROOM, guestList);","lastModifiedDate":"2021-09-24"},{"lineNumber":73,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":74,"author":{"gitId":"BananaTechs"},"content":"        assertCommandFailure(checkInCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-24"},{"lineNumber":75,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":76,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":77,"author":{"gitId":"BananaTechs"},"content":"    @Test","lastModifiedDate":"2021-09-25"},{"lineNumber":78,"author":{"gitId":"BananaTechs"},"content":"    public void execute_occupiedRoom_throwsCommandException() {","lastModifiedDate":"2021-09-25"},{"lineNumber":79,"author":{"gitId":"BananaTechs"},"content":"        Set\u003cPerson\u003e currentGuests \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"BananaTechs"},"content":"        currentGuests.add(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()));","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"BananaTechs"},"content":"        Room roomToEdit \u003d model.getFilteredRoomList().get(INDEX_FIRST_ROOM.getZeroBased());","lastModifiedDate":"2021-09-25"},{"lineNumber":82,"author":{"gitId":"BananaTechs"},"content":"        Room editedRoom \u003d new RoomBuilder(roomToEdit)","lastModifiedDate":"2021-09-25"},{"lineNumber":83,"author":{"gitId":"BananaTechs"},"content":"                .withVacancy(Vacancy.OCCUPIED)","lastModifiedDate":"2021-09-25"},{"lineNumber":84,"author":{"gitId":"BananaTechs"},"content":"                .build();","lastModifiedDate":"2021-09-25"},{"lineNumber":85,"author":{"gitId":"BananaTechs"},"content":"        model.setRoom(roomToEdit, editedRoom);","lastModifiedDate":"2021-09-25"},{"lineNumber":86,"author":{"gitId":"BananaTechs"},"content":"        model.register(editedRoom, currentGuests);","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":88,"author":{"gitId":"BananaTechs"},"content":"        List\u003cIndex\u003e newGuestList \u003d Arrays.asList(INDEX_SECOND_PERSON);","lastModifiedDate":"2021-09-25"},{"lineNumber":89,"author":{"gitId":"BananaTechs"},"content":"        CheckInCommand checkInCommand \u003d new CheckInCommand(INDEX_FIRST_ROOM, newGuestList);","lastModifiedDate":"2021-09-25"},{"lineNumber":90,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":91,"author":{"gitId":"BananaTechs"},"content":"        assertCommandFailure(checkInCommand, model, CheckInCommand.MESSAGE_ROOM_IS_OCCUPIED);","lastModifiedDate":"2021-09-25"},{"lineNumber":92,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":93,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":94,"author":{"gitId":"BananaTechs"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"BananaTechs"},"content":"    public void execute_guestAlreadyRegistered_throwsCommandException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"BananaTechs"},"content":"        Set\u003cPerson\u003e guestsRoomOne \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"BananaTechs"},"content":"        guestsRoomOne.add(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()));","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"BananaTechs"},"content":"        List\u003cIndex\u003e guestsRoomTwo \u003d Arrays.asList(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"BananaTechs"},"content":"        Room roomOne \u003d model.getFilteredRoomList().get(INDEX_FIRST_ROOM.getZeroBased());","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"BananaTechs"},"content":"        model.register(roomOne, guestsRoomOne);","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"BananaTechs"},"content":"        CheckInCommand checkInCommand \u003d new CheckInCommand(INDEX_SECOND_ROOM, guestsRoomTwo);","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"BananaTechs"},"content":"        assertCommandFailure(checkInCommand, model,","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"BananaTechs"},"content":"                String.format(CheckInCommand.MESSAGE_PERSON_ALREADY_CHECKED_IN, INDEX_FIRST_PERSON.getOneBased()));","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"BananaTechs"},"content":"    @Test","lastModifiedDate":"2021-09-24"},{"lineNumber":109,"author":{"gitId":"BananaTechs"},"content":"    public void execute_noGuests_throwsCommandException() {","lastModifiedDate":"2021-09-24"},{"lineNumber":110,"author":{"gitId":"BananaTechs"},"content":"        List\u003cIndex\u003e guestList \u003d Collections.emptyList();","lastModifiedDate":"2021-09-24"},{"lineNumber":111,"author":{"gitId":"BananaTechs"},"content":"        CheckInCommand checkInCommand \u003d new CheckInCommand(INDEX_FIRST_ROOM, guestList);","lastModifiedDate":"2021-09-24"},{"lineNumber":112,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":113,"author":{"gitId":"BananaTechs"},"content":"        assertCommandFailure(checkInCommand, model, CheckInCommand.MESSAGE_NO_GUESTS);","lastModifiedDate":"2021-09-24"},{"lineNumber":114,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":115,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":116,"author":{"gitId":"BananaTechs"},"content":"    @Test","lastModifiedDate":"2021-09-24"},{"lineNumber":117,"author":{"gitId":"BananaTechs"},"content":"    public void equals() {","lastModifiedDate":"2021-09-24"},{"lineNumber":118,"author":{"gitId":"BananaTechs"},"content":"        List\u003cIndex\u003e guestList \u003d Arrays.asList(INDEX_FIRST_PERSON, INDEX_SECOND_PERSON);","lastModifiedDate":"2021-09-24"},{"lineNumber":119,"author":{"gitId":"BananaTechs"},"content":"        CheckInCommand checkInRoomOneCommand \u003d new CheckInCommand(INDEX_FIRST_ROOM, guestList);","lastModifiedDate":"2021-09-24"},{"lineNumber":120,"author":{"gitId":"BananaTechs"},"content":"        CheckInCommand checkInRoomTwoCommand \u003d new CheckInCommand(INDEX_SECOND_ROOM, guestList);","lastModifiedDate":"2021-09-24"},{"lineNumber":121,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":122,"author":{"gitId":"BananaTechs"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-09-24"},{"lineNumber":123,"author":{"gitId":"BananaTechs"},"content":"        assertEquals(checkInRoomOneCommand, checkInRoomOneCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":125,"author":{"gitId":"BananaTechs"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-09-24"},{"lineNumber":126,"author":{"gitId":"BananaTechs"},"content":"        CheckInCommand checkInRoomOneCommandCopy \u003d new CheckInCommand(INDEX_FIRST_ROOM, guestList);","lastModifiedDate":"2021-09-24"},{"lineNumber":127,"author":{"gitId":"BananaTechs"},"content":"        assertEquals(checkInRoomOneCommandCopy, checkInRoomOneCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":129,"author":{"gitId":"BananaTechs"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-09-24"},{"lineNumber":130,"author":{"gitId":"BananaTechs"},"content":"        assertNotEquals(checkInRoomOneCommand, 1);","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":132,"author":{"gitId":"BananaTechs"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-09-24"},{"lineNumber":133,"author":{"gitId":"BananaTechs"},"content":"        assertNotEquals(checkInRoomOneCommand, null);","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":135,"author":{"gitId":"BananaTechs"},"content":"        // different CheckInCommand -\u003e returns false","lastModifiedDate":"2021-09-24"},{"lineNumber":136,"author":{"gitId":"BananaTechs"},"content":"        assertNotEquals(checkInRoomTwoCommand, checkInRoomOneCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":137,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":138,"author":{"gitId":"BananaTechs"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"peilinye":1,"BananaTechs":137}},{"path":"src/test/java/seedu/address/logic/commands/CheckOutCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BananaTechs"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"BananaTechs"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"BananaTechs"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"BananaTechs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"BananaTechs"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"BananaTechs"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"BananaTechs"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"BananaTechs"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ROOM;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"BananaTechs"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_ROOM;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"BananaTechs"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"jianh0ng"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"BananaTechs"},"content":"import java.util.Set;","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"BananaTechs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.model.residency.Residency;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.room.Room;","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.room.Vacancy;","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"BananaTechs"},"content":"public class CheckOutCommandTest {","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"BananaTechs"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"BananaTechs"},"content":"    @Test","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"BananaTechs"},"content":"    public void execute_validRoomIndex_success() {","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"BananaTechs"},"content":"        CheckOutCommand checkOutCommand \u003d new CheckOutCommand(INDEX_FIRST_ROOM);","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"BananaTechs"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"BananaTechs"},"content":"        Room originalRoom \u003d model.getFilteredRoomList().get(INDEX_FIRST_ROOM.getZeroBased());","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"BananaTechs"},"content":"        Set\u003cPerson\u003e guests \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"BananaTechs"},"content":"        guests.add(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()));","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"peilinye"},"content":"        Room roomToEdit \u003d new Room(originalRoom.getRoomNumber(), Vacancy.OCCUPIED, guests, originalRoom.getTags());","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"BananaTechs"},"content":"        model.setRoom(originalRoom, roomToEdit);","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"BananaTechs"},"content":"        model.register(roomToEdit, guests);","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"jianh0ng"},"content":"        Optional\u003cResidency\u003e toBeRecorded \u003d model.getResidency(roomToEdit);","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":47,"author":{"gitId":"BananaTechs"},"content":"        // Checking out a room should return it to its default state","lastModifiedDate":"2021-09-24"},{"lineNumber":48,"author":{"gitId":"BananaTechs"},"content":"        Room editedRoom \u003d originalRoom;","lastModifiedDate":"2021-09-24"},{"lineNumber":49,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"BananaTechs"},"content":"        String expectedMessage \u003d String.format(CheckOutCommand.MESSAGE_CHECKOUT_SUCCESS, editedRoom);","lastModifiedDate":"2021-09-24"},{"lineNumber":51,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":52,"author":{"gitId":"BananaTechs"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-09-24"},{"lineNumber":53,"author":{"gitId":"jianh0ng"},"content":"        expectedModel.record(toBeRecorded.get());","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":55,"author":{"gitId":"BananaTechs"},"content":"        assertCommandSuccess(checkOutCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-09-24"},{"lineNumber":56,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":57,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":58,"author":{"gitId":"BananaTechs"},"content":"    @Test","lastModifiedDate":"2021-09-24"},{"lineNumber":59,"author":{"gitId":"BananaTechs"},"content":"    public void execute_invalidRoomIndex_throwsCommandException() {","lastModifiedDate":"2021-09-24"},{"lineNumber":60,"author":{"gitId":"BananaTechs"},"content":"        Index invalidRoomIndex \u003d Index.fromZeroBased(model.getFilteredRoomList().size());","lastModifiedDate":"2021-09-24"},{"lineNumber":61,"author":{"gitId":"BananaTechs"},"content":"        CheckOutCommand checkOutCommand \u003d new CheckOutCommand(invalidRoomIndex);","lastModifiedDate":"2021-09-24"},{"lineNumber":62,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":63,"author":{"gitId":"BananaTechs"},"content":"        assertCommandFailure(checkOutCommand, model, Messages.MESSAGE_INVALID_ROOM_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-24"},{"lineNumber":64,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":65,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":66,"author":{"gitId":"BananaTechs"},"content":"    @Test","lastModifiedDate":"2021-09-25"},{"lineNumber":67,"author":{"gitId":"BananaTechs"},"content":"    public void execute_vacantRoom_throwsCommandException() {","lastModifiedDate":"2021-09-25"},{"lineNumber":68,"author":{"gitId":"BananaTechs"},"content":"        CheckOutCommand checkOutCommand \u003d new CheckOutCommand(INDEX_FIRST_ROOM);","lastModifiedDate":"2021-09-25"},{"lineNumber":69,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":70,"author":{"gitId":"BananaTechs"},"content":"        assertCommandFailure(checkOutCommand, model, CheckOutCommand.MESSAGE_ROOM_IS_VACANT);","lastModifiedDate":"2021-09-25"},{"lineNumber":71,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":72,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":73,"author":{"gitId":"BananaTechs"},"content":"    @Test","lastModifiedDate":"2021-09-24"},{"lineNumber":74,"author":{"gitId":"BananaTechs"},"content":"    public void equals() {","lastModifiedDate":"2021-09-24"},{"lineNumber":75,"author":{"gitId":"BananaTechs"},"content":"        CheckOutCommand checkOutRoomOneCommand \u003d new CheckOutCommand(INDEX_FIRST_ROOM);","lastModifiedDate":"2021-09-24"},{"lineNumber":76,"author":{"gitId":"BananaTechs"},"content":"        CheckOutCommand checkOutRoomTwoCommand \u003d new CheckOutCommand(INDEX_SECOND_ROOM);","lastModifiedDate":"2021-09-24"},{"lineNumber":77,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":78,"author":{"gitId":"BananaTechs"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-09-24"},{"lineNumber":79,"author":{"gitId":"BananaTechs"},"content":"        assertTrue(checkOutRoomOneCommand.equals(checkOutRoomOneCommand));","lastModifiedDate":"2021-09-24"},{"lineNumber":80,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":81,"author":{"gitId":"BananaTechs"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-09-24"},{"lineNumber":82,"author":{"gitId":"BananaTechs"},"content":"        CheckOutCommand checkOutRoomOneCommandCopy \u003d new CheckOutCommand(INDEX_FIRST_ROOM);","lastModifiedDate":"2021-09-24"},{"lineNumber":83,"author":{"gitId":"BananaTechs"},"content":"        assertTrue(checkOutRoomOneCommand.equals(checkOutRoomOneCommandCopy));","lastModifiedDate":"2021-09-24"},{"lineNumber":84,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":85,"author":{"gitId":"BananaTechs"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-09-24"},{"lineNumber":86,"author":{"gitId":"BananaTechs"},"content":"        assertFalse(checkOutRoomOneCommand.equals(1));","lastModifiedDate":"2021-09-24"},{"lineNumber":87,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":88,"author":{"gitId":"BananaTechs"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-09-24"},{"lineNumber":89,"author":{"gitId":"BananaTechs"},"content":"        assertFalse(checkOutRoomOneCommand.equals(null));","lastModifiedDate":"2021-09-24"},{"lineNumber":90,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":91,"author":{"gitId":"BananaTechs"},"content":"        // different CheckInCommand -\u003e returns false","lastModifiedDate":"2021-09-24"},{"lineNumber":92,"author":{"gitId":"BananaTechs"},"content":"        assertFalse(checkOutRoomOneCommand.equals(checkOutRoomTwoCommand));","lastModifiedDate":"2021-09-24"},{"lineNumber":93,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":94,"author":{"gitId":"BananaTechs"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"peilinye":1,"jianh0ng":4,"BananaTechs":89}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.room.Vacancy;","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"darrenhoon"},"content":"    public static final String VALID_NAME_ROOM_ONE \u003d \"001\";","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"darrenhoon"},"content":"    public static final String VALID_NAME_ROOM_TWO \u003d \"002\";","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"BananaTechs"},"content":"    public static final Vacancy VALID_VACANCY_ROOM_ONE \u003d Vacancy.VACANT;","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"BananaTechs"},"content":"    public static final Vacancy VALID_VACANCY_ROOM_TWO \u003d Vacancy.OCCUPIED;","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"jianh0ng"},"content":"    public static final String VALID_NAME_CHARLIE \u003d \"Charlie D\";","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"wilburrito"},"content":"    public static final String VALID_NRIC_AMY \u003d \"S98765432X\";","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"wilburrito"},"content":"    public static final String VALID_NRIC_BOB \u003d \"S98765432Y\";","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"wilburrito"},"content":"    public static final String NRIC_DESC_AMY \u003d \" \" + PREFIX_NRIC + VALID_NRIC_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"wilburrito"},"content":"    public static final String NRIC_DESC_BOB \u003d \" \" + PREFIX_NRIC + VALID_NRIC_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"wilburrito"},"content":"    public static final String INVALID_NRIC_DESC \u003d \" \" + PREFIX_NRIC; //empty string not allowed for NRICs","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"wilburrito"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withNric(VALID_NRIC_AMY)","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"wilburrito"},"content":"                .withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"wilburrito"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withNric(VALID_NRIC_BOB)","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"wilburrito"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"jianh0ng":1,"BananaTechs":4,"-":124,"wilburrito":10,"darrenhoon":4}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"BananaTechs"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"BananaTechs"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ROOM;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"BananaTechs"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"BananaTechs"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.room.Room;","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"BananaTechs"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"BananaTechs"},"content":"    public void execute_personCheckedIn_throwsCommandException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"BananaTechs"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"BananaTechs"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"BananaTechs"},"content":"        Room room \u003d model.getFilteredRoomList().get(INDEX_FIRST_ROOM.getZeroBased());","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"BananaTechs"},"content":"        Set\u003cPerson\u003e guests \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"BananaTechs"},"content":"        guests.add(personToDelete);","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"BananaTechs"},"content":"        model.register(room, guests);","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"BananaTechs"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_PERSON_CHECKED_IN, personToDelete.getName(), room);","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"BananaTechs"},"content":"        assertCommandFailure(deleteCommand, model, expectedMessage);","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"BananaTechs":21,"-":108}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"wilburrito"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"wilburrito"},"content":"        Nric originalPersonNric \u003d model.getFilteredPersonList().get(0).getNric();","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"wilburrito"},"content":"        Person editedPerson \u003d new PersonBuilder().withNric(originalPersonNric.value).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"-":172,"wilburrito":3}},{"path":"src/test/java/seedu/address/logic/commands/FindGuestCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"wilburrito"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"wilburrito"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"wilburrito"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"wilburrito"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"wilburrito"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"wilburrito"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"wilburrito"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"wilburrito"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"wilburrito"},"content":"public class FindGuestCommandTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"wilburrito"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"wilburrito"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"wilburrito"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"wilburrito"},"content":"    public void equals() {","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"wilburrito"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"wilburrito"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"wilburrito"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"wilburrito"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"wilburrito"},"content":"        FindGuestCommand findGuestFirstCommand \u003d new FindGuestCommand(firstPredicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"wilburrito"},"content":"        FindGuestCommand findGuestSecondCommand \u003d new FindGuestCommand(secondPredicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"wilburrito"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"wilburrito"},"content":"        assertTrue(findGuestFirstCommand.equals(findGuestFirstCommand));","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"wilburrito"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"wilburrito"},"content":"        FindGuestCommand findGuestFirstCommandCopy \u003d new FindGuestCommand(firstPredicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"wilburrito"},"content":"        assertTrue(findGuestFirstCommand.equals(findGuestFirstCommandCopy));","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"wilburrito"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"wilburrito"},"content":"        assertFalse(findGuestFirstCommand.equals(1));","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"wilburrito"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"wilburrito"},"content":"        assertFalse(findGuestFirstCommand.equals(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"wilburrito"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"wilburrito"},"content":"        assertFalse(findGuestFirstCommand.equals(findGuestSecondCommand));","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"wilburrito"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"wilburrito"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"wilburrito"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"wilburrito"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"wilburrito"},"content":"        FindGuestCommand command \u003d new FindGuestCommand(predicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"wilburrito"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"wilburrito"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"wilburrito"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"wilburrito"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"wilburrito"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"wilburrito"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"wilburrito"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"wilburrito"},"content":"        FindGuestCommand command \u003d new FindGuestCommand(predicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"wilburrito"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"wilburrito"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"wilburrito"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"wilburrito"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"wilburrito"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"wilburrito"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"wilburrito"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"wilburrito":80}},{"path":"src/test/java/seedu/address/logic/commands/FindRecordCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianh0ng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"jianh0ng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"jianh0ng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"jianh0ng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"jianh0ng"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_RECORDS_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"jianh0ng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"jianh0ng"},"content":"import static seedu.address.testutil.TypicalRecordsBook.RESIDENCY_ONE;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"jianh0ng"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"jianh0ng"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"jianh0ng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.model.residency.exceptions.ResidencyContainsKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.testutil.TypicalRecordsBook;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"jianh0ng"},"content":"public class FindRecordCommandTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"jianh0ng"},"content":"    private Model model \u003d new ModelManager(TypicalRecordsBook.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"jianh0ng"},"content":"    private Model expectedModel \u003d new ModelManager(TypicalRecordsBook.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"jianh0ng"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"jianh0ng"},"content":"    public void equals() {","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"jianh0ng"},"content":"        ResidencyContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"jianh0ng"},"content":"                new ResidencyContainsKeywordsPredicate(Collections.singletonList(\"001\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"jianh0ng"},"content":"        ResidencyContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"jianh0ng"},"content":"                new ResidencyContainsKeywordsPredicate(Collections.singletonList(\"002\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"jianh0ng"},"content":"        FindRecordCommand findFirstCommand \u003d new FindRecordCommand(firstPredicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"jianh0ng"},"content":"        FindRecordCommand findSecondCommand \u003d new FindRecordCommand(secondPredicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"jianh0ng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"jianh0ng"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"jianh0ng"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"jianh0ng"},"content":"        FindRecordCommand findFirstCommandCopy \u003d new FindRecordCommand(firstPredicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"jianh0ng"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"jianh0ng"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"jianh0ng"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"jianh0ng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"jianh0ng"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"jianh0ng"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"jianh0ng"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"jianh0ng"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"jianh0ng"},"content":"    public void execute_presentKeyword_recordFound() {","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"jianh0ng"},"content":"        String expectedMessage \u003d String.format(MESSAGE_RECORDS_LISTED_OVERVIEW);","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"jianh0ng"},"content":"        ResidencyContainsKeywordsPredicate predicate \u003d preparePredicate(\"001\");","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"jianh0ng"},"content":"        FindRecordCommand command \u003d new FindRecordCommand(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"jianh0ng"},"content":"        expectedModel.updateFilteredRecordList(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"jianh0ng"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"jianh0ng"},"content":"        assertEquals(Arrays.asList(RESIDENCY_ONE), model.getFilteredRecordList());","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"jianh0ng"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"jianh0ng"},"content":"    public void execute_missingKeyword_noRecordFound() {","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"jianh0ng"},"content":"        String expectedMessage \u003d String.format(MESSAGE_RECORDS_LISTED_OVERVIEW);","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"jianh0ng"},"content":"        ResidencyContainsKeywordsPredicate predicate \u003d preparePredicate(\"002\");","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"jianh0ng"},"content":"        FindRecordCommand command \u003d new FindRecordCommand(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"jianh0ng"},"content":"        expectedModel.updateFilteredRecordList(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"jianh0ng"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"jianh0ng"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredRecordList());","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"jianh0ng"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"jianh0ng"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"jianh0ng"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"jianh0ng"},"content":"    private ResidencyContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"jianh0ng"},"content":"        return new ResidencyContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"jianh0ng"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"jianh0ng":78}},{"path":"src/test/java/seedu/address/logic/commands/FindRoomCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_ROOM_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"import static seedu.address.testutil.TypicalRooms.ROOM_ONE;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"import static seedu.address.testutil.TypicalRooms.ROOM_TWO;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"import static seedu.address.testutil.TypicalRooms.getTypicalAddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"darrenhoon"},"content":"import seedu.address.model.room.RoomNumberContainsKeywordsPredicate;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"darrenhoon"},"content":"public class FindRoomCommandTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"darrenhoon"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"darrenhoon"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"darrenhoon"},"content":"    public void equals() {","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"darrenhoon"},"content":"        RoomNumberContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"darrenhoon"},"content":"                new RoomNumberContainsKeywordsPredicate(Collections.singletonList(\"001\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"darrenhoon"},"content":"        RoomNumberContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"darrenhoon"},"content":"                new RoomNumberContainsKeywordsPredicate(Collections.singletonList(\"002\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"darrenhoon"},"content":"        FindRoomCommand findFirstCommand \u003d new FindRoomCommand(firstPredicate);","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"darrenhoon"},"content":"        FindRoomCommand findSecondCommand \u003d new FindRoomCommand(secondPredicate);","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"darrenhoon"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"darrenhoon"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"darrenhoon"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"darrenhoon"},"content":"        FindRoomCommand findFirstCommandCopy \u003d new FindRoomCommand(firstPredicate);","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"darrenhoon"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"darrenhoon"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"darrenhoon"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"darrenhoon"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"darrenhoon"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"darrenhoon"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"darrenhoon"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"darrenhoon"},"content":"    public void execute_zeroKeywords_noRoomFound() {","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"darrenhoon"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ROOM_LISTED_OVERVIEW);","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"darrenhoon"},"content":"        RoomNumberContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"darrenhoon"},"content":"        FindRoomCommand command \u003d new FindRoomCommand(predicate);","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"darrenhoon"},"content":"        expectedModel.updateFilteredRoomList(predicate);","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"darrenhoon"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"darrenhoon"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"darrenhoon"},"content":"    public void execute_multipleKeywords_multipleRoomsFound() {","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"darrenhoon"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ROOM_LISTED_OVERVIEW);","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"darrenhoon"},"content":"        RoomNumberContainsKeywordsPredicate predicate \u003d preparePredicate(\"001 002\");","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"darrenhoon"},"content":"        FindRoomCommand command \u003d new FindRoomCommand(predicate);","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"darrenhoon"},"content":"        expectedModel.updateFilteredRoomList(predicate);","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"darrenhoon"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"darrenhoon"},"content":"        assertEquals(Arrays.asList(ROOM_ONE, ROOM_TWO), model.getFilteredRoomList());","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"darrenhoon"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"darrenhoon"},"content":"    private RoomNumberContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"darrenhoon"},"content":"        return new RoomNumberContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"darrenhoon":80}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"peilinye"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"peilinye"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.commons.core.listtype.ListType;","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"peilinye"},"content":"import seedu.address.model.room.RoomIsOccupiedPredicate;","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"peilinye"},"content":"import seedu.address.model.room.RoomIsVacantPredicate;","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.testutil.TypicalRecordsBook;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"jianh0ng"},"content":"        assertCommandSuccess(new ListCommand(new ListType(\"guests\")), model,","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"jianh0ng"},"content":"                ListCommand.MESSAGE_SUCCESS_GUESTS, expectedModel);","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":44,"author":{"gitId":"jianh0ng"},"content":"        assertCommandSuccess(new ListCommand(new ListType(\"guests\")), model,","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"jianh0ng"},"content":"                ListCommand.MESSAGE_SUCCESS_GUESTS, expectedModel);","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"peilinye"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"peilinye"},"content":"    public void execute_listVacantRooms_showsVacantRooms() {","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"peilinye"},"content":"        assertCommandSuccess(new ListCommand(new ListType(\"rooms\"), new RoomIsVacantPredicate()),","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"peilinye"},"content":"                model, ListCommand.MESSAGE_SUCCESS_ROOMS_TYPE, expectedModel);","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"peilinye"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"peilinye"},"content":"    public void execute_listOccupiedRooms_showsOccupiedRooms() {","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"peilinye"},"content":"        assertCommandSuccess(new ListCommand(new ListType(\"rooms\"), new RoomIsOccupiedPredicate()),","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"peilinye"},"content":"                model, ListCommand.MESSAGE_SUCCESS_ROOMS_TYPE, expectedModel);","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"jianh0ng"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"jianh0ng"},"content":"    public void execute_listAllRecords_showsAllRecords() {","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"jianh0ng"},"content":"        model.setAddressBook(TypicalRecordsBook.getTypicalAddressBook());","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"jianh0ng"},"content":"        expectedModel.setAddressBook(TypicalRecordsBook.getTypicalAddressBook());","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"jianh0ng"},"content":"        assertCommandSuccess(new ListCommand(new ListType(\"records\")), model,","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"jianh0ng"},"content":"                ListCommand.MESSAGE_SUCCESS_RECORDS, expectedModel);","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"peilinye"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"peilinye"},"content":"    public void listRoomsCommand_equalsListRoomsCommand() {","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"peilinye"},"content":"        ListCommand lc \u003d new ListCommand(new ListType(\"rooms\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"peilinye"},"content":"        assertEquals(new ListCommand(new ListType(\"rooms\")), lc);","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"peilinye"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"peilinye"},"content":"    public void listGuestsCommand_equalsListGuestsCommand() {","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"peilinye"},"content":"        ListCommand lc \u003d new ListCommand(new ListType(\"guests\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"peilinye"},"content":"        assertEquals(new ListCommand(new ListType(\"guests\")), lc);","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"peilinye"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"peilinye"},"content":"    public void listGuestsCommand_notEqualsListRoomsCommand() {","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"peilinye"},"content":"        ListCommand lc \u003d new ListCommand(new ListType(\"guests\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"peilinye"},"content":"        assertNotEquals(lc, new ListCommand(new ListType(\"rooms\")));","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"peilinye"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"peilinye"},"content":"    public void listVacantRoomsCommand_equalsListVacantRoomsCommand() {","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"peilinye"},"content":"        ListCommand lc \u003d new ListCommand(new ListType(\"rooms\"), new RoomIsVacantPredicate());","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"peilinye"},"content":"        assertEquals(new ListCommand(new ListType(\"rooms\"), new RoomIsVacantPredicate()), lc);","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"peilinye"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"peilinye"},"content":"    public void listOccupiedRoomsCommand_equalsListOccupiedRoomsCommand() {","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"peilinye"},"content":"        ListCommand lc \u003d new ListCommand(new ListType(\"rooms\"), new RoomIsOccupiedPredicate());","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"peilinye"},"content":"        assertEquals(new ListCommand(new ListType(\"rooms\"), new RoomIsOccupiedPredicate()), lc);","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"peilinye"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"peilinye"},"content":"    public void listVacantRoomsCommand_notEqualsListOccupiedRoomsCommand() {","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"peilinye"},"content":"        ListCommand lc \u003d new ListCommand(new ListType(\"rooms\"), new RoomIsVacantPredicate());","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"peilinye"},"content":"        assertNotEquals(new ListCommand(new ListType(\"rooms\"), new RoomIsOccupiedPredicate()), lc);","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"jianh0ng"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"jianh0ng"},"content":"    public void listRecordsCommand_equalsListRecordsCommand() {","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"jianh0ng"},"content":"        ListCommand lc \u003d new ListCommand(new ListType(\"records\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"jianh0ng"},"content":"        assertEquals(new ListCommand(new ListType(\"records\")), lc);","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"peilinye":52,"jianh0ng":19,"-":38}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NRIC_DESC;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"wilburrito"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"wilburrito"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"wilburrito"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"wilburrito"},"content":"                + NRIC_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"wilburrito"},"content":"                + NRIC_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"wilburrito"},"content":"                + NRIC_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"wilburrito"},"content":"                + NRIC_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"wilburrito"},"content":"        // multiple NRICs - last Nric accepted","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"wilburrito"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + NRIC_DESC_AMY","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"wilburrito"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + NRIC_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"wilburrito"},"content":"                + NRIC_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":81,"author":{"gitId":"wilburrito"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + NRIC_DESC_BOB","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"wilburrito"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":89,"author":{"gitId":"wilburrito"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"wilburrito"},"content":"                        + NRIC_DESC_AMY + ADDRESS_DESC_AMY, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"wilburrito"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + NRIC_DESC_BOB","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"wilburrito"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"wilburrito"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + NRIC_DESC_BOB","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"wilburrito"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"wilburrito"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + NRIC_DESC_BOB","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"wilburrito"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-13"},{"lineNumber":131,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":132,"author":{"gitId":"wilburrito"},"content":"        // invalid Nric","lastModifiedDate":"2021-10-13"},{"lineNumber":133,"author":{"gitId":"wilburrito"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_NRIC_DESC","lastModifiedDate":"2021-10-13"},{"lineNumber":134,"author":{"gitId":"wilburrito"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"wilburrito"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + NRIC_DESC_BOB","lastModifiedDate":"2021-10-13"},{"lineNumber":138,"author":{"gitId":"wilburrito"},"content":"                + INVALID_ADDRESS_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"wilburrito"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + NRIC_DESC_BOB","lastModifiedDate":"2021-10-13"},{"lineNumber":142,"author":{"gitId":"wilburrito"},"content":"                + ADDRESS_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"wilburrito"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + NRIC_DESC_BOB","lastModifiedDate":"2021-10-13"},{"lineNumber":146,"author":{"gitId":"wilburrito"},"content":"                        + INVALID_ADDRESS_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":150,"author":{"gitId":"wilburrito"},"content":"                + NRIC_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"-":119,"wilburrito":34}},{"path":"src/test/java/seedu/address/logic/parser/AddRoomCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peilinye"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"peilinye"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"peilinye"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"peilinye"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"peilinye"},"content":"import static seedu.address.model.util.SampleDataUtil.getTagSet;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"peilinye"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"peilinye"},"content":"import seedu.address.logic.commands.AddRoomCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"peilinye"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"peilinye"},"content":"public class AddRoomCommandParserTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"peilinye"},"content":"    private AddRoomCommandParser parser \u003d new AddRoomCommandParser();","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"peilinye"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"peilinye"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"peilinye"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"peilinye"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddRoomCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"peilinye"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"peilinye"},"content":"    public void parse_validArgs_returnsAddRoomCommand() {","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"peilinye"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"peilinye"},"content":"        AddRoomCommand expectedAddRoomCommand \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"peilinye"},"content":"                new AddRoomCommand(5, getTagSet(\"normal\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"peilinye"},"content":"        assertParseSuccess(parser, \"5 t/normal\", expectedAddRoomCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"peilinye"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"peilinye"},"content":"        assertParseSuccess(parser, \" \\n 5 \\n \\t t/  normal  \\t\", expectedAddRoomCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"peilinye"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"peilinye"},"content":"    public void parse_invalidPreamble_throwsParseException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"peilinye"},"content":"        String userInputZero \u003d \"0 t/normal\";","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"peilinye"},"content":"        String userInputNegative \u003d \"-5 t/normal\";","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"peilinye"},"content":"        String userInputNan \u003d \"a t/normal\";","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"peilinye"},"content":"        assertParseFailure(parser, userInputZero, AddRoomCommand.MESSAGE_INVALID_INTEGER);","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"peilinye"},"content":"        assertParseFailure(parser, userInputNegative, AddRoomCommand.MESSAGE_INVALID_INTEGER);","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"peilinye"},"content":"        assertParseFailure(parser, userInputNan, AddRoomCommand.MESSAGE_INVALID_INTEGER);","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"peilinye"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"peilinye"},"content":"    public void parse_missingPreamble_throwsParseException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"peilinye"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"peilinye"},"content":"        String userInput \u003d \"t/normal\";","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"peilinye"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"peilinye"},"content":"        String userInputWithWhitespaces \u003d \"\\n t/normal    \";","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"peilinye"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"peilinye"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddRoomCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"peilinye"},"content":"        assertParseFailure(parser, userInputWithWhitespaces,","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"peilinye"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddRoomCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"peilinye"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"peilinye"},"content":"    public void parse_missingTags_throwsParseException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"peilinye"},"content":"        String userInput \u003d \"   5    \";","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"peilinye"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"peilinye"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddRoomCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"peilinye"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"peilinye"},"content":"    public void parse_invalidTags_throwsParseException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"peilinye"},"content":"        String userInputWithEmptyTag \u003d \"1 t/\";","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"peilinye"},"content":"        String userInputWithInvalidTag \u003d \"1 t/type A\";","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"peilinye"},"content":"        assertParseFailure(parser, userInputWithEmptyTag,","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"peilinye"},"content":"                String.format(Tag.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"peilinye"},"content":"        assertParseFailure(parser, userInputWithInvalidTag,","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"peilinye"},"content":"                String.format(Tag.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"peilinye"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"peilinye":78}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"BananaTechs"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ROOM;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"BananaTechs"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"peilinye"},"content":"import seedu.address.logic.commands.AddRoomCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.logic.commands.CheckInCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.logic.commands.CheckOutCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.logic.commands.FindRecordCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"darrenhoon"},"content":"import seedu.address.logic.commands.FindRoomCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.model.residency.exceptions.ResidencyContainsKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"darrenhoon"},"content":"import seedu.address.model.room.RoomNumberContainsKeywordsPredicate;","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"BananaTechs"},"content":"    @Test","lastModifiedDate":"2021-09-24"},{"lineNumber":53,"author":{"gitId":"BananaTechs"},"content":"    public void parseCommand_checkin() throws Exception {","lastModifiedDate":"2021-09-24"},{"lineNumber":54,"author":{"gitId":"BananaTechs"},"content":"        List\u003cIndex\u003e guestIndexes \u003d Arrays.asList(INDEX_FIRST_PERSON, INDEX_SECOND_PERSON);","lastModifiedDate":"2021-09-24"},{"lineNumber":55,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":56,"author":{"gitId":"BananaTechs"},"content":"        CheckInCommand command \u003d (CheckInCommand) parser.parseCommand(","lastModifiedDate":"2021-09-24"},{"lineNumber":57,"author":{"gitId":"BananaTechs"},"content":"                CheckInCommand.COMMAND_WORD","lastModifiedDate":"2021-09-24"},{"lineNumber":58,"author":{"gitId":"BananaTechs"},"content":"                        + \" \"","lastModifiedDate":"2021-09-24"},{"lineNumber":59,"author":{"gitId":"BananaTechs"},"content":"                        + INDEX_FIRST_ROOM.getOneBased()","lastModifiedDate":"2021-09-24"},{"lineNumber":60,"author":{"gitId":"BananaTechs"},"content":"                        + \" g/\"","lastModifiedDate":"2021-09-24"},{"lineNumber":61,"author":{"gitId":"BananaTechs"},"content":"                        + INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2021-09-24"},{"lineNumber":62,"author":{"gitId":"BananaTechs"},"content":"                        + \" g/\"","lastModifiedDate":"2021-09-24"},{"lineNumber":63,"author":{"gitId":"BananaTechs"},"content":"                        + INDEX_SECOND_PERSON.getOneBased());","lastModifiedDate":"2021-09-24"},{"lineNumber":64,"author":{"gitId":"BananaTechs"},"content":"        assertEquals(new CheckInCommand(INDEX_FIRST_ROOM, guestIndexes), command);","lastModifiedDate":"2021-09-24"},{"lineNumber":65,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":66,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":67,"author":{"gitId":"BananaTechs"},"content":"    @Test","lastModifiedDate":"2021-09-24"},{"lineNumber":68,"author":{"gitId":"BananaTechs"},"content":"    public void parseCommand_checkout() throws Exception {","lastModifiedDate":"2021-09-24"},{"lineNumber":69,"author":{"gitId":"BananaTechs"},"content":"        CheckOutCommand command \u003d (CheckOutCommand) parser.parseCommand(","lastModifiedDate":"2021-09-24"},{"lineNumber":70,"author":{"gitId":"BananaTechs"},"content":"                CheckOutCommand.COMMAND_WORD + \" \" + INDEX_FIRST_ROOM.getOneBased());","lastModifiedDate":"2021-09-24"},{"lineNumber":71,"author":{"gitId":"BananaTechs"},"content":"        assertEquals(new CheckOutCommand(INDEX_FIRST_ROOM), command);","lastModifiedDate":"2021-09-24"},{"lineNumber":72,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":73,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"darrenhoon"},"content":"    /*","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"darrenhoon"},"content":"    */","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"wilburrito"},"content":"        EditCommand command;","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"wilburrito"},"content":"        command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":96,"author":{"gitId":"wilburrito"},"content":"        EditCommand otherEditCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"wilburrito"},"content":"        assertEquals(otherEditCommand, command);","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"darrenhoon"},"content":"    public void parseCommand_findRoom() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"darrenhoon"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"001\", \"002\");","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"darrenhoon"},"content":"        FindRoomCommand command \u003d (FindRoomCommand) parser.parseCommand(","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"darrenhoon"},"content":"                FindRoomCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"darrenhoon"},"content":"        assertEquals(new FindRoomCommand(new RoomNumberContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"jianh0ng"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"jianh0ng"},"content":"    public void parseCommand_findRecord() throws Exception {","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"jianh0ng"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"001\", \"Alex\");","lastModifiedDate":"2021-10-20"},{"lineNumber":125,"author":{"gitId":"jianh0ng"},"content":"        FindRecordCommand command \u003d (FindRecordCommand) parser.parseCommand(","lastModifiedDate":"2021-10-20"},{"lineNumber":126,"author":{"gitId":"jianh0ng"},"content":"                FindRecordCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-20"},{"lineNumber":127,"author":{"gitId":"jianh0ng"},"content":"                        + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2021-10-20"},{"lineNumber":128,"author":{"gitId":"jianh0ng"},"content":"        assertEquals(new FindRecordCommand(new ResidencyContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2021-10-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":137,"author":{"gitId":"jianh0ng"},"content":"    //change test cases?","lastModifiedDate":"2021-09-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":139,"author":{"gitId":"jianh0ng"},"content":"    public void parseCommand_listGuests() throws Exception {","lastModifiedDate":"2021-09-19"},{"lineNumber":140,"author":{"gitId":"jianh0ng"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" guests\") instanceof ListCommand);","lastModifiedDate":"2021-09-19"},{"lineNumber":141,"author":{"gitId":"jianh0ng"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" rooms\") instanceof ListCommand);","lastModifiedDate":"2021-09-19"},{"lineNumber":142,"author":{"gitId":"peilinye"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" rooms occupied\") instanceof ListCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"peilinye"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" rooms vacant\") instanceof ListCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"peilinye"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" records\") instanceof ListCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"peilinye"},"content":"    public void parseCommand_addRooms() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"peilinye"},"content":"        assertTrue(parser.parseCommand(AddRoomCommand.COMMAND_WORD + \" 1 t/tag\") instanceof AddRoomCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2021-10-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"peilinye":8,"jianh0ng":15,"BananaTechs":27,"-":98,"wilburrito":4,"darrenhoon":10}},{"path":"src/test/java/seedu/address/logic/parser/CheckInCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BananaTechs"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"BananaTechs"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"BananaTechs"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"BananaTechs"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"BananaTechs"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ROOM;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"BananaTechs"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"BananaTechs"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"BananaTechs"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"BananaTechs"},"content":"import java.util.List;","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"BananaTechs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.logic.commands.CheckInCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"BananaTechs"},"content":"public class CheckInCommandParserTest {","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"BananaTechs"},"content":"    private CheckInCommandParser parser \u003d new CheckInCommandParser();","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"BananaTechs"},"content":"    @Test","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"BananaTechs"},"content":"    public void parse_singleGuest_returnsCheckInCommand() {","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"BananaTechs"},"content":"        String userInput \u003d INDEX_FIRST_ROOM.getOneBased()","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"BananaTechs"},"content":"                + \" g/\"","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"BananaTechs"},"content":"                + INDEX_FIRST_PERSON.getOneBased();","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"BananaTechs"},"content":"        List\u003cIndex\u003e guestIndexes \u003d Arrays.asList(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"BananaTechs"},"content":"        CheckInCommand checkInCommand \u003d new CheckInCommand(INDEX_FIRST_ROOM, guestIndexes);","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"BananaTechs"},"content":"        assertParseSuccess(parser, userInput, checkInCommand);","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"BananaTechs"},"content":"    @Test","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"BananaTechs"},"content":"    public void parse_multipleGuests_returnsCheckInCommand() {","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"BananaTechs"},"content":"        String userInput \u003d INDEX_FIRST_ROOM.getOneBased()","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"BananaTechs"},"content":"                + \" g/\"","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"BananaTechs"},"content":"                + INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"BananaTechs"},"content":"                + \" g/\"","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"BananaTechs"},"content":"                + INDEX_SECOND_PERSON.getOneBased()","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"BananaTechs"},"content":"                + \" g/\"","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"BananaTechs"},"content":"                + INDEX_THIRD_PERSON.getOneBased();","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"BananaTechs"},"content":"        List\u003cIndex\u003e guestIndexes \u003d Arrays.asList(","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"BananaTechs"},"content":"                INDEX_FIRST_PERSON,","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"BananaTechs"},"content":"                INDEX_SECOND_PERSON,","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"BananaTechs"},"content":"                INDEX_THIRD_PERSON);","lastModifiedDate":"2021-09-24"},{"lineNumber":46,"author":{"gitId":"BananaTechs"},"content":"        CheckInCommand checkInCommand \u003d new CheckInCommand(INDEX_FIRST_ROOM, guestIndexes);","lastModifiedDate":"2021-09-24"},{"lineNumber":47,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":48,"author":{"gitId":"BananaTechs"},"content":"        assertParseSuccess(parser, userInput, checkInCommand);","lastModifiedDate":"2021-09-24"},{"lineNumber":49,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":51,"author":{"gitId":"BananaTechs"},"content":"    @Test","lastModifiedDate":"2021-09-24"},{"lineNumber":52,"author":{"gitId":"BananaTechs"},"content":"    public void parse_invalidPreamble_throwsParseException() {","lastModifiedDate":"2021-09-24"},{"lineNumber":53,"author":{"gitId":"BananaTechs"},"content":"        String userInput \u003d \"a g/\"","lastModifiedDate":"2021-09-24"},{"lineNumber":54,"author":{"gitId":"BananaTechs"},"content":"                + INDEX_FIRST_PERSON.getOneBased();","lastModifiedDate":"2021-09-24"},{"lineNumber":55,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":56,"author":{"gitId":"BananaTechs"},"content":"        assertParseFailure(","lastModifiedDate":"2021-09-24"},{"lineNumber":57,"author":{"gitId":"BananaTechs"},"content":"                parser,","lastModifiedDate":"2021-09-24"},{"lineNumber":58,"author":{"gitId":"BananaTechs"},"content":"                userInput,","lastModifiedDate":"2021-09-24"},{"lineNumber":59,"author":{"gitId":"jianh0ng"},"content":"                CheckInCommand.MESSAGE_ROOM_INVALID_INDEX);","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":61,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":62,"author":{"gitId":"BananaTechs"},"content":"    @Test","lastModifiedDate":"2021-09-24"},{"lineNumber":63,"author":{"gitId":"BananaTechs"},"content":"    public void parse_invalidGuestIndex_throwsParseException() {","lastModifiedDate":"2021-09-24"},{"lineNumber":64,"author":{"gitId":"BananaTechs"},"content":"        String userInput \u003d INDEX_FIRST_ROOM.getOneBased()","lastModifiedDate":"2021-09-24"},{"lineNumber":65,"author":{"gitId":"BananaTechs"},"content":"                + \" g/ a\";","lastModifiedDate":"2021-09-24"},{"lineNumber":66,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":67,"author":{"gitId":"BananaTechs"},"content":"        assertParseFailure(","lastModifiedDate":"2021-09-24"},{"lineNumber":68,"author":{"gitId":"BananaTechs"},"content":"                parser,","lastModifiedDate":"2021-09-24"},{"lineNumber":69,"author":{"gitId":"BananaTechs"},"content":"                userInput,","lastModifiedDate":"2021-09-24"},{"lineNumber":70,"author":{"gitId":"jianh0ng"},"content":"                CheckInCommand.MESSAGE_PERSON_INVALID_INDEX);","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":72,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":73,"author":{"gitId":"BananaTechs"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"jianh0ng":2,"BananaTechs":71}},{"path":"src/test/java/seedu/address/logic/parser/CheckOutCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BananaTechs"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"BananaTechs"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"BananaTechs"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"BananaTechs"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"BananaTechs"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ROOM;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"BananaTechs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.logic.commands.CheckOutCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"BananaTechs"},"content":"public class CheckOutCommandParserTest {","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"BananaTechs"},"content":"    private CheckOutCommandParser parser \u003d new CheckOutCommandParser();","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"BananaTechs"},"content":"    @Test","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"BananaTechs"},"content":"    public void parse_validArgs_returnsCheckOutCommand() {","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"BananaTechs"},"content":"        assertParseSuccess(parser, \"1\", new CheckOutCommand(INDEX_FIRST_ROOM));","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"BananaTechs"},"content":"    @Test","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"BananaTechs"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"BananaTechs"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, CheckOutCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"BananaTechs"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"BananaTechs":26}},{"path":"src/test/java/seedu/address/logic/parser/FindGuestCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"import seedu.address.logic.commands.FindGuestCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"wilburrito"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"wilburrito"},"content":"public class FindGuestCommandParserTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"wilburrito"},"content":"    private FindGuestCommandParser parser \u003d new FindGuestCommandParser();","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"wilburrito"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"wilburrito"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"wilburrito"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"wilburrito"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindGuestCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"wilburrito"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"wilburrito"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"wilburrito"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"wilburrito"},"content":"        FindGuestCommand expectedFindGuestCommand \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"wilburrito"},"content":"                new FindGuestCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"wilburrito"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindGuestCommand);","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"wilburrito"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"wilburrito"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindGuestCommand);","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"wilburrito"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"wilburrito":34}},{"path":"src/test/java/seedu/address/logic/parser/FindRecordCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianh0ng"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"jianh0ng"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"jianh0ng"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"jianh0ng"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"jianh0ng"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"jianh0ng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.logic.commands.FindRecordCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.model.residency.exceptions.ResidencyContainsKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"jianh0ng"},"content":"public class FindRecordCommandParserTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"jianh0ng"},"content":"    private FindRecordCommandParser parser \u003d new FindRecordCommandParser();","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"jianh0ng"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"jianh0ng"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"jianh0ng"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"jianh0ng"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindRecordCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"jianh0ng"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"jianh0ng"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"jianh0ng"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"jianh0ng"},"content":"        FindRecordCommand expectedFindCommand \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"jianh0ng"},"content":"                new FindRecordCommand(new ResidencyContainsKeywordsPredicate(Arrays.asList(\"001\", \"Alice\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"jianh0ng"},"content":"        assertParseSuccess(parser, \"001 Alice\", expectedFindCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"jianh0ng"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"jianh0ng"},"content":"        assertParseSuccess(parser, \" \\n 001 \\n \\t Alice \\t\", expectedFindCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"jianh0ng"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"jianh0ng":33}},{"path":"src/test/java/seedu/address/logic/parser/FindRoomCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"import seedu.address.logic.commands.FindRoomCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"import seedu.address.model.room.RoomNumberContainsKeywordsPredicate;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"public class FindRoomCommandParserTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"    private FindRoomCommandParser parser \u003d new FindRoomCommandParser();","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"darrenhoon"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"darrenhoon"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindRoomCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"darrenhoon"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"darrenhoon"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"darrenhoon"},"content":"        FindRoomCommand expectedFindCommand \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"darrenhoon"},"content":"                new FindRoomCommand(new RoomNumberContainsKeywordsPredicate(Arrays.asList(\"001\", \"002\")));","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"darrenhoon"},"content":"        assertParseSuccess(parser, \"001 002\", expectedFindCommand);","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"darrenhoon"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"darrenhoon"},"content":"        assertParseSuccess(parser, \" \\n 001 \\n \\t 002  \\t\", expectedFindCommand);","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"darrenhoon":35}},{"path":"src/test/java/seedu/address/logic/parser/ListCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"peilinye"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"peilinye"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"peilinye"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"peilinye"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"peilinye"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"peilinye"},"content":"import seedu.address.commons.core.listroomargs.ListRoomArg;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"peilinye"},"content":"import seedu.address.commons.core.listtype.ListType;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"peilinye"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"peilinye"},"content":"import seedu.address.model.room.RoomIsOccupiedPredicate;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"peilinye"},"content":"import seedu.address.model.room.RoomIsVacantPredicate;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"peilinye"},"content":"public class ListCommandParserTest {","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"peilinye"},"content":"    private ListCommandParser parser \u003d new ListCommandParser();","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"peilinye"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"peilinye"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"peilinye"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"peilinye"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"peilinye"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"peilinye"},"content":"    public void parse_validGuestsArgs_returnsListCommandForGuests() {","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"peilinye"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"peilinye"},"content":"        ListCommand expectedListCommand \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"peilinye"},"content":"                new ListCommand(new ListType(\"guests\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"peilinye"},"content":"        assertParseSuccess(parser, \"guests\", expectedListCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"peilinye"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"peilinye"},"content":"        assertParseSuccess(parser, \"  guests \\n  \", expectedListCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"peilinye"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"peilinye"},"content":"    public void parse_validRoomsArgs_returnsListCommandForRooms() {","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"peilinye"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"peilinye"},"content":"        ListCommand expectedListCommand \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"peilinye"},"content":"                new ListCommand(new ListType(\"rooms\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"peilinye"},"content":"        assertParseSuccess(parser, \"rooms\", expectedListCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"peilinye"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"peilinye"},"content":"        assertParseSuccess(parser, \"  rooms \\n  \", expectedListCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"peilinye"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"peilinye"},"content":"    public void parse_validArgs_returnsListCommandForVacantRooms() {","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"peilinye"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"peilinye"},"content":"        ListCommand expectedListCommand \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"peilinye"},"content":"                new ListCommand(new ListType(\"rooms\"), new RoomIsVacantPredicate());","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"peilinye"},"content":"        assertParseSuccess(parser, \"rooms vacant\", expectedListCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"peilinye"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"peilinye"},"content":"        assertParseSuccess(parser, \"  rooms  vacant \\n  \", expectedListCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"peilinye"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"peilinye"},"content":"    public void parse_validArgs_returnsListCommandForOccupiedRooms() {","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"peilinye"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"peilinye"},"content":"        ListCommand expectedListCommand \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"peilinye"},"content":"                new ListCommand(new ListType(\"rooms\"), new RoomIsOccupiedPredicate());","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"peilinye"},"content":"        assertParseSuccess(parser, \"rooms occupied\", expectedListCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"peilinye"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"peilinye"},"content":"        assertParseSuccess(parser, \"  rooms  occupied \\n  \", expectedListCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"jianh0ng"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"jianh0ng"},"content":"    public void parse_validArgs_returnsListCommandForRecords() {","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"jianh0ng"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"jianh0ng"},"content":"        ListCommand expectedListCommand \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"jianh0ng"},"content":"                new ListCommand(new ListType(\"records\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"jianh0ng"},"content":"        assertParseSuccess(parser, \" records \\n \", expectedListCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"peilinye"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"peilinye"},"content":"    public void parse_extraArgs_throwsParseException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"peilinye"},"content":"        assertParseFailure(parser, \"guests xxx\",","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"peilinye"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"jianh0ng"},"content":"        assertParseFailure(parser, \"records xxx\",","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"jianh0ng"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"peilinye"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"peilinye"},"content":"    public void parse_invalidListTypeArgs_throwsParseException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"peilinye"},"content":"        assertParseFailure(parser, \"xxx\",","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"peilinye"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListType.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"peilinye"},"content":"        assertParseFailure(parser, \"rooms vacant xxx\",","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"peilinye"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListRoomArg.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"peilinye"},"content":"        assertParseFailure(parser, \"rooms occupied xxx\",","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"peilinye"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListRoomArg.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"peilinye"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"peilinye":85,"jianh0ng":12}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"jianh0ng"},"content":"import static seedu.address.model.residency.ResidencyTest.CHECK_IN_TIME_ONE;","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"jianh0ng"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"jianh0ng"},"content":"import static seedu.address.testutil.TypicalPersons.PERSON_LIST_ONE;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":14,"author":{"gitId":"jianh0ng"},"content":"import static seedu.address.testutil.TypicalRecordsBook.RESIDENCY_ONE;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"jianh0ng"},"content":"import static seedu.address.testutil.TypicalRecordsBook.getTypicalRecordsBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"jianh0ng"},"content":"import static seedu.address.testutil.TypicalResidencyBook.getTypicalResidencyBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"jianh0ng"},"content":"import static seedu.address.testutil.TypicalRooms.ROOM_ONE;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"jianh0ng"},"content":"import static seedu.address.testutil.TypicalRooms.ROOM_TWO;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"jianh0ng"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.residency.ReadOnlyResidencyBook;","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.residency.Residency;","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.residency.ResidencyBook;","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.model.residency.exceptions.DuplicatePersonRegException;","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.model.residency.exceptions.DuplicateRoomRegException;","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.model.room.Room;","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.testutil.TypicalRecordsBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.testutil.TypicalResidencyBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"BananaTechs"},"content":"        assertEquals(Collections.emptyList(), addressBook.getRoomList());","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"BananaTechs"},"content":"        assertEquals(Collections.emptyList(), addressBook.getResidencyList());","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"jianh0ng"},"content":"        assertEquals(Collections.emptyList(), addressBook.getRecordsList());","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":106,"author":{"gitId":"jianh0ng"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"jianh0ng"},"content":"    public void getRecord_validPerson_returnsTrue() {","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"jianh0ng"},"content":"        addressBook.setRecords(getTypicalRecordsBook());","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"jianh0ng"},"content":"        assertEquals(Optional.of(RESIDENCY_ONE), addressBook.getRecord(ALICE));","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"jianh0ng"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"jianh0ng"},"content":"    public void getRecord_invalidPerson_returnsEmptyOptional() {","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"jianh0ng"},"content":"        addressBook.setRecords(getTypicalRecordsBook());","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"jianh0ng"},"content":"        assertEquals(Optional.empty(), addressBook.getRecord(DANIEL));","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"jianh0ng"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"jianh0ng"},"content":"    public void getRecord_validRoom_returnsTrue() {","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"jianh0ng"},"content":"        addressBook.setRecords(getTypicalRecordsBook());","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"jianh0ng"},"content":"        assertEquals(Optional.of(RESIDENCY_ONE), addressBook.getRecord(ROOM_ONE));","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"jianh0ng"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"jianh0ng"},"content":"    public void getRecord_invalidRoom_returnsEmptyOptional() {","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"jianh0ng"},"content":"        addressBook.setRecords(getTypicalRecordsBook());","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"jianh0ng"},"content":"        assertEquals(Optional.empty(), addressBook.getRecord(ROOM_TWO));","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"jianh0ng"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"jianh0ng"},"content":"    public void register_nullResidency_throwsNullPointerException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"jianh0ng"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.register(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"jianh0ng"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.register(null, null));","lastModifiedDate":"2021-10-11"},{"lineNumber":134,"author":{"gitId":"jianh0ng"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.register(null, null));","lastModifiedDate":"2021-10-11"},{"lineNumber":135,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":137,"author":{"gitId":"jianh0ng"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":138,"author":{"gitId":"jianh0ng"},"content":"    public void register_validResidency_registersCorrectly() {","lastModifiedDate":"2021-10-11"},{"lineNumber":139,"author":{"gitId":"jianh0ng"},"content":"        Residency residency \u003d new Residency(ROOM_ONE, PERSON_LIST_ONE, CHECK_IN_TIME_ONE, null);","lastModifiedDate":"2021-11-02"},{"lineNumber":140,"author":{"gitId":"jianh0ng"},"content":"        addressBook.register(residency);","lastModifiedDate":"2021-10-11"},{"lineNumber":141,"author":{"gitId":"jianh0ng"},"content":"        assertEquals(addressBook.getResidencyBook(), TypicalResidencyBook.getTypicalAddressBook().getResidencyBook());","lastModifiedDate":"2021-10-11"},{"lineNumber":142,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":143,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":144,"author":{"gitId":"jianh0ng"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":145,"author":{"gitId":"jianh0ng"},"content":"    public void register_invalidResidencyWithDuplicateRooms_throwsDuplicateRoomRegException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":146,"author":{"gitId":"jianh0ng"},"content":"        Residency invalidResidency \u003d new Residency(ROOM_ONE, PERSON_LIST_ONE, CHECK_IN_TIME_ONE, null);","lastModifiedDate":"2021-11-02"},{"lineNumber":147,"author":{"gitId":"jianh0ng"},"content":"        addressBook.setResidencies(getTypicalResidencyBook());","lastModifiedDate":"2021-10-11"},{"lineNumber":148,"author":{"gitId":"jianh0ng"},"content":"        assertThrows(DuplicateRoomRegException.class, () -\u003e addressBook.register(invalidResidency));","lastModifiedDate":"2021-10-11"},{"lineNumber":149,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":150,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":151,"author":{"gitId":"jianh0ng"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":152,"author":{"gitId":"jianh0ng"},"content":"    public void register_invalidResidencyWithDuplicatePersons_throwsDuplicatePersonRegException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":153,"author":{"gitId":"jianh0ng"},"content":"        Residency invalidResidency \u003d new Residency(ROOM_TWO, PERSON_LIST_ONE);","lastModifiedDate":"2021-10-11"},{"lineNumber":154,"author":{"gitId":"jianh0ng"},"content":"        addressBook.setResidencies(getTypicalResidencyBook());","lastModifiedDate":"2021-10-11"},{"lineNumber":155,"author":{"gitId":"jianh0ng"},"content":"        assertThrows(DuplicatePersonRegException.class, () -\u003e addressBook.register(invalidResidency));","lastModifiedDate":"2021-10-11"},{"lineNumber":156,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":157,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":158,"author":{"gitId":"jianh0ng"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":159,"author":{"gitId":"jianh0ng"},"content":"    public void record_nullResidency_throwsNullPointerException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":160,"author":{"gitId":"jianh0ng"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.record(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":161,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":162,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":163,"author":{"gitId":"jianh0ng"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":164,"author":{"gitId":"jianh0ng"},"content":"    public void record_validResidency_registersCorrectly() {","lastModifiedDate":"2021-10-11"},{"lineNumber":165,"author":{"gitId":"jianh0ng"},"content":"        Residency residency \u003d new Residency(ROOM_ONE, PERSON_LIST_ONE, CHECK_IN_TIME_ONE, null);","lastModifiedDate":"2021-11-02"},{"lineNumber":166,"author":{"gitId":"jianh0ng"},"content":"        addressBook.record(residency);","lastModifiedDate":"2021-10-11"},{"lineNumber":167,"author":{"gitId":"jianh0ng"},"content":"        assertEquals(addressBook.getRecordsBook(), TypicalRecordsBook.getTypicalAddressBook().getRecordsBook());","lastModifiedDate":"2021-10-11"},{"lineNumber":168,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":169,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":170,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":176,"author":{"gitId":"jianh0ng"},"content":"        private final ObservableList\u003cRoom\u003e rooms \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-09-20"},{"lineNumber":177,"author":{"gitId":"BananaTechs"},"content":"        private final ObservableList\u003cResidency\u003e residencies \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-06"},{"lineNumber":178,"author":{"gitId":"jianh0ng"},"content":"        private final ResidencyBook residencyBook \u003d new ResidencyBook(false);","lastModifiedDate":"2021-10-11"},{"lineNumber":179,"author":{"gitId":"jianh0ng"},"content":"        private final ObservableList\u003cResidency\u003e records \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-10"},{"lineNumber":180,"author":{"gitId":"jianh0ng"},"content":"        private final ResidencyBook recordsBook \u003d new ResidencyBook(true);","lastModifiedDate":"2021-10-11"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":190,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":191,"author":{"gitId":"jianh0ng"},"content":"        @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":192,"author":{"gitId":"jianh0ng"},"content":"        public ObservableList\u003cRoom\u003e getRoomList() {","lastModifiedDate":"2021-09-20"},{"lineNumber":193,"author":{"gitId":"jianh0ng"},"content":"            return rooms;","lastModifiedDate":"2021-09-20"},{"lineNumber":194,"author":{"gitId":"jianh0ng"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":195,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":196,"author":{"gitId":"BananaTechs"},"content":"        @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":197,"author":{"gitId":"BananaTechs"},"content":"        public ObservableList\u003cResidency\u003e getResidencyList() {","lastModifiedDate":"2021-10-06"},{"lineNumber":198,"author":{"gitId":"BananaTechs"},"content":"            return residencies;","lastModifiedDate":"2021-10-06"},{"lineNumber":199,"author":{"gitId":"BananaTechs"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":200,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":201,"author":{"gitId":"BananaTechs"},"content":"        @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":202,"author":{"gitId":"BananaTechs"},"content":"        public ReadOnlyResidencyBook getResidencyBook() {","lastModifiedDate":"2021-10-06"},{"lineNumber":203,"author":{"gitId":"BananaTechs"},"content":"            return residencyBook;","lastModifiedDate":"2021-10-06"},{"lineNumber":204,"author":{"gitId":"BananaTechs"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":205,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":206,"author":{"gitId":"jianh0ng"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":207,"author":{"gitId":"jianh0ng"},"content":"        public ObservableList\u003cResidency\u003e getRecordsList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":208,"author":{"gitId":"jianh0ng"},"content":"            return records;","lastModifiedDate":"2021-10-10"},{"lineNumber":209,"author":{"gitId":"jianh0ng"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":210,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":211,"author":{"gitId":"jianh0ng"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":212,"author":{"gitId":"jianh0ng"},"content":"        public ReadOnlyResidencyBook getRecordsBook() {","lastModifiedDate":"2021-10-10"},{"lineNumber":213,"author":{"gitId":"jianh0ng"},"content":"            return recordsBook;","lastModifiedDate":"2021-10-10"},{"lineNumber":214,"author":{"gitId":"jianh0ng"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"jianh0ng":99,"BananaTechs":16,"-":102}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"jianh0ng"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"jianh0ng"},"content":"import static seedu.address.testutil.TypicalRecordsBook.RESIDENCY_ONE;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"jianh0ng"},"content":"import static seedu.address.testutil.TypicalRooms.ROOM_ONE;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"jianh0ng"},"content":"import static seedu.address.testutil.TypicalRooms.ROOM_TWO;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":17,"author":{"gitId":"jianh0ng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"jianh0ng"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.model.residency.exceptions.ResidencyContainsKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":27,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.testutil.TypicalRecordsBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"jianh0ng"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"jianh0ng"},"content":"    public void getRecord_validPerson_returnsTrue() {","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"jianh0ng"},"content":"        modelManager.setAddressBook(TypicalRecordsBook.getTypicalAddressBook());","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"jianh0ng"},"content":"        assertEquals(Optional.of(RESIDENCY_ONE), modelManager.getRecord(ALICE));","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"jianh0ng"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"jianh0ng"},"content":"    public void getRecord_invalidPerson_returnsEmptyOptional() {","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"jianh0ng"},"content":"        modelManager.setAddressBook(TypicalRecordsBook.getTypicalAddressBook());","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"jianh0ng"},"content":"        assertEquals(Optional.empty(), modelManager.getRecord(DANIEL));","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"jianh0ng"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"jianh0ng"},"content":"    public void getRecord_validRoom_returnsTrue() {","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"jianh0ng"},"content":"        modelManager.setAddressBook(TypicalRecordsBook.getTypicalAddressBook());","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"jianh0ng"},"content":"        assertEquals(Optional.of(RESIDENCY_ONE), modelManager.getRecord(ROOM_ONE));","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"jianh0ng"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"jianh0ng"},"content":"    public void getRecord_invalidRoom_returnsEmptyOptional() {","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"jianh0ng"},"content":"        modelManager.setAddressBook(TypicalRecordsBook.getTypicalAddressBook());","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"jianh0ng"},"content":"        assertEquals(Optional.empty(), modelManager.getRecord(ROOM_TWO));","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"jianh0ng"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":129,"author":{"gitId":"jianh0ng"},"content":"    public void getFilteredRecordList_validRecordList_success() {","lastModifiedDate":"2021-10-20"},{"lineNumber":130,"author":{"gitId":"jianh0ng"},"content":"        modelManager.setAddressBook(TypicalRecordsBook.getTypicalAddressBook());","lastModifiedDate":"2021-10-20"},{"lineNumber":131,"author":{"gitId":"jianh0ng"},"content":"        assertEquals(TypicalRecordsBook.getTypicalAddressBook().getRecordsList(), modelManager.getFilteredRecordList());","lastModifiedDate":"2021-10-20"},{"lineNumber":132,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":133,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":134,"author":{"gitId":"jianh0ng"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":135,"author":{"gitId":"jianh0ng"},"content":"    public void getFilteredRecordList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":136,"author":{"gitId":"jianh0ng"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredRecordList().remove(0));","lastModifiedDate":"2021-10-20"},{"lineNumber":137,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":138,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":139,"author":{"gitId":"jianh0ng"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":140,"author":{"gitId":"jianh0ng"},"content":"    public void updateFilteredRecordList_validPredicate_success() {","lastModifiedDate":"2021-10-20"},{"lineNumber":141,"author":{"gitId":"jianh0ng"},"content":"        modelManager.setAddressBook(TypicalRecordsBook.getTypicalAddressBook());","lastModifiedDate":"2021-10-20"},{"lineNumber":142,"author":{"gitId":"jianh0ng"},"content":"        String[] searchTerm \u003d new String[] {\"001\"};","lastModifiedDate":"2021-10-20"},{"lineNumber":143,"author":{"gitId":"jianh0ng"},"content":"        modelManager.updateFilteredRecordList(","lastModifiedDate":"2021-10-20"},{"lineNumber":144,"author":{"gitId":"jianh0ng"},"content":"                new ResidencyContainsKeywordsPredicate(new ArrayList\u003cString\u003e(Arrays.asList(searchTerm))) {","lastModifiedDate":"2021-10-20"},{"lineNumber":145,"author":{"gitId":"jianh0ng"},"content":"            });","lastModifiedDate":"2021-10-20"},{"lineNumber":146,"author":{"gitId":"jianh0ng"},"content":"        assertEquals(modelManager.getFilteredRecordList(), TypicalRecordsBook.getTypicalAddressBook().getRecordsList());","lastModifiedDate":"2021-10-20"},{"lineNumber":147,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":148,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"jianh0ng":54,"-":132}},{"path":"src/test/java/seedu/address/model/person/NricTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wilburrito"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"wilburrito"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"wilburrito"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"wilburrito"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"wilburrito"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"import seedu.address.model.person.exceptions.InvalidNricException;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"wilburrito"},"content":"import seedu.address.model.room.RoomNumber;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"wilburrito"},"content":"public class NricTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"wilburrito"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"wilburrito"},"content":"    public void constructor_invalidNric_throwsInvalidIdException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"wilburrito"},"content":"        //should throw an error since NRICs should not be empty strings","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"wilburrito"},"content":"        assertThrows(InvalidNricException.class, () -\u003e Nric.of(\"\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"wilburrito"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"wilburrito"},"content":"    public void isValidId() {","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"wilburrito"},"content":"        assertThrows(NullPointerException.class, () -\u003e Nric.isValidNric(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"wilburrito"},"content":"        assertTrue(Nric.isValidNric(\"hello\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"wilburrito"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"wilburrito"},"content":"    public void isSameId() {","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"wilburrito"},"content":"        Nric nricOne \u003d Nric.of(\"test1\");","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"wilburrito"},"content":"        // nextId parameter starts at 0. calling empty .of() created a new Id based on current nextId value and","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"wilburrito"},"content":"        // automatically increments nextId by 1","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"wilburrito"},"content":"        Nric nricZero \u003d Nric.of(\"test0\");","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"wilburrito"},"content":"        Nric nricOneSame \u003d Nric.of(\"test1\");","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"wilburrito"},"content":"        assertFalse(nricOne.equals(nricZero));","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"wilburrito"},"content":"        assertTrue(nricOne.equals(nricOneSame));","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"wilburrito"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"wilburrito"},"content":"    public void sameIdTest() {","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"wilburrito"},"content":"        Nric nricZero \u003d Nric.of(\"test0\");","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"wilburrito"},"content":"        Nric nricZeroSame \u003d Nric.of(\"test0\");","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"wilburrito"},"content":"        Nric nricOne \u003d Nric.of(\"test1\");","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"wilburrito"},"content":"        assertTrue(nricZeroSame.equals(nricZero));","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"wilburrito"},"content":"        assertFalse(nricZero.equals(nricOne));","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"wilburrito"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"wilburrito"},"content":"    public void getValueTest() {","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"wilburrito"},"content":"        Nric idZero \u003d Nric.of(\"test0\");","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"wilburrito"},"content":"        Nric idZeroSame \u003d Nric.of(\"test0\");","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"wilburrito"},"content":"        Nric idOne \u003d Nric.of(\"test1\");","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"wilburrito"},"content":"        assertTrue(idZeroSame.getValue() \u003d\u003d idZero.getValue());","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"wilburrito"},"content":"        assertFalse(idZero.getValue() \u003d\u003d idOne.getValue());","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"wilburrito"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"wilburrito"},"content":"    public void equalsTest() {","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"wilburrito"},"content":"        Nric nricZero \u003d Nric.of(\"test0\");","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"wilburrito"},"content":"        Nric nricZeroSame \u003d Nric.of(\"test0\");","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"wilburrito"},"content":"        Nric nricOne \u003d Nric.of(\"test1\");","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"wilburrito"},"content":"        RoomNumber roomNumber \u003d new RoomNumber(\"005\");","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"wilburrito"},"content":"        assertTrue(nricZero.equals(nricZero));","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"wilburrito"},"content":"        assertTrue(nricZeroSame.equals(nricZero));","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"wilburrito"},"content":"        assertFalse(nricZero.equals(nricOne));","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"wilburrito"},"content":"        assertFalse(nricZero.equals(roomNumber));","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"wilburrito"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"wilburrito"},"content":"    public void hashcodeTest() {","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"wilburrito"},"content":"        Nric nricZero \u003d Nric.of(\"test0\");","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"wilburrito"},"content":"        Nric nricZeroSame \u003d Nric.of(\"test0\");","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"wilburrito"},"content":"        Nric nricOne \u003d Nric.of(\"test1\");","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"wilburrito"},"content":"        assertTrue(nricZeroSame.hashCode() \u003d\u003d nricZero.hashCode());","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"wilburrito"},"content":"        assertFalse(nricZero.hashCode() \u003d\u003d nricOne.hashCode());","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"wilburrito"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"wilburrito":82}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"wilburrito"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_AMY;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"darrenhoon"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"wilburrito"},"content":"        // different name, all other attributes same -\u003e returns true","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"wilburrito"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"wilburrito"},"content":"        // name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"wilburrito"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"wilburrito"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns true","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"wilburrito"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"wilburrito"},"content":"        // different nric, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"wilburrito"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withNric(VALID_NRIC_AMY).build();","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"wilburrito"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"wilburrito"},"content":"        // same nric, all other attributes different -\u003e returns true","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"wilburrito"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"wilburrito"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"wilburrito"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"wilburrito"},"content":"        // different name -\u003e returns true","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"wilburrito"},"content":"        assertTrue(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"wilburrito"},"content":"        // different phone -\u003e returns true","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"wilburrito"},"content":"        assertTrue(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"wilburrito"},"content":"        // different email -\u003e returns true","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"wilburrito"},"content":"        assertTrue(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"wilburrito"},"content":"        // different address -\u003e returns true","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"wilburrito"},"content":"        assertTrue(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":98,"author":{"gitId":"wilburrito"},"content":"        // different tags -\u003e returns true","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":100,"author":{"gitId":"wilburrito"},"content":"        assertTrue(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"wilburrito"},"content":"        // different nric -\u003e returns false","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"wilburrito"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withNric(VALID_NRIC_BOB).build();","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"-":75,"wilburrito":29,"darrenhoon":3}},{"path":"src/test/java/seedu/address/model/residency/ResidencyBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BananaTechs"},"content":"package seedu.address.model.residency;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"BananaTechs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"BananaTechs"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"BananaTechs"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"BananaTechs"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"BananaTechs"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"BananaTechs"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"BananaTechs"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"BananaTechs"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"BananaTechs"},"content":"import static seedu.address.testutil.TypicalRooms.ROOM_ONE;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"BananaTechs"},"content":"import static seedu.address.testutil.TypicalRooms.ROOM_TWO;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"BananaTechs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"BananaTechs"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"BananaTechs"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"BananaTechs"},"content":"import java.util.List;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"BananaTechs"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"BananaTechs"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"BananaTechs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.residency.exceptions.DuplicatePersonRegException;","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.residency.exceptions.DuplicateRoomRegException;","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.residency.exceptions.ResidencyNotFoundException;","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"BananaTechs"},"content":"public class ResidencyBookTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"jianh0ng"},"content":"    private final ResidencyBook residencyBook \u003d new ResidencyBook(false);","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"jianh0ng"},"content":"    private final ResidencyBook recordsBook \u003d new ResidencyBook(true);","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"BananaTechs"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"BananaTechs"},"content":"    public void constructor() {","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"BananaTechs"},"content":"        assertEquals(Collections.emptyList(), residencyBook.asUnmodifiableObservableList());","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"BananaTechs"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"BananaTechs"},"content":"    public void register_validRoomValidGuests_success() {","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"BananaTechs"},"content":"        Set\u003cPerson\u003e guests \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"BananaTechs"},"content":"        guests.add(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"BananaTechs"},"content":"        guests.add(BENSON);","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"BananaTechs"},"content":"        residencyBook.register(ROOM_ONE, guests);","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"BananaTechs"},"content":"        Optional\u003cResidency\u003e residencyRoomOne \u003d residencyBook.getResidency(ROOM_ONE);","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"BananaTechs"},"content":"        Optional\u003cResidency\u003e residencyAlice \u003d residencyBook.getResidency(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"BananaTechs"},"content":"        Optional\u003cResidency\u003e residencyBenson \u003d residencyBook.getResidency(BENSON);","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"BananaTechs"},"content":"        assertTrue(residencyRoomOne.isPresent());","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"BananaTechs"},"content":"        assertTrue(residencyAlice.isPresent());","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"BananaTechs"},"content":"        assertTrue(residencyBenson.isPresent());","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"BananaTechs"},"content":"        assertEquals(residencyRoomOne.get(), residencyAlice.get());","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"BananaTechs"},"content":"        assertEquals(residencyRoomOne.get(), residencyBenson.get());","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"BananaTechs"},"content":"        // Check if internal list contains the residency","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"BananaTechs"},"content":"        assertTrue(residencyBook.asUnmodifiableObservableList().contains(residencyRoomOne.get()));","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"jianh0ng"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"jianh0ng"},"content":"    public void register_validRoomValidGuestsAllowsDuplicates_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"jianh0ng"},"content":"        Set\u003cPerson\u003e guests \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"jianh0ng"},"content":"        guests.add(ALICE);","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"jianh0ng"},"content":"        guests.add(BENSON);","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"jianh0ng"},"content":"        recordsBook.register(ROOM_ONE, guests);","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"jianh0ng"},"content":"        Optional\u003cResidency\u003e residencyRoomOne \u003d recordsBook.getResidency(ROOM_ONE);","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"jianh0ng"},"content":"        Optional\u003cResidency\u003e residencyAlice \u003d recordsBook.getResidency(ALICE);","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"jianh0ng"},"content":"        Optional\u003cResidency\u003e residencyBenson \u003d recordsBook.getResidency(BENSON);","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"jianh0ng"},"content":"        assertTrue(residencyRoomOne.isPresent());","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"jianh0ng"},"content":"        assertTrue(residencyAlice.isPresent());","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"jianh0ng"},"content":"        assertTrue(residencyBenson.isPresent());","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"jianh0ng"},"content":"        assertEquals(residencyRoomOne.get(), residencyAlice.get());","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"jianh0ng"},"content":"        assertEquals(residencyRoomOne.get(), residencyBenson.get());","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"jianh0ng"},"content":"        // Check if internal list contains the residency","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"jianh0ng"},"content":"        assertTrue(recordsBook.asUnmodifiableObservableList().contains(residencyRoomOne.get()));","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"BananaTechs"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"BananaTechs"},"content":"    public void register_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"BananaTechs"},"content":"        assertThrows(NullPointerException.class, ()","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"BananaTechs"},"content":"            -\u003e residencyBook.register(null, new HashSet\u003cPerson\u003e()));","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"BananaTechs"},"content":"        assertThrows(NullPointerException.class, ()","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"BananaTechs"},"content":"            -\u003e residencyBook.register(ROOM_ONE, null));","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"BananaTechs"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"BananaTechs"},"content":"    public void register_personAlreadyRegistered_throwsDuplicatePersonRegException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"BananaTechs"},"content":"        Set\u003cPerson\u003e guestsRoomOne \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"BananaTechs"},"content":"        Set\u003cPerson\u003e guestsRoomTwo \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"BananaTechs"},"content":"        guestsRoomOne.add(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"BananaTechs"},"content":"        guestsRoomOne.add(BENSON);","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"BananaTechs"},"content":"        guestsRoomTwo.add(BENSON);","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"BananaTechs"},"content":"        guestsRoomTwo.add(CARL);","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"BananaTechs"},"content":"        residencyBook.register(ROOM_ONE, guestsRoomOne);","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"BananaTechs"},"content":"        assertThrows(DuplicatePersonRegException.class, ()","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"BananaTechs"},"content":"            -\u003e residencyBook.register(ROOM_TWO, guestsRoomTwo));","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"jianh0ng"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"jianh0ng"},"content":"    public void register_personAlreadyRegisteredAllowDuplicates_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"jianh0ng"},"content":"        Set\u003cPerson\u003e guestsRoomOne \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"jianh0ng"},"content":"        Set\u003cPerson\u003e guestsRoomTwo \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"jianh0ng"},"content":"        guestsRoomOne.add(ALICE);","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"jianh0ng"},"content":"        guestsRoomOne.add(BENSON);","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"jianh0ng"},"content":"        guestsRoomTwo.add(BENSON);","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"jianh0ng"},"content":"        guestsRoomTwo.add(CARL);","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"jianh0ng"},"content":"        recordsBook.register(ROOM_ONE, guestsRoomOne);","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"jianh0ng"},"content":"        recordsBook.register(ROOM_TWO, guestsRoomTwo);","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"jianh0ng"},"content":"        Optional\u003cResidency\u003e residencyRoomTwo \u003d recordsBook.getResidency(ROOM_TWO);","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"jianh0ng"},"content":"        assertTrue(recordsBook.asUnmodifiableObservableList().contains(residencyRoomTwo.get()));","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"BananaTechs"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"BananaTechs"},"content":"    public void register_roomAlreadyRegistered_throwsDuplicateRoomRegException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"BananaTechs"},"content":"        Set\u003cPerson\u003e guestsRoomOne \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":130,"author":{"gitId":"BananaTechs"},"content":"        Set\u003cPerson\u003e guestsRoomTwo \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":131,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":132,"author":{"gitId":"BananaTechs"},"content":"        guestsRoomOne.add(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":133,"author":{"gitId":"BananaTechs"},"content":"        guestsRoomOne.add(BENSON);","lastModifiedDate":"2021-10-06"},{"lineNumber":134,"author":{"gitId":"BananaTechs"},"content":"        guestsRoomTwo.add(CARL);","lastModifiedDate":"2021-10-06"},{"lineNumber":135,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":136,"author":{"gitId":"BananaTechs"},"content":"        residencyBook.register(ROOM_ONE, guestsRoomOne);","lastModifiedDate":"2021-10-06"},{"lineNumber":137,"author":{"gitId":"BananaTechs"},"content":"        assertThrows(DuplicateRoomRegException.class, ()","lastModifiedDate":"2021-10-06"},{"lineNumber":138,"author":{"gitId":"BananaTechs"},"content":"            -\u003e residencyBook.register(ROOM_ONE, guestsRoomTwo));","lastModifiedDate":"2021-10-06"},{"lineNumber":139,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":140,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":141,"author":{"gitId":"jianh0ng"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"jianh0ng"},"content":"    public void register_roomAlreadyRegisteredAllowDuplicates_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"jianh0ng"},"content":"        Set\u003cPerson\u003e guestsRoomOne \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"jianh0ng"},"content":"        Set\u003cPerson\u003e guestsRoomTwo \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"jianh0ng"},"content":"        guestsRoomOne.add(ALICE);","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"jianh0ng"},"content":"        guestsRoomOne.add(BENSON);","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"jianh0ng"},"content":"        guestsRoomTwo.add(CARL);","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"jianh0ng"},"content":"        recordsBook.register(ROOM_ONE, guestsRoomOne);","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"jianh0ng"},"content":"        recordsBook.register(ROOM_ONE, guestsRoomTwo);","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"jianh0ng"},"content":"        Optional\u003cResidency\u003e residencyRoomTwo \u003d recordsBook.getResidency(ROOM_ONE);","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"jianh0ng"},"content":"        assertTrue(recordsBook.asUnmodifiableObservableList().contains(residencyRoomTwo.get()));","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"BananaTechs"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":159,"author":{"gitId":"BananaTechs"},"content":"    public void remove_registeredResidency_success() {","lastModifiedDate":"2021-10-06"},{"lineNumber":160,"author":{"gitId":"BananaTechs"},"content":"        Set\u003cPerson\u003e guests \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":161,"author":{"gitId":"BananaTechs"},"content":"        guests.add(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":162,"author":{"gitId":"BananaTechs"},"content":"        Residency residency \u003d new Residency(ROOM_ONE, guests);","lastModifiedDate":"2021-10-06"},{"lineNumber":163,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":164,"author":{"gitId":"BananaTechs"},"content":"        residencyBook.register(residency);","lastModifiedDate":"2021-10-06"},{"lineNumber":165,"author":{"gitId":"BananaTechs"},"content":"        residencyBook.remove(residency);","lastModifiedDate":"2021-10-06"},{"lineNumber":166,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":167,"author":{"gitId":"BananaTechs"},"content":"        assertTrue(residencyBook.getResidency(ALICE).isEmpty());","lastModifiedDate":"2021-10-06"},{"lineNumber":168,"author":{"gitId":"BananaTechs"},"content":"        assertTrue(residencyBook.getResidency(ROOM_ONE).isEmpty());","lastModifiedDate":"2021-10-06"},{"lineNumber":169,"author":{"gitId":"BananaTechs"},"content":"        assertFalse(residencyBook.asUnmodifiableObservableList().contains(residency));","lastModifiedDate":"2021-10-06"},{"lineNumber":170,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":171,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":172,"author":{"gitId":"BananaTechs"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":173,"author":{"gitId":"BananaTechs"},"content":"    public void remove_unregisteredResidency_throwsResidencyNotFoundException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":174,"author":{"gitId":"BananaTechs"},"content":"        Set\u003cPerson\u003e guests \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":175,"author":{"gitId":"BananaTechs"},"content":"        guests.add(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":176,"author":{"gitId":"BananaTechs"},"content":"        Residency residency \u003d new Residency(ROOM_ONE, guests);","lastModifiedDate":"2021-10-06"},{"lineNumber":177,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":178,"author":{"gitId":"BananaTechs"},"content":"        assertThrows(ResidencyNotFoundException.class, ()","lastModifiedDate":"2021-10-06"},{"lineNumber":179,"author":{"gitId":"BananaTechs"},"content":"            -\u003e residencyBook.remove(residency));","lastModifiedDate":"2021-10-06"},{"lineNumber":180,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":181,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":182,"author":{"gitId":"BananaTechs"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":183,"author":{"gitId":"BananaTechs"},"content":"    public void remove_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":184,"author":{"gitId":"BananaTechs"},"content":"        assertThrows(NullPointerException.class, ()","lastModifiedDate":"2021-10-06"},{"lineNumber":185,"author":{"gitId":"BananaTechs"},"content":"            -\u003e residencyBook.remove(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":186,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":187,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":188,"author":{"gitId":"BananaTechs"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":189,"author":{"gitId":"BananaTechs"},"content":"    public void edit_validInput_success() {","lastModifiedDate":"2021-10-07"},{"lineNumber":190,"author":{"gitId":"BananaTechs"},"content":"        Set\u003cPerson\u003e guests \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":191,"author":{"gitId":"BananaTechs"},"content":"        guests.add(ALICE);","lastModifiedDate":"2021-10-07"},{"lineNumber":192,"author":{"gitId":"BananaTechs"},"content":"        guests.add(BENSON);","lastModifiedDate":"2021-10-07"},{"lineNumber":193,"author":{"gitId":"BananaTechs"},"content":"        Person editedBenson \u003d new PersonBuilder(BENSON).withAddress(\"editedAddress\").build();","lastModifiedDate":"2021-10-07"},{"lineNumber":194,"author":{"gitId":"BananaTechs"},"content":"        residencyBook.register(ROOM_ONE, guests);","lastModifiedDate":"2021-10-07"},{"lineNumber":195,"author":{"gitId":"BananaTechs"},"content":"        residencyBook.edit(BENSON, editedBenson);","lastModifiedDate":"2021-10-07"},{"lineNumber":196,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":197,"author":{"gitId":"BananaTechs"},"content":"        Optional\u003cResidency\u003e residencyOption \u003d residencyBook.getResidency(editedBenson);","lastModifiedDate":"2021-10-07"},{"lineNumber":198,"author":{"gitId":"BananaTechs"},"content":"        assertTrue(residencyOption.isPresent());","lastModifiedDate":"2021-10-07"},{"lineNumber":199,"author":{"gitId":"BananaTechs"},"content":"        assertTrue(residencyBook.getResidency(BENSON).isEmpty());","lastModifiedDate":"2021-10-07"},{"lineNumber":200,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":201,"author":{"gitId":"BananaTechs"},"content":"        Residency residency \u003d residencyOption.get();","lastModifiedDate":"2021-10-07"},{"lineNumber":202,"author":{"gitId":"BananaTechs"},"content":"        assertTrue(residency.getRoom().equals(ROOM_ONE));","lastModifiedDate":"2021-10-07"},{"lineNumber":203,"author":{"gitId":"BananaTechs"},"content":"        assertTrue(residency.getGuests().contains(ALICE));","lastModifiedDate":"2021-10-07"},{"lineNumber":204,"author":{"gitId":"BananaTechs"},"content":"        assertTrue(residency.getGuests().contains(editedBenson));","lastModifiedDate":"2021-10-07"},{"lineNumber":205,"author":{"gitId":"BananaTechs"},"content":"        assertFalse(residency.getGuests().contains(BENSON));","lastModifiedDate":"2021-10-07"},{"lineNumber":206,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":207,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":208,"author":{"gitId":"BananaTechs"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":209,"author":{"gitId":"BananaTechs"},"content":"    public void setResidencies_emptyList_success() {","lastModifiedDate":"2021-10-06"},{"lineNumber":210,"author":{"gitId":"BananaTechs"},"content":"        Set\u003cPerson\u003e guests \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":211,"author":{"gitId":"BananaTechs"},"content":"        guests.add(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":212,"author":{"gitId":"BananaTechs"},"content":"        Residency residency \u003d new Residency(ROOM_ONE, guests);","lastModifiedDate":"2021-10-06"},{"lineNumber":213,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":214,"author":{"gitId":"BananaTechs"},"content":"        residencyBook.register(residency);","lastModifiedDate":"2021-10-06"},{"lineNumber":215,"author":{"gitId":"BananaTechs"},"content":"        residencyBook.setResidencies(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-10-06"},{"lineNumber":216,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":217,"author":{"gitId":"BananaTechs"},"content":"        assertTrue(residencyBook.asUnmodifiableObservableList().isEmpty());","lastModifiedDate":"2021-10-06"},{"lineNumber":218,"author":{"gitId":"BananaTechs"},"content":"        assertTrue(residencyBook.getRoomMap().isEmpty());","lastModifiedDate":"2021-10-06"},{"lineNumber":219,"author":{"gitId":"BananaTechs"},"content":"        assertTrue(residencyBook.getGuestMap().isEmpty());","lastModifiedDate":"2021-10-06"},{"lineNumber":220,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":221,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":222,"author":{"gitId":"BananaTechs"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":223,"author":{"gitId":"BananaTechs"},"content":"    public void setResidencies_populatedList_success() {","lastModifiedDate":"2021-10-06"},{"lineNumber":224,"author":{"gitId":"BananaTechs"},"content":"        Set\u003cPerson\u003e guestsRoomOne \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":225,"author":{"gitId":"BananaTechs"},"content":"        Set\u003cPerson\u003e guestsRoomTwo \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":226,"author":{"gitId":"BananaTechs"},"content":"        guestsRoomOne.add(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":227,"author":{"gitId":"BananaTechs"},"content":"        guestsRoomTwo.add(BENSON);","lastModifiedDate":"2021-10-06"},{"lineNumber":228,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":229,"author":{"gitId":"BananaTechs"},"content":"        List\u003cResidency\u003e residencies \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":230,"author":{"gitId":"BananaTechs"},"content":"        residencies.add(new Residency(ROOM_TWO, guestsRoomTwo));","lastModifiedDate":"2021-10-06"},{"lineNumber":231,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":232,"author":{"gitId":"BananaTechs"},"content":"        residencyBook.register(ROOM_ONE, guestsRoomOne);","lastModifiedDate":"2021-10-06"},{"lineNumber":233,"author":{"gitId":"BananaTechs"},"content":"        residencyBook.setResidencies(residencies);","lastModifiedDate":"2021-10-06"},{"lineNumber":234,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":235,"author":{"gitId":"BananaTechs"},"content":"        Optional\u003cResidency\u003e residencyRoomTwo \u003d residencyBook.getResidency(ROOM_TWO);","lastModifiedDate":"2021-10-06"},{"lineNumber":236,"author":{"gitId":"BananaTechs"},"content":"        Optional\u003cResidency\u003e residencyBenson \u003d residencyBook.getResidency(BENSON);","lastModifiedDate":"2021-10-06"},{"lineNumber":237,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":238,"author":{"gitId":"BananaTechs"},"content":"        assertTrue(residencyBook.getResidency(ROOM_ONE).isEmpty());","lastModifiedDate":"2021-10-06"},{"lineNumber":239,"author":{"gitId":"BananaTechs"},"content":"        assertTrue(residencyBook.getResidency(ALICE).isEmpty());","lastModifiedDate":"2021-10-06"},{"lineNumber":240,"author":{"gitId":"BananaTechs"},"content":"        assertTrue(residencyRoomTwo.isPresent());","lastModifiedDate":"2021-10-06"},{"lineNumber":241,"author":{"gitId":"BananaTechs"},"content":"        assertEquals(residencyRoomTwo, residencyBenson);","lastModifiedDate":"2021-10-06"},{"lineNumber":242,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":243,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":244,"author":{"gitId":"BananaTechs"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":245,"author":{"gitId":"BananaTechs"},"content":"    public void equals() {","lastModifiedDate":"2021-10-07"},{"lineNumber":246,"author":{"gitId":"jianh0ng"},"content":"        ResidencyBook book1 \u003d new ResidencyBook(false);","lastModifiedDate":"2021-10-11"},{"lineNumber":247,"author":{"gitId":"jianh0ng"},"content":"        ResidencyBook book2 \u003d new ResidencyBook(false);","lastModifiedDate":"2021-10-11"},{"lineNumber":248,"author":{"gitId":"jianh0ng"},"content":"        ResidencyBook book3 \u003d new ResidencyBook(true);","lastModifiedDate":"2021-10-12"},{"lineNumber":249,"author":{"gitId":"jianh0ng"},"content":"        ResidencyBook book4 \u003d new ResidencyBook(true);","lastModifiedDate":"2021-10-12"},{"lineNumber":250,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":251,"author":{"gitId":"BananaTechs"},"content":"        Set\u003cPerson\u003e guests1 \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":252,"author":{"gitId":"BananaTechs"},"content":"        Set\u003cPerson\u003e guests2 \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":253,"author":{"gitId":"BananaTechs"},"content":"        guests1.add(ALICE);","lastModifiedDate":"2021-10-07"},{"lineNumber":254,"author":{"gitId":"BananaTechs"},"content":"        guests1.add(BENSON);","lastModifiedDate":"2021-10-07"},{"lineNumber":255,"author":{"gitId":"BananaTechs"},"content":"        guests2.add(ALICE);","lastModifiedDate":"2021-10-07"},{"lineNumber":256,"author":{"gitId":"BananaTechs"},"content":"        guests2.add(BENSON);","lastModifiedDate":"2021-10-07"},{"lineNumber":257,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":258,"author":{"gitId":"BananaTechs"},"content":"        book1.register(ROOM_ONE, guests1);","lastModifiedDate":"2021-10-07"},{"lineNumber":259,"author":{"gitId":"BananaTechs"},"content":"        book2.register(ROOM_ONE, guests2);","lastModifiedDate":"2021-10-07"},{"lineNumber":260,"author":{"gitId":"jianh0ng"},"content":"        book3.register(ROOM_ONE, guests1);","lastModifiedDate":"2021-10-12"},{"lineNumber":261,"author":{"gitId":"jianh0ng"},"content":"        book4.register(ROOM_ONE, guests2);","lastModifiedDate":"2021-10-12"},{"lineNumber":262,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":263,"author":{"gitId":"BananaTechs"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-07"},{"lineNumber":264,"author":{"gitId":"BananaTechs"},"content":"        assertEquals(book1, book1);","lastModifiedDate":"2021-10-07"},{"lineNumber":265,"author":{"gitId":"jianh0ng"},"content":"        assertEquals(book3, book3);","lastModifiedDate":"2021-10-12"},{"lineNumber":266,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":267,"author":{"gitId":"BananaTechs"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-07"},{"lineNumber":268,"author":{"gitId":"BananaTechs"},"content":"        assertEquals(book1, book2);","lastModifiedDate":"2021-10-07"},{"lineNumber":269,"author":{"gitId":"jianh0ng"},"content":"        assertEquals(book3, book4);","lastModifiedDate":"2021-10-12"},{"lineNumber":270,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":271,"author":{"gitId":"BananaTechs"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":272,"author":{"gitId":"BananaTechs"},"content":"        assertNotEquals(book1, 1);","lastModifiedDate":"2021-10-07"},{"lineNumber":273,"author":{"gitId":"jianh0ng"},"content":"        assertNotEquals(book3, 1);","lastModifiedDate":"2021-10-12"},{"lineNumber":274,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":275,"author":{"gitId":"BananaTechs"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":276,"author":{"gitId":"BananaTechs"},"content":"        assertNotEquals(book1, null);","lastModifiedDate":"2021-10-07"},{"lineNumber":277,"author":{"gitId":"jianh0ng"},"content":"        assertNotEquals(book4, null);","lastModifiedDate":"2021-10-12"},{"lineNumber":278,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":279,"author":{"gitId":"BananaTechs"},"content":"        // different ResidencyBook -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":280,"author":{"gitId":"jianh0ng"},"content":"        book2 \u003d new ResidencyBook(false);","lastModifiedDate":"2021-10-11"},{"lineNumber":281,"author":{"gitId":"jianh0ng"},"content":"        book4 \u003d new ResidencyBook(true);","lastModifiedDate":"2021-10-12"},{"lineNumber":282,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":283,"author":{"gitId":"BananaTechs"},"content":"        assertNotEquals(book1, book2);","lastModifiedDate":"2021-10-07"},{"lineNumber":284,"author":{"gitId":"jianh0ng"},"content":"        assertNotEquals(book3, book4);","lastModifiedDate":"2021-10-12"},{"lineNumber":285,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":286,"author":{"gitId":"BananaTechs"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"jianh0ng":75,"BananaTechs":211}},{"path":"src/test/java/seedu/address/model/residency/ResidencyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package seedu.address.model.residency;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"import static seedu.address.testutil.TypicalPersons.PERSON_LIST_ONE;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"import static seedu.address.testutil.TypicalPersons.PERSON_LIST_TWO;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"import static seedu.address.testutil.TypicalRooms.ROOM_ONE;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"import static seedu.address.testutil.TypicalRooms.ROOM_TWO;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"jianh0ng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"public class ResidencyTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"jianh0ng"},"content":"    public static final LocalDateTime CHECK_IN_TIME_ONE \u003d LocalDateTime.of(2021, 10, 31, 12, 0);","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"jianh0ng"},"content":"    public static final LocalDateTime CHECK_OUT_TIME_ONE \u003d LocalDateTime.of(2021, 11, 1, 12, 0);","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"jianh0ng"},"content":"    public static final LocalDateTime CHECK_IN_TIME_TWO \u003d LocalDateTime.of(2021, 11, 2, 12, 0);","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"jianh0ng"},"content":"    public static final LocalDateTime CHECK_OUT_TIME_TWO \u003d LocalDateTime.of(2021, 11, 3, 12, 0);","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"darrenhoon"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"darrenhoon"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Residency(null, null));","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"darrenhoon"},"content":"    public void isSameResidency() {","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"jianh0ng"},"content":"        Residency residencyOne \u003d new Residency(ROOM_ONE, PERSON_LIST_ONE, CHECK_IN_TIME_ONE, CHECK_OUT_TIME_ONE);","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"jianh0ng"},"content":"        Residency residencyOneSame \u003d new Residency(ROOM_ONE, PERSON_LIST_ONE, CHECK_IN_TIME_ONE, CHECK_OUT_TIME_ONE);","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"jianh0ng"},"content":"        Residency residencyOneDifferent \u003d","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"jianh0ng"},"content":"                new Residency(ROOM_ONE, PERSON_LIST_TWO, CHECK_IN_TIME_TWO, CHECK_OUT_TIME_TWO);","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"jianh0ng"},"content":"        Residency residencyTwo \u003d new Residency(ROOM_TWO, PERSON_LIST_TWO, CHECK_IN_TIME_TWO, CHECK_OUT_TIME_TWO);","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"darrenhoon"},"content":"        assertFalse(residencyOne.equals(residencyTwo));","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"darrenhoon"},"content":"        assertTrue(residencyOne.equals(residencyOneSame));","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"darrenhoon"},"content":"        assertTrue(residencyOne.equals(residencyOne));","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"darrenhoon"},"content":"        assertFalse(residencyOne.equals(residencyOneDifferent));","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"darrenhoon"},"content":"    public void toStringTest() {","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"jianh0ng"},"content":"        Residency residencyOne \u003d new Residency(ROOM_ONE, PERSON_LIST_ONE, CHECK_IN_TIME_ONE, CHECK_OUT_TIME_ONE);","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"jianh0ng"},"content":"        Residency residencyOneSame \u003d new Residency(ROOM_ONE, PERSON_LIST_ONE, CHECK_IN_TIME_ONE, CHECK_OUT_TIME_ONE);","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"jianh0ng"},"content":"        Residency residencyTwo \u003d new Residency(ROOM_TWO, PERSON_LIST_TWO, CHECK_IN_TIME_TWO, CHECK_OUT_TIME_TWO);","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"darrenhoon"},"content":"        assertFalse(residencyOne.toString().equals(residencyTwo.toString()));","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"darrenhoon"},"content":"        assertTrue(residencyOne.toString().equals(residencyOneSame.toString()));","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"darrenhoon"},"content":"    public void hashcodeTest() {","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"jianh0ng"},"content":"        Residency residencyOne \u003d new Residency(ROOM_ONE, PERSON_LIST_ONE, CHECK_IN_TIME_ONE, CHECK_OUT_TIME_ONE);","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"jianh0ng"},"content":"        Residency residencyOneSame \u003d new Residency(ROOM_ONE, PERSON_LIST_ONE, CHECK_IN_TIME_ONE, CHECK_OUT_TIME_ONE);","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"jianh0ng"},"content":"        Residency residencyTwo \u003d new Residency(ROOM_TWO, PERSON_LIST_TWO, CHECK_IN_TIME_TWO, CHECK_OUT_TIME_TWO);","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"darrenhoon"},"content":"        assertFalse(residencyOne.hashCode() \u003d\u003d residencyTwo.hashCode());","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"darrenhoon"},"content":"        assertTrue(residencyOne.hashCode() \u003d\u003d residencyOneSame.hashCode());","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"jianh0ng":19,"darrenhoon":43}},{"path":"src/test/java/seedu/address/model/room/RoomListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package seedu.address.model.room;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_ROOM_ONE;","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_VACANCY_ROOM_ONE;","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"import static seedu.address.testutil.TypicalRooms.ROOM_ONE;","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"import static seedu.address.testutil.TypicalRooms.ROOM_TWO;","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"import java.util.List;","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":"import seedu.address.model.room.exceptions.DuplicateRoomException;","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"darrenhoon"},"content":"import seedu.address.model.room.exceptions.RoomNotFoundException;","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"darrenhoon"},"content":"import seedu.address.testutil.RoomBuilder;","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"darrenhoon"},"content":"public class RoomListTest {","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"darrenhoon"},"content":"    private static final Room ROOM_ONE_EDITED \u003d new RoomBuilder()","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"darrenhoon"},"content":"            .withNumber(VALID_NAME_ROOM_ONE)","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"darrenhoon"},"content":"            .withVacancy(VALID_VACANCY_ROOM_ONE)","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"darrenhoon"},"content":"            .build();","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"darrenhoon"},"content":"    private final RoomList roomList \u003d new RoomList();","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"darrenhoon"},"content":"    public void contains_nullRoom_throwsNullPointerException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"darrenhoon"},"content":"        assertThrows(NullPointerException.class, () -\u003e roomList.contains(null));","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"darrenhoon"},"content":"    public void contains_roomNotInList_returnsFalse() {","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"darrenhoon"},"content":"        assertFalse(roomList.contains(ROOM_ONE));","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"darrenhoon"},"content":"    public void contains_roomInList_returnsTrue() {","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"darrenhoon"},"content":"        roomList.add(ROOM_ONE);","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"darrenhoon"},"content":"        assertTrue(roomList.contains(ROOM_ONE));","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"darrenhoon"},"content":"    public void contains_roomWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"darrenhoon"},"content":"        roomList.add(ROOM_ONE);","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"darrenhoon"},"content":"        Room editedRoom \u003d ROOM_ONE_EDITED;","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"darrenhoon"},"content":"        assertTrue(roomList.contains(editedRoom));","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"darrenhoon"},"content":"    public void add_nullRoom_throwsNullPointerException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"darrenhoon"},"content":"        assertThrows(NullPointerException.class, () -\u003e roomList.add(null));","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"darrenhoon"},"content":"    public void add_duplicateRoom_throwsDuplicatePersonException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":62,"author":{"gitId":"darrenhoon"},"content":"        roomList.add(ROOM_ONE);","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"darrenhoon"},"content":"        assertThrows(DuplicateRoomException.class, () -\u003e roomList.add(ROOM_ONE));","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":67,"author":{"gitId":"darrenhoon"},"content":"    public void setRoom_nullTargetRoom_throwsNullPointerException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":68,"author":{"gitId":"darrenhoon"},"content":"        assertThrows(NullPointerException.class, () -\u003e roomList.setRoom(null, ROOM_ONE));","lastModifiedDate":"2021-09-23"},{"lineNumber":69,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":70,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":71,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":72,"author":{"gitId":"darrenhoon"},"content":"    public void setRoom_nullEditedRoom_throwsNullPointerException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":73,"author":{"gitId":"darrenhoon"},"content":"        assertThrows(NullPointerException.class, () -\u003e roomList.setRoom(ROOM_ONE, null));","lastModifiedDate":"2021-09-23"},{"lineNumber":74,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":75,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":76,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":77,"author":{"gitId":"darrenhoon"},"content":"    public void setRoom_targetRoomNotInList_throwsRoomNotFoundException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":78,"author":{"gitId":"darrenhoon"},"content":"        assertThrows(RoomNotFoundException.class, () -\u003e roomList.setRoom(ROOM_ONE, ROOM_ONE));","lastModifiedDate":"2021-09-23"},{"lineNumber":79,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":80,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":81,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":82,"author":{"gitId":"darrenhoon"},"content":"    public void setRoom_editedRoomIsSameRoom_success() {","lastModifiedDate":"2021-09-23"},{"lineNumber":83,"author":{"gitId":"darrenhoon"},"content":"        roomList.add(ROOM_ONE);","lastModifiedDate":"2021-09-23"},{"lineNumber":84,"author":{"gitId":"darrenhoon"},"content":"        roomList.setRoom(ROOM_ONE, ROOM_ONE);","lastModifiedDate":"2021-09-23"},{"lineNumber":85,"author":{"gitId":"darrenhoon"},"content":"        RoomList expectedRoomList \u003d new RoomList();","lastModifiedDate":"2021-09-23"},{"lineNumber":86,"author":{"gitId":"darrenhoon"},"content":"        expectedRoomList.add(ROOM_ONE);","lastModifiedDate":"2021-09-23"},{"lineNumber":87,"author":{"gitId":"darrenhoon"},"content":"        assertEquals(expectedRoomList, roomList);","lastModifiedDate":"2021-09-23"},{"lineNumber":88,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":89,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":90,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":91,"author":{"gitId":"darrenhoon"},"content":"    public void setRoom_editedRoomHasSameIdentity_success() {","lastModifiedDate":"2021-09-23"},{"lineNumber":92,"author":{"gitId":"darrenhoon"},"content":"        roomList.add(ROOM_ONE);","lastModifiedDate":"2021-09-23"},{"lineNumber":93,"author":{"gitId":"darrenhoon"},"content":"        Room editedRoom \u003d ROOM_ONE_EDITED;","lastModifiedDate":"2021-09-23"},{"lineNumber":94,"author":{"gitId":"darrenhoon"},"content":"        roomList.setRoom(ROOM_ONE, ROOM_ONE_EDITED);","lastModifiedDate":"2021-09-23"},{"lineNumber":95,"author":{"gitId":"darrenhoon"},"content":"        RoomList expectedRoomList \u003d new RoomList();","lastModifiedDate":"2021-09-23"},{"lineNumber":96,"author":{"gitId":"darrenhoon"},"content":"        expectedRoomList.add(editedRoom);","lastModifiedDate":"2021-09-23"},{"lineNumber":97,"author":{"gitId":"darrenhoon"},"content":"        assertEquals(expectedRoomList, roomList);","lastModifiedDate":"2021-09-23"},{"lineNumber":98,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":99,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":100,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":101,"author":{"gitId":"darrenhoon"},"content":"    public void setRoom_editedRoomHasDifferentIdentity_success() {","lastModifiedDate":"2021-09-23"},{"lineNumber":102,"author":{"gitId":"darrenhoon"},"content":"        roomList.add(ROOM_ONE);","lastModifiedDate":"2021-09-23"},{"lineNumber":103,"author":{"gitId":"darrenhoon"},"content":"        roomList.setRoom(ROOM_ONE, ROOM_TWO);","lastModifiedDate":"2021-09-23"},{"lineNumber":104,"author":{"gitId":"darrenhoon"},"content":"        RoomList expectedRoomList \u003d new RoomList();","lastModifiedDate":"2021-09-23"},{"lineNumber":105,"author":{"gitId":"darrenhoon"},"content":"        expectedRoomList.add(ROOM_TWO);","lastModifiedDate":"2021-09-23"},{"lineNumber":106,"author":{"gitId":"darrenhoon"},"content":"        assertEquals(expectedRoomList, roomList);","lastModifiedDate":"2021-09-23"},{"lineNumber":107,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":108,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":109,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":110,"author":{"gitId":"darrenhoon"},"content":"    public void setRoom_editedRoomHasNonUniqueIdentity_throwsDuplicateRoomException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":111,"author":{"gitId":"darrenhoon"},"content":"        roomList.add(ROOM_ONE);","lastModifiedDate":"2021-09-23"},{"lineNumber":112,"author":{"gitId":"darrenhoon"},"content":"        roomList.add(ROOM_TWO);","lastModifiedDate":"2021-09-23"},{"lineNumber":113,"author":{"gitId":"darrenhoon"},"content":"        assertThrows(DuplicateRoomException.class, () -\u003e roomList.setRoom(ROOM_ONE, ROOM_TWO));","lastModifiedDate":"2021-09-23"},{"lineNumber":114,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":115,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":116,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":117,"author":{"gitId":"darrenhoon"},"content":"    public void remove_nullRoom_throwsNullPointerException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":118,"author":{"gitId":"darrenhoon"},"content":"        assertThrows(NullPointerException.class, () -\u003e roomList.remove(null));","lastModifiedDate":"2021-09-23"},{"lineNumber":119,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":120,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":121,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":122,"author":{"gitId":"darrenhoon"},"content":"    public void remove_roomDoesNotExist_throwsRoomNotFoundException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":123,"author":{"gitId":"darrenhoon"},"content":"        assertThrows(RoomNotFoundException.class, () -\u003e roomList.remove(ROOM_ONE));","lastModifiedDate":"2021-09-23"},{"lineNumber":124,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":125,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":126,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":127,"author":{"gitId":"darrenhoon"},"content":"    public void remove_existingRoom_removesRoom() {","lastModifiedDate":"2021-09-23"},{"lineNumber":128,"author":{"gitId":"darrenhoon"},"content":"        roomList.add(ROOM_ONE);","lastModifiedDate":"2021-09-23"},{"lineNumber":129,"author":{"gitId":"darrenhoon"},"content":"        roomList.remove(ROOM_ONE);","lastModifiedDate":"2021-09-23"},{"lineNumber":130,"author":{"gitId":"darrenhoon"},"content":"        RoomList expectedRoomList \u003d new RoomList();","lastModifiedDate":"2021-09-23"},{"lineNumber":131,"author":{"gitId":"darrenhoon"},"content":"        assertEquals(expectedRoomList, roomList);","lastModifiedDate":"2021-09-23"},{"lineNumber":132,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":133,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":134,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":135,"author":{"gitId":"darrenhoon"},"content":"    public void setRooms_nullRoomList_throwsNullPointerException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":136,"author":{"gitId":"darrenhoon"},"content":"        assertThrows(NullPointerException.class, () -\u003e roomList.setRooms((RoomList) null));","lastModifiedDate":"2021-09-23"},{"lineNumber":137,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":138,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":139,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":140,"author":{"gitId":"darrenhoon"},"content":"    public void setRooms_roomList_replacesOwnListWithProvidedRoomList() {","lastModifiedDate":"2021-09-23"},{"lineNumber":141,"author":{"gitId":"darrenhoon"},"content":"        roomList.add(ROOM_ONE);","lastModifiedDate":"2021-09-23"},{"lineNumber":142,"author":{"gitId":"darrenhoon"},"content":"        RoomList expectedRoomList \u003d new RoomList();","lastModifiedDate":"2021-09-23"},{"lineNumber":143,"author":{"gitId":"darrenhoon"},"content":"        expectedRoomList.add(ROOM_TWO);","lastModifiedDate":"2021-09-23"},{"lineNumber":144,"author":{"gitId":"darrenhoon"},"content":"        roomList.setRooms(expectedRoomList);","lastModifiedDate":"2021-09-23"},{"lineNumber":145,"author":{"gitId":"darrenhoon"},"content":"        assertEquals(expectedRoomList, roomList);","lastModifiedDate":"2021-09-23"},{"lineNumber":146,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":147,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":148,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":149,"author":{"gitId":"darrenhoon"},"content":"    public void setRooms_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":150,"author":{"gitId":"darrenhoon"},"content":"        assertThrows(NullPointerException.class, () -\u003e roomList.setRooms((List\u003cRoom\u003e) null));","lastModifiedDate":"2021-09-23"},{"lineNumber":151,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":152,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":153,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":154,"author":{"gitId":"darrenhoon"},"content":"    public void setRooms_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-09-23"},{"lineNumber":155,"author":{"gitId":"darrenhoon"},"content":"        roomList.add(ROOM_ONE);","lastModifiedDate":"2021-09-23"},{"lineNumber":156,"author":{"gitId":"darrenhoon"},"content":"        List\u003cRoom\u003e localRoomList \u003d Collections.singletonList(ROOM_TWO);","lastModifiedDate":"2021-09-23"},{"lineNumber":157,"author":{"gitId":"darrenhoon"},"content":"        roomList.setRooms(localRoomList);","lastModifiedDate":"2021-09-23"},{"lineNumber":158,"author":{"gitId":"darrenhoon"},"content":"        RoomList expectedRoomList \u003d new RoomList();","lastModifiedDate":"2021-09-23"},{"lineNumber":159,"author":{"gitId":"darrenhoon"},"content":"        expectedRoomList.add(ROOM_TWO);","lastModifiedDate":"2021-09-23"},{"lineNumber":160,"author":{"gitId":"darrenhoon"},"content":"        assertEquals(expectedRoomList, roomList);","lastModifiedDate":"2021-09-23"},{"lineNumber":161,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":162,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":163,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":164,"author":{"gitId":"darrenhoon"},"content":"    public void setRooms_listWithDuplicateRooms_throwsDuplicateRoomException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":165,"author":{"gitId":"darrenhoon"},"content":"        List\u003cRoom\u003e listWithDuplicateRooms \u003d Arrays.asList(ROOM_ONE, ROOM_ONE);","lastModifiedDate":"2021-09-23"},{"lineNumber":166,"author":{"gitId":"darrenhoon"},"content":"        assertThrows(DuplicateRoomException.class, () -\u003e roomList.setRooms(listWithDuplicateRooms));","lastModifiedDate":"2021-09-23"},{"lineNumber":167,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":168,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":169,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":170,"author":{"gitId":"darrenhoon"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":171,"author":{"gitId":"darrenhoon"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-09-23"},{"lineNumber":172,"author":{"gitId":"darrenhoon"},"content":"            -\u003e roomList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-09-23"},{"lineNumber":173,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":174,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"darrenhoon":174}},{"path":"src/test/java/seedu/address/model/room/RoomTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package seedu.address.model.room;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_ROOM_ONE;","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_ROOM_TWO;","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_VACANCY_ROOM_ONE;","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_VACANCY_ROOM_TWO;","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"import static seedu.address.testutil.TypicalRooms.ALICE;","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"import static seedu.address.testutil.TypicalRooms.BENSON;","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"import static seedu.address.testutil.TypicalRooms.CHARLIE;","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"import static seedu.address.testutil.TypicalRooms.GUESTS;","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"import static seedu.address.testutil.TypicalRooms.ROOM_ONE;","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"import static seedu.address.testutil.TypicalRooms.ROOM_TWO;","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"darrenhoon"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"darrenhoon"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"darrenhoon"},"content":"import seedu.address.testutil.RoomBuilder;","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"darrenhoon"},"content":"public class RoomTest {","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"darrenhoon"},"content":"    public void invalidRoomName() {","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"darrenhoon"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"darrenhoon"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_ROOM_TWO + \" \";","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"darrenhoon"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"darrenhoon"},"content":"            new RoomBuilder(ROOM_TWO).withNumber(nameWithTrailingSpaces).build());","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"darrenhoon"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"darrenhoon"},"content":"        Room room \u003d new RoomBuilder().build();","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"darrenhoon"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e room.getGuests().remove(0));","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"darrenhoon"},"content":"    public void replaceGuestTest_guestPresent() {","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"darrenhoon"},"content":"        Person[] persons \u003d {ALICE, BENSON};","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"darrenhoon"},"content":"        Person editedPerson \u003d new PersonBuilder(ALICE).withName(\"Alicia\").build();","lastModifiedDate":"2021-10-02"},{"lineNumber":47,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"darrenhoon"},"content":"        Person[] editedPersons \u003d {editedPerson, BENSON};","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"darrenhoon"},"content":"        Room room \u003d new RoomBuilder().withNumber(\"001\").withVacancy(Vacancy.OCCUPIED)","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"darrenhoon"},"content":"                .withGuests(persons).build();","lastModifiedDate":"2021-10-02"},{"lineNumber":52,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":53,"author":{"gitId":"darrenhoon"},"content":"        Room editedRoom \u003d room.replaceGuest(ALICE, editedPerson);","lastModifiedDate":"2021-10-02"},{"lineNumber":54,"author":{"gitId":"darrenhoon"},"content":"        Room correctRoom \u003d new RoomBuilder().withNumber(\"001\").withVacancy(Vacancy.OCCUPIED)","lastModifiedDate":"2021-10-02"},{"lineNumber":55,"author":{"gitId":"darrenhoon"},"content":"                .withGuests(editedPersons).build();","lastModifiedDate":"2021-10-02"},{"lineNumber":56,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":57,"author":{"gitId":"darrenhoon"},"content":"        Person[] wrongPersons \u003d {BENSON, CHARLIE};","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"darrenhoon"},"content":"        Room wrongRoom \u003d new RoomBuilder().withNumber(\"001\").withVacancy(Vacancy.OCCUPIED)","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"darrenhoon"},"content":"                .withGuests(wrongPersons).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"darrenhoon"},"content":"        Room wrongEditedRoom \u003d wrongRoom.replaceGuest(ALICE, CHARLIE);","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"darrenhoon"},"content":"        assertEquals(correctRoom, editedRoom);","lastModifiedDate":"2021-10-02"},{"lineNumber":63,"author":{"gitId":"darrenhoon"},"content":"        assertFalse(correctRoom.equals(wrongEditedRoom));","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":67,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":68,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":69,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-10-03"},{"lineNumber":70,"author":{"gitId":"darrenhoon"},"content":"    public void replaceGuestTest_guestAbsent() {","lastModifiedDate":"2021-10-03"},{"lineNumber":71,"author":{"gitId":"darrenhoon"},"content":"        Person[] persons \u003d {ALICE, BENSON};","lastModifiedDate":"2021-10-03"},{"lineNumber":72,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":73,"author":{"gitId":"darrenhoon"},"content":"        Person editedPerson \u003d new PersonBuilder(CHARLIE).withName(\"Cordoba\").build();","lastModifiedDate":"2021-10-03"},{"lineNumber":74,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":75,"author":{"gitId":"darrenhoon"},"content":"        Room room \u003d new RoomBuilder().withNumber(\"001\").withVacancy(Vacancy.OCCUPIED)","lastModifiedDate":"2021-10-03"},{"lineNumber":76,"author":{"gitId":"darrenhoon"},"content":"                .withGuests(persons).build();","lastModifiedDate":"2021-10-03"},{"lineNumber":77,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":78,"author":{"gitId":"darrenhoon"},"content":"        Room editedRoom \u003d room.replaceGuest(ALICE, editedPerson);","lastModifiedDate":"2021-10-03"},{"lineNumber":79,"author":{"gitId":"darrenhoon"},"content":"        Room correctRoom \u003d new RoomBuilder().withNumber(\"001\").withVacancy(Vacancy.OCCUPIED)","lastModifiedDate":"2021-10-03"},{"lineNumber":80,"author":{"gitId":"darrenhoon"},"content":"                .withGuests(persons).build();","lastModifiedDate":"2021-10-03"},{"lineNumber":81,"author":{"gitId":"darrenhoon"},"content":"        assertFalse(correctRoom.equals(editedRoom));","lastModifiedDate":"2021-10-03"},{"lineNumber":82,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":83,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":84,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":85,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":86,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-09-25"},{"lineNumber":87,"author":{"gitId":"darrenhoon"},"content":"    public void isSameRoom() {","lastModifiedDate":"2021-09-25"},{"lineNumber":88,"author":{"gitId":"darrenhoon"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-09-25"},{"lineNumber":89,"author":{"gitId":"darrenhoon"},"content":"        assertTrue(ROOM_ONE.isSameRoom(ROOM_ONE));","lastModifiedDate":"2021-09-25"},{"lineNumber":90,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":91,"author":{"gitId":"darrenhoon"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-09-25"},{"lineNumber":92,"author":{"gitId":"darrenhoon"},"content":"        assertFalse(ROOM_ONE.isSameRoom(null));","lastModifiedDate":"2021-09-25"},{"lineNumber":93,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":94,"author":{"gitId":"darrenhoon"},"content":"        // same room number, all other attributes different -\u003e returns true","lastModifiedDate":"2021-09-25"},{"lineNumber":95,"author":{"gitId":"darrenhoon"},"content":"        Room editedRoom \u003d new RoomBuilder(ROOM_ONE).withNumber(VALID_NAME_ROOM_ONE)","lastModifiedDate":"2021-09-25"},{"lineNumber":96,"author":{"gitId":"darrenhoon"},"content":"                .withVacancy(VALID_VACANCY_ROOM_TWO).withGuests(GUESTS).build();","lastModifiedDate":"2021-09-25"},{"lineNumber":97,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":98,"author":{"gitId":"darrenhoon"},"content":"        assertTrue(ROOM_ONE.isSameRoom(editedRoom));","lastModifiedDate":"2021-09-25"},{"lineNumber":99,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":100,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":101,"author":{"gitId":"darrenhoon"},"content":"        // different room number, all other attributes same -\u003e returns false","lastModifiedDate":"2021-09-25"},{"lineNumber":102,"author":{"gitId":"darrenhoon"},"content":"        editedRoom \u003d new RoomBuilder(ROOM_ONE).withNumber(VALID_NAME_ROOM_TWO)","lastModifiedDate":"2021-09-25"},{"lineNumber":103,"author":{"gitId":"darrenhoon"},"content":"                .withVacancy(VALID_VACANCY_ROOM_ONE).build();","lastModifiedDate":"2021-09-25"},{"lineNumber":104,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":105,"author":{"gitId":"darrenhoon"},"content":"        assertFalse(ROOM_ONE.isSameRoom(editedRoom));","lastModifiedDate":"2021-09-25"},{"lineNumber":106,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":107,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":108,"author":{"gitId":"darrenhoon"},"content":"        // name differs in case, all other attributes same.","lastModifiedDate":"2021-09-25"},{"lineNumber":109,"author":{"gitId":"darrenhoon"},"content":"        // but since name is number eg \"001\", case should be indifferent -\u003e returns true","lastModifiedDate":"2021-09-25"},{"lineNumber":110,"author":{"gitId":"darrenhoon"},"content":"        Room editedRoomTwo \u003d new RoomBuilder(ROOM_TWO).withNumber(VALID_NAME_ROOM_TWO.toLowerCase()).build();","lastModifiedDate":"2021-09-25"},{"lineNumber":111,"author":{"gitId":"darrenhoon"},"content":"        assertTrue(ROOM_TWO.isSameRoom(editedRoomTwo));","lastModifiedDate":"2021-09-25"},{"lineNumber":112,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":113,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":114,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":115,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-09-25"},{"lineNumber":116,"author":{"gitId":"darrenhoon"},"content":"    public void equals() {","lastModifiedDate":"2021-09-25"},{"lineNumber":117,"author":{"gitId":"darrenhoon"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-09-25"},{"lineNumber":118,"author":{"gitId":"darrenhoon"},"content":"        Room roomOneCopy \u003d new RoomBuilder(ROOM_ONE).build();","lastModifiedDate":"2021-09-25"},{"lineNumber":119,"author":{"gitId":"darrenhoon"},"content":"        assertTrue(ROOM_ONE.equals(roomOneCopy));","lastModifiedDate":"2021-09-25"},{"lineNumber":120,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":121,"author":{"gitId":"darrenhoon"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-09-25"},{"lineNumber":122,"author":{"gitId":"darrenhoon"},"content":"        assertTrue(ROOM_ONE.equals(ROOM_ONE));","lastModifiedDate":"2021-09-25"},{"lineNumber":123,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":124,"author":{"gitId":"darrenhoon"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-09-25"},{"lineNumber":125,"author":{"gitId":"darrenhoon"},"content":"        assertFalse(ROOM_ONE.equals(null));","lastModifiedDate":"2021-09-25"},{"lineNumber":126,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":127,"author":{"gitId":"darrenhoon"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-09-25"},{"lineNumber":128,"author":{"gitId":"darrenhoon"},"content":"        assertFalse(ROOM_ONE.equals(5));","lastModifiedDate":"2021-09-25"},{"lineNumber":129,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":130,"author":{"gitId":"darrenhoon"},"content":"        // different room -\u003e returns false","lastModifiedDate":"2021-09-25"},{"lineNumber":131,"author":{"gitId":"darrenhoon"},"content":"        assertFalse(ROOM_ONE.equals(ROOM_TWO));","lastModifiedDate":"2021-09-25"},{"lineNumber":132,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":133,"author":{"gitId":"darrenhoon"},"content":"        // different room number -\u003e returns false","lastModifiedDate":"2021-09-25"},{"lineNumber":134,"author":{"gitId":"darrenhoon"},"content":"        Room editedRoomOne \u003d new RoomBuilder(ROOM_ONE).withNumber(VALID_NAME_ROOM_TWO).build();","lastModifiedDate":"2021-09-25"},{"lineNumber":135,"author":{"gitId":"darrenhoon"},"content":"        assertFalse(ROOM_ONE.equals(editedRoomOne));","lastModifiedDate":"2021-09-25"},{"lineNumber":136,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":137,"author":{"gitId":"darrenhoon"},"content":"        // different vacancy -\u003e returns false","lastModifiedDate":"2021-09-25"},{"lineNumber":138,"author":{"gitId":"darrenhoon"},"content":"        editedRoomOne \u003d new RoomBuilder(ROOM_ONE).withVacancy(VALID_VACANCY_ROOM_TWO).build();","lastModifiedDate":"2021-09-25"},{"lineNumber":139,"author":{"gitId":"darrenhoon"},"content":"        assertFalse(ROOM_ONE.equals(editedRoomOne));","lastModifiedDate":"2021-09-25"},{"lineNumber":140,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":141,"author":{"gitId":"darrenhoon"},"content":"        // different guests -\u003e returns false","lastModifiedDate":"2021-09-25"},{"lineNumber":142,"author":{"gitId":"darrenhoon"},"content":"        editedRoomOne \u003d new RoomBuilder(ROOM_ONE).withGuests(GUESTS).build();","lastModifiedDate":"2021-09-25"},{"lineNumber":143,"author":{"gitId":"darrenhoon"},"content":"        assertFalse(ROOM_ONE.equals(editedRoomOne));","lastModifiedDate":"2021-09-25"},{"lineNumber":144,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":145,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":146,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-09-25"},{"lineNumber":147,"author":{"gitId":"darrenhoon"},"content":"    public void hashCodeCheck() {","lastModifiedDate":"2021-09-25"},{"lineNumber":148,"author":{"gitId":"darrenhoon"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-09-25"},{"lineNumber":149,"author":{"gitId":"darrenhoon"},"content":"        assertTrue(ROOM_ONE.hashCode() \u003d\u003d ROOM_ONE.hashCode());","lastModifiedDate":"2021-09-25"},{"lineNumber":150,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":151,"author":{"gitId":"darrenhoon"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-09-25"},{"lineNumber":152,"author":{"gitId":"darrenhoon"},"content":"        Room roomOneCopy \u003d new RoomBuilder(ROOM_ONE).build();","lastModifiedDate":"2021-09-25"},{"lineNumber":153,"author":{"gitId":"darrenhoon"},"content":"        assertTrue(ROOM_ONE.hashCode() \u003d\u003d roomOneCopy.hashCode());","lastModifiedDate":"2021-09-25"},{"lineNumber":154,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":155,"author":{"gitId":"darrenhoon"},"content":"        // different room number -\u003e returns false","lastModifiedDate":"2021-09-25"},{"lineNumber":156,"author":{"gitId":"darrenhoon"},"content":"        Room editedRoomOne \u003d new RoomBuilder(ROOM_ONE).withNumber(VALID_NAME_ROOM_TWO).build();","lastModifiedDate":"2021-09-25"},{"lineNumber":157,"author":{"gitId":"darrenhoon"},"content":"        assertFalse(ROOM_ONE.hashCode() \u003d\u003d editedRoomOne.hashCode());","lastModifiedDate":"2021-09-25"},{"lineNumber":158,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":159,"author":{"gitId":"darrenhoon"},"content":"        // different vacancy -\u003e returns false","lastModifiedDate":"2021-09-25"},{"lineNumber":160,"author":{"gitId":"darrenhoon"},"content":"        editedRoomOne \u003d new RoomBuilder(ROOM_ONE).withVacancy(VALID_VACANCY_ROOM_TWO).build();","lastModifiedDate":"2021-09-25"},{"lineNumber":161,"author":{"gitId":"darrenhoon"},"content":"        assertFalse(ROOM_ONE.hashCode() \u003d\u003d editedRoomOne.hashCode());","lastModifiedDate":"2021-09-25"},{"lineNumber":162,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":163,"author":{"gitId":"darrenhoon"},"content":"        // different guests -\u003e returns false","lastModifiedDate":"2021-09-25"},{"lineNumber":164,"author":{"gitId":"darrenhoon"},"content":"        editedRoomOne \u003d new RoomBuilder(ROOM_ONE).withGuests(GUESTS).build();","lastModifiedDate":"2021-09-25"},{"lineNumber":165,"author":{"gitId":"darrenhoon"},"content":"        assertFalse(ROOM_ONE.hashCode() \u003d\u003d editedRoomOne.hashCode());","lastModifiedDate":"2021-09-25"},{"lineNumber":166,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":167,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"darrenhoon":167}},{"path":"src/test/java/seedu/address/model/room/VacancyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package seedu.address.model.room;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"public class VacancyTest {","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"    public static final Vacancy VACANT_FACTORY \u003d Vacancy.of(true);","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"    public static final Vacancy OCCUPIED_FACTORY \u003d Vacancy.of(false);","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"    public static final Vacancy VACANT_CONSTRUCTOR \u003d Vacancy.VACANT;","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"    public static final Vacancy OCCUPIED_CONSTRUCTOR \u003d Vacancy.OCCUPIED;","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"    public void isValidVacancy() {","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":"        assertEquals(VACANT_FACTORY, VACANT_CONSTRUCTOR);","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":"        assertEquals(OCCUPIED_FACTORY, OCCUPIED_CONSTRUCTOR);","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"darrenhoon"},"content":"        assertNotEquals(VACANT_FACTORY, OCCUPIED_FACTORY);","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"darrenhoon"},"content":"        assertNotEquals(VACANT_CONSTRUCTOR, OCCUPIED_CONSTRUCTOR);","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"darrenhoon"},"content":"        assertNotEquals(VACANT_FACTORY, OCCUPIED_CONSTRUCTOR);","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"darrenhoon"},"content":"        assertNotEquals(OCCUPIED_FACTORY, VACANT_CONSTRUCTOR);","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"darrenhoon":25}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"wilburrito"},"content":"    private static final String VALID_NRIC \u003d BENSON.getNric().value;","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"wilburrito"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_NRIC, VALID_TAGS);","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"BananaTechs"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"wilburrito"},"content":"                new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_NRIC, VALID_TAGS);","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"wilburrito"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_NRIC, VALID_TAGS);","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"BananaTechs"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-04"},{"lineNumber":69,"author":{"gitId":"wilburrito"},"content":"                new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_NRIC, VALID_TAGS);","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"wilburrito"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_NRIC, VALID_TAGS);","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"BananaTechs"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-04"},{"lineNumber":85,"author":{"gitId":"wilburrito"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_NRIC, VALID_TAGS);","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"wilburrito"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_NRIC, VALID_TAGS);","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"BananaTechs"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-04"},{"lineNumber":101,"author":{"gitId":"wilburrito"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_NRIC, VALID_TAGS);","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"wilburrito"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_NRIC, invalidTags);","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"BananaTechs":4,"-":101,"wilburrito":10}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedResidencyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BananaTechs"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"BananaTechs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"BananaTechs"},"content":"import static seedu.address.storage.JsonAdaptedResidency.MESSAGE_DATETIME_CONSTRAINTS_FORMAT;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"BananaTechs"},"content":"import static seedu.address.storage.JsonAdaptedResidency.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"BananaTechs"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"BananaTechs"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"BananaTechs"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"BananaTechs"},"content":"import static seedu.address.testutil.TypicalRooms.ROOM_ONE;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"BananaTechs"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"BananaTechs"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"BananaTechs"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"BananaTechs"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"BananaTechs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"wilburrito"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.residency.Residency;","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.room.Room;","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.room.RoomNumber;","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"BananaTechs"},"content":"public class JsonAdaptedResidencyTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"BananaTechs"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"BananaTechs"},"content":"    public void toModelType_validResidency_returnsResidency() throws Exception {","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"BananaTechs"},"content":"        Set\u003cPerson\u003e guests \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"BananaTechs"},"content":"        guests.add(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"BananaTechs"},"content":"        guests.add(BENSON);","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"BananaTechs"},"content":"        Residency residency \u003d new Residency(ROOM_ONE, guests);","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"BananaTechs"},"content":"        JsonAdaptedResidency jsonResidency \u003d new JsonAdaptedResidency(residency);","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"wilburrito"},"content":"        Map\u003cNric, Person\u003e idPersonMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"BananaTechs"},"content":"        Map\u003cRoomNumber, Room\u003e roomNumberRoomMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"wilburrito"},"content":"        idPersonMap.put(ALICE.getNric(), ALICE);","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"wilburrito"},"content":"        idPersonMap.put(BENSON.getNric(), BENSON);","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"BananaTechs"},"content":"        roomNumberRoomMap.put(ROOM_ONE.getRoomNumber(), ROOM_ONE);","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"BananaTechs"},"content":"        assertEquals(residency, jsonResidency.toModelType(idPersonMap, roomNumberRoomMap));","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"BananaTechs"},"content":"        residency.checkOut();","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"BananaTechs"},"content":"        jsonResidency \u003d new JsonAdaptedResidency(residency);","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"BananaTechs"},"content":"        assertEquals(residency, jsonResidency.toModelType(idPersonMap, roomNumberRoomMap));","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"BananaTechs"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"BananaTechs"},"content":"    public void toModelType_invalidRoom_throwsIllegalValueException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"BananaTechs"},"content":"        Set\u003cPerson\u003e guests \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"BananaTechs"},"content":"        guests.add(ALICE);","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"BananaTechs"},"content":"        guests.add(BENSON);","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"BananaTechs"},"content":"        Residency residency \u003d new Residency(ROOM_ONE, guests);","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"BananaTechs"},"content":"        JsonAdaptedResidency jsonResidency \u003d new JsonAdaptedResidency(residency);","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"BananaTechs"},"content":"        Map\u003cNric, Person\u003e idPersonMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"BananaTechs"},"content":"        Map\u003cRoomNumber, Room\u003e roomNumberRoomMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"BananaTechs"},"content":"        idPersonMap.put(ALICE.getNric(), ALICE);","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"BananaTechs"},"content":"        idPersonMap.put(BENSON.getNric(), BENSON);","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"BananaTechs"},"content":"        String expectedMessage \u003d RoomNumber.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"BananaTechs"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, ()","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"BananaTechs"},"content":"            -\u003e jsonResidency.toModelType(idPersonMap, roomNumberRoomMap));","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"BananaTechs"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"BananaTechs"},"content":"    public void toModelType_invalidCheckInTime_throwsIllegalValueException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"BananaTechs"},"content":"        JsonAdaptedResidency jsonResidency \u003d","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"BananaTechs"},"content":"                new JsonAdaptedResidency(ROOM_ONE.getRoomNumber().toString(), new String[0], \"beedle\", null);","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"BananaTechs"},"content":"        Map\u003cNric, Person\u003e nricPersonMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"BananaTechs"},"content":"        Map\u003cRoomNumber, Room\u003e roomNumberRoomMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"BananaTechs"},"content":"        roomNumberRoomMap.put(ROOM_ONE.getRoomNumber(), ROOM_ONE);","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"BananaTechs"},"content":"        String expectedMessage \u003d String.format(MESSAGE_DATETIME_CONSTRAINTS_FORMAT, \"check in time\");","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"BananaTechs"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, ()","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"BananaTechs"},"content":"            -\u003e jsonResidency.toModelType(nricPersonMap, roomNumberRoomMap));","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"BananaTechs"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"BananaTechs"},"content":"    public void toModelType_nullCheckInTime_throwsIllegalValueException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"BananaTechs"},"content":"        JsonAdaptedResidency jsonResidency \u003d","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"BananaTechs"},"content":"                new JsonAdaptedResidency(ROOM_ONE.getRoomNumber().toString(), new String[0], null, null);","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"BananaTechs"},"content":"        Map\u003cNric, Person\u003e nricPersonMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"BananaTechs"},"content":"        Map\u003cRoomNumber, Room\u003e roomNumberRoomMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"BananaTechs"},"content":"        roomNumberRoomMap.put(ROOM_ONE.getRoomNumber(), ROOM_ONE);","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"BananaTechs"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, \"check in time\");","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"BananaTechs"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, ()","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"BananaTechs"},"content":"            -\u003e jsonResidency.toModelType(nricPersonMap, roomNumberRoomMap));","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"BananaTechs"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"BananaTechs"},"content":"    public void toModelType_invalidCheckOutTime_throwsIllegalValueException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"BananaTechs"},"content":"        JsonAdaptedResidency jsonResidency \u003d","lastModifiedDate":"2021-10-22"},{"lineNumber":101,"author":{"gitId":"BananaTechs"},"content":"                new JsonAdaptedResidency(ROOM_ONE.getRoomNumber().toString(),","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"BananaTechs"},"content":"                        new String[0],","lastModifiedDate":"2021-10-22"},{"lineNumber":103,"author":{"gitId":"BananaTechs"},"content":"                        \"2021-10-22T11:15:57.563274400\",","lastModifiedDate":"2021-10-22"},{"lineNumber":104,"author":{"gitId":"BananaTechs"},"content":"                        \"beedle\");","lastModifiedDate":"2021-10-22"},{"lineNumber":105,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":106,"author":{"gitId":"BananaTechs"},"content":"        Map\u003cNric, Person\u003e nricPersonMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"BananaTechs"},"content":"        Map\u003cRoomNumber, Room\u003e roomNumberRoomMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":108,"author":{"gitId":"BananaTechs"},"content":"        roomNumberRoomMap.put(ROOM_ONE.getRoomNumber(), ROOM_ONE);","lastModifiedDate":"2021-10-22"},{"lineNumber":109,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":110,"author":{"gitId":"BananaTechs"},"content":"        String expectedMessage \u003d String.format(MESSAGE_DATETIME_CONSTRAINTS_FORMAT, \"check out time\");","lastModifiedDate":"2021-10-22"},{"lineNumber":111,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":112,"author":{"gitId":"BananaTechs"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, ()","lastModifiedDate":"2021-10-22"},{"lineNumber":113,"author":{"gitId":"BananaTechs"},"content":"            -\u003e jsonResidency.toModelType(nricPersonMap, roomNumberRoomMap));","lastModifiedDate":"2021-10-22"},{"lineNumber":114,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":115,"author":{"gitId":"BananaTechs"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"BananaTechs":111,"wilburrito":4}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.model.residency.exceptions.DuplicatePersonRegException;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.model.residency.exceptions.DuplicateRoomRegException;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.testutil.TypicalRecordsBook;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.testutil.TypicalResidencyBook;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"jianh0ng"},"content":"    private static final Path TYPICAL_RESIDENCIES_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalResidenciesAddressBook.json\");","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"jianh0ng"},"content":"    private static final Path TYPICAL_RECORDS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalRecordsAddressBook.json\");","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"jianh0ng"},"content":"    private static final Path DUPLICATE_ROOM_RESIDENCIES_FILE \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"jianh0ng"},"content":"            TEST_DATA_FOLDER.resolve(\"duplicateRoomResidenciesAddressBook.json\");","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"jianh0ng"},"content":"    private static final Path DUPLICATE_PERSON_RESIDENCIES_FILE \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"jianh0ng"},"content":"            TEST_DATA_FOLDER.resolve(\"duplicatePersonResidenciesAddressBook.json\");","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"jianh0ng"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"jianh0ng"},"content":"    public void toModelType_typicalResidenciesFile_success() throws Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"jianh0ng"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_RESIDENCIES_FILE,","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"jianh0ng"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"jianh0ng"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"jianh0ng"},"content":"        AddressBook typicalResidenciesAddressBook \u003d TypicalResidencyBook.getTypicalAddressBook();","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"jianh0ng"},"content":"        assertEquals(addressBookFromFile.getResidencyBook(), typicalResidenciesAddressBook.getResidencyBook());","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"jianh0ng"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"jianh0ng"},"content":"    public void toModelType_typicalRecordsFile_success() throws Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"jianh0ng"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_RECORDS_FILE,","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"jianh0ng"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"jianh0ng"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"jianh0ng"},"content":"        AddressBook typicalRecordsAddressBook \u003d TypicalRecordsBook.getTypicalAddressBook();","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"jianh0ng"},"content":"        assertEquals(addressBookFromFile.getRecordsBook(), typicalRecordsAddressBook.getRecordsBook());","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"jianh0ng"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"jianh0ng"},"content":"    public void toModelType_duplicateRoomResidenciesFile_throwsDuplicateRoomRegException() throws Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"jianh0ng"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_ROOM_RESIDENCIES_FILE,","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"jianh0ng"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"jianh0ng"},"content":"        assertThrows(DuplicateRoomRegException.class, DuplicateRoomRegException.MESSAGE,","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"jianh0ng"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"jianh0ng"},"content":"    @Test void toModelType_duplicatePersonsResidenciesFile_throwsDuplicatePersonRegException() throws Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"jianh0ng"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_RESIDENCIES_FILE,","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"jianh0ng"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"jianh0ng"},"content":"        assertThrows(DuplicatePersonRegException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jianh0ng":44,"-":47}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"wilburrito"},"content":"        descriptor.setNric(person.getNric());","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"wilburrito"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"wilburrito"},"content":"     * Sets the {@code Nric} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"wilburrito"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"wilburrito"},"content":"    public EditPersonDescriptorBuilder withNric(String nric) {","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"wilburrito"},"content":"        descriptor.setNric(new Nric(nric));","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"wilburrito"},"content":"        return this;","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"wilburrito"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"wilburrito"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"-":87,"wilburrito":10}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"wilburrito"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"wilburrito"},"content":"    public static final String DEFAULT_NRIC \u003d \"S9915772H\";","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"wilburrito"},"content":"    private Nric nric;","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"wilburrito"},"content":"        nric \u003d new Nric(DEFAULT_NRIC);","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"wilburrito"},"content":"        nric \u003d personToCopy.getNric();","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":98,"author":{"gitId":"darrenhoon"},"content":"     * Sets the {@code Room} of the {@code Person} that we are building.","lastModifiedDate":"2021-09-25"},{"lineNumber":99,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":100,"author":{"gitId":"wilburrito"},"content":"    public PersonBuilder withNric(String nric) {","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"wilburrito"},"content":"        this.nric \u003d Nric.of(nric);","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"darrenhoon"},"content":"        return this;","lastModifiedDate":"2021-09-25"},{"lineNumber":103,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":104,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":106,"author":{"gitId":"jianh0ng"},"content":"        return new Person(name, phone, email, address, nric, tags);","lastModifiedDate":"2021-11-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"jianh0ng":1,"-":95,"wilburrito":7,"darrenhoon":6}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"wilburrito"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"wilburrito"},"content":"        sb.append(PREFIX_NRIC + person.getNric().value + \" \");","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"wilburrito"},"content":"        descriptor.getNric().ifPresent(nric -\u003e sb.append(PREFIX_NRIC).append(nric.value).append(\" \"));","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"-":62,"wilburrito":3}},{"path":"src/test/java/seedu/address/testutil/RoomBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"peilinye"},"content":"import static seedu.address.model.util.SampleDataUtil.getTagSet;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"import java.util.Set;","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"import seedu.address.model.room.Room;","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"import seedu.address.model.room.RoomNumber;","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"import seedu.address.model.room.Vacancy;","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"peilinye"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"public class RoomBuilder {","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":"    public static final String DEFAULT_ROOM_NUMBER \u003d \"777\";","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"BananaTechs"},"content":"    public static final Vacancy DEFAULT_VACANCY \u003d Vacancy.VACANT;","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"peilinye"},"content":"    public static final Set\u003cTag\u003e DEFAULT_TAGS \u003d getTagSet(\"normal\");","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"darrenhoon"},"content":"    private RoomNumber number;","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"darrenhoon"},"content":"    private Vacancy vacancy;","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"darrenhoon"},"content":"    private Set\u003cPerson\u003e guests;","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"peilinye"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"darrenhoon"},"content":"     * Creates a {@code RoomBuilder} with the default details.","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"darrenhoon"},"content":"    public RoomBuilder() {","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"darrenhoon"},"content":"        number \u003d new RoomNumber(DEFAULT_ROOM_NUMBER);","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"BananaTechs"},"content":"        vacancy \u003d DEFAULT_VACANCY;","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"darrenhoon"},"content":"        guests \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"peilinye"},"content":"        tags \u003d DEFAULT_TAGS;","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"darrenhoon"},"content":"     * Initializes the RoomBuilder with the data of {@code roomToCopy}.","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"darrenhoon"},"content":"    public RoomBuilder(Room roomToCopy) {","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"darrenhoon"},"content":"        number \u003d roomToCopy.getRoomNumber();","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"BananaTechs"},"content":"        vacancy \u003d roomToCopy.getVacancy();","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"darrenhoon"},"content":"        guests \u003d roomToCopy.getGuests();","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"peilinye"},"content":"        tags \u003d roomToCopy.getTags();","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"darrenhoon"},"content":"     * Sets the {@code RoomNumber} of the {@code Room} that we are building.","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"darrenhoon"},"content":"    public RoomBuilder withNumber(String number) {","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"darrenhoon"},"content":"        this.number \u003d new RoomNumber(number);","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"darrenhoon"},"content":"        return this;","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"darrenhoon"},"content":"     * Sets the {@code Vacancy} of the {@code Room} that we are building.","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"BananaTechs"},"content":"    public RoomBuilder withVacancy(Vacancy vacancy) {","lastModifiedDate":"2021-09-24"},{"lineNumber":59,"author":{"gitId":"BananaTechs"},"content":"        this.vacancy \u003d vacancy;","lastModifiedDate":"2021-09-24"},{"lineNumber":60,"author":{"gitId":"darrenhoon"},"content":"        return this;","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":62,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"darrenhoon"},"content":"     * Sets the {@code Guests} of the {@code Room} that we are building.","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"darrenhoon"},"content":"    public RoomBuilder withGuests(Person[] guests) {","lastModifiedDate":"2021-09-23"},{"lineNumber":67,"author":{"gitId":"darrenhoon"},"content":"        Set\u003cPerson\u003e editedSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-09-25"},{"lineNumber":68,"author":{"gitId":"darrenhoon"},"content":"        editedSet.addAll(Arrays.asList(guests.clone()));","lastModifiedDate":"2021-09-25"},{"lineNumber":69,"author":{"gitId":"darrenhoon"},"content":"        this.guests \u003d editedSet;","lastModifiedDate":"2021-09-25"},{"lineNumber":70,"author":{"gitId":"darrenhoon"},"content":"        return this;","lastModifiedDate":"2021-09-23"},{"lineNumber":71,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":72,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":73,"author":{"gitId":"peilinye"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"peilinye"},"content":"     * Sets the {@code Tags} of the {@code Room} that we are building.","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"peilinye"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"peilinye"},"content":"    public RoomBuilder withTags(Tag[] tags) {","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"peilinye"},"content":"        Set\u003cTag\u003e editedSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"peilinye"},"content":"        editedSet.addAll(Arrays.asList(tags.clone()));","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"peilinye"},"content":"        this.tags \u003d editedSet;","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"peilinye"},"content":"        return this;","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"peilinye"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"peilinye"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"darrenhoon"},"content":"    public Room build() {","lastModifiedDate":"2021-09-23"},{"lineNumber":84,"author":{"gitId":"peilinye"},"content":"        return new Room(number, vacancy, guests, tags);","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":86,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":87,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"peilinye":18,"BananaTechs":5,"darrenhoon":64}},{"path":"src/test/java/seedu/address/testutil/TypicalAddressBook.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"BananaTechs"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"BananaTechs"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPersons;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"BananaTechs"},"content":"import static seedu.address.testutil.TypicalRooms.getTypicalRooms;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"BananaTechs"},"content":"import seedu.address.model.room.Room;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"BananaTechs"},"content":"/**","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"BananaTechs"},"content":" * A utility class for constructing typical address books to be used in tests.","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"BananaTechs"},"content":" */","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"BananaTechs"},"content":"public class TypicalAddressBook {","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"BananaTechs"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"BananaTechs"},"content":"     * Returns an {@code AddressBook} with all the typical persons and rooms.","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"BananaTechs"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"BananaTechs"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"BananaTechs"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"BananaTechs"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"BananaTechs"},"content":"            ab.addPerson(person);","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"BananaTechs"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"BananaTechs"},"content":"        for (Room room : getTypicalRooms()) {","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"BananaTechs"},"content":"            ab.addRoom(room);","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"BananaTechs"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"BananaTechs"},"content":"        return ab;","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"BananaTechs"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"BananaTechs"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"BananaTechs":28}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"BananaTechs"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"BananaTechs"},"content":"    public static final Index INDEX_FIRST_ROOM \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"BananaTechs"},"content":"    public static final Index INDEX_SECOND_ROOM \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"BananaTechs":3,"-":12}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"jianh0ng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_CHARLIE;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"wilburrito"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_AMY;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"wilburrito"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"wilburrito"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"wilburrito"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"wilburrito"},"content":"            .withTags(\"friends\").withNric(\"S98765432A\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"wilburrito"},"content":"            .withTags(\"owesMoney\", \"friends\").withNric(\"S98765432B\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"wilburrito"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withNric(\"S98765432C\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"wilburrito"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\")","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"wilburrito"},"content":"            .withNric(\"S98765432D\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"wilburrito"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withNric(\"S98765432E\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"wilburrito"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withNric(\"S98765432F\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"wilburrito"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withNric(\"S98765432G\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"wilburrito"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").withNric(\"test8\").build();","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"wilburrito"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").withNric(\"test9\").build();","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"wilburrito"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"wilburrito"},"content":"            .withNric(VALID_NRIC_AMY).build();","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":64,"author":{"gitId":"wilburrito"},"content":"            .withNric(VALID_NRIC_BOB).build();","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":66,"author":{"gitId":"jianh0ng"},"content":"    public static final Person CHARLIE \u003d new PersonBuilder().withName(VALID_NAME_CHARLIE).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"darrenhoon"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2021-09-25"},{"lineNumber":68,"author":{"gitId":"wilburrito"},"content":"            .withTags(VALID_TAG_FRIEND).withNric(\"test10\").build();","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":72,"author":{"gitId":"darrenhoon"},"content":"    public static final Set\u003cPerson\u003e PERSON_LIST_ONE \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"darrenhoon"},"content":"            new HashSet\u003cPerson\u003e(Arrays.asList(ALICE, BENSON, CHARLIE));","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"darrenhoon"},"content":"    public static final Set\u003cPerson\u003e PERSON_LIST_TWO \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"darrenhoon"},"content":"            new HashSet\u003cPerson\u003e(Arrays.asList(ALICE, BOB, DANIEL));","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"jianh0ng":2,"-":66,"wilburrito":18,"darrenhoon":8}},{"path":"src/test/java/seedu/address/testutil/TypicalRecordsBook.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianh0ng"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"jianh0ng"},"content":"import static seedu.address.model.residency.ResidencyTest.CHECK_IN_TIME_ONE;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"jianh0ng"},"content":"import static seedu.address.model.residency.ResidencyTest.CHECK_OUT_TIME_ONE;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"jianh0ng"},"content":"import static seedu.address.testutil.TypicalPersons.PERSON_LIST_ONE;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"jianh0ng"},"content":"import static seedu.address.testutil.TypicalRooms.ROOM_ONE;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"jianh0ng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"jianh0ng"},"content":"import java.util.List;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.model.residency.Residency;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"jianh0ng"},"content":"public class TypicalRecordsBook {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"jianh0ng"},"content":"    public static final Residency RESIDENCY_ONE \u003d","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"jianh0ng"},"content":"            new Residency(ROOM_ONE, PERSON_LIST_ONE, CHECK_IN_TIME_ONE, CHECK_OUT_TIME_ONE);","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"jianh0ng"},"content":"    private TypicalRecordsBook() {};","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"jianh0ng"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"jianh0ng"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"jianh0ng"},"content":"        for (Residency residency : getTypicalRecordsBook()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"jianh0ng"},"content":"            ab.record(residency);","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"jianh0ng"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"jianh0ng"},"content":"        return ab;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"jianh0ng"},"content":"    public static List\u003cResidency\u003e getTypicalRecordsBook() {","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"jianh0ng"},"content":"        ArrayList\u003cResidency\u003e records \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"jianh0ng"},"content":"        records.add(RESIDENCY_ONE);","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"jianh0ng"},"content":"        return records;","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"jianh0ng"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"jianh0ng":35}},{"path":"src/test/java/seedu/address/testutil/TypicalResidencyBook.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jianh0ng"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"jianh0ng"},"content":"import static seedu.address.model.residency.ResidencyTest.CHECK_IN_TIME_ONE;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"jianh0ng"},"content":"import static seedu.address.testutil.TypicalPersons.PERSON_LIST_ONE;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"jianh0ng"},"content":"import static seedu.address.testutil.TypicalRooms.ROOM_ONE;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"jianh0ng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"jianh0ng"},"content":"import java.util.List;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"jianh0ng"},"content":"import seedu.address.model.residency.Residency;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"jianh0ng"},"content":"public class TypicalResidencyBook {","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"jianh0ng"},"content":"    //TODO: implement code once ready","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"jianh0ng"},"content":"    public static final Residency RESIDENCY_ONE \u003d new Residency(ROOM_ONE, PERSON_LIST_ONE, CHECK_IN_TIME_ONE, null);","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"jianh0ng"},"content":"    private TypicalResidencyBook() {}","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"jianh0ng"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"jianh0ng"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"jianh0ng"},"content":"        for (Residency residency : getTypicalResidencyBook()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"jianh0ng"},"content":"            ab.register(residency);","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"jianh0ng"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"jianh0ng"},"content":"        return ab;","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"jianh0ng"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"jianh0ng"},"content":"    public static List\u003cResidency\u003e getTypicalResidencyBook() {","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"jianh0ng"},"content":"        ArrayList\u003cResidency\u003e residencies \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"jianh0ng"},"content":"        residencies.add(RESIDENCY_ONE);","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"jianh0ng"},"content":"        return residencies;","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"jianh0ng"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"jianh0ng"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"jianh0ng":33}},{"path":"src/test/java/seedu/address/testutil/TypicalRooms.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_ROOM_ONE;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_ROOM_TWO;","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_VACANCY_ROOM_ONE;","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_VACANCY_ROOM_TWO;","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"import java.util.List;","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"import seedu.address.model.room.Room;","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"public class TypicalRooms {","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":"    public static final Person ALICE \u003d TypicalPersons.ALICE;","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":"    public static final Person BENSON \u003d TypicalPersons.BENSON;","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"darrenhoon"},"content":"    public static final Person CHARLIE \u003d TypicalPersons.CHARLIE;","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"darrenhoon"},"content":"    public static final Person[] GUESTS \u003d new Person[]{ALICE, BENSON, CHARLIE};","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"darrenhoon"},"content":"    public static final Room ROOM_ONE \u003d new RoomBuilder().withNumber(VALID_NAME_ROOM_ONE)","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"darrenhoon"},"content":"            .withVacancy(VALID_VACANCY_ROOM_ONE).build();","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"darrenhoon"},"content":"    public static final Room ROOM_TWO \u003d new RoomBuilder().withNumber(VALID_NAME_ROOM_TWO)","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"darrenhoon"},"content":"            .withVacancy(VALID_VACANCY_ROOM_TWO).withGuests(GUESTS).build();","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"darrenhoon"},"content":"    private TypicalRooms() {} // prevents instantiation","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"darrenhoon"},"content":"     * Returns an {@code AddressBook} with all the typical rooms.","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"darrenhoon"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"darrenhoon"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"darrenhoon"},"content":"        for (Room room : getTypicalRooms()) {","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"darrenhoon"},"content":"            ab.addRoom(room);","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"darrenhoon"},"content":"        return ab;","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"darrenhoon"},"content":"    public static List\u003cRoom\u003e getTypicalRooms() {","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"darrenhoon"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ROOM_ONE, ROOM_TWO));","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"darrenhoon":46}}]
