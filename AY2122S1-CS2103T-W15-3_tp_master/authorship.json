[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chunweii"},"content":"[![Java CI](https://github.com/AY2122S1-CS2103T-W15-3/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2122S1-CS2103T-W15-3/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"chunweii"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-W15-3/tp/branch/master/graph/badge.svg?token\u003d40MOICZDNE)](https://codecov.io/gh/AY2122S1-CS2103T-W15-3/tp)","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"chunweii"},"content":"## Introduction","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"chunweii"},"content":"SoConnect is a desktop application for students :man_technologist::woman_technologist: in [NUS School of Computing](https://www.comp.nus.edu.sg/)","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"chunweii"},"content":"to **manage the contacts** of their professors and tutors, and **keep track of** their busy schedule of **events**.","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"chunweii"},"content":"## Usage","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"chunweii"},"content":"- Add, delete, view contact information of professors","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"chunweii"},"content":"  - Save email addresses, zoom links, office locations and more!","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"chunweii"},"content":"- Add, delete, view events","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"chunweii"},"content":"  - Check upcoming events","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"chunweii"},"content":"  - [Future implementation] Link events to other contacts as participants!","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"chunweii"},"content":"- View the detailed documentation of this project at our [user guide](https://ay2122s1-cs2103t-w15-3.github.io/tp/UserGuide.html)","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"chunweii"},"content":"## Acknowledgement","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"chunweii"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"chunweii"},"content":"If you would like to contribute code to other SE-EDU projects, see [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"chunweii":19,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"xiangjunn"},"content":"    archiveName \u003d \u0027soconnect.jar\u0027","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"xiangjunn":1,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"janjanchen"},"content":"### Gordon Yit Hongyao","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":"\u003cimg src\u003d\"images/gordon25.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"[github](http://github.com/gordon25) |","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"[portfolio](team/gordon25.md) |","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"[email](mailto:e0564958@u.nus.edu) ","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"* Role: Documentation, Scheduling and Tracking","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"* Responsibilities: Storage","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"janjanchen"},"content":"### Janice Chen","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"janjanchen"},"content":"\u003cimg src\u003d\"images/janjanchen.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"[github](http://github.com/janjanchen) |","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"[portfolio](team/janjanchen.md) |","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"[email](mailto:e0559731@u.nus.edu)","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"janjanchen"},"content":"* Role: Code Quality","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"janjanchen"},"content":"* Responsibilities: Model","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"chunweii"},"content":"### Lee Chun Wei","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"\u003cimg src\u003d\"images/chunweii.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"[github](http://github.com/chunweii) | ","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"[portfolio](team/chunweii.md) |","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"Gordon25"},"content":"[email](mailto:chunweilee.99@u.nus.edu)","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"chunweii"},"content":"* Role: Team Lead, Deliverables and Deadlines","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"chunweii"},"content":"* Responsibilities: UI","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"xiangjunn"},"content":"### Ng Xiang Jun","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"xiangjunn"},"content":"\u003cimg src\u003d\"images/xiangjunn.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"Gordon25"},"content":"[github](http://github.com/xiangjunn) |","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"Gordon25"},"content":"[portfolio](team/xiangjunn.md) | ","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"Gordon25"},"content":"[email](mailto:ng.xiangjun99@u.nus.edu)","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"xiangjunn"},"content":"* Role: Integration","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"pcgiang"},"content":"### Pham Chau Giang","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"janjanchen"},"content":"\u003cimg src\u003d\"images/pcgiang.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"Gordon25"},"content":"[github](http://github.com/pcgiang) |","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"Gordon25"},"content":"[portfolio](team/pcgiang.md) |","lastModifiedDate":"2021-09-29"},{"lineNumber":63,"author":{"gitId":"Gordon25"},"content":"[email](mailto:e0564779@u.nus.edu)","lastModifiedDate":"2021-09-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"pcgiang"},"content":"* Role: Testing","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"pcgiang"},"content":"* Responsibilities: Model","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"janjanchen":6,"pcgiang":3,"chunweii":3,"Gordon25":19,"xiangjunn":3,"-":32}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"xiangjunn"},"content":"**Target user:** [School of Computing](https://www.comp.nus.edu.sg) (SoC) students who:","lastModifiedDate":"2021-09-28"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"xiangjunn"},"content":"* Need to manage large number of contacts and events","lastModifiedDate":"2021-09-28"},{"lineNumber":261,"author":{"gitId":"xiangjunn"},"content":"* Prefer desktop apps over other types","lastModifiedDate":"2021-09-28"},{"lineNumber":262,"author":{"gitId":"xiangjunn"},"content":"* Can type fast and prefer typing to mouse interactions","lastModifiedDate":"2021-09-28"},{"lineNumber":263,"author":{"gitId":"xiangjunn"},"content":"* Are reasonably comfortable using *CLI* apps","lastModifiedDate":"2021-10-01"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"xiangjunn"},"content":"**Value proposition**: Manage contacts of peers, *Profs* and events such as classes and Co-Curricular Activities in","lastModifiedDate":"2021-10-01"},{"lineNumber":266,"author":{"gitId":"xiangjunn"},"content":"a single system faster than a typical mouse/ *GUI* driven app while maintaining user-friendliness","lastModifiedDate":"2021-10-01"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"xiangjunn"},"content":"#### Contacts","lastModifiedDate":"2021-09-28"},{"lineNumber":273,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":274,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"xiangjunn"},"content":"| `* * *` | hardworking student | add contact of my *TA*/*Profs* | save their contacts and ask them questions on my modules. |","lastModifiedDate":"2021-10-01"},{"lineNumber":277,"author":{"gitId":"xiangjunn"},"content":"| `* * *` | careless student | edit the contact of my *TA*/*Profs* | correct mistakes while adding contacts or update my TA contact details |","lastModifiedDate":"2021-10-01"},{"lineNumber":278,"author":{"gitId":"xiangjunn"},"content":"| `* * *` | senior SoC student | delete the contact of my *TA*/*Profs* | remove contact of my *TA* after I have completed the module |","lastModifiedDate":"2021-10-01"},{"lineNumber":279,"author":{"gitId":"xiangjunn"},"content":"| `* * *` | SoC student | view the contact of my *TA*/*Profs* | |","lastModifiedDate":"2021-10-01"},{"lineNumber":280,"author":{"gitId":"xiangjunn"},"content":"| `* * *` | year 4 SoC student with many contacts | search for contact of my *TA*/*Profs* | contact them when necessary |","lastModifiedDate":"2021-10-01"},{"lineNumber":281,"author":{"gitId":"xiangjunn"},"content":"| `* *` | year 4 SoC student with many contacts | sort the contacts of my *TA* | view the contacts based on the sorting settings |","lastModifiedDate":"2021-10-01"},{"lineNumber":282,"author":{"gitId":"xiangjunn"},"content":"| `* *` | careless student | undo my last action(s) | recover contacts I accidentally deleted/changed |","lastModifiedDate":"2021-09-28"},{"lineNumber":283,"author":{"gitId":"xiangjunn"},"content":"| `* *` | organised SoC students | categorize the contacts of students/*TA*/*Profs* | view them separately |","lastModifiedDate":"2021-10-01"},{"lineNumber":284,"author":{"gitId":"xiangjunn"},"content":"| `* *` | student with many contacts | add the profile picture of *TA*/*Profs* | more easily differentiate my contacts and remember their faces |","lastModifiedDate":"2021-10-01"},{"lineNumber":285,"author":{"gitId":"xiangjunn"},"content":"| `*` | first time user | import existing contacts from my phone | easily access all my past contacts using SoConnect |","lastModifiedDate":"2021-09-28"},{"lineNumber":286,"author":{"gitId":"xiangjunn"},"content":"| `*` | long term user | archive some contacts | still save old contacts without cluttering my current screen |","lastModifiedDate":"2021-09-28"},{"lineNumber":287,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":288,"author":{"gitId":"xiangjunn"},"content":"#### Events","lastModifiedDate":"2021-09-28"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"xiangjunn"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                             |","lastModifiedDate":"2021-09-28"},{"lineNumber":291,"author":{"gitId":"xiangjunn"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2021-09-28"},{"lineNumber":292,"author":{"gitId":"xiangjunn"},"content":"| `* * *` | SoC student | add details of event | keep track of the CCA dates and time |","lastModifiedDate":"2021-09-28"},{"lineNumber":293,"author":{"gitId":"xiangjunn"},"content":"| `* * *` | SoC student | delete details of event | remove events that have finished or are cancelled |","lastModifiedDate":"2021-09-29"},{"lineNumber":294,"author":{"gitId":"xiangjunn"},"content":"| `* * *` | SoC student | edit details of event | update event details |","lastModifiedDate":"2021-10-01"},{"lineNumber":295,"author":{"gitId":"xiangjunn"},"content":"| `* * *` | SoC student | view all CCA/events | have a rough overview of my schedule | ","lastModifiedDate":"2021-09-28"},{"lineNumber":296,"author":{"gitId":"xiangjunn"},"content":"| `* * *` | SoC student | search for an event based on event name | easily refer to the event details |","lastModifiedDate":"2021-10-01"},{"lineNumber":297,"author":{"gitId":"xiangjunn"},"content":"| `* *` | SoC student | sort the events by time | prepare for upcoming events |","lastModifiedDate":"2021-10-01"},{"lineNumber":298,"author":{"gitId":"xiangjunn"},"content":"| `* *` | SoC student with busy schedule | check if the new event clashes with any of my current events | better plan my timetable and avoid event clashes |","lastModifiedDate":"2021-10-01"},{"lineNumber":299,"author":{"gitId":"xiangjunn"},"content":"| `* *` | SoC student with many different events to manage | categorize my events with different tags like classes and CCAs | search related events |","lastModifiedDate":"2021-10-01"},{"lineNumber":300,"author":{"gitId":"xiangjunn"},"content":"| `*` | SoC student who uses other calendars | import and export my events to other calendars like Google Calendar | synchronize my events across my calendars |","lastModifiedDate":"2021-10-01"},{"lineNumber":301,"author":{"gitId":"xiangjunn"},"content":"| `*` | long term user | archive some events that have ended | still save details of past events without cluttering my main screen |","lastModifiedDate":"2021-10-01"},{"lineNumber":302,"author":{"gitId":"xiangjunn"},"content":"| `*` | Soc student with many commitments | have a reminder of upcoming events | |","lastModifiedDate":"2021-10-01"},{"lineNumber":303,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":304,"author":{"gitId":"xiangjunn"},"content":"#### Personalisation and Others","lastModifiedDate":"2021-09-28"},{"lineNumber":305,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":306,"author":{"gitId":"xiangjunn"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                             |","lastModifiedDate":"2021-09-28"},{"lineNumber":307,"author":{"gitId":"xiangjunn"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2021-09-28"},{"lineNumber":308,"author":{"gitId":"xiangjunn"},"content":"| `* * *` | first time user | have a help message I can refer to | understand and start using basic features |","lastModifiedDate":"2021-10-01"},{"lineNumber":309,"author":{"gitId":"xiangjunn"},"content":"| `*` | first time user | set up my background | personalize the screen to my liking |","lastModifiedDate":"2021-09-28"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"pcgiang"},"content":"(For all use cases below, the **System** is the `SoConnect Application System (SAS)` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-09-28"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"pcgiang"},"content":"**1. Use case: UC1 - Add contact details**","lastModifiedDate":"2021-09-28"},{"lineNumber":316,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":317,"author":{"gitId":"xiangjunn"},"content":"**Guarantees:** The contact will be stored in the system if and only if the user enters the correct inputs.","lastModifiedDate":"2021-09-30"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"xiangjunn"},"content":"***MSS***","lastModifiedDate":"2021-10-01"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"xiangjunn"},"content":"1.  User chooses to add *contact information*.","lastModifiedDate":"2021-10-01"},{"lineNumber":322,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":323,"author":{"gitId":"xiangjunn"},"content":"2.  SAS stores the contact and notifies the user that the contact has been successfully added.","lastModifiedDate":"2021-09-30"},{"lineNumber":324,"author":{"gitId":"pcgiang"},"content":"    ","lastModifiedDate":"2021-09-28"},{"lineNumber":325,"author":{"gitId":"pcgiang"},"content":"    Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":326,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":327,"author":{"gitId":"pcgiang"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":328,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":329,"author":{"gitId":"xiangjunn"},"content":"* 1a. SAS detects an error in the inputs.","lastModifiedDate":"2021-09-30"},{"lineNumber":330,"author":{"gitId":"pcgiang"},"content":"  ","lastModifiedDate":"2021-09-28"},{"lineNumber":331,"author":{"gitId":"xiangjunn"},"content":"    * 1a1. SAS requests for correct inputs.","lastModifiedDate":"2021-09-30"},{"lineNumber":332,"author":{"gitId":"pcgiang"},"content":"      ","lastModifiedDate":"2021-09-28"},{"lineNumber":333,"author":{"gitId":"xiangjunn"},"content":"    * 1a2. User enters new inputs.","lastModifiedDate":"2021-09-30"},{"lineNumber":334,"author":{"gitId":"pcgiang"},"content":"      ","lastModifiedDate":"2021-09-28"},{"lineNumber":335,"author":{"gitId":"xiangjunn"},"content":"    Steps 1a1 to 1a2 are repeated until the inputs entered are correct.","lastModifiedDate":"2021-10-01"},{"lineNumber":336,"author":{"gitId":"pcgiang"},"content":"      ","lastModifiedDate":"2021-09-28"},{"lineNumber":337,"author":{"gitId":"xiangjunn"},"content":"    Use case resumes from step 2.","lastModifiedDate":"2021-10-01"},{"lineNumber":338,"author":{"gitId":"pcgiang"},"content":"    ","lastModifiedDate":"2021-09-28"},{"lineNumber":339,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":340,"author":{"gitId":"pcgiang"},"content":"* 1b. SAS detects a duplicate contact with the same name.","lastModifiedDate":"2021-09-28"},{"lineNumber":341,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":342,"author":{"gitId":"pcgiang"},"content":"    * 1b1. SAS gives the user the option of adding the contact anyway.","lastModifiedDate":"2021-09-28"},{"lineNumber":343,"author":{"gitId":"pcgiang"},"content":"    ","lastModifiedDate":"2021-09-28"},{"lineNumber":344,"author":{"gitId":"xiangjunn"},"content":"    * 1b2. User proceeds to add the contact.","lastModifiedDate":"2021-09-30"},{"lineNumber":345,"author":{"gitId":"pcgiang"},"content":"      ","lastModifiedDate":"2021-09-28"},{"lineNumber":346,"author":{"gitId":"xiangjunn"},"content":"    Use case resumes from step 2.","lastModifiedDate":"2021-10-01"},{"lineNumber":347,"author":{"gitId":"pcgiang"},"content":"    ","lastModifiedDate":"2021-09-28"},{"lineNumber":348,"author":{"gitId":"pcgiang"},"content":"    ","lastModifiedDate":"2021-09-28"},{"lineNumber":349,"author":{"gitId":"pcgiang"},"content":"* *a. At any time. user chooses not to add the contact.","lastModifiedDate":"2021-09-28"},{"lineNumber":350,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":351,"author":{"gitId":"pcgiang"},"content":"    Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":352,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":353,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":354,"author":{"gitId":"pcgiang"},"content":"**2. Use case: UC2 - Edit events**","lastModifiedDate":"2021-09-28"},{"lineNumber":355,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":356,"author":{"gitId":"xiangjunn"},"content":"**Preconditions:** There is at least one event in the event list.","lastModifiedDate":"2021-10-01"},{"lineNumber":357,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":358,"author":{"gitId":"xiangjunn"},"content":"**Guarantees:** The event will be updated accordingly if and only if the user enters the correct inputs.","lastModifiedDate":"2021-09-30"},{"lineNumber":359,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":360,"author":{"gitId":"xiangjunn"},"content":"***MSS***","lastModifiedDate":"2021-10-01"},{"lineNumber":361,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":362,"author":{"gitId":"xiangjunn"},"content":"1. User wants to view the list of events.","lastModifiedDate":"2021-09-30"},{"lineNumber":363,"author":{"gitId":"pcgiang"},"content":"    ","lastModifiedDate":"2021-09-28"},{"lineNumber":364,"author":{"gitId":"xiangjunn"},"content":"2. User decides on an event to edit.","lastModifiedDate":"2021-09-30"},{"lineNumber":365,"author":{"gitId":"pcgiang"},"content":"   ","lastModifiedDate":"2021-09-28"},{"lineNumber":366,"author":{"gitId":"xiangjunn"},"content":"3. User edits the event. ","lastModifiedDate":"2021-09-30"},{"lineNumber":367,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":368,"author":{"gitId":"xiangjunn"},"content":"4. SAS updates the event accordingly and notifies user that the event has been successfully edited.","lastModifiedDate":"2021-09-30"},{"lineNumber":369,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":373,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"xiangjunn"},"content":"* 3a. SAS detects an error in the inputs.","lastModifiedDate":"2021-09-30"},{"lineNumber":376,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":377,"author":{"gitId":"xiangjunn"},"content":"    * 3a1. SAS requests for correct inputs.","lastModifiedDate":"2021-09-30"},{"lineNumber":378,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":379,"author":{"gitId":"xiangjunn"},"content":"    * 3a2. User enters new inputs.","lastModifiedDate":"2021-09-30"},{"lineNumber":380,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":381,"author":{"gitId":"xiangjunn"},"content":"    Steps 3a1 to 3a2 are repeated until inputs entered are correct.","lastModifiedDate":"2021-09-30"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":383,"author":{"gitId":"pcgiang"},"content":"    Use case resumes from step 4.","lastModifiedDate":"2021-09-28"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":386,"author":{"gitId":"pcgiang"},"content":"* *a. User chooses not to edit the event.","lastModifiedDate":"2021-09-28"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"pcgiang"},"content":"**3. Use case: UC3 - Delete contacts**","lastModifiedDate":"2021-09-28"},{"lineNumber":392,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":393,"author":{"gitId":"pcgiang"},"content":"**Preconditions:** There is at least one contact in the contact list.","lastModifiedDate":"2021-09-28"},{"lineNumber":394,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":395,"author":{"gitId":"xiangjunn"},"content":"**Guarantees:** The contact list will be updated according to which contact(s) are deleted if and only if the user enters the correct inputs.","lastModifiedDate":"2021-09-30"},{"lineNumber":396,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":397,"author":{"gitId":"xiangjunn"},"content":"***MSS***","lastModifiedDate":"2021-10-01"},{"lineNumber":398,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":399,"author":{"gitId":"xiangjunn"},"content":"1.  User wants to view the list of contacts.","lastModifiedDate":"2021-09-30"},{"lineNumber":400,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":401,"author":{"gitId":"pcgiang"},"content":"2. User decides on the contact(s) to delete.","lastModifiedDate":"2021-09-28"},{"lineNumber":402,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":403,"author":{"gitId":"xiangjunn"},"content":"3. User deletes the contact(s).","lastModifiedDate":"2021-09-30"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"xiangjunn"},"content":"4. SAS deletes the specified contact(s), updates the contact list accordingly, and notifies user that the contact(s) has been successfully deleted.","lastModifiedDate":"2021-09-30"},{"lineNumber":406,"author":{"gitId":"pcgiang"},"content":"   ","lastModifiedDate":"2021-09-28"},{"lineNumber":407,"author":{"gitId":"pcgiang"},"content":"    Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":408,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":409,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":410,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":412,"author":{"gitId":"xiangjunn"},"content":"* 3a. SAS detects an error in the inputs.","lastModifiedDate":"2021-09-30"},{"lineNumber":413,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":414,"author":{"gitId":"xiangjunn"},"content":"    * 3a1. SAS requests for correct inputs.","lastModifiedDate":"2021-09-30"},{"lineNumber":415,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":416,"author":{"gitId":"xiangjunn"},"content":"    * 3a2. User enters new inputs.","lastModifiedDate":"2021-09-30"},{"lineNumber":417,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":418,"author":{"gitId":"xiangjunn"},"content":"  Steps 3a1 to 3a2 are repeated until inputs entered are correct.","lastModifiedDate":"2021-09-30"},{"lineNumber":419,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":420,"author":{"gitId":"pcgiang"},"content":"  Use case resumes from step 4.","lastModifiedDate":"2021-09-28"},{"lineNumber":421,"author":{"gitId":"pcgiang"},"content":"  ","lastModifiedDate":"2021-09-28"},{"lineNumber":422,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":423,"author":{"gitId":"pcgiang"},"content":"* *a. User chooses not to delete the contact(s).","lastModifiedDate":"2021-09-28"},{"lineNumber":424,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":425,"author":{"gitId":"pcgiang"},"content":"    Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":428,"author":{"gitId":"pcgiang"},"content":"**4. Use case: UC4 - Find contact details**","lastModifiedDate":"2021-09-28"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":430,"author":{"gitId":"xiangjunn"},"content":"**Guarantees:** A filtered list of contacts that match the user keywords will be shown, if and only if  the user enters the correct inputs.","lastModifiedDate":"2021-09-30"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":432,"author":{"gitId":"xiangjunn"},"content":"***MSS***","lastModifiedDate":"2021-10-01"},{"lineNumber":433,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":434,"author":{"gitId":"pcgiang"},"content":"1. User decides on the keyword(s) to find.","lastModifiedDate":"2021-09-28"},{"lineNumber":435,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":436,"author":{"gitId":"xiangjunn"},"content":"2. User enters specified keyword(s).","lastModifiedDate":"2021-09-30"},{"lineNumber":437,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":438,"author":{"gitId":"xiangjunn"},"content":"3. SAS shows the matched contacts accordingly and notifies user of search success.","lastModifiedDate":"2021-09-30"},{"lineNumber":439,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":440,"author":{"gitId":"pcgiang"},"content":"    Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":441,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":442,"author":{"gitId":"pcgiang"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":443,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":444,"author":{"gitId":"pcgiang"},"content":"* 2a. SAS fails to find any matched contacts.","lastModifiedDate":"2021-09-28"},{"lineNumber":445,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":446,"author":{"gitId":"pcgiang"},"content":"    * 2a1. SAS outputs 0 matched contacts.","lastModifiedDate":"2021-09-28"},{"lineNumber":447,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":448,"author":{"gitId":"xiangjunn"},"content":"    * 2a2. User enters new keyword(s).","lastModifiedDate":"2021-09-30"},{"lineNumber":449,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":450,"author":{"gitId":"pcgiang"},"content":"  Steps 2a1 to 2a2 are repeated until the user finds the contacts of interest.","lastModifiedDate":"2021-09-28"},{"lineNumber":451,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":452,"author":{"gitId":"pcgiang"},"content":"  Use case resumes from step 3.","lastModifiedDate":"2021-09-28"},{"lineNumber":453,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":454,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":455,"author":{"gitId":"pcgiang"},"content":"* *a. User chooses not to find contact(s).","lastModifiedDate":"2021-09-28"},{"lineNumber":456,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":457,"author":{"gitId":"pcgiang"},"content":"    Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":458,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":459,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":460,"author":{"gitId":"pcgiang"},"content":"**5. Use case: UC5 - Sort events**","lastModifiedDate":"2021-09-28"},{"lineNumber":461,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":462,"author":{"gitId":"pcgiang"},"content":"**Preconditions:** List of events to be sorted is displayed.","lastModifiedDate":"2021-09-28"},{"lineNumber":463,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":464,"author":{"gitId":"xiangjunn"},"content":"**Guarantees:** The displayed list of events is sorted lexicographically according to the specified field, if the given field is valid.","lastModifiedDate":"2021-10-01"},{"lineNumber":465,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":466,"author":{"gitId":"xiangjunn"},"content":"***MSS***","lastModifiedDate":"2021-10-01"},{"lineNumber":467,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":468,"author":{"gitId":"xiangjunn"},"content":"1. User decides on a field to sort by.","lastModifiedDate":"2021-09-30"},{"lineNumber":469,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":470,"author":{"gitId":"xiangjunn"},"content":"2. User inputs the specific field.","lastModifiedDate":"2021-10-01"},{"lineNumber":471,"author":{"gitId":"xiangjunn"},"content":"   ","lastModifiedDate":"2021-09-30"},{"lineNumber":472,"author":{"gitId":"xiangjunn"},"content":"3. SAS sorts the list of events by the specified field provided in step 2.","lastModifiedDate":"2021-10-01"},{"lineNumber":473,"author":{"gitId":"pcgiang"},"content":"   ","lastModifiedDate":"2021-09-28"},{"lineNumber":474,"author":{"gitId":"xiangjunn"},"content":"4. SAS displays the sorted list of events.","lastModifiedDate":"2021-10-01"},{"lineNumber":475,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":476,"author":{"gitId":"pcgiang"},"content":"    Use case ends","lastModifiedDate":"2021-09-28"},{"lineNumber":477,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":478,"author":{"gitId":"pcgiang"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":479,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":480,"author":{"gitId":"xiangjunn"},"content":"* 2a. SAS detects that the input is an invalid field. ","lastModifiedDate":"2021-10-01"},{"lineNumber":481,"author":{"gitId":"pcgiang"},"content":"    ","lastModifiedDate":"2021-09-28"},{"lineNumber":482,"author":{"gitId":"xiangjunn"},"content":"    * 2a1. SAS requests for a correct input.","lastModifiedDate":"2021-10-01"},{"lineNumber":483,"author":{"gitId":"pcgiang"},"content":"  ","lastModifiedDate":"2021-09-28"},{"lineNumber":484,"author":{"gitId":"xiangjunn"},"content":"    * 2a2. User enters a new input.","lastModifiedDate":"2021-10-01"},{"lineNumber":485,"author":{"gitId":"pcgiang"},"content":"      ","lastModifiedDate":"2021-09-28"},{"lineNumber":486,"author":{"gitId":"xiangjunn"},"content":"    Steps 2a1-2a2 are repeated until user enters a valid field.","lastModifiedDate":"2021-10-01"},{"lineNumber":487,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":488,"author":{"gitId":"xiangjunn"},"content":"    Use case resumes from step 3.","lastModifiedDate":"2021-10-01"},{"lineNumber":489,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":490,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":491,"author":{"gitId":"xiangjunn"},"content":"* 2b. SAS detects that the input contains more than one field.","lastModifiedDate":"2021-10-01"},{"lineNumber":492,"author":{"gitId":"pcgiang"},"content":"  ","lastModifiedDate":"2021-09-28"},{"lineNumber":493,"author":{"gitId":"xiangjunn"},"content":"    * 2b1. SAS sorts the list by the first field entered. ","lastModifiedDate":"2021-10-01"},{"lineNumber":494,"author":{"gitId":"pcgiang"},"content":"      ","lastModifiedDate":"2021-09-28"},{"lineNumber":495,"author":{"gitId":"xiangjunn"},"content":"    Use case resumes from step 4.","lastModifiedDate":"2021-10-01"},{"lineNumber":496,"author":{"gitId":"pcgiang"},"content":"    ","lastModifiedDate":"2021-09-28"},{"lineNumber":497,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":498,"author":{"gitId":"pcgiang"},"content":"* *a. User chooses not to sort the list.","lastModifiedDate":"2021-09-28"},{"lineNumber":499,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":500,"author":{"gitId":"pcgiang"},"content":"    Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"pcgiang"},"content":"2.  Should be able to hold up to 1000 contacts without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-09-28"},{"lineNumber":508,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"pcgiang"},"content":"4. Should not depend on Internet connection.","lastModifiedDate":"2021-09-28"},{"lineNumber":510,"author":{"gitId":"pcgiang"},"content":"5. Only one user should be able to use the system at one time.","lastModifiedDate":"2021-09-28"},{"lineNumber":511,"author":{"gitId":"pcgiang"},"content":"6. Should be usable by colorblind students","lastModifiedDate":"2021-09-28"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"pcgiang"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X.","lastModifiedDate":"2021-09-28"},{"lineNumber":518,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":519,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":520,"author":{"gitId":"xiangjunn"},"content":"* [Main Success Scenario](https://nus-cs2103-ay2122s1.github.io/website/schedule/week7/topics.html#requirements-specifying-requirements-use-cases-details) (MSS): Describes the most straightforward interaction for a given use case, which assumes that nothing goes wrong. ","lastModifiedDate":"2021-10-01"},{"lineNumber":521,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":522,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":523,"author":{"gitId":"xiangjunn"},"content":"* Command Line Interface (CLI): Text-based user interface.","lastModifiedDate":"2021-10-01"},{"lineNumber":524,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":525,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":526,"author":{"gitId":"xiangjunn"},"content":"* Graphical User Interface (GUI): Graphic-based user interface.","lastModifiedDate":"2021-10-01"},{"lineNumber":527,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":528,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":529,"author":{"gitId":"pcgiang"},"content":"* Interface: The place at which independent and often unrelated systems meet and act on or communicate with each other/ a way for the user to interact with the system.","lastModifiedDate":"2021-09-28"},{"lineNumber":530,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":531,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":532,"author":{"gitId":"pcgiang"},"content":"* Telegram handle: Username of a [Telegram](https://telegram.org/) user.","lastModifiedDate":"2021-09-28"},{"lineNumber":533,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":534,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":535,"author":{"gitId":"xiangjunn"},"content":"* Professor (Prof): A lecturer who teaches a module in NUS.","lastModifiedDate":"2021-10-01"},{"lineNumber":536,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":537,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":538,"author":{"gitId":"xiangjunn"},"content":"* Teaching Assistant (TA): A student tutor employed to teach small group lessons in NUS.","lastModifiedDate":"2021-10-01"},{"lineNumber":539,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":540,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":541,"author":{"gitId":"xiangjunn"},"content":"* Contact information: Name and email of the contact. Phone number, address, telegram handle, video conferencing meeting link, and tag(s) are optional.","lastModifiedDate":"2021-10-01"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":543,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"pcgiang":133,"xiangjunn":104,"-":357}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"SoConnect is a **desktop app for SoC students to managing contacts of professors and teaching assistants, ","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"as well as to keep track of noteworthy events, optimized for use via a Command Line Interface** (CLI) while still having ","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"xiangjunn"},"content":"the benefits of a Graphical User Interface (GUI). If you can type fast, SoConnect can get your contact management tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"xiangjunn"},"content":"done faster than traditional GUI apps.","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"2. Download the latest `soconnect.jar` from [here](https://github.com/se-edu/addressbook-level3/releases).","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your SoConnect app.","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"pcgiang"},"content":"   * **`elist`** : Lists all events.","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"pcgiang"},"content":"   * **`cadd`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the contact list.","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"pcgiang"},"content":"   * **`cdelete`**`3` : Deletes the 3rd contact shown in the contact list.","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"pcgiang"},"content":"   * **`eclear`** : Deletes all events.","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"pcgiang"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"janjanchen"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family`, etc.","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":68,"author":{"gitId":"pcgiang"},"content":"* Date and time must follow dd-MM-yyyy HH:mm format.","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"janjanchen"},"content":"## Managing Contacts","lastModifiedDate":"2021-09-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"janjanchen"},"content":"### Adding a person: `cadd`","lastModifiedDate":"2021-09-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"janjanchen"},"content":"Adds a person to the contact list.","lastModifiedDate":"2021-09-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"janjanchen"},"content":"Format: `cadd n/NAME e/EMAIL [p/PHONE_NUMBER] [a/ADDRESS] [th/TELEGRAM_HANDLE] [z/ZOOM] [t/TAG]…`","lastModifiedDate":"2021-09-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"janjanchen"},"content":"* `cadd n/Alex Doe e/e0123456@u.nus.edu a/COM1 #99-99 th/johnDoe99 t/Professor`","lastModifiedDate":"2021-09-23"},{"lineNumber":88,"author":{"gitId":"janjanchen"},"content":"* `cadd n/ Jon Cheng t/TA e/e7654321@u.nus.edu a/COM1-0201 p/87654321 t/Senior th/jonnyjohnny z/https://nus-sg.zoom.us/j/0123456789?pwd\u003dABCDEFGHIJKLMNOPDJFHISDFSDH`","lastModifiedDate":"2021-09-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"janjanchen"},"content":"### Listing all persons : `clist`","lastModifiedDate":"2021-09-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"janjanchen"},"content":"Shows a list of all persons in the contact list, with all of their details by default.","lastModifiedDate":"2021-09-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"janjanchen"},"content":"Format: `clist [e] [p] [a] [th] [z] [t]`","lastModifiedDate":"2021-09-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"janjanchen"},"content":"* Returned list will always include names of all persons in the contact list.","lastModifiedDate":"2021-09-23"},{"lineNumber":98,"author":{"gitId":"janjanchen"},"content":"* When no optional fields are provided, e.g `clist`, the list will show all available details of all persons in the contact list.","lastModifiedDate":"2021-09-23"},{"lineNumber":99,"author":{"gitId":"janjanchen"},"content":"* When optional fields are provided, the list will only show the names of all persons in the contact list and the corresponding fields specified by the user.","lastModifiedDate":"2021-09-23"},{"lineNumber":100,"author":{"gitId":"janjanchen"},"content":"* More than one optional field can be provided.","lastModifiedDate":"2021-09-23"},{"lineNumber":101,"author":{"gitId":"janjanchen"},"content":"* The order of the optional fields does not matter. e.g both `clist e p` and `clist p e` will return a list of only the names, email addresses and phone numbers of all persons in the contact list.","lastModifiedDate":"2021-09-23"},{"lineNumber":102,"author":{"gitId":"janjanchen"},"content":"* If the specified field has no value for certain persons in the contact list, it will not show anything for that corresponding field for that particular person.","lastModifiedDate":"2021-09-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"janjanchen"},"content":"Examples:","lastModifiedDate":"2021-09-23"},{"lineNumber":105,"author":{"gitId":"janjanchen"},"content":"* `clist` returns a list of all persons in the contact list with all the available details for each person.","lastModifiedDate":"2021-09-23"},{"lineNumber":106,"author":{"gitId":"janjanchen"},"content":"* `clist e p` returns a list of all persons in the contact list, showing only their names, email addresses and phone numbers (if available).","lastModifiedDate":"2021-09-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"janjanchen"},"content":"### Editing a person : `cedit`","lastModifiedDate":"2021-09-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"janjanchen"},"content":"Edits an existing person in the contact list.","lastModifiedDate":"2021-09-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"janjanchen"},"content":"Format: `cedit INDEX [n/NAME] [e/EMAIL] [p/PHONE] [a/ADDRESS] [th/TELEGRAM_HANDLE] [z/ZOOM] [dt/TAG_DELETED]… [t/TAG_ADDED]… `","lastModifiedDate":"2021-09-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"janjanchen"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …","lastModifiedDate":"2021-09-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"janjanchen"},"content":"* You can use `t/` to add a tag.","lastModifiedDate":"2021-09-23"},{"lineNumber":119,"author":{"gitId":"janjanchen"},"content":"* You can remove a specific tag by typing `dt/` with the tag.","lastModifiedDate":"2021-09-23"},{"lineNumber":120,"author":{"gitId":"janjanchen"},"content":"* You can remove all the person’s tags by typing `dt/*` without specifying any tags after it.","lastModifiedDate":"2021-09-23"},{"lineNumber":121,"author":{"gitId":"janjanchen"},"content":"* When editing tags, the tags to be deleted will be removed first, before new tags are added.","lastModifiedDate":"2021-09-23"},{"lineNumber":122,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"janjanchen"},"content":"* `clist` followed by `cedit 2 p/91234567 e/agentX@thehightable.com` edits the phone number and email address of the 2nd person of the contact list to be `91234567` and `agentX@thehightable.com` respectively.","lastModifiedDate":"2021-09-26"},{"lineNumber":126,"author":{"gitId":"janjanchen"},"content":"* `cfind Betsy` followed by `cedit 2 n/Betsy Crower dt/*` edits the name of the 2nd person from the results of the `cfind` command to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2021-09-26"},{"lineNumber":127,"author":{"gitId":"janjanchen"},"content":"* `cedit 3 dt/TA`  deletes the `TA` tag from the 3rd person.","lastModifiedDate":"2021-09-26"},{"lineNumber":128,"author":{"gitId":"janjanchen"},"content":"* `cedit 4 dt/*` deletes all tags from the 4th person.","lastModifiedDate":"2021-09-23"},{"lineNumber":129,"author":{"gitId":"janjanchen"},"content":"* `cedit 5 dt/classmate t/friend` first deletes the `classmate` tag, then adds `friend` tag from the 5th person.","lastModifiedDate":"2021-09-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"janjanchen"},"content":"### Locating persons by name: `cfind`","lastModifiedDate":"2021-09-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"janjanchen"},"content":"Format: `cfind KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-09-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"janjanchen"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`.","lastModifiedDate":"2021-09-29"},{"lineNumber":139,"author":{"gitId":"janjanchen"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`.","lastModifiedDate":"2021-09-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"janjanchen"},"content":"* Partial words can be matched e.g. `Han` will match `Hans`.","lastModifiedDate":"2021-09-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"janjanchen"},"content":"  e.g. `Hans Bo` will return `Hans Gruber` and `Bo Yang`.","lastModifiedDate":"2021-09-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":147,"author":{"gitId":"janjanchen"},"content":"* `cfind John` returns `john` and `Johnathon Doe`.","lastModifiedDate":"2021-09-29"},{"lineNumber":148,"author":{"gitId":"janjanchen"},"content":"* `cfind alex david` returns `Alex Yeoh` and `David Li`.","lastModifiedDate":"2021-09-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"xiangjunn"},"content":"### Deleting a person : `cdelete`","lastModifiedDate":"2021-09-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"xiangjunn"},"content":"Deletes the specified person from the contact list.","lastModifiedDate":"2021-09-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"xiangjunn"},"content":"Format: `cdelete INDEX1[-INDEX2]`","lastModifiedDate":"2021-09-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"xiangjunn"},"content":"- Deletes the person at the specified `INDEX1` or between the specified","lastModifiedDate":"2021-09-23"},{"lineNumber":157,"author":{"gitId":"xiangjunn"},"content":"  range from `INDEX1` to `INDEX2` inclusively.","lastModifiedDate":"2021-09-23"},{"lineNumber":158,"author":{"gitId":"xiangjunn"},"content":"- The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2021-09-23"},{"lineNumber":159,"author":{"gitId":"xiangjunn"},"content":"- The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-09-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"xiangjunn"},"content":"- `clist` followed by `cdelete 2` deletes the 2nd person from the contact list.","lastModifiedDate":"2021-09-23"},{"lineNumber":163,"author":{"gitId":"xiangjunn"},"content":"- `cfind Betsy` followed by `cdelete 1` deletes the 1st person from the results of the `cfind` command.","lastModifiedDate":"2021-09-23"},{"lineNumber":164,"author":{"gitId":"xiangjunn"},"content":"- `cdelete 3-5` deletes people with index between 3 and 5 inclusively from the contact list.","lastModifiedDate":"2021-09-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"xiangjunn"},"content":"### Clearing all persons : `cclear`","lastModifiedDate":"2021-09-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"xiangjunn"},"content":"Clears all entries of contacts from the contact list.","lastModifiedDate":"2021-09-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"xiangjunn"},"content":"Format: `cclear`","lastModifiedDate":"2021-09-23"},{"lineNumber":171,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":172,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":173,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":174,"author":{"gitId":"xiangjunn"},"content":"## Managing Events","lastModifiedDate":"2021-09-23"},{"lineNumber":175,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":176,"author":{"gitId":"xiangjunn"},"content":"### Adding an event: `eadd`","lastModifiedDate":"2021-09-23"},{"lineNumber":177,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":178,"author":{"gitId":"xiangjunn"},"content":"Adds an event to the event list.","lastModifiedDate":"2021-09-23"},{"lineNumber":179,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":180,"author":{"gitId":"xiangjunn"},"content":"Format: `eadd n/NAME at/START_TIME [end/END_TIME] [d/DESCRIPTION] [a/ADDRESS] [z/ZOOM] [t/TAG]…​`","lastModifiedDate":"2021-09-23"},{"lineNumber":181,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":182,"author":{"gitId":"xiangjunn"},"content":"💡 **Tip:** An event can have any number of tags (including 0)","lastModifiedDate":"2021-09-23"},{"lineNumber":183,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":184,"author":{"gitId":"xiangjunn"},"content":"Take note of the following time format:","lastModifiedDate":"2021-09-23"},{"lineNumber":185,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":186,"author":{"gitId":"xiangjunn"},"content":"- Start time should be of format “dd-MM-yyyy HH:mm” (date-month-year Hour:minutes in 24 hr format).","lastModifiedDate":"2021-09-23"},{"lineNumber":187,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":188,"author":{"gitId":"xiangjunn"},"content":"Examples:","lastModifiedDate":"2021-09-23"},{"lineNumber":189,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":190,"author":{"gitId":"xiangjunn"},"content":"- `eadd n/Summer Party at/12-12-2021 15:12 a/123, Clementi Rd, 1234665 t/fun`","lastModifiedDate":"2021-09-23"},{"lineNumber":191,"author":{"gitId":"xiangjunn"},"content":"- `eadd n/CS2103T Lecture at/10-09-2021 16:00 end/18:00","lastModifiedDate":"2021-09-23"},{"lineNumber":192,"author":{"gitId":"xiangjunn"},"content":"  z/https://nus-sg.zoom.us/j/0123456789?pwd\u003dABCDEFGHIJKLMNOPDJFHISDFSDHk t/lecture`","lastModifiedDate":"2021-09-23"},{"lineNumber":193,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":194,"author":{"gitId":"xiangjunn"},"content":"### Listing all events: `elist`","lastModifiedDate":"2021-09-23"},{"lineNumber":195,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":196,"author":{"gitId":"xiangjunn"},"content":"Shows a list of all events in the event list, with all of their details by default.","lastModifiedDate":"2021-09-23"},{"lineNumber":197,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":198,"author":{"gitId":"xiangjunn"},"content":"Format: `elist [at] [end] [d] [a] [z] [t]`","lastModifiedDate":"2021-09-23"},{"lineNumber":199,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":200,"author":{"gitId":"xiangjunn"},"content":"- Returned list will always include names of all events in the event list.","lastModifiedDate":"2021-09-23"},{"lineNumber":201,"author":{"gitId":"xiangjunn"},"content":"- When no optional fields are provided, e.g `elist` , the list will show all available details of all events","lastModifiedDate":"2021-09-23"},{"lineNumber":202,"author":{"gitId":"xiangjunn"},"content":"  in the event list.","lastModifiedDate":"2021-09-23"},{"lineNumber":203,"author":{"gitId":"xiangjunn"},"content":"- When optional fields are provided, the list will only show the names of all events in the event list and","lastModifiedDate":"2021-09-23"},{"lineNumber":204,"author":{"gitId":"xiangjunn"},"content":"  the corresponding fields specified by the user.","lastModifiedDate":"2021-09-23"},{"lineNumber":205,"author":{"gitId":"xiangjunn"},"content":"- More than one optional field can be provided.","lastModifiedDate":"2021-09-23"},{"lineNumber":206,"author":{"gitId":"xiangjunn"},"content":"- The order of the optional fields does not matter. e.g both `elist d at` and `elist at d` will return a list","lastModifiedDate":"2021-09-23"},{"lineNumber":207,"author":{"gitId":"xiangjunn"},"content":"  of only the names, descriptions and starting times in the event list.","lastModifiedDate":"2021-09-23"},{"lineNumber":208,"author":{"gitId":"xiangjunn"},"content":"- If the specified field has no value for certain events in the event list, it will not show anything for","lastModifiedDate":"2021-09-23"},{"lineNumber":209,"author":{"gitId":"xiangjunn"},"content":"  that corresponding field for that particular event.","lastModifiedDate":"2021-09-23"},{"lineNumber":210,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":211,"author":{"gitId":"xiangjunn"},"content":"Examples:","lastModifiedDate":"2021-09-23"},{"lineNumber":212,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":213,"author":{"gitId":"xiangjunn"},"content":"- `elist` returns a list of all events in the event list with all the available details for each event.","lastModifiedDate":"2021-09-23"},{"lineNumber":214,"author":{"gitId":"xiangjunn"},"content":"- `elist d at` returns a list of all events in the event list, showing only their names, starting times and descriptions (if available).","lastModifiedDate":"2021-09-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"Gordon25"},"content":"### Editing an event : `eedit`","lastModifiedDate":"2021-09-27"},{"lineNumber":217,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":218,"author":{"gitId":"Gordon25"},"content":"Edits an existing event in the event list.","lastModifiedDate":"2021-09-27"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"Gordon25"},"content":"Format: `eedit INDEX [n/NAME] [at/START_TIME] [end/END_TIME] [d/DESCRIPTION] [a/ADDRESS] [z/ZOOM] [dt/TAG_DELETED]…​ [t/TAG_ADDED]…​`","lastModifiedDate":"2021-09-27"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"Gordon25"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":224,"author":{"gitId":"Gordon25"},"content":"   ","lastModifiedDate":"2021-09-28"},{"lineNumber":225,"author":{"gitId":"Gordon25"},"content":":information_source: **Note:** Start time should be of format “dd-MM-yyyy HH:mm” (date-month-year Hour:minutes in 24 hr format).","lastModifiedDate":"2021-09-27"},{"lineNumber":226,"author":{"gitId":"Gordon25"},"content":"   ","lastModifiedDate":"2021-09-27"},{"lineNumber":227,"author":{"gitId":"Gordon25"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":228,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":229,"author":{"gitId":"Gordon25"},"content":"* `elist` followed by `eedit` 2 edits the 2nd event from the event list.","lastModifiedDate":"2021-09-27"},{"lineNumber":230,"author":{"gitId":"Gordon25"},"content":"* Edits the event at the specified `INDEX`. `INDEX` refers to the index number shown in the displayed event list. `INDEX` **must be a positive integer** eg 1, 2, 3, …​","lastModifiedDate":"2021-09-27"},{"lineNumber":231,"author":{"gitId":"Gordon25"},"content":"* **At least one** of the optional fields must be provided.","lastModifiedDate":"2021-09-27"},{"lineNumber":232,"author":{"gitId":"Gordon25"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2021-09-27"},{"lineNumber":233,"author":{"gitId":"Gordon25"},"content":"* use `t/` to add a tag.","lastModifiedDate":"2021-09-27"},{"lineNumber":234,"author":{"gitId":"Gordon25"},"content":"* use `dt/` to remove a tag.","lastModifiedDate":"2021-09-27"},{"lineNumber":235,"author":{"gitId":"Gordon25"},"content":"* use `dt/*` to remove **all** tags","lastModifiedDate":"2021-09-27"},{"lineNumber":236,"author":{"gitId":"Gordon25"},"content":"* When editing tags, the tags to be deleted will be removed first, before new tags are added","lastModifiedDate":"2021-09-27"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"Gordon25"},"content":"* `elist` followed by `eedit 2 n/CS2103T Exam dt/Easy_exams t/Hard_exams` changes the name and tag of the 2nd event on the event list to `CS2103T Exam` and `Hard_exams` respectively.","lastModifiedDate":"2021-09-27"},{"lineNumber":240,"author":{"gitId":"Gordon25"},"content":"* `efind Betsy` followed by `eedit 2 n/Betsy’s Wedding` edits the name of the 2nd event from the results of the `efind` command to be `Betsy’s Wedding`","lastModifiedDate":"2021-09-27"},{"lineNumber":241,"author":{"gitId":"Gordon25"},"content":"* `eedit 4 dt/*` deletes all tags from the 4th event.","lastModifiedDate":"2021-09-27"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"Gordon25"},"content":"### Locating persons by name : `efind`","lastModifiedDate":"2021-09-27"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"Gordon25"},"content":"Finds events which contain any of the given keywords.","lastModifiedDate":"2021-09-27"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"Gordon25"},"content":"Format: `efind KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-09-27"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"Gordon25"},"content":"* **Case-insensitive**. e.g `exams` will match `Exams`","lastModifiedDate":"2021-09-27"},{"lineNumber":250,"author":{"gitId":"Gordon25"},"content":"* Order of the keywords does not matter. e.g. `Exam Hard` will match `Hard Exam`","lastModifiedDate":"2021-09-27"},{"lineNumber":251,"author":{"gitId":"Gordon25"},"content":"* Only the **name** is searched.","lastModifiedDate":"2021-09-27"},{"lineNumber":252,"author":{"gitId":"Gordon25"},"content":"* Partial words can be matched e.g. `Exa` will match `CS2103T Exam` ","lastModifiedDate":"2021-09-27"},{"lineNumber":253,"author":{"gitId":"Gordon25"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search). e.g. `Exam Hard` will return `Hard Exam`, `CS1101S Exams`","lastModifiedDate":"2021-09-27"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-09-27"},{"lineNumber":256,"author":{"gitId":"Gordon25"},"content":"`efind ex` returns `exams` and `Examinations`","lastModifiedDate":"2021-09-27"},{"lineNumber":257,"author":{"gitId":"Gordon25"},"content":"`efind CS Exam` returns `CS2100 Exam`,  `CS2101` ","lastModifiedDate":"2021-09-27"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":259,"author":{"gitId":"Gordon25"},"content":"### Deleting a person : `edelete`","lastModifiedDate":"2021-09-27"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":261,"author":{"gitId":"Gordon25"},"content":"Deletes the specified event from the event list.","lastModifiedDate":"2021-09-27"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":263,"author":{"gitId":"Gordon25"},"content":"Format: `edelete INDEX1[-INDEX2]`","lastModifiedDate":"2021-09-27"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":265,"author":{"gitId":"Gordon25"},"content":"* Deletes the event at the specified `INDEX1` or between the specified range from `INDEX1` to `INDEX2` inclusive.","lastModifiedDate":"2021-09-27"},{"lineNumber":266,"author":{"gitId":"Gordon25"},"content":"* `INDEX` refers to the index number shown in the displayed event list.","lastModifiedDate":"2021-09-27"},{"lineNumber":267,"author":{"gitId":"Gordon25"},"content":"* `INDEX` **must be a positive integer**, eg 1, 2, 3, …​","lastModifiedDate":"2021-09-27"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-09-27"},{"lineNumber":270,"author":{"gitId":"Gordon25"},"content":"`elist` followed by `edelete 2` deletes the 2nd event from the event list.","lastModifiedDate":"2021-09-27"},{"lineNumber":271,"author":{"gitId":"Gordon25"},"content":"`efind Exam` followed by `edelete 1` deletes the 1st event from the results of the `efind` command.","lastModifiedDate":"2021-09-27"},{"lineNumber":272,"author":{"gitId":"Gordon25"},"content":"`edelete 3-5` deletes events with index between 3 and 5 inclusively from the event list.","lastModifiedDate":"2021-09-27"},{"lineNumber":273,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":274,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":275,"author":{"gitId":"Gordon25"},"content":"### Clearing all events: `eclear`","lastModifiedDate":"2021-09-27"},{"lineNumber":276,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":277,"author":{"gitId":"Gordon25"},"content":"Clears all entries of all events from the event list.","lastModifiedDate":"2021-09-27"},{"lineNumber":278,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":279,"author":{"gitId":"Gordon25"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2021-09-28"},{"lineNumber":280,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"chunweii"},"content":"## General","lastModifiedDate":"2021-09-22"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":284,"author":{"gitId":"chunweii"},"content":"### Viewing help : `help`","lastModifiedDate":"2021-09-22"},{"lineNumber":285,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":286,"author":{"gitId":"chunweii"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2021-09-22"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":288,"author":{"gitId":"chunweii"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2021-09-22"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":290,"author":{"gitId":"chunweii"},"content":"Format: `help`","lastModifiedDate":"2021-09-22"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":292,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":295,"author":{"gitId":"Gordon25"},"content":"**Exit** | `exit`","lastModifiedDate":"2021-09-27"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"chunweii"},"content":"SoConnect data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-09-22"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":304,"author":{"gitId":"chunweii"},"content":"SoConnect data are saved as a JSON file `[JAR file location]/data/soconnect.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-09-22"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":306,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":307,"author":{"gitId":"chunweii"},"content":"If your changes to the data file makes its format invalid, SoConnect will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-09-22"},{"lineNumber":308,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":310,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"pcgiang"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous SoConnect home folder.","lastModifiedDate":"2021-09-27"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"pcgiang"},"content":"### Managing Contacts","lastModifiedDate":"2021-09-27"},{"lineNumber":322,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":323,"author":{"gitId":"pcgiang"},"content":"Action | Format, Examples","lastModifiedDate":"2021-09-26"},{"lineNumber":324,"author":{"gitId":"pcgiang"},"content":"--------|------------------","lastModifiedDate":"2021-09-26"},{"lineNumber":325,"author":{"gitId":"pcgiang"},"content":"**Add** | `cadd n/NAME e/EMAIL [p/PHONE_NUMBER] [a/ADDRESS] [th/TELEGRAM_HANDLE] [z/ZOOM] [t/TAG]…​` \u003cbr\u003e e.g., `cadd n/James Ho p/22224444 e/hohohojames@u.nus.edu a/123, Clementi Rd, 1234665 t/Professor`","lastModifiedDate":"2021-09-26"},{"lineNumber":326,"author":{"gitId":"pcgiang"},"content":"**Clear** | `cclear`","lastModifiedDate":"2021-09-26"},{"lineNumber":327,"author":{"gitId":"pcgiang"},"content":"**Delete** | `cdelete INDEX1[-INDEX2]`\u003cbr\u003e e.g., `cdelete 3` \u003cbr\u003e e.g., `cdelete 1-5`","lastModifiedDate":"2021-09-26"},{"lineNumber":328,"author":{"gitId":"pcgiang"},"content":"**Edit** | `cedit INDEX [n/NAME] [e/EMAIL] [p/PHONE] [a/ADDRESS] [th/TELEGRAM_HANDLE] [z/ZOOM] [dt/TAG_DELETED]…​ [t/TAG_ADDED]…​​`\u003cbr\u003e e.g.,`cedit 2 n/James Lee e/jameslee@u.nus.edu p/91234567 dt/OP1_projectmate t/CS2103T_projectmate t/roommate` \u003cbr\u003e e.g., `cedit 3 dt/*`","lastModifiedDate":"2021-09-26"},{"lineNumber":329,"author":{"gitId":"pcgiang"},"content":"**Find** | `cfind KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `cfind James Jake`","lastModifiedDate":"2021-09-26"},{"lineNumber":330,"author":{"gitId":"pcgiang"},"content":"**List** | `clist [e] [p] [a] [th] [z] [t]` \u003cbr\u003e e.g., `clist` \u003cbr\u003e e.g., `clist e p`","lastModifiedDate":"2021-09-26"},{"lineNumber":331,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":332,"author":{"gitId":"pcgiang"},"content":"### Managing Events","lastModifiedDate":"2021-09-27"},{"lineNumber":333,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":334,"author":{"gitId":"pcgiang"},"content":"Action | Format, Examples","lastModifiedDate":"2021-09-26"},{"lineNumber":335,"author":{"gitId":"pcgiang"},"content":"--------|------------------","lastModifiedDate":"2021-09-26"},{"lineNumber":336,"author":{"gitId":"pcgiang"},"content":"**Add** | `eadd n/NAME at/START_TIME [end/END_TIME] [d/DESCRIPTION] [a/ADDRESS] [z/ZOOM] [t/TAG]…​ ` \u003cbr\u003e e.g., `eadd n/Summer Party at/12-12-2021 15:12 a/123, Clementi Rd, 1234665 t/fun`","lastModifiedDate":"2021-09-26"},{"lineNumber":337,"author":{"gitId":"pcgiang"},"content":"**Clear** | `eclear`","lastModifiedDate":"2021-09-26"},{"lineNumber":338,"author":{"gitId":"pcgiang"},"content":"**Delete** | `edelete INDEX`\u003cbr\u003e e.g., `edelete 3` \u003cbr\u003e e.g., `edelete 1-5`","lastModifiedDate":"2021-09-26"},{"lineNumber":339,"author":{"gitId":"pcgiang"},"content":"**Edit** | `eedit INDEX [n/NAME] [at/START_TIME] [end/END_TIME] [d/DESCRIPTION] [a/ADDRESS] [z/ZOOM] [dt/TAG_DELETED]…​ [t/TAG_ADDED]…​`\u003cbr\u003e e.g.,`eedit 2 n/CS2103T Exam dt/Easy_exams t/Hard_exams` \u003cbr\u003e e.g., `eedit 3 dt/*`","lastModifiedDate":"2021-09-26"},{"lineNumber":340,"author":{"gitId":"pcgiang"},"content":"**Find** | `efind KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `efind CS2103T Exams`","lastModifiedDate":"2021-09-26"},{"lineNumber":341,"author":{"gitId":"pcgiang"},"content":"**List** | `elist [at] [end] [d] [a] [z] [t]` \u003cbr\u003e e.g., `elist` \u003cbr\u003e e.g., `elist at d`","lastModifiedDate":"2021-09-26"},{"lineNumber":342,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":343,"author":{"gitId":"Gordon25"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2021-09-28"},{"lineNumber":344,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":345,"author":{"gitId":"pcgiang"},"content":"### General","lastModifiedDate":"2021-09-26"},{"lineNumber":346,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":347,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":351,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":352,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":353,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"janjanchen":41,"pcgiang":36,"chunweii":9,"Gordon25":58,"xiangjunn":58,"-":151}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"pcgiang"},"content":"    content: \"SoConnect\";","lastModifiedDate":"2021-09-27"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"pcgiang":1,"-":294}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"chunweii"},"content":"title: SoConnect","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"chunweii"},"content":"[![Java CI](https://github.com/AY2122S1-CS2103T-W15-3/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2122S1-CS2103T-W15-3/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-W15-3/tp/branch/master/graph/badge.svg?token\u003d40MOICZDNE)](https://codecov.io/gh/AY2122S1-CS2103T-W15-3/tp)","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"chunweii"},"content":"**SoConnect is a desktop application for managing your contacts and events.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"chunweii"},"content":"* If you are interested in using SoConnect, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"chunweii"},"content":"* If you are interested about developing SoConnect, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"chunweii":5,"-":15}},{"path":"docs/team/chunweii.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"chunweii"},"content":"title: Chun Wei\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-07-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"chunweii":1,"-":45}},{"path":"docs/team/gordon25.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"---","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"layout: page","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"title: Gordon\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"---","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"* **Project management**:","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"    * User Guide:","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"* **Community**:","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"Gordon25"},"content":"* **Tools**:","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"Gordon25"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"Gordon25"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"Gordon25"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"Gordon25"},"content":"© 2021 GitHub, Inc.","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"Gordon25"},"content":"Terms","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"Gordon25"},"content":"Privacy","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"Gordon25"},"content":"Security","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"Gordon25"},"content":"Status","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"Gordon25"},"content":"Docs","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"Gordon25"},"content":"Contact GitHub","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"Gordon25"},"content":"Pricing","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"Gordon25"},"content":"API","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"Gordon25"},"content":"Training","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"Gordon25"},"content":"Blog","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"Gordon25"},"content":"About","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"Gordon25":58}},{"path":"docs/team/janjanchen.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"janjanchen"},"content":"---","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"janjanchen"},"content":"layout: page","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"janjanchen"},"content":"title: Janice Chen\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"janjanchen"},"content":"---","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"janjanchen"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"janjanchen"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"janjanchen"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"janjanchen"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"janjanchen"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"janjanchen"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"janjanchen"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"janjanchen"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"janjanchen"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"janjanchen"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"janjanchen"},"content":"* **Project management**:","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"janjanchen"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"janjanchen"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"janjanchen"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"janjanchen"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"janjanchen"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"janjanchen"},"content":"    * User Guide:","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"janjanchen"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"janjanchen"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"janjanchen"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"janjanchen"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"janjanchen"},"content":"* **Community**:","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"janjanchen"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"janjanchen"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"janjanchen"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"janjanchen"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"janjanchen"},"content":"* **Tools**:","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"janjanchen"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"janjanchen"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"janjanchen"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"janjanchen":46}},{"path":"docs/team/pcgiang.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"---","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"layout: page","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"title: Giang\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"---","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"* **Project management**:","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"pcgiang"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"pcgiang"},"content":"    * User Guide:","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"pcgiang"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"pcgiang"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"pcgiang"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"pcgiang"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"pcgiang"},"content":"* **Community**:","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"pcgiang"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"pcgiang"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"pcgiang"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"pcgiang"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"pcgiang"},"content":"* **Tools**:","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"pcgiang"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"pcgiang"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"pcgiang"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"pcgiang":46}},{"path":"docs/team/xiangjunn.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"xiangjunn"},"content":"---","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"xiangjunn"},"content":"layout: page","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"xiangjunn"},"content":"title: Xiang Jun\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"xiangjunn"},"content":"---","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"xiangjunn"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"xiangjunn"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"xiangjunn"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"xiangjunn"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"xiangjunn"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"xiangjunn"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"xiangjunn"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"xiangjunn"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"xiangjunn"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"xiangjunn"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"xiangjunn"},"content":"* **Project management**:","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"xiangjunn"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"xiangjunn"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"xiangjunn"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"xiangjunn"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"xiangjunn"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"xiangjunn"},"content":"    * User Guide:","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"xiangjunn"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"xiangjunn"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"xiangjunn"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"xiangjunn"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"xiangjunn"},"content":"* **Community**:","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"xiangjunn"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"xiangjunn"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"xiangjunn"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"xiangjunn"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"xiangjunn"},"content":"* **Tools**:","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"xiangjunn"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"xiangjunn"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"xiangjunn"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"xiangjunn":46}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"chunweii"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.common.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"chunweii":1,"-":111}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"xiangjunn"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"xiangjunn"},"content":"    /** Returns an unmodifiable view of the filtered list of events */","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"xiangjunn"},"content":"    ObservableList\u003cEvent\u003e getFilteredEventList();","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"xiangjunn":4,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"xiangjunn"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":68,"author":{"gitId":"xiangjunn"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"xiangjunn"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"xiangjunn"},"content":"        return model.getFilteredEventList();","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"xiangjunn":6,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"chunweii"},"content":"import seedu.address.model.common.Address;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"chunweii"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, null, null, updatedTags);","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"chunweii":2,"-":224}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"chunweii"},"content":"import seedu.address.model.common.Address;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"chunweii"},"content":"        Person person \u003d new Person(name, phone, email, address, null, null, tagList);","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"chunweii":2,"-":58}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"chunweii"},"content":"import seedu.address.model.common.Address;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"chunweii":1,"-":123}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"janjanchen"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"janjanchen"},"content":"import seedu.address.model.event.UniqueEventList;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":20,"author":{"gitId":"janjanchen"},"content":"    private final UniqueEventList events;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":31,"author":{"gitId":"janjanchen"},"content":"        events \u003d new UniqueEventList();","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"janjanchen"},"content":"     * Replaces the contents of the event list with {@code events}.","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"janjanchen"},"content":"     * {@code events} must not contain duplicate events.","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"janjanchen"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"janjanchen"},"content":"        this.events.setEvents(events);","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":69,"author":{"gitId":"janjanchen"},"content":"        setEvents(newData.getEventList());","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"janjanchen"},"content":"    //// event-level operations","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"janjanchen"},"content":"     * Returns true if an event with the same name as {@code event} exists in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"janjanchen"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"janjanchen"},"content":"        requireNonNull(event);","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"janjanchen"},"content":"        return events.contains(event);","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"janjanchen"},"content":"     * Adds an event to the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"janjanchen"},"content":"     * The event must not already exist in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"janjanchen"},"content":"    public void addEvent(Event e) {","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"janjanchen"},"content":"        events.add(e);","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"janjanchen"},"content":"     * Replaces the given event {@code target} in the list with {@code editedEvent}.","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"janjanchen"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"janjanchen"},"content":"     * The event name of {@code editedEvent} must not be the same as another existing event in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"janjanchen"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"janjanchen"},"content":"        requireNonNull(editedEvent);","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"janjanchen"},"content":"        events.setEvent(target, editedEvent);","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"janjanchen"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"janjanchen"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"janjanchen"},"content":"    public void removeEvent(Event key) {","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"janjanchen"},"content":"        events.remove(key);","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"janjanchen"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":152,"author":{"gitId":"janjanchen"},"content":"                + events.asUnmodifiableObservableList().size() + \" events\";","lastModifiedDate":"2021-10-07"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":161,"author":{"gitId":"janjanchen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":162,"author":{"gitId":"janjanchen"},"content":"    public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":163,"author":{"gitId":"janjanchen"},"content":"        return events.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-07"},{"lineNumber":164,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":165,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"janjanchen"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons)","lastModifiedDate":"2021-10-07"},{"lineNumber":171,"author":{"gitId":"janjanchen"},"content":"                \u0026\u0026 events.equals(((AddressBook) other).events));","lastModifiedDate":"2021-10-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"janjanchen":60,"-":118}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"    Predicate\u003cEvent\u003e PREDICATE_SHOW_ALL_EVENTS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"pcgiang"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Person Management \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"pcgiang"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Event Management \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"pcgiang"},"content":"     * Returns true if an event with the same name as {@code event} exists in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"pcgiang"},"content":"    boolean hasEvent(Event event);","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"pcgiang"},"content":"     * Deletes the given event.","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"pcgiang"},"content":"     * The event must exist in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"pcgiang"},"content":"    void deleteEvent(Event target);","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"pcgiang"},"content":"     * Adds the given event.","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"pcgiang"},"content":"     * {@code event} must not already exist in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"pcgiang"},"content":"    void addEvent(Event event);","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"pcgiang"},"content":"     * Replaces the given event {@code target} with {@code editedEvent}.","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"pcgiang"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"pcgiang"},"content":"     * The event name of {@code editedEvent} must not be the same as another existing event in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"pcgiang"},"content":"    void setEvent(Event target, Event editedEvent);","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"pcgiang"},"content":"    /** Returns an unmodifiable view of the filtered event list */","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"pcgiang"},"content":"    ObservableList\u003cEvent\u003e getFilteredEventList();","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"pcgiang"},"content":"     * Updates the filter of the filtered event list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"pcgiang"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"pcgiang"},"content":"    void updateFilteredEventList(Predicate\u003cEvent\u003e predicate);","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"pcgiang":39,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"    private final FilteredList\u003cEvent\u003e filteredEvents;","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"pcgiang"},"content":"        filteredEvents \u003d new FilteredList\u003c\u003e(this.addressBook.getEventList());","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"pcgiang"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Manage Persons \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"pcgiang"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Manage Events \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"pcgiang"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"pcgiang"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"pcgiang"},"content":"        requireNonNull(event);","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"pcgiang"},"content":"        return addressBook.hasEvent(event);","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"pcgiang"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"pcgiang"},"content":"    public void deleteEvent(Event target) {","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"pcgiang"},"content":"        addressBook.removeEvent(target);","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"pcgiang"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"pcgiang"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"pcgiang"},"content":"        addressBook.addEvent(event);","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"pcgiang"},"content":"        updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":137,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":138,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"pcgiang"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":140,"author":{"gitId":"pcgiang"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2021-10-07"},{"lineNumber":141,"author":{"gitId":"pcgiang"},"content":"        requireAllNonNull(target, editedEvent);","lastModifiedDate":"2021-10-07"},{"lineNumber":142,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":143,"author":{"gitId":"pcgiang"},"content":"        addressBook.setEvent(target, editedEvent);","lastModifiedDate":"2021-10-07"},{"lineNumber":144,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":145,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":146,"author":{"gitId":"pcgiang"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":163,"author":{"gitId":"pcgiang"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Event List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":164,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":165,"author":{"gitId":"pcgiang"},"content":"     * Returns an unmodifiable view of the list of {@code Event} backed by the internal list of","lastModifiedDate":"2021-10-07"},{"lineNumber":166,"author":{"gitId":"pcgiang"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2021-10-07"},{"lineNumber":167,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":168,"author":{"gitId":"pcgiang"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":169,"author":{"gitId":"pcgiang"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":170,"author":{"gitId":"pcgiang"},"content":"        return filteredEvents;","lastModifiedDate":"2021-10-07"},{"lineNumber":171,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":172,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":173,"author":{"gitId":"pcgiang"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":174,"author":{"gitId":"pcgiang"},"content":"    public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2021-10-07"},{"lineNumber":175,"author":{"gitId":"pcgiang"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-07"},{"lineNumber":176,"author":{"gitId":"pcgiang"},"content":"        filteredEvents.setPredicate(predicate);","lastModifiedDate":"2021-10-07"},{"lineNumber":177,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":178,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":195,"author":{"gitId":"pcgiang"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2021-10-07"},{"lineNumber":196,"author":{"gitId":"pcgiang"},"content":"                \u0026\u0026 filteredEvents.equals(other.filteredEvents);","lastModifiedDate":"2021-10-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"pcgiang":50,"-":148}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"janjanchen"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"     * Returns an unmodifiable view of the events list.","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"     * This list will not contain any duplicate events.","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"janjanchen"},"content":"    ObservableList\u003cEvent\u003e getEventList();","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"janjanchen":2,"pcgiang":4,"-":18}},{"path":"src/main/java/seedu/address/model/common/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunweii"},"content":"package seedu.address.model.common;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"chunweii"},"content":" * Represents address of an event or person in the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chunweii":2,"-":55}},{"path":"src/main/java/seedu/address/model/common/ZoomLink.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunweii"},"content":"package seedu.address.model.common;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"chunweii"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"chunweii"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"chunweii"},"content":" * Represents zoom link of a person (usually a professor or tutor).","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"chunweii"},"content":" * Guarantees: immutable","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"chunweii"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"chunweii"},"content":"public class ZoomLink {","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"            \"Zoom link should be in http://[link].com format\";","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"chunweii"},"content":"    // TODO: 10/6/2021 add validation","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"chunweii"},"content":"    public static final String VALIDATION_REGEX \u003d \".*\";","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"chunweii"},"content":"    public final String link;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"chunweii"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"chunweii"},"content":"    * Constructs a {@code ZoomLink}.","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"chunweii"},"content":"    *","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"chunweii"},"content":"    * @param link A valid zoom link.","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"chunweii"},"content":"    */","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"chunweii"},"content":"    public ZoomLink(String link) {","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"chunweii"},"content":"        requireNonNull(link);","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"chunweii"},"content":"        this.link \u003d link;","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"chunweii"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"chunweii"},"content":"    // TODO: 10/6/2021 add test cases for invalid zoom link","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"chunweii"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"chunweii"},"content":"     * Returns true if a given string is a valid zoom link.","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"chunweii"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"chunweii"},"content":"    public static boolean isValidZoomLink(String test) {","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"chunweii"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"chunweii"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"chunweii"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"chunweii"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"chunweii"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"chunweii"},"content":"                || (other instanceof ZoomLink // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"chunweii"},"content":"                \u0026\u0026 link.equals(((ZoomLink) other).link)); // state check","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"chunweii"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"chunweii"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"pcgiang":3,"chunweii":41}},{"path":"src/main/java/seedu/address/model/event/DateAndTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":" * Represents time of an event in the event list.","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":" * Guarantees: immutable;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"public class DateAndTime {","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"            \"Time format should be in  dd-MM-yyyy HH:mm format and start time should not be blank\";","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"     * @// TODO: 10/5/2021 add requirement for time","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"    public static final String VALIDATION_REGEX \u003d \".*\";","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"    public final LocalDateTime time;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"     * Constructs an {@code DateAndTime}","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"     * @param time A valid start DateAndTime","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"    public DateAndTime(String time) {","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"pcgiang"},"content":"        this.time \u003d LocalDateTime.parse(time, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"pcgiang"},"content":"    // TODO: 10/6/2021 add test case for invalid date and time","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"pcgiang"},"content":"     * Returns true if a given string is a valid DateAndTime.","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"pcgiang"},"content":"    public static boolean isValidDateTime(String test) {","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"pcgiang"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"pcgiang"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"pcgiang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"pcgiang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"pcgiang"},"content":"                || (other instanceof DateAndTime // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"pcgiang"},"content":"                \u0026\u0026 time.equals(((DateAndTime) other).time)); // state check","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"xiangjunn"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"xiangjunn"},"content":"     * Returns a string representing a DateAndTime object.","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"xiangjunn"},"content":"     * @return A string representation of a DateAndTime object.","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"xiangjunn"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"xiangjunn"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"xiangjunn"},"content":"    public String toString() {","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"xiangjunn"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"xiangjunn"},"content":"        return this.time.format(formatter);","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"pcgiang":46,"xiangjunn":10}},{"path":"src/main/java/seedu/address/model/event/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":" * Represents the description of an event in the address book.","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"public class Description {","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"    public final String value;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"     * Constructs an {@code Description}.","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"     * @param remark A valid description.","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"    public Description(String remark) {","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"        requireNonNull(remark);","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"        value \u003d remark;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"                || (other instanceof Description // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"                \u0026\u0026 value.equals(((Description) other).value)); // state check","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"pcgiang":29}},{"path":"src/main/java/seedu/address/model/event/EndDateTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":" * Represents end time of an event in the event list.","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTime(String)}","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"public class EndDateTime extends DateAndTime {","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"     * Constructs an {@code DateAndTime}","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"     * @param time A valid DateAndTime","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"    public EndDateTime(String time) {","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"        super(time);","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"pcgiang":18}},{"path":"src/main/java/seedu/address/model/event/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"janjanchen"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"janjanchen"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"janjanchen"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"janjanchen"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"janjanchen"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"janjanchen"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"chunweii"},"content":"import seedu.address.model.common.Address;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"chunweii"},"content":"import seedu.address.model.common.ZoomLink;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"janjanchen"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"janjanchen"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"janjanchen"},"content":" * Represents an Event in SoConnect.","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"janjanchen"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"janjanchen"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"janjanchen"},"content":"public class Event {","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"janjanchen"},"content":"    //Compulsory fields","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"janjanchen"},"content":"    private final Name name;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"janjanchen"},"content":"    private final DateAndTime startDateAndTime;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"janjanchen"},"content":"    //Optional fields","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"janjanchen"},"content":"    private final DateAndTime endDateAndTime;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"janjanchen"},"content":"    private final Description description;","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"janjanchen"},"content":"    private final Address address;","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"janjanchen"},"content":"    private final ZoomLink zoomLink;","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"janjanchen"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"janjanchen"},"content":"     * All fields must be present and not null (currently).","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"janjanchen"},"content":"    public Event(Name name, DateAndTime startDateAndTime, DateAndTime endDateAndTime,","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"janjanchen"},"content":"                 Description description, Address address, ZoomLink zoomLink, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"janjanchen"},"content":"        requireAllNonNull(name, startDateAndTime, endDateAndTime, description, address, zoomLink, tags);","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"janjanchen"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"janjanchen"},"content":"        this.startDateAndTime \u003d startDateAndTime;","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"janjanchen"},"content":"        this.endDateAndTime \u003d endDateAndTime;","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"janjanchen"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"janjanchen"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"janjanchen"},"content":"        this.zoomLink \u003d zoomLink;","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"janjanchen"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"janjanchen"},"content":"    public Name getName() {","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"janjanchen"},"content":"        return name;","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"janjanchen"},"content":"    public DateAndTime getStartDateAndTime() {","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"janjanchen"},"content":"        return startDateAndTime;","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"janjanchen"},"content":"    public DateAndTime getEndDateAndTime() {","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"janjanchen"},"content":"        return endDateAndTime;","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"janjanchen"},"content":"    public Description getDescription() {","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"janjanchen"},"content":"        return description;","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"janjanchen"},"content":"    public Address getAddress() {","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"janjanchen"},"content":"        return address;","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"janjanchen"},"content":"    public ZoomLink getZoomLink() {","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"janjanchen"},"content":"        return zoomLink;","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"janjanchen"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"janjanchen"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"janjanchen"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"janjanchen"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"janjanchen"},"content":"     * Returns true if both events have the same name.","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"janjanchen"},"content":"     * This defines a weaker notion of equality between two events.","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"janjanchen"},"content":"    public boolean isSameEvent(Event otherEvent) {","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"janjanchen"},"content":"        if (otherEvent \u003d\u003d this) {","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"janjanchen"},"content":"            return true;","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"janjanchen"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"janjanchen"},"content":"        return otherEvent !\u003d null","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"janjanchen"},"content":"                \u0026\u0026 otherEvent.getName().equals(getName());","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"janjanchen"},"content":"     * Returns true if both events have the same details.","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"janjanchen"},"content":"     * This defines a stronger notion of equality between two events.","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"janjanchen"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"janjanchen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"janjanchen"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"janjanchen"},"content":"            return true;","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"janjanchen"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"janjanchen"},"content":"        if (!(other instanceof Event)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"janjanchen"},"content":"            return false;","lastModifiedDate":"2021-10-05"},{"lineNumber":103,"author":{"gitId":"janjanchen"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"janjanchen"},"content":"        Event otherEvent \u003d (Event) other;","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"janjanchen"},"content":"        return otherEvent.getName().equals(getName())","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"janjanchen"},"content":"                \u0026\u0026 otherEvent.getStartDateAndTime().equals(getStartDateAndTime())","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"janjanchen"},"content":"                \u0026\u0026 otherEvent.getEndDateAndTime().equals(getEndDateAndTime())","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"janjanchen"},"content":"                \u0026\u0026 otherEvent.getDescription().equals(getDescription())","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"janjanchen"},"content":"                \u0026\u0026 otherEvent.getAddress().equals(getAddress())","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"janjanchen"},"content":"                \u0026\u0026 otherEvent.getZoomLink().equals(getZoomLink())","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"janjanchen"},"content":"                \u0026\u0026 otherEvent.getTags().equals(getTags());","lastModifiedDate":"2021-10-05"},{"lineNumber":113,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"janjanchen"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":116,"author":{"gitId":"janjanchen"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"janjanchen"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"janjanchen"},"content":"        return Objects.hash(name, startDateAndTime, endDateAndTime, description,","lastModifiedDate":"2021-10-05"},{"lineNumber":119,"author":{"gitId":"janjanchen"},"content":"                address, zoomLink, tags);","lastModifiedDate":"2021-10-06"},{"lineNumber":120,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":121,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"janjanchen"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":123,"author":{"gitId":"janjanchen"},"content":"    public String toString() {","lastModifiedDate":"2021-10-05"},{"lineNumber":124,"author":{"gitId":"janjanchen"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-05"},{"lineNumber":125,"author":{"gitId":"janjanchen"},"content":"        builder.append(getName())","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"janjanchen"},"content":"                .append(\"; Start: \")","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"janjanchen"},"content":"                .append(getStartDateAndTime())","lastModifiedDate":"2021-10-05"},{"lineNumber":128,"author":{"gitId":"janjanchen"},"content":"                .append(\"; End: \")","lastModifiedDate":"2021-10-05"},{"lineNumber":129,"author":{"gitId":"janjanchen"},"content":"                .append(getEndDateAndTime())","lastModifiedDate":"2021-10-05"},{"lineNumber":130,"author":{"gitId":"janjanchen"},"content":"                .append(\"; Description: \")","lastModifiedDate":"2021-10-05"},{"lineNumber":131,"author":{"gitId":"janjanchen"},"content":"                .append(getDescription())","lastModifiedDate":"2021-10-05"},{"lineNumber":132,"author":{"gitId":"janjanchen"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2021-10-05"},{"lineNumber":133,"author":{"gitId":"janjanchen"},"content":"                .append(getAddress())","lastModifiedDate":"2021-10-05"},{"lineNumber":134,"author":{"gitId":"janjanchen"},"content":"                .append(\"; ZoomLink: \")","lastModifiedDate":"2021-10-06"},{"lineNumber":135,"author":{"gitId":"janjanchen"},"content":"                .append(getZoomLink());","lastModifiedDate":"2021-10-06"},{"lineNumber":136,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":137,"author":{"gitId":"janjanchen"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2021-10-05"},{"lineNumber":138,"author":{"gitId":"janjanchen"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":139,"author":{"gitId":"janjanchen"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2021-10-05"},{"lineNumber":140,"author":{"gitId":"janjanchen"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2021-10-05"},{"lineNumber":141,"author":{"gitId":"janjanchen"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":142,"author":{"gitId":"janjanchen"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-05"},{"lineNumber":143,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":144,"author":{"gitId":"janjanchen"},"content":"}","lastModifiedDate":"2021-10-04"},{"lineNumber":145,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"janjanchen":142,"chunweii":2,"Gordon25":1}},{"path":"src/main/java/seedu/address/model/event/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":" * Represents name of an event in the event list.","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":" * Guarantees: immutable;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"public class Name {","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Event names should not be blank\";","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"    /*","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"     * The first character of the event must not be a whitespace,","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"    public final String fullName;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"     * @param name A valid name.","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"    public Name(String name) {","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"pcgiang"},"content":"        fullName \u003d name;","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"pcgiang"},"content":"    // TODO: 10/6/2021 update test cases for isValidName()","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"pcgiang"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"pcgiang"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"pcgiang"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"pcgiang"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"pcgiang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"pcgiang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"pcgiang"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"pcgiang"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"pcgiang":46}},{"path":"src/main/java/seedu/address/model/event/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"janjanchen"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"janjanchen"},"content":"import java.util.List;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"janjanchen"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"janjanchen"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"janjanchen"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"janjanchen"},"content":" * Tests that a {@code Event}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"janjanchen"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"janjanchen"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cEvent\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"janjanchen"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"janjanchen"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"janjanchen"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"janjanchen"},"content":"    // to change event.getName().field","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"janjanchen"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"janjanchen"},"content":"    public boolean test(Event event) {","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"janjanchen"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"janjanchen"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(event.getName().toString(), keyword));","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"janjanchen"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"janjanchen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"janjanchen"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"janjanchen"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"janjanchen"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"janjanchen"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"janjanchen":31}},{"path":"src/main/java/seedu/address/model/event/StartDateTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":" * Represents start time of an event in the event list.","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTime(String)}","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"public class StartDateTime extends DateAndTime {","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"     * Constructs an {@code StartDateTime}","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"     * @param time A valid DateAndTime","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"    public StartDateTime(String time) {","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"        super(time);","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"pcgiang":17}},{"path":"src/main/java/seedu/address/model/event/UniqueEventList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"janjanchen"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"janjanchen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"janjanchen"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"janjanchen"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"janjanchen"},"content":"import java.util.List;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"janjanchen"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"janjanchen"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"janjanchen"},"content":"import seedu.address.model.event.exceptions.DuplicateEventException;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"janjanchen"},"content":"import seedu.address.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"janjanchen"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"janjanchen"},"content":" * A list of events that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"janjanchen"},"content":" * An event is considered unique by comparing using {@code Event#isSameEvent(Event)}. As such, adding and updating of","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"janjanchen"},"content":" * events uses Event#isSameEvent(Event) for equality so as to ensure that the event being added or updated is","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"janjanchen"},"content":" * unique in terms of event name in the UniqueEventList. However, the removal of an event uses Event#equals(Object) so","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"janjanchen"},"content":" * as to ensure that the event with exactly the same fields will be removed.","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"janjanchen"},"content":" *","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"janjanchen"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"janjanchen"},"content":" *","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"janjanchen"},"content":" * @see Event#isSameEvent(Event)","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"janjanchen"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"janjanchen"},"content":"public class UniqueEventList implements Iterable\u003cEvent\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"janjanchen"},"content":"    private final ObservableList\u003cEvent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"janjanchen"},"content":"    private final ObservableList\u003cEvent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"janjanchen"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"janjanchen"},"content":"     * Returns true if the list contains an equivalent event as the given argument.","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"janjanchen"},"content":"    public boolean contains(Event toCheck) {","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"janjanchen"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"janjanchen"},"content":"        return internalList.stream().anyMatch(toCheck::isSameEvent);","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"janjanchen"},"content":"     * Adds an event to the list.","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"janjanchen"},"content":"     * The event must not already exist in the list.","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"janjanchen"},"content":"    public void add(Event toAdd) {","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"janjanchen"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"janjanchen"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"janjanchen"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"janjanchen"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"janjanchen"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"janjanchen"},"content":"     * Replaces the event {@code target} in the list with {@code editedEvent}.","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"janjanchen"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"janjanchen"},"content":"     * The event name of {@code editedEvent} must not be the same as another existing event in the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"janjanchen"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"janjanchen"},"content":"        requireAllNonNull(target, editedEvent);","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"janjanchen"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"janjanchen"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"janjanchen"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"janjanchen"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"janjanchen"},"content":"        if (!target.isSameEvent(editedEvent) \u0026\u0026 contains(editedEvent)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"janjanchen"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"janjanchen"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"janjanchen"},"content":"        internalList.set(index, editedEvent);","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"janjanchen"},"content":"     * Removes the equivalent event from the list.","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"janjanchen"},"content":"     * The event must exist in the list.","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"janjanchen"},"content":"    public void remove(Event toRemove) {","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"janjanchen"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"janjanchen"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"janjanchen"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"janjanchen"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"janjanchen"},"content":"    public void setEvents(UniqueEventList replacement) {","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"janjanchen"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"janjanchen"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"janjanchen"},"content":"     * Replaces the contents of this list with {@code events}.","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"janjanchen"},"content":"     * {@code events} must not contain duplicate events.","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"janjanchen"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"janjanchen"},"content":"        requireAllNonNull(events);","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"pcgiang"},"content":"        if (!eventsAreUnique(events)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"janjanchen"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"janjanchen"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"janjanchen"},"content":"        internalList.setAll(events);","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"janjanchen"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":103,"author":{"gitId":"janjanchen"},"content":"    public ObservableList\u003cEvent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"janjanchen"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"janjanchen"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"janjanchen"},"content":"    public Iterator\u003cEvent\u003e iterator() {","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"janjanchen"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":112,"author":{"gitId":"janjanchen"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":113,"author":{"gitId":"janjanchen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"janjanchen"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"janjanchen"},"content":"                || (other instanceof UniqueEventList // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":116,"author":{"gitId":"janjanchen"},"content":"                \u0026\u0026 internalList.equals(((UniqueEventList) other).internalList));","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":119,"author":{"gitId":"janjanchen"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":120,"author":{"gitId":"janjanchen"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-05"},{"lineNumber":121,"author":{"gitId":"janjanchen"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":123,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":124,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":125,"author":{"gitId":"janjanchen"},"content":"     * Returns true if {@code events} contains only unique events.","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"janjanchen"},"content":"    private boolean eventsAreUnique(List\u003cEvent\u003e events) {","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"janjanchen"},"content":"        for (int i \u003d 0; i \u003c events.size() - 1; i++) {","lastModifiedDate":"2021-10-05"},{"lineNumber":129,"author":{"gitId":"janjanchen"},"content":"            for (int j \u003d i + 1; j \u003c events.size(); j++) {","lastModifiedDate":"2021-10-05"},{"lineNumber":130,"author":{"gitId":"janjanchen"},"content":"                if (events.get(i).isSameEvent(events.get(j))) {","lastModifiedDate":"2021-10-05"},{"lineNumber":131,"author":{"gitId":"janjanchen"},"content":"                    return false;","lastModifiedDate":"2021-10-05"},{"lineNumber":132,"author":{"gitId":"janjanchen"},"content":"                }","lastModifiedDate":"2021-10-05"},{"lineNumber":133,"author":{"gitId":"janjanchen"},"content":"            }","lastModifiedDate":"2021-10-05"},{"lineNumber":134,"author":{"gitId":"janjanchen"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":135,"author":{"gitId":"janjanchen"},"content":"        return true;","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":137,"author":{"gitId":"janjanchen"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"janjanchen":136,"pcgiang":1}},{"path":"src/main/java/seedu/address/model/event/exceptions/DuplicateEventException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"janjanchen"},"content":"package seedu.address.model.event.exceptions;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"janjanchen"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"janjanchen"},"content":" * Signals that the operation will result in duplicate Events (Events are considered duplicates if they have the same","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"janjanchen"},"content":" * details).","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"janjanchen"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"janjanchen"},"content":"public class DuplicateEventException extends RuntimeException {","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"janjanchen"},"content":"    public DuplicateEventException() {","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"janjanchen"},"content":"        super(\"Operation would result in duplicate events\");","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"janjanchen"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"janjanchen":11}},{"path":"src/main/java/seedu/address/model/event/exceptions/EventNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"janjanchen"},"content":"package seedu.address.model.event.exceptions;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"janjanchen"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"janjanchen"},"content":" * Signals that the operation is unable to find the specified event.","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"janjanchen"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"janjanchen"},"content":"public class EventNotFoundException extends RuntimeException {","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"janjanchen"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"janjanchen":7}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"chunweii"},"content":"import seedu.address.model.common.Address;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"chunweii"},"content":"import seedu.address.model.common.ZoomLink;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"chunweii"},"content":"    private final TelegramHandle telegramHandle;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"chunweii"},"content":"    private final ZoomLink zoomLink;","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"chunweii"},"content":"     * Every field, except telegram handle and zoom link must be present and not null.","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"chunweii"},"content":"    public Person(","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"chunweii"},"content":"        Name name, Phone phone, Email email, Address address, ZoomLink zoomLink,","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"chunweii"},"content":"        TelegramHandle telegramHandle, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"chunweii"},"content":"        this.telegramHandle \u003d telegramHandle;","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"chunweii"},"content":"        this.zoomLink \u003d zoomLink;","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":63,"author":{"gitId":"chunweii"},"content":"    public TelegramHandle getTelegramHandle() {","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"chunweii"},"content":"        return telegramHandle;","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"chunweii"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"chunweii"},"content":"    public ZoomLink getZoomLink() {","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"chunweii"},"content":"        return zoomLink;","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"chunweii"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":101,"author":{"gitId":"chunweii"},"content":"                .append(getAddress())","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"chunweii"},"content":"                .append(\"; Zoom Link: \")","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"chunweii"},"content":"                .append(getZoomLink())","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"chunweii"},"content":"                .append(\"; Telegram: \")","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"chunweii"},"content":"                .append(getTelegramHandle());","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"chunweii"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"chunweii"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"chunweii"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"chunweii"},"content":"            return true;","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"chunweii"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"chunweii"},"content":"        if (other \u003d\u003d null || getClass() !\u003d other.getClass()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"chunweii"},"content":"            return false;","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"chunweii"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"chunweii"},"content":"        Person person \u003d (Person) other;","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"chunweii"},"content":"        return Objects.equals(getName(), person.getName())","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"chunweii"},"content":"            \u0026\u0026 Objects.equals(getPhone(), person.getPhone())","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"chunweii"},"content":"            \u0026\u0026 Objects.equals(getEmail(), person.getEmail())","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"chunweii"},"content":"            \u0026\u0026 Objects.equals(getTelegramHandle(), person.getTelegramHandle())","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"chunweii"},"content":"            \u0026\u0026 Objects.equals(getZoomLink(), person.getZoomLink())","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"chunweii"},"content":"            \u0026\u0026 Objects.equals(getAddress(), person.getAddress())","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"chunweii"},"content":"            \u0026\u0026 Objects.equals(getTags(), person.getTags());","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"chunweii"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"chunweii"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"chunweii"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"chunweii"},"content":"        return Objects.hash(","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"chunweii"},"content":"            getName(), getPhone(), getEmail(), getTelegramHandle(), getZoomLink(), getAddress(), getTags());","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"chunweii"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chunweii":46,"-":92}},{"path":"src/main/java/seedu/address/model/person/TelegramHandle.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunweii"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"chunweii"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"chunweii"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"chunweii"},"content":"public class TelegramHandle {","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"chunweii"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"chunweii"},"content":"        \"Telegram handles should only contain alphanumeric characters or underscores, with minimum 5 characters.\";","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"chunweii"},"content":"    /*","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"chunweii"},"content":"     * At least 5 characters of a-z or A-Z or 0-9 or _.","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"chunweii"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"chunweii"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}_]{5,}\";","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"chunweii"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"chunweii"},"content":"     * The telegram username of a person.","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"chunweii"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"chunweii"},"content":"    public final String handle;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"chunweii"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"chunweii"},"content":"     * The link to the telegram account of the handle.","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"chunweii"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"chunweii"},"content":"    public final String link;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"chunweii"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"chunweii"},"content":"     * Constructs a {@code TelegramHandle}.","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"chunweii"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"chunweii"},"content":"     * @param handle A valid Telegram handle.","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"chunweii"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"chunweii"},"content":"    public TelegramHandle(String handle) {","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"chunweii"},"content":"        requireNonNull(handle);","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"chunweii"},"content":"        checkArgument(isValidHandle(handle), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"chunweii"},"content":"        this.handle \u003d handle;","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"chunweii"},"content":"        link \u003d \"https://t.me/\" + handle;","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"chunweii"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"chunweii"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"chunweii"},"content":"     * Returns true if a given string is a valid Telegram handle.","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"chunweii"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"chunweii"},"content":"    public static boolean isValidHandle(String test) {","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"chunweii"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"chunweii"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"chunweii"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"chunweii"},"content":"     * Gets the link to the person\u0027s telegram chat.","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"chunweii"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"chunweii"},"content":"    public String getTelegramLink() {","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"chunweii"},"content":"        return link;","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"chunweii"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"chunweii"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"chunweii"},"content":"    public String toString() {","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"chunweii"},"content":"        return handle;","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"chunweii"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"chunweii"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"chunweii"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"chunweii"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"chunweii"},"content":"            || (other instanceof TelegramHandle // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"chunweii"},"content":"            \u0026\u0026 handle.equals(((TelegramHandle) other).handle)); // state check","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"chunweii"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"chunweii"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"chunweii"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"chunweii"},"content":"        return handle.hashCode();","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"chunweii"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"chunweii"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"chunweii":68}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"chunweii"},"content":"import seedu.address.model.common.Address;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"chunweii"},"content":"import seedu.address.model.common.ZoomLink;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"xiangjunn"},"content":"import seedu.address.model.event.Description;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"xiangjunn"},"content":"import seedu.address.model.event.EndDateTime;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"xiangjunn"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"xiangjunn"},"content":"import seedu.address.model.event.StartDateTime;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"chunweii"},"content":"                null, null, getTagSet(\"friends\")),","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":32,"author":{"gitId":"chunweii"},"content":"                null, null, getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":35,"author":{"gitId":"chunweii"},"content":"                null, null, getTagSet(\"neighbours\")),","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":38,"author":{"gitId":"chunweii"},"content":"                null, null, getTagSet(\"family\")),","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"chunweii"},"content":"                null, null, getTagSet(\"classmates\")),","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"chunweii"},"content":"                null, null, getTagSet(\"colleagues\"))","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"xiangjunn"},"content":"    public static Event[] getSampleEvents() {","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"xiangjunn"},"content":"        return new Event[] {","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"xiangjunn"},"content":"            new Event(new seedu.address.model.event.Name(\"CS2103T project meeting\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"xiangjunn"},"content":"                new StartDateTime(\"2021-10-02 21:00\"), new EndDateTime(\"2021-10-02 22:00\"), new Description(\"\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"chunweii"},"content":"                new Address(\".\"), new ZoomLink(\"nus-sg.zoom.us/j/21342513543\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"xiangjunn"},"content":"                Set.of(new Tag(\"Recurring\"), new Tag(\"CS2103T\"))),","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"xiangjunn"},"content":"            new Event(new seedu.address.model.event.Name(\"Basketball training\"), new StartDateTime(\"2021-10-02 20:00\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"xiangjunn"},"content":"                new EndDateTime(\"2021-10-02 21:00\"), new Description(\"Meeting every week\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"chunweii"},"content":"                new Address(\"NUS Sport Centre\"), new ZoomLink(\".\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"xiangjunn"},"content":"                Set.of(new Tag(\"Recurring\"), new Tag(\"CCA\"))),","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"xiangjunn"},"content":"            new Event(new seedu.address.model.event.Name(\"Google Interview\"), new StartDateTime(\"2021-10-09 15:30\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"xiangjunn"},"content":"                new EndDateTime(\"2021-10-09 16:00\"), new Description(\"\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"chunweii"},"content":"                new Address(\".\"), new ZoomLink(\"careers.google.com/summer\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"xiangjunn"},"content":"                Set.of(new Tag(\"Internship\"))),","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"xiangjunn"},"content":"            new Event(new seedu.address.model.event.Name(\"Dance class\"), new StartDateTime(\"2021-10-13 20:00\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"xiangjunn"},"content":"                new EndDateTime(\"2021-10-13 22:00\"), new Description(\"Lorem ipsum dolor sit amet, consectetur\"","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"xiangjunn"},"content":"                + \" adipiscing elit. Sed lorem urna, auctor vel elit vitae, hendrerit convallis lorem. Aliquam non \"","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"xiangjunn"},"content":"                + \"lobortis nisl, convallis placerat urna.\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"chunweii"},"content":"                new Address(\"NUS UTown\"), new ZoomLink(\".\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"xiangjunn"},"content":"                Set.of(new Tag(\"Recurring\"), new Tag(\"CCA\")))","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":76,"author":{"gitId":"xiangjunn"},"content":"        for (Event sampleEvent : getSampleEvents()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"xiangjunn"},"content":"            sampleAb.addEvent(sampleEvent);","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"xiangjunn"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"chunweii":12,"xiangjunn":23,"-":56}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"import java.util.List;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"chunweii"},"content":"import seedu.address.model.common.Address;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"chunweii"},"content":"import seedu.address.model.common.ZoomLink;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"import seedu.address.model.event.Description;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"import seedu.address.model.event.EndDateTime;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"import seedu.address.model.event.Name;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"import seedu.address.model.event.StartDateTime;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":" * Jackson-friendly version of {@link Event}.","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"class JsonAdaptedEvent {","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Event\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"    private final String name;","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"    private final String startDateTime;","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"    private final String endDateTime;","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"    private final String description;","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"    private final String address;","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"    private final String zoomLink;","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"     * Constructs a {@code JsonAdaptedEvent} with the given event details.","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"Gordon25"},"content":"    public JsonAdaptedEvent(@JsonProperty(\"name\") String name, @JsonProperty(\"start\") String startDateTime,","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"Gordon25"},"content":"                            @JsonProperty(\"end\") String endDateTime, @JsonProperty(\"description\") String description,","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"Gordon25"},"content":"                            @JsonProperty(\"address\") String address, @JsonProperty(\"zoom\") String zoomLink,","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"Gordon25"},"content":"                            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"Gordon25"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"Gordon25"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"Gordon25"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"Gordon25"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"Gordon25"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"Gordon25"},"content":"        this.zoomLink \u003d zoomLink;","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"Gordon25"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"Gordon25"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"Gordon25"},"content":"     * Converts a given {@code Event} into this class for Jackson use.","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"Gordon25"},"content":"    public JsonAdaptedEvent(Event source) {","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"Gordon25"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"Gordon25"},"content":"        startDateTime \u003d source.getStartDateAndTime().toString();","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"Gordon25"},"content":"        endDateTime \u003d source.getEndDateAndTime().toString();","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"Gordon25"},"content":"        description \u003d source.getDescription().value;","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"Gordon25"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"chunweii"},"content":"        zoomLink \u003d source.getZoomLink().link;","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"Gordon25"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"Gordon25"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"Gordon25"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"Gordon25"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"Gordon25"},"content":"     * Converts this Jackson-friendly adapted event object into the model\u0027s {@code Event} object.","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"Gordon25"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"Gordon25"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted event.","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"Gordon25"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"Gordon25"},"content":"    public Event toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"Gordon25"},"content":"        final List\u003cTag\u003e eventTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"Gordon25"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"Gordon25"},"content":"            eventTags.add(tag.toModelType());","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"Gordon25"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"Gordon25"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"Gordon25"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"Gordon25"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"Gordon25"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"Gordon25"},"content":"        if (startDateTime \u003d\u003d null) {","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"Gordon25"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"Gordon25"},"content":"                    StartDateTime.class.getSimpleName()));","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"Gordon25"},"content":"        if (!StartDateTime.isValidDateTime(startDateTime)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"Gordon25"},"content":"            throw new IllegalValueException(StartDateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"Gordon25"},"content":"        final StartDateTime modelStartDateTime \u003d new StartDateTime(startDateTime);","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"Gordon25"},"content":"        if (endDateTime \u003d\u003d null) {","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"Gordon25"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"Gordon25"},"content":"                    EndDateTime.class.getSimpleName()));","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"Gordon25"},"content":"        if (!EndDateTime.isValidDateTime(endDateTime)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"Gordon25"},"content":"            throw new IllegalValueException(EndDateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"Gordon25"},"content":"        final EndDateTime modelEndDateTime \u003d new EndDateTime(endDateTime);","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"Gordon25"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"Gordon25"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"Gordon25"},"content":"                    Description.class.getSimpleName()));","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"Gordon25"},"content":"        final Description modelDescription \u003d new Description(description);","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"Gordon25"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"Gordon25"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"Gordon25"},"content":"                    Address.class.getSimpleName()));","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":119,"author":{"gitId":"Gordon25"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":120,"author":{"gitId":"Gordon25"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":121,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"Gordon25"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2021-10-06"},{"lineNumber":123,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":124,"author":{"gitId":"Gordon25"},"content":"        if (zoomLink \u003d\u003d null) {","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"Gordon25"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"Gordon25"},"content":"                    ZoomLink.class.getSimpleName()));","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"Gordon25"},"content":"        if (!ZoomLink.isValidZoomLink(zoomLink)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"Gordon25"},"content":"            throw new IllegalValueException(ZoomLink.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"Gordon25"},"content":"        final ZoomLink modelZoomLink \u003d new ZoomLink(zoomLink);","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":133,"author":{"gitId":"Gordon25"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(eventTags);","lastModifiedDate":"2021-10-06"},{"lineNumber":134,"author":{"gitId":"Gordon25"},"content":"        return new Event(modelName, modelStartDateTime, modelEndDateTime, modelDescription, modelAddress, modelZoomLink,","lastModifiedDate":"2021-10-07"},{"lineNumber":135,"author":{"gitId":"Gordon25"},"content":"                modelTags);","lastModifiedDate":"2021-10-06"},{"lineNumber":136,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":137,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":138,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-10-06"},{"lineNumber":139,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":140,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"chunweii":3,"Gordon25":137}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"chunweii"},"content":"import seedu.address.model.common.Address;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"chunweii"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, null, null, modelTags);","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"chunweii":2,"-":107}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"Events list contains duplicate event(s).\";","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"    private final List\u003cJsonAdaptedEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons and events.","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"                                       @JsonProperty(\"events\") List\u003cJsonAdaptedEvent\u003e events) {","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"        if (persons !\u003d null) {","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"Gordon25"},"content":"        if (events !\u003d null) {","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"Gordon25"},"content":"            this.events.addAll(events);","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"Gordon25"},"content":"        events.addAll(source.getEventList().stream().map(JsonAdaptedEvent::new).collect(Collectors.toList()));","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"Gordon25"},"content":"        for (JsonAdaptedEvent jsonAdaptedEvent : events) {","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"Gordon25"},"content":"            Event event \u003d jsonAdaptedEvent.toModelType();","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"Gordon25"},"content":"            if (addressBook.hasEvent(event)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"Gordon25"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"Gordon25"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"Gordon25"},"content":"            addressBook.addEvent(event);","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"Gordon25":24,"-":58}},{"path":"src/main/java/seedu/address/ui/EventCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunweii"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"chunweii"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"chunweii"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"chunweii"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"chunweii"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"chunweii"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"chunweii"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"chunweii"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"chunweii"},"content":" * An UI component that displays information of an {@code Event}.","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"chunweii"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"chunweii"},"content":"public class EventCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"chunweii"},"content":"    private static final String FXML \u003d \"EventListCard.fxml\";","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"chunweii"},"content":"    private final Event event;","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"chunweii"},"content":"    @FXML","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"chunweii"},"content":"    private Label id;","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"chunweii"},"content":"    @FXML","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"chunweii"},"content":"    private Label name;","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"chunweii"},"content":"    @FXML","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"chunweii"},"content":"    private Label from;","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"chunweii"},"content":"    @FXML","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"chunweii"},"content":"    private Label to;","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"chunweii"},"content":"    @FXML","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"chunweii"},"content":"    private Label address;","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"chunweii"},"content":"    @FXML","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"chunweii"},"content":"    private Label zoomLink;","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"chunweii"},"content":"    @FXML","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"chunweii"},"content":"    private Label description;","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"chunweii"},"content":"    @FXML","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"chunweii"},"content":"    private FlowPane tags;","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"chunweii"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"chunweii"},"content":"     * Creates an {@code EventCard} with the given {@code Event} and index to display.","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"chunweii"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"chunweii"},"content":"    public EventCard(","lastModifiedDate":"2021-10-03"},{"lineNumber":48,"author":{"gitId":"chunweii"},"content":"        Event event, int displayedIndex) {","lastModifiedDate":"2021-10-03"},{"lineNumber":49,"author":{"gitId":"chunweii"},"content":"        super(FXML);","lastModifiedDate":"2021-10-03"},{"lineNumber":50,"author":{"gitId":"chunweii"},"content":"        this.event \u003d event;","lastModifiedDate":"2021-10-03"},{"lineNumber":51,"author":{"gitId":"chunweii"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-10-03"},{"lineNumber":52,"author":{"gitId":"chunweii"},"content":"        name.setText(event.getName().fullName);","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"xiangjunn"},"content":"        from.setText(\"from: \" + event.getStartDateAndTime());","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"xiangjunn"},"content":"        to.setText(\"to: \" + event.getEndDateAndTime());","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"chunweii"},"content":"        address.setText(\"location: \" + event.getAddress().value);","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"chunweii"},"content":"        zoomLink.setText(\"link: \" + event.getZoomLink().link);","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"chunweii"},"content":"        description.setText(\"description: \" + event.getDescription().value);","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"chunweii"},"content":"        event.getTags().stream()","lastModifiedDate":"2021-10-03"},{"lineNumber":59,"author":{"gitId":"chunweii"},"content":"            .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2021-10-03"},{"lineNumber":60,"author":{"gitId":"chunweii"},"content":"            .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2021-10-03"},{"lineNumber":61,"author":{"gitId":"chunweii"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":62,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":63,"author":{"gitId":"chunweii"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":64,"author":{"gitId":"chunweii"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"chunweii"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"chunweii"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"chunweii"},"content":"            return true;","lastModifiedDate":"2021-10-03"},{"lineNumber":68,"author":{"gitId":"chunweii"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":69,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"chunweii"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"chunweii"},"content":"        if (!(other instanceof EventCard)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"chunweii"},"content":"            return false;","lastModifiedDate":"2021-10-03"},{"lineNumber":73,"author":{"gitId":"chunweii"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":74,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":75,"author":{"gitId":"chunweii"},"content":"        // state check","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"chunweii"},"content":"        EventCard card \u003d (EventCard) other;","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"chunweii"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"chunweii"},"content":"            \u0026\u0026 event.equals(card.event);","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"chunweii"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":80,"author":{"gitId":"chunweii"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"chunweii":78,"xiangjunn":2}},{"path":"src/main/java/seedu/address/ui/EventListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunweii"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"chunweii"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"chunweii"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"chunweii"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"chunweii"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"chunweii"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"chunweii"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"chunweii"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"chunweii"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"chunweii"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"chunweii"},"content":" * Panel containing the list of Event.","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"chunweii"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"chunweii"},"content":"public class EventListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"chunweii"},"content":"    private static final String FXML \u003d \"EventListPanel.fxml\";","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"chunweii"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(EventListPanel.class);","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"chunweii"},"content":"    @FXML","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"chunweii"},"content":"    private ListView\u003cEvent\u003e eventListView;","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"chunweii"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"chunweii"},"content":"     * Creates a {@code EventListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"chunweii"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"chunweii"},"content":"    public EventListPanel(ObservableList\u003cEvent\u003e personList) {","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"chunweii"},"content":"        super(FXML);","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"chunweii"},"content":"        eventListView.setItems(personList);","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"chunweii"},"content":"        eventListView.setCellFactory(listView -\u003e new EventListViewCell());","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"chunweii"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"chunweii"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"chunweii"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Event} using a {@code EventCard}.","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"chunweii"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"chunweii"},"content":"    class EventListViewCell extends ListCell\u003cEvent\u003e {","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"chunweii"},"content":"        @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"chunweii"},"content":"        protected void updateItem(Event event, boolean empty) {","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"chunweii"},"content":"            super.updateItem(event, empty);","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"chunweii"},"content":"            if (empty || event \u003d\u003d null) {","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"chunweii"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"chunweii"},"content":"                setText(null);","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"chunweii"},"content":"            } else {","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"chunweii"},"content":"                setGraphic(new EventCard(event, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"chunweii"},"content":"            }","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"chunweii"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"chunweii"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":48,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":49,"author":{"gitId":"chunweii"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"chunweii":49}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"chunweii"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s1-cs2103t-w15-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"chunweii":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"chunweii"},"content":"    private final Stage primaryStage;","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"chunweii"},"content":"    private final Logic logic;","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"xiangjunn"},"content":"    private EventListPanel eventListPanel;","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"chunweii"},"content":"    private final HelpWindow helpWindow;","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"xiangjunn"},"content":"    @FXML","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"xiangjunn"},"content":"    private StackPane eventListPanelPlaceholder;","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"chunweii"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"xiangjunn"},"content":"        eventListPanel \u003d new EventListPanel(logic.getFilteredEventList());","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"xiangjunn"},"content":"        eventListPanelPlaceholder.getChildren().add(eventListPanel.getRoot());","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"chunweii":4,"xiangjunn":6,"-":190}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"xiangjunn"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"xiangjunn"},"content":"    private Label telegramHandle;","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"xiangjunn"},"content":"    @FXML","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"xiangjunn"},"content":"    private Label zoom;","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"xiangjunn"},"content":"    @FXML","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":48,"author":{"gitId":"xiangjunn"},"content":"    @FXML","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"xiangjunn"},"content":"    private ImageView emailIcon;","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":52,"author":{"gitId":"chunweii"},"content":"     * Creates a {@code PersonCard} with the given {@code Person} and index to display.","lastModifiedDate":"2021-10-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"xiangjunn"},"content":"        // Compulsory fields","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"xiangjunn"},"content":"        phone.setText(\"phone: \" + person.getPhone().value);","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"xiangjunn"},"content":"        email.setText(\"email: \" + person.getEmail().value);","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"xiangjunn"},"content":"        // Optional fields","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"xiangjunn"},"content":"        // TODO: after optional fields are implemented, setManaged to true if the value exists to show the Label in UI","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"chunweii"},"content":"        if (person.getAddress() !\u003d null) {","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"xiangjunn"},"content":"            address.setText(\"address: \" + person.getAddress().value);","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"chunweii"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"chunweii"},"content":"        if (person.getTelegramHandle() !\u003d null) {","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"chunweii"},"content":"            telegramHandle.setText(\"telegram handle: \" + person.getTelegramHandle().handle);","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"chunweii"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"chunweii"},"content":"        if (person.getZoomLink() !\u003d null) {","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"chunweii"},"content":"            zoom.setText(\"zoom: \" + person.getZoomLink().link);","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"chunweii"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"chunweii":9,"xiangjunn":13,"-":73}},{"path":"src/main/resources/view/EventListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunweii"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"chunweii"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"chunweii"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"chunweii"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"chunweii"},"content":"\u003cHBox fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"chunweii"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"chunweii"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"chunweii"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"chunweii"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"chunweii"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"chunweii"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"chunweii"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"chunweii"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"chunweii"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"chunweii"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"chunweii"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"chunweii"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"chunweii"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"chunweii"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"chunweii"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"chunweii"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"chunweii"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"chunweii"},"content":"            \u003cLabel fx:id\u003d\"from\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$from\" /\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"chunweii"},"content":"            \u003cLabel fx:id\u003d\"to\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$to\" /\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"chunweii"},"content":"            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"chunweii"},"content":"            \u003cLabel fx:id\u003d\"zoomLink\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$meeting-link\" /\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"chunweii"},"content":"            \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$description\" /\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"chunweii"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"chunweii"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"chunweii"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"chunweii"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"chunweii":33}},{"path":"src/main/resources/view/EventListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chunweii"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"chunweii"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"chunweii"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"chunweii"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"chunweii"},"content":"    \u003cListView fx:id\u003d\"eventListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"chunweii"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"chunweii":8}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-background: #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"xiangjunn"},"content":"#contact, #event {","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"xiangjunn"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"xiangjunn"},"content":"    -fx-padding: 10 5 10 5;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"xiangjunn"},"content":"    -fx-background-insets: 10;","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"xiangjunn"},"content":"}","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"xiangjunn"},"content":"#emailIcon {","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"xiangjunn"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"xiangjunn"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"xiangjunn":10,"-":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"xiangjunn"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"xiangjunn"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"xiangjunn"},"content":"         title\u003d\"SoConnect\" minWidth\u003d\"680\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":52,"author":{"gitId":"xiangjunn"},"content":"        \u003cHBox VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"xiangjunn"},"content":"          \u003c!-- Contacts --\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"xiangjunn"},"content":"          \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\"","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"xiangjunn"},"content":"                VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":57,"author":{"gitId":"xiangjunn"},"content":"              \u003cInsets right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":59,"author":{"gitId":"xiangjunn"},"content":"            \u003cLabel fx:id\u003d\"contact\" text\u003d\"Your contacts\" alignment\u003d\"TOP_CENTER\"\u003e\u003c/Label\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"xiangjunn"},"content":"            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":62,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"xiangjunn"},"content":"          \u003c!-- Events --\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"xiangjunn"},"content":"          \u003cVBox fx:id\u003d\"eventList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\"","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"xiangjunn"},"content":"                VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"xiangjunn"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":67,"author":{"gitId":"xiangjunn"},"content":"              \u003cInsets right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":68,"author":{"gitId":"xiangjunn"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":69,"author":{"gitId":"xiangjunn"},"content":"            \u003cLabel fx:id\u003d\"event\" text\u003d\"Your events\" alignment\u003d\"TOP_CENTER\"\u003e\u003c/Label\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"xiangjunn"},"content":"            \u003cStackPane fx:id\u003d\"eventListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":71,"author":{"gitId":"xiangjunn"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":72,"author":{"gitId":"xiangjunn"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"xiangjunn":21,"-":57}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"xiangjunn"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"xiangjunn"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"xiangjunn"},"content":"      \u003c!-- Optional fields--\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"xiangjunn"},"content":"      \u003c!-- TODO: after implementing the fields as optional, set managed to false as default. See PersonCard.java --\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"xiangjunn"},"content":"      \u003cLabel fx:id\u003d\"phone\" managed\u003d\"true\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"xiangjunn"},"content":"      \u003cLabel fx:id\u003d\"address\" managed\u003d\"true\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"xiangjunn"},"content":"      \u003cLabel fx:id\u003d\"telegramHandle\" managed\u003d\"true\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$telegramHandle\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"xiangjunn"},"content":"      \u003cLabel fx:id\u003d\"zoom\" managed\u003d\"true\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$zoom\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"xiangjunn"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xiangjunn":9,"-":32}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidAndValidPersonAndEventAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"{","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"  \"persons\": [ {","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"    \"name\": \"Valid Person\",","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"  }, {","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"    \"name\": \"Person With Invalid Phone Field\",","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":"    \"phone\": \"948asdf2424\",","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":"  } ],","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":"  \"events\": [ {","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"    \"name\": \"Valid Event\",","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"    \"start\": \"2021-03-27 15:30\",","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"    \"end\": \"2021-03-27 15:30\",","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"    \"description\": \"blah blah blah\",","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"    \"zoom\": \"a valid zoom link\",","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"    \"tagged\": [ ]","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"  }, {","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"    \"name\": \"Event With Invalid startDateTime Field\",","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"    \"start\": \"rsvrthbtrdbrbs\",","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"    \"end\": \"2021-03-27 15:30\",","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"    \"description\": \"2021-03-27 15:30\",","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"    \"zoom\": \"http://zoomlink.com\",","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"    \"tagged\": [ ]","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"  }, {","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"    \"name\": \"Event With Invalid endDateTime Field\",","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"    \"start\": \"2021-03-27 15:30\",","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"    \"end\": \"what time is this\",","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"    \"description\": \"\",","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"    \"zoom\": \"http://zoomlink.com\",","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"    \"tagged\": [ ]","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"  }]","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"Gordon25":38}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidPersonAndEventAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"  } ],","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"  \"events\": [ {","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":"    \"name\": \"Event with invalid name field: !gtr@@@\u0026\u0026\u0026\u0026t4jfer\",","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":"    \"start\": \"2021-03-27 15:30\",","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":"    \"end\": \"2021-03-27 15:30\",","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":"    \"description\": \"\",","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"    \"zoom\": \"http://zoomlink.com\",","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"    \"tagged\": [ ]","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Gordon25":9,"-":8}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicatePersonAndEventAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"{","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"  \"persons\": [ {","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"    \"tagged\": [ \"friends\" ]","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"  }, {","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":"    \"email\": \"pauline@example.com\",","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":"  } ],","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"  \"events\": [ {","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"    \"name\": \"CS2103T lecture\",","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"    \"start\": \"2021-03-27 15:30\",","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"    \"end\": \"2021-03-27 15:30\",","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"    \"description\": \"\",","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"    \"zoom\": \"http://zoomlink.com\",","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"    \"tagged\": [ \"its lecture time\" ]","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"  }, {","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"    \"name\": \"CS2103T lecture\",","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"    \"start\": \"2021-03-27 15:30\",","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"    \"end\": \"2021-03-27 15:30\",","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"    \"description\": \"\",","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"    \"zoom\": \"http://zoomlink.com\",","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"    \"tagged\": [ ]","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"  } ]","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"Gordon25":31}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidPersonAndEventAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"{","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"  \"persons\": [ {","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"    \"name\": \"Hans Muster\",","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"    \"email\": \"invalid@email!3e\",","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"  } ],","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"  \"events\": [ {","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":"    \"name\": \"Summer vacation\",","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":"    \"start\": \"2021-03-27 15:30\",","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":"    \"end\": \"invalid end\",","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":"    \"description\": \"\",","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"    \"zoom\": \"http://zoomlink.com\",","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"    \"tagged\": [ ]","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"  } ]","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"Gordon25":17}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalPersonsAndEventsAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"{","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"  \"_comment\": \"AddressBook save file which contains the same Person values as in TypicalPersons#getTypicalAddressBook() and the same Event Values as in TypicalEvents#getTypicalAddressBook()\",","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"  \"persons\" : [ {","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"    \"email\" : \"alice@example.com\",","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"    \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":"  }, {","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":"    \"email\" : \"johnd@example.com\",","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":"    \"address\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"    \"tagged\" : [ \"owesMoney\", \"friends\" ]","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"  }, {","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"    \"phone\" : \"95352563\",","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"    \"email\" : \"heinz@example.com\",","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"    \"address\" : \"wall street\",","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"  }, {","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"    \"email\" : \"cornelia@example.com\",","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"    \"address\" : \"10th street\",","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"  }, {","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"    \"phone\" : \"9482224\",","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"    \"email\" : \"werner@example.com\",","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"    \"address\" : \"michegan ave\",","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"  }, {","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"    \"phone\" : \"9482427\",","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"    \"email\" : \"lydia@example.com\",","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"    \"address\" : \"little tokyo\",","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"  }, {","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"Gordon25"},"content":"    \"phone\" : \"9482442\",","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"Gordon25"},"content":"    \"email\" : \"anna@example.com\",","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"Gordon25"},"content":"    \"address\" : \"4th street\",","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"Gordon25"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"Gordon25"},"content":"  } ],","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"Gordon25"},"content":"  \"events\": [ {","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"Gordon25"},"content":"    \"name\": \"Summer vacation\",","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"Gordon25"},"content":"    \"start\": \"2021-03-27 15:30\",","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"Gordon25"},"content":"    \"end\": \"2021-03-27 15:30\",","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"Gordon25"},"content":"    \"description\": \"\",","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"Gordon25"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"Gordon25"},"content":"    \"zoom\": \"http://zoomlink.com\",","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"Gordon25"},"content":"    \"tagged\": [ \"holiday\" ]","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"Gordon25"},"content":"  }, {","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"Gordon25"},"content":"    \"name\": \"Lunch appointment\",","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"Gordon25"},"content":"    \"start\": \"2021-03-27 15:30\",","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"Gordon25"},"content":"    \"end\": \"2021-03-27 15:30\",","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"Gordon25"},"content":"    \"description\": \"\",","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"Gordon25"},"content":"    \"address\": \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"Gordon25"},"content":"    \"zoom\": \"http://zoomlink.com\",","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"Gordon25"},"content":"    \"tagged\": [ \"date\", \"appointments\" ]","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"Gordon25"},"content":"  }, {","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"Gordon25"},"content":"    \"name\": \"Midterm\",","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"Gordon25"},"content":"    \"start\": \"2021-03-27 15:30\",","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"Gordon25"},"content":"    \"end\": \"2021-03-27 15:30\",","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"Gordon25"},"content":"    \"description\": \"\",","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"Gordon25"},"content":"    \"address\": \"online street\",","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"Gordon25"},"content":"    \"zoom\": \"http://zoomlink.com\",","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"Gordon25"},"content":"    \"tagged\": [ \"exams\" ]","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"Gordon25"},"content":"  }, {","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"Gordon25"},"content":"    \"name\": \"project meeting\",","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"Gordon25"},"content":"    \"start\": \"2021-03-27 15:30\",","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"Gordon25"},"content":"    \"end\": \"2021-03-27 15:30\",","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"Gordon25"},"content":"    \"description\": \"\",","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"Gordon25"},"content":"    \"address\": \"22 Beach rd\",","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"Gordon25"},"content":"    \"zoom\": \"http://zoomlink.com\",","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"Gordon25"},"content":"    \"tagged\": [ \"project\" ]","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"Gordon25"},"content":"  }, {","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"Gordon25"},"content":"    \"name\": \"ABC company Interview\",","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"Gordon25"},"content":"    \"start\": \"2021-03-27 15:30\",","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"Gordon25"},"content":"    \"end\": \"2021-03-27 15:30\",","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"Gordon25"},"content":"    \"description\": \"\",","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"Gordon25"},"content":"    \"address\": \"michegan ave\",","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"Gordon25"},"content":"    \"zoom\": \"http://zoomlink.com\",","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"Gordon25"},"content":"    \"tagged\": [ ]","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"Gordon25"},"content":"  }, {","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"Gordon25"},"content":"    \"name\": \"Visit museum\",","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"Gordon25"},"content":"    \"start\": \"2021-03-27 15:30\",","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"Gordon25"},"content":"    \"end\": \"2021-03-27 15:30\",","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"Gordon25"},"content":"    \"description\": \"\",","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"Gordon25"},"content":"    \"address\": \"Arts Science Museum\",","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"Gordon25"},"content":"    \"zoom\": \"http://zoomlink.com\",","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"Gordon25"},"content":"    \"tagged\": [ ]","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"Gordon25"},"content":"  }, {","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"Gordon25"},"content":"    \"name\": \"Hackathon\",","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"Gordon25"},"content":"    \"start\": \"2021-03-27 15:30\",","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"Gordon25"},"content":"    \"end\": \"2021-03-27 15:30\",","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"Gordon25"},"content":"    \"description\": \"\",","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"Gordon25"},"content":"    \"address\": \"10 Baker st\",","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"Gordon25"},"content":"    \"zoom\": \"http://zoomlink.com\",","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"Gordon25"},"content":"    \"tagged\": [ ]","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"Gordon25"},"content":"  } ]","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"Gordon25":103}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"xiangjunn"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"xiangjunn"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"xiangjunn"},"content":"    public void getFilteredEventList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"xiangjunn"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredEventList().remove(0));","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"xiangjunn":5,"-":162}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":152,"author":{"gitId":"pcgiang"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":153,"author":{"gitId":"pcgiang"},"content":"        public void addEvent(Event event) {","lastModifiedDate":"2021-10-07"},{"lineNumber":154,"author":{"gitId":"pcgiang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":155,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":156,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":157,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":158,"author":{"gitId":"pcgiang"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":159,"author":{"gitId":"pcgiang"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2021-10-07"},{"lineNumber":160,"author":{"gitId":"pcgiang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":161,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":162,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":163,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":164,"author":{"gitId":"pcgiang"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":165,"author":{"gitId":"pcgiang"},"content":"        public void deleteEvent(Event target) {","lastModifiedDate":"2021-10-07"},{"lineNumber":166,"author":{"gitId":"pcgiang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":167,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":168,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":169,"author":{"gitId":"pcgiang"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":170,"author":{"gitId":"pcgiang"},"content":"        public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2021-10-07"},{"lineNumber":171,"author":{"gitId":"pcgiang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":172,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":173,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":174,"author":{"gitId":"pcgiang"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":175,"author":{"gitId":"pcgiang"},"content":"        public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":176,"author":{"gitId":"pcgiang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":177,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":178,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":179,"author":{"gitId":"pcgiang"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":180,"author":{"gitId":"pcgiang"},"content":"        public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2021-10-07"},{"lineNumber":181,"author":{"gitId":"pcgiang"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":182,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":204,"author":{"gitId":"pcgiang"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2021-10-07"},{"lineNumber":205,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":206,"author":{"gitId":"pcgiang"},"content":"    private class ModelStubWithEvent extends ModelStub {","lastModifiedDate":"2021-10-07"},{"lineNumber":207,"author":{"gitId":"pcgiang"},"content":"        private final Event event;","lastModifiedDate":"2021-10-07"},{"lineNumber":208,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":209,"author":{"gitId":"pcgiang"},"content":"        ModelStubWithEvent(Event event) {","lastModifiedDate":"2021-10-07"},{"lineNumber":210,"author":{"gitId":"pcgiang"},"content":"            requireNonNull(event);","lastModifiedDate":"2021-10-07"},{"lineNumber":211,"author":{"gitId":"pcgiang"},"content":"            this.event \u003d event;","lastModifiedDate":"2021-10-07"},{"lineNumber":212,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":213,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":214,"author":{"gitId":"pcgiang"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":215,"author":{"gitId":"pcgiang"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2021-10-07"},{"lineNumber":216,"author":{"gitId":"pcgiang"},"content":"            requireNonNull(event);","lastModifiedDate":"2021-10-07"},{"lineNumber":217,"author":{"gitId":"pcgiang"},"content":"            return this.event.isSameEvent(event);","lastModifiedDate":"2021-10-07"},{"lineNumber":218,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":219,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":220,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"pcgiang":51,"-":194}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"chunweii"},"content":"import seedu.address.model.common.Address;","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"chunweii":1,"-":140}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"chunweii"},"content":"import seedu.address.model.common.Address;","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"chunweii":1,"-":210}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"chunweii"},"content":"import seedu.address.model.common.Address;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"chunweii":1,"-":195}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"janjanchen"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"janjanchen"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"janjanchen"},"content":"        public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"janjanchen"},"content":"            return null;","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"janjanchen"},"content":"            //TODO: to return events","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"janjanchen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"janjanchen":7,"-":102}},{"path":"src/test/java/seedu/address/model/common/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunweii"},"content":"package seedu.address.model.common;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"chunweii":1,"-":35}},{"path":"src/test/java/seedu/address/model/common/ZoomLinkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunweii"},"content":"package seedu.address.model.common;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"class ZoomLinkTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ZoomLink(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"    public void testEquals() {","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"        ZoomLink link \u003d new ZoomLink(\"http://zoomlink.com\");","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"        ZoomLink sameLink \u003d new ZoomLink(\"http://zoomlink.com\");","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"        ZoomLink differentLink \u003d new ZoomLink(\"http://123.com\");","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"        assertEquals(link, sameLink);","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"        assertEquals(link, link);","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"        assertNotEquals(link, differentLink);","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"pcgiang":25,"chunweii":1}},{"path":"src/test/java/seedu/address/model/event/DateAndTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"class DateAndTimeTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DateAndTime(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"pcgiang":13}},{"path":"src/test/java/seedu/address/model/event/DescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"class DescriptionTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Description(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"    public void testEquals() {","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"        Description description \u003d new Description(\"description 1\");","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"        Description sameDescription \u003d new Description(\"description 1\");","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"        Description differentDescription \u003d new Description(\"description 2\");","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"        assertEquals(description, sameDescription);","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"        assertEquals(description, description);","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"        assertNotEquals(description, differentDescription);","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"pcgiang":25}},{"path":"src/test/java/seedu/address/model/event/EndDateTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"class EndDateTimeTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"    // TODO: 10/5/2021 implement test for EndDateTime","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"    public void dummyTest() {","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"pcgiang":14}},{"path":"src/test/java/seedu/address/model/event/EventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"janjanchen"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"janjanchen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"janjanchen"},"content":"class EventTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"janjanchen"},"content":"    void getName() {","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"janjanchen"},"content":"    void getStartDateAndTime() {","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"janjanchen"},"content":"    void getEndDateAndTime() {","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"janjanchen"},"content":"    void getDescription() {","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"janjanchen"},"content":"    void getAddress() {","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"janjanchen"},"content":"    void getZoom() {","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"janjanchen"},"content":"    void getTags() {","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"janjanchen"},"content":"    void isSameEvent() {","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"janjanchen"},"content":"    void testEquals() {","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"janjanchen"},"content":"    void testHashCode() {","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"janjanchen"},"content":"    void testToString() {","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"janjanchen"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"janjanchen":50}},{"path":"src/test/java/seedu/address/model/event/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"janjanchen"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"janjanchen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"janjanchen"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"janjanchen"},"content":"    public void equals() {","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"janjanchen"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"janjanchen"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"janjanchen"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"janjanchen":18}},{"path":"src/test/java/seedu/address/model/event/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"class NameTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new seedu.address.model.person.Name(invalidName));","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"    public void isValidName() {","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"        // null name","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"        assertThrows(NullPointerException.class, () -\u003e seedu.address.model.person.Name.isValidName(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"        // invalid name","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"pcgiang"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"pcgiang"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"pcgiang"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"pcgiang"},"content":"        // valid name","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"pcgiang"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"pcgiang"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"pcgiang"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"pcgiang"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"pcgiang"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"pcgiang":40}},{"path":"src/test/java/seedu/address/model/event/StartDateTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"class StartDateTimeTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"        assertThrows(NullPointerException.class, () -\u003e new StartDateTime(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"    // TODO: 10/5/2021 implement test for StartDateTime","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"    public void dummyTest() {","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"pcgiang":19}},{"path":"src/test/java/seedu/address/model/event/UniqueEventListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"janjanchen"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"janjanchen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"janjanchen"},"content":"class UniqueEventListTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"janjanchen"},"content":"    void contains() {","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"janjanchen"},"content":"    void add() {","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"janjanchen"},"content":"    void setEvent() {","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"janjanchen"},"content":"    void remove() {","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"janjanchen"},"content":"    void setEvents() {","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"janjanchen"},"content":"    void testSetEvents() {","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"janjanchen"},"content":"    void testEquals() {","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"janjanchen"},"content":"    void testHashCode() {","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"janjanchen"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"janjanchen":38}},{"path":"src/test/java/seedu/address/model/person/TelegramHandleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chunweii"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"chunweii"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"chunweii"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"chunweii"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"chunweii"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"chunweii"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"chunweii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"chunweii"},"content":"class TelegramHandleTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"chunweii"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"chunweii"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"chunweii"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TelegramHandle(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"chunweii"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"chunweii"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"chunweii"},"content":"    public void constructor_invalidHandle_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"chunweii"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new TelegramHandle(\"\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"chunweii"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"chunweii"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"chunweii"},"content":"    void isValidHandle() {","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"chunweii"},"content":"        // null","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"chunweii"},"content":"        assertThrows(NullPointerException.class, () -\u003e TelegramHandle.isValidHandle(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"chunweii"},"content":"        // invalid","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"chunweii"},"content":"        assertFalse(TelegramHandle.isValidHandle(\"\")); // empty string","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"chunweii"},"content":"        assertFalse(TelegramHandle.isValidHandle(\" \")); // spaces","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"chunweii"},"content":"        assertFalse(TelegramHandle.isValidHandle(\"91a5\")); // less than 5 characters","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"chunweii"},"content":"        assertFalse(TelegramHandle.isValidHandle(\"tele man\")); // spaces","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"chunweii"},"content":"        assertFalse(TelegramHandle.isValidHandle(\"(^///^)3\")); // illegal characters","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"chunweii"},"content":"        // valid","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"chunweii"},"content":"        assertTrue(TelegramHandle.isValidHandle(\"beast\")); // exactly 5 characters","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"chunweii"},"content":"        assertTrue(TelegramHandle.isValidHandle(\"Beast_69\")); // use of capital letters, numbers and underscore","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"chunweii"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"chunweii"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"chunweii"},"content":"    void getTelegramLink() {","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"chunweii"},"content":"        TelegramHandle handle \u003d new TelegramHandle(\"Beast\");","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"chunweii"},"content":"        assertEquals(handle.getTelegramLink(), \"https://t.me/Beast\");","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"chunweii"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"chunweii"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"chunweii"},"content":"    void testToString() {","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"chunweii"},"content":"        TelegramHandle handle \u003d new TelegramHandle(\"Beast\");","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"chunweii"},"content":"        assertEquals(handle.toString(), \"Beast\");","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"chunweii"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"chunweii"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"chunweii"},"content":"    void testEquals() {","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"chunweii"},"content":"        TelegramHandle handle1 \u003d new TelegramHandle(\"beast\");","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"chunweii"},"content":"        TelegramHandle handle2 \u003d new TelegramHandle(\"beast\");","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"chunweii"},"content":"        TelegramHandle handle3 \u003d new TelegramHandle(\"Beast\");","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"chunweii"},"content":"        String hello \u003d \"Hello\";","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"chunweii"},"content":"        assertEquals(handle1, handle2); // Same telegram handle","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"chunweii"},"content":"        assertNotEquals(handle1, handle3); // Different handle","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"chunweii"},"content":"        assertNotEquals(handle1, hello); // Different type","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"chunweii"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"chunweii"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"chunweii":62}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedEventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"class JsonAdaptedEventTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"    //TODO implement these","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":"    public void toModelType_validEventDetails_returnsEvent() throws Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"    public void toModelType_invalidStartDateTime_throwsIllegalValueException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"    public void toModelType_nullStartDateTime_throwsIllegalValueException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"    public void toModelType_invalidEndDateTime_throwsIllegalValueException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"    public void toModelType_invalidZoomLink_throwsIllegalValueException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"Gordon25"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"Gordon25"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"Gordon25"},"content":"}","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"Gordon25":46}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"chunweii"},"content":"import seedu.address.model.common.Address;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"chunweii":1,"-":108}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"            .get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"Gordon25"},"content":"        assertThrows(DataConversionException.class, () -\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"Gordon25"},"content":"                readAddressBook(\"invalidPersonAndEventAddressBook.json\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"Gordon25"},"content":"        assertThrows(DataConversionException.class, () -\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"Gordon25"},"content":"                readAddressBook(\"invalidAndValidPersonAndEventAddressBook.json\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"Gordon25"},"content":"    //TODO implement these methods","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"Gordon25"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"Gordon25"},"content":"    public void readAddressBook_invalidEventAddressBook_throwDataConversionException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"Gordon25"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"Gordon25"},"content":"    public void readAddressBook_invalidAndValidEventAddressBook_throwDataConversionException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"Gordon25"},"content":"        //TODO add code to add and remove event","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Gordon25":16,"-":109}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"            .get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"            .resolve(\"typicalPersonsAndEventsAddressBook.json\");","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"            .resolve(\"invalidPersonAndEventAddressBook.json\");","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"            .resolve(\"duplicatePersonAndEventAddressBook.json\");","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"        AddressBook typicalPersonsAndEventAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"        AddressBook personOnlyAddressBook \u003d new AddressBook();","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"        for (Person p : addressBookFromFile.getPersonList()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"            personOnlyAddressBook.addPerson(p);","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"        assertEquals(personOnlyAddressBook, typicalPersonsAndEventAddressBook);","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"Gordon25"},"content":"    //TODO implement these","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"Gordon25"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"Gordon25"},"content":"    public void toModelType_typicalEventsFile_success() {","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"Gordon25"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"Gordon25"},"content":"    public void toModelType_invalidEventFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"Gordon25"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"Gordon25"},"content":"    public void toModelType_duplicateEvents_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"Gordon25"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Gordon25":28,"-":41}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"chunweii"},"content":"import seedu.address.model.common.Address;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"chunweii":1,"-":86}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"chunweii"},"content":"import seedu.address.model.common.Address;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":93,"author":{"gitId":"chunweii"},"content":"        return new Person(name, phone, email, address, null, null, tags);","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"chunweii":2,"-":94}}]
