[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chunweii"},"content":"[![Java CI](https://github.com/AY2122S1-CS2103T-W15-3/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2122S1-CS2103T-W15-3/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"chunweii"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-W15-3/tp/branch/master/graph/badge.svg?token\u003d40MOICZDNE)](https://codecov.io/gh/AY2122S1-CS2103T-W15-3/tp)","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"chunweii"},"content":"## Introduction","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"chunweii"},"content":"SoConnect is a desktop application for students :man_technologist::woman_technologist: in [NUS School of Computing](https://www.comp.nus.edu.sg/)","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"chunweii"},"content":"to **manage the contacts** of their professors and tutors, and **keep track of** their busy schedule of **events**.","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"chunweii"},"content":"## Usage","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"chunweii"},"content":"- Add, delete, view contact information of professors","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"chunweii"},"content":"  - Save email addresses, zoom links, office locations and more!","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"chunweii"},"content":"- Add, delete, view events","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"chunweii"},"content":"  - Check upcoming events","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"chunweii"},"content":"  - [Future implementation] Link events to other contacts as participants!","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"chunweii"},"content":"- View the detailed documentation of this project at our [user guide](https://ay2122s1-cs2103t-w15-3.github.io/tp/UserGuide.html)","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"chunweii"},"content":"## Acknowledgement","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"chunweii"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"chunweii"},"content":"If you would like to contribute code to other SE-EDU projects, see [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"chunweii":19,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"janjanchen"},"content":"### Gordon Yit Hongyao","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":"\u003cimg src\u003d\"images/gordon25.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"[github](http://github.com/gordon25) |","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"[portfolio](team/gordon25.md) |","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"[email](mailto:e0564958@u.nus.edu) ","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"* Role: Documentation, Scheduling and Tracking","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"* Responsibilities: Storage","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"janjanchen"},"content":"### Janice Chen","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"janjanchen"},"content":"\u003cimg src\u003d\"images/janjanchen.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"[github](http://github.com/janjanchen) |","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"[portfolio](team/janjanchen.md) |","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"[email](mailto:e0559731@u.nus.edu)","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"janjanchen"},"content":"* Role: Code Quality","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"janjanchen"},"content":"* Responsibilities: Model","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"chunweii"},"content":"### Lee Chun Wei","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"\u003cimg src\u003d\"images/chunweii.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"[github](http://github.com/chunweii) | ","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"[portfolio](team/chunweii.md) |","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"Gordon25"},"content":"[email](mailto:chunweilee.99@u.nus.edu)","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"chunweii"},"content":"* Role: Team Lead, Deliverables and Deadlines","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"chunweii"},"content":"* Responsibilities: UI","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"xiangjunn"},"content":"### Ng Xiang Jun","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"xiangjunn"},"content":"\u003cimg src\u003d\"images/xiangjunn.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"Gordon25"},"content":"[github](http://github.com/xiangjunn) |","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"Gordon25"},"content":"[portfolio](team/xiangjunn.md) | ","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"Gordon25"},"content":"[email](mailto:ng.xiangjun99@u.nus.edu)","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"xiangjunn"},"content":"* Role: Integration","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"pcgiang"},"content":"### Pham Chau Giang","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"janjanchen"},"content":"\u003cimg src\u003d\"images/pcgiang.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"Gordon25"},"content":"[github](http://github.com/pcgiang) |","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"Gordon25"},"content":"[portfolio](team/pcgiang.md) |","lastModifiedDate":"2021-09-29"},{"lineNumber":63,"author":{"gitId":"Gordon25"},"content":"[email](mailto:e0564779@u.nus.edu)","lastModifiedDate":"2021-09-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"pcgiang"},"content":"* Role: Testing","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"pcgiang"},"content":"* Responsibilities: Model","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"janjanchen":6,"pcgiang":3,"chunweii":3,"Gordon25":19,"xiangjunn":3,"-":32}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"xiangjunn"},"content":"**Target user:** [School of Computing](https://www.comp.nus.edu.sg) (SoC) students who:","lastModifiedDate":"2021-09-28"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"xiangjunn"},"content":"* Need to manage large number of contacts and events","lastModifiedDate":"2021-09-28"},{"lineNumber":261,"author":{"gitId":"xiangjunn"},"content":"* Prefer desktop apps over other types","lastModifiedDate":"2021-09-28"},{"lineNumber":262,"author":{"gitId":"xiangjunn"},"content":"* Can type fast and prefer typing to mouse interactions","lastModifiedDate":"2021-09-28"},{"lineNumber":263,"author":{"gitId":"xiangjunn"},"content":"* Are reasonably comfortable using *CLI* apps","lastModifiedDate":"2021-10-01"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"xiangjunn"},"content":"**Value proposition**: Manage contacts of peers, *Profs* and events such as classes and Co-Curricular Activities in","lastModifiedDate":"2021-10-01"},{"lineNumber":266,"author":{"gitId":"xiangjunn"},"content":"a single system faster than a typical mouse/ *GUI* driven app while maintaining user-friendliness","lastModifiedDate":"2021-10-01"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"xiangjunn"},"content":"#### Contacts","lastModifiedDate":"2021-09-28"},{"lineNumber":273,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":274,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"xiangjunn"},"content":"| `* * *` | hardworking student | add contact of my *TA*/*Profs* | save their contacts and ask them questions on my modules. |","lastModifiedDate":"2021-10-01"},{"lineNumber":277,"author":{"gitId":"xiangjunn"},"content":"| `* * *` | careless student | edit the contact of my *TA*/*Profs* | correct mistakes while adding contacts or update my TA contact details |","lastModifiedDate":"2021-10-01"},{"lineNumber":278,"author":{"gitId":"xiangjunn"},"content":"| `* * *` | senior SoC student | delete the contact of my *TA*/*Profs* | remove contact of my *TA* after I have completed the module |","lastModifiedDate":"2021-10-01"},{"lineNumber":279,"author":{"gitId":"xiangjunn"},"content":"| `* * *` | SoC student | view the contact of my *TA*/*Profs* | |","lastModifiedDate":"2021-10-01"},{"lineNumber":280,"author":{"gitId":"xiangjunn"},"content":"| `* * *` | year 4 SoC student with many contacts | search for contact of my *TA*/*Profs* | contact them when necessary |","lastModifiedDate":"2021-10-01"},{"lineNumber":281,"author":{"gitId":"xiangjunn"},"content":"| `* *` | year 4 SoC student with many contacts | sort the contacts of my *TA* | view the contacts based on the sorting settings |","lastModifiedDate":"2021-10-01"},{"lineNumber":282,"author":{"gitId":"xiangjunn"},"content":"| `* *` | careless student | undo my last action(s) | recover contacts I accidentally deleted/changed |","lastModifiedDate":"2021-09-28"},{"lineNumber":283,"author":{"gitId":"xiangjunn"},"content":"| `* *` | organised SoC students | categorize the contacts of students/*TA*/*Profs* | view them separately |","lastModifiedDate":"2021-10-01"},{"lineNumber":284,"author":{"gitId":"xiangjunn"},"content":"| `* *` | student with many contacts | add the profile picture of *TA*/*Profs* | more easily differentiate my contacts and remember their faces |","lastModifiedDate":"2021-10-01"},{"lineNumber":285,"author":{"gitId":"xiangjunn"},"content":"| `*` | first time user | import existing contacts from my phone | easily access all my past contacts using SoConnect |","lastModifiedDate":"2021-09-28"},{"lineNumber":286,"author":{"gitId":"xiangjunn"},"content":"| `*` | long term user | archive some contacts | still save old contacts without cluttering my current screen |","lastModifiedDate":"2021-09-28"},{"lineNumber":287,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":288,"author":{"gitId":"xiangjunn"},"content":"#### Events","lastModifiedDate":"2021-09-28"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"xiangjunn"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                             |","lastModifiedDate":"2021-09-28"},{"lineNumber":291,"author":{"gitId":"xiangjunn"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2021-09-28"},{"lineNumber":292,"author":{"gitId":"xiangjunn"},"content":"| `* * *` | SoC student | add details of event | keep track of the CCA dates and time |","lastModifiedDate":"2021-09-28"},{"lineNumber":293,"author":{"gitId":"xiangjunn"},"content":"| `* * *` | SoC student | delete details of event | remove events that have finished or are cancelled |","lastModifiedDate":"2021-09-29"},{"lineNumber":294,"author":{"gitId":"xiangjunn"},"content":"| `* * *` | SoC student | edit details of event | update event details |","lastModifiedDate":"2021-10-01"},{"lineNumber":295,"author":{"gitId":"xiangjunn"},"content":"| `* * *` | SoC student | view all CCA/events | have a rough overview of my schedule | ","lastModifiedDate":"2021-09-28"},{"lineNumber":296,"author":{"gitId":"xiangjunn"},"content":"| `* * *` | SoC student | search for an event based on event name | easily refer to the event details |","lastModifiedDate":"2021-10-01"},{"lineNumber":297,"author":{"gitId":"xiangjunn"},"content":"| `* *` | SoC student | sort the events by time | prepare for upcoming events |","lastModifiedDate":"2021-10-01"},{"lineNumber":298,"author":{"gitId":"xiangjunn"},"content":"| `* *` | SoC student with busy schedule | check if the new event clashes with any of my current events | better plan my timetable and avoid event clashes |","lastModifiedDate":"2021-10-01"},{"lineNumber":299,"author":{"gitId":"xiangjunn"},"content":"| `* *` | SoC student with many different events to manage | categorize my events with different tags like classes and CCAs | search related events |","lastModifiedDate":"2021-10-01"},{"lineNumber":300,"author":{"gitId":"xiangjunn"},"content":"| `*` | SoC student who uses other calendars | import and export my events to other calendars like Google Calendar | synchronize my events across my calendars |","lastModifiedDate":"2021-10-01"},{"lineNumber":301,"author":{"gitId":"xiangjunn"},"content":"| `*` | long term user | archive some events that have ended | still save details of past events without cluttering my main screen |","lastModifiedDate":"2021-10-01"},{"lineNumber":302,"author":{"gitId":"xiangjunn"},"content":"| `*` | Soc student with many commitments | have a reminder of upcoming events | |","lastModifiedDate":"2021-10-01"},{"lineNumber":303,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":304,"author":{"gitId":"xiangjunn"},"content":"#### Personalisation and Others","lastModifiedDate":"2021-09-28"},{"lineNumber":305,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":306,"author":{"gitId":"xiangjunn"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                             |","lastModifiedDate":"2021-09-28"},{"lineNumber":307,"author":{"gitId":"xiangjunn"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2021-09-28"},{"lineNumber":308,"author":{"gitId":"xiangjunn"},"content":"| `* * *` | first time user | have a help message I can refer to | understand and start using basic features |","lastModifiedDate":"2021-10-01"},{"lineNumber":309,"author":{"gitId":"xiangjunn"},"content":"| `*` | first time user | set up my background | personalize the screen to my liking |","lastModifiedDate":"2021-09-28"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"pcgiang"},"content":"(For all use cases below, the **System** is the `SoConnect Application System (SAS)` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-09-28"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"pcgiang"},"content":"**1. Use case: UC1 - Add contact details**","lastModifiedDate":"2021-09-28"},{"lineNumber":316,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":317,"author":{"gitId":"xiangjunn"},"content":"**Guarantees:** The contact will be stored in the system if and only if the user enters the correct inputs.","lastModifiedDate":"2021-09-30"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"xiangjunn"},"content":"***MSS***","lastModifiedDate":"2021-10-01"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"xiangjunn"},"content":"1.  User chooses to add *contact information*.","lastModifiedDate":"2021-10-01"},{"lineNumber":322,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":323,"author":{"gitId":"xiangjunn"},"content":"2.  SAS stores the contact and notifies the user that the contact has been successfully added.","lastModifiedDate":"2021-09-30"},{"lineNumber":324,"author":{"gitId":"pcgiang"},"content":"    ","lastModifiedDate":"2021-09-28"},{"lineNumber":325,"author":{"gitId":"pcgiang"},"content":"    Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":326,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":327,"author":{"gitId":"pcgiang"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":328,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":329,"author":{"gitId":"xiangjunn"},"content":"* 1a. SAS detects an error in the inputs.","lastModifiedDate":"2021-09-30"},{"lineNumber":330,"author":{"gitId":"pcgiang"},"content":"  ","lastModifiedDate":"2021-09-28"},{"lineNumber":331,"author":{"gitId":"xiangjunn"},"content":"    * 1a1. SAS requests for correct inputs.","lastModifiedDate":"2021-09-30"},{"lineNumber":332,"author":{"gitId":"pcgiang"},"content":"      ","lastModifiedDate":"2021-09-28"},{"lineNumber":333,"author":{"gitId":"xiangjunn"},"content":"    * 1a2. User enters new inputs.","lastModifiedDate":"2021-09-30"},{"lineNumber":334,"author":{"gitId":"pcgiang"},"content":"      ","lastModifiedDate":"2021-09-28"},{"lineNumber":335,"author":{"gitId":"xiangjunn"},"content":"    Steps 1a1 to 1a2 are repeated until the inputs entered are correct.","lastModifiedDate":"2021-10-01"},{"lineNumber":336,"author":{"gitId":"pcgiang"},"content":"      ","lastModifiedDate":"2021-09-28"},{"lineNumber":337,"author":{"gitId":"xiangjunn"},"content":"    Use case resumes from step 2.","lastModifiedDate":"2021-10-01"},{"lineNumber":338,"author":{"gitId":"pcgiang"},"content":"    ","lastModifiedDate":"2021-09-28"},{"lineNumber":339,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":340,"author":{"gitId":"pcgiang"},"content":"* 1b. SAS detects a duplicate contact with the same name.","lastModifiedDate":"2021-09-28"},{"lineNumber":341,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":342,"author":{"gitId":"pcgiang"},"content":"    * 1b1. SAS gives the user the option of adding the contact anyway.","lastModifiedDate":"2021-09-28"},{"lineNumber":343,"author":{"gitId":"pcgiang"},"content":"    ","lastModifiedDate":"2021-09-28"},{"lineNumber":344,"author":{"gitId":"xiangjunn"},"content":"    * 1b2. User proceeds to add the contact.","lastModifiedDate":"2021-09-30"},{"lineNumber":345,"author":{"gitId":"pcgiang"},"content":"      ","lastModifiedDate":"2021-09-28"},{"lineNumber":346,"author":{"gitId":"xiangjunn"},"content":"    Use case resumes from step 2.","lastModifiedDate":"2021-10-01"},{"lineNumber":347,"author":{"gitId":"pcgiang"},"content":"    ","lastModifiedDate":"2021-09-28"},{"lineNumber":348,"author":{"gitId":"pcgiang"},"content":"    ","lastModifiedDate":"2021-09-28"},{"lineNumber":349,"author":{"gitId":"pcgiang"},"content":"* *a. At any time. user chooses not to add the contact.","lastModifiedDate":"2021-09-28"},{"lineNumber":350,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":351,"author":{"gitId":"pcgiang"},"content":"    Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":352,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":353,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":354,"author":{"gitId":"pcgiang"},"content":"**2. Use case: UC2 - Edit events**","lastModifiedDate":"2021-09-28"},{"lineNumber":355,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":356,"author":{"gitId":"xiangjunn"},"content":"**Preconditions:** There is at least one event in the event list.","lastModifiedDate":"2021-10-01"},{"lineNumber":357,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":358,"author":{"gitId":"xiangjunn"},"content":"**Guarantees:** The event will be updated accordingly if and only if the user enters the correct inputs.","lastModifiedDate":"2021-09-30"},{"lineNumber":359,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":360,"author":{"gitId":"xiangjunn"},"content":"***MSS***","lastModifiedDate":"2021-10-01"},{"lineNumber":361,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":362,"author":{"gitId":"xiangjunn"},"content":"1. User wants to view the list of events.","lastModifiedDate":"2021-09-30"},{"lineNumber":363,"author":{"gitId":"pcgiang"},"content":"    ","lastModifiedDate":"2021-09-28"},{"lineNumber":364,"author":{"gitId":"xiangjunn"},"content":"2. User decides on an event to edit.","lastModifiedDate":"2021-09-30"},{"lineNumber":365,"author":{"gitId":"pcgiang"},"content":"   ","lastModifiedDate":"2021-09-28"},{"lineNumber":366,"author":{"gitId":"xiangjunn"},"content":"3. User edits the event. ","lastModifiedDate":"2021-09-30"},{"lineNumber":367,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":368,"author":{"gitId":"xiangjunn"},"content":"4. SAS updates the event accordingly and notifies user that the event has been successfully edited.","lastModifiedDate":"2021-09-30"},{"lineNumber":369,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":373,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"xiangjunn"},"content":"* 3a. SAS detects an error in the inputs.","lastModifiedDate":"2021-09-30"},{"lineNumber":376,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":377,"author":{"gitId":"xiangjunn"},"content":"    * 3a1. SAS requests for correct inputs.","lastModifiedDate":"2021-09-30"},{"lineNumber":378,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":379,"author":{"gitId":"xiangjunn"},"content":"    * 3a2. User enters new inputs.","lastModifiedDate":"2021-09-30"},{"lineNumber":380,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":381,"author":{"gitId":"xiangjunn"},"content":"    Steps 3a1 to 3a2 are repeated until inputs entered are correct.","lastModifiedDate":"2021-09-30"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":383,"author":{"gitId":"pcgiang"},"content":"    Use case resumes from step 4.","lastModifiedDate":"2021-09-28"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":386,"author":{"gitId":"pcgiang"},"content":"* *a. User chooses not to edit the event.","lastModifiedDate":"2021-09-28"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"pcgiang"},"content":"**3. Use case: UC3 - Delete contacts**","lastModifiedDate":"2021-09-28"},{"lineNumber":392,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":393,"author":{"gitId":"pcgiang"},"content":"**Preconditions:** There is at least one contact in the contact list.","lastModifiedDate":"2021-09-28"},{"lineNumber":394,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":395,"author":{"gitId":"xiangjunn"},"content":"**Guarantees:** The contact list will be updated according to which contact(s) are deleted if and only if the user enters the correct inputs.","lastModifiedDate":"2021-09-30"},{"lineNumber":396,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":397,"author":{"gitId":"xiangjunn"},"content":"***MSS***","lastModifiedDate":"2021-10-01"},{"lineNumber":398,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":399,"author":{"gitId":"xiangjunn"},"content":"1.  User wants to view the list of contacts.","lastModifiedDate":"2021-09-30"},{"lineNumber":400,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":401,"author":{"gitId":"pcgiang"},"content":"2. User decides on the contact(s) to delete.","lastModifiedDate":"2021-09-28"},{"lineNumber":402,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":403,"author":{"gitId":"xiangjunn"},"content":"3. User deletes the contact(s).","lastModifiedDate":"2021-09-30"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"xiangjunn"},"content":"4. SAS deletes the specified contact(s), updates the contact list accordingly, and notifies user that the contact(s) has been successfully deleted.","lastModifiedDate":"2021-09-30"},{"lineNumber":406,"author":{"gitId":"pcgiang"},"content":"   ","lastModifiedDate":"2021-09-28"},{"lineNumber":407,"author":{"gitId":"pcgiang"},"content":"    Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":408,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":409,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":410,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":412,"author":{"gitId":"xiangjunn"},"content":"* 3a. SAS detects an error in the inputs.","lastModifiedDate":"2021-09-30"},{"lineNumber":413,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":414,"author":{"gitId":"xiangjunn"},"content":"    * 3a1. SAS requests for correct inputs.","lastModifiedDate":"2021-09-30"},{"lineNumber":415,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":416,"author":{"gitId":"xiangjunn"},"content":"    * 3a2. User enters new inputs.","lastModifiedDate":"2021-09-30"},{"lineNumber":417,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":418,"author":{"gitId":"xiangjunn"},"content":"  Steps 3a1 to 3a2 are repeated until inputs entered are correct.","lastModifiedDate":"2021-09-30"},{"lineNumber":419,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":420,"author":{"gitId":"pcgiang"},"content":"  Use case resumes from step 4.","lastModifiedDate":"2021-09-28"},{"lineNumber":421,"author":{"gitId":"pcgiang"},"content":"  ","lastModifiedDate":"2021-09-28"},{"lineNumber":422,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":423,"author":{"gitId":"pcgiang"},"content":"* *a. User chooses not to delete the contact(s).","lastModifiedDate":"2021-09-28"},{"lineNumber":424,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":425,"author":{"gitId":"pcgiang"},"content":"    Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":428,"author":{"gitId":"pcgiang"},"content":"**4. Use case: UC4 - Find contact details**","lastModifiedDate":"2021-09-28"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":430,"author":{"gitId":"xiangjunn"},"content":"**Guarantees:** A filtered list of contacts that match the user keywords will be shown, if and only if  the user enters the correct inputs.","lastModifiedDate":"2021-09-30"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":432,"author":{"gitId":"xiangjunn"},"content":"***MSS***","lastModifiedDate":"2021-10-01"},{"lineNumber":433,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":434,"author":{"gitId":"pcgiang"},"content":"1. User decides on the keyword(s) to find.","lastModifiedDate":"2021-09-28"},{"lineNumber":435,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":436,"author":{"gitId":"xiangjunn"},"content":"2. User enters specified keyword(s).","lastModifiedDate":"2021-09-30"},{"lineNumber":437,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":438,"author":{"gitId":"xiangjunn"},"content":"3. SAS shows the matched contacts accordingly and notifies user of search success.","lastModifiedDate":"2021-09-30"},{"lineNumber":439,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":440,"author":{"gitId":"pcgiang"},"content":"    Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":441,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":442,"author":{"gitId":"pcgiang"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":443,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":444,"author":{"gitId":"pcgiang"},"content":"* 2a. SAS fails to find any matched contacts.","lastModifiedDate":"2021-09-28"},{"lineNumber":445,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":446,"author":{"gitId":"pcgiang"},"content":"    * 2a1. SAS outputs 0 matched contacts.","lastModifiedDate":"2021-09-28"},{"lineNumber":447,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":448,"author":{"gitId":"xiangjunn"},"content":"    * 2a2. User enters new keyword(s).","lastModifiedDate":"2021-09-30"},{"lineNumber":449,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":450,"author":{"gitId":"pcgiang"},"content":"  Steps 2a1 to 2a2 are repeated until the user finds the contacts of interest.","lastModifiedDate":"2021-09-28"},{"lineNumber":451,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":452,"author":{"gitId":"pcgiang"},"content":"  Use case resumes from step 3.","lastModifiedDate":"2021-09-28"},{"lineNumber":453,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":454,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":455,"author":{"gitId":"pcgiang"},"content":"* *a. User chooses not to find contact(s).","lastModifiedDate":"2021-09-28"},{"lineNumber":456,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":457,"author":{"gitId":"pcgiang"},"content":"    Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":458,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":459,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":460,"author":{"gitId":"pcgiang"},"content":"**5. Use case: UC5 - Sort events**","lastModifiedDate":"2021-09-28"},{"lineNumber":461,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":462,"author":{"gitId":"pcgiang"},"content":"**Preconditions:** List of events to be sorted is displayed.","lastModifiedDate":"2021-09-28"},{"lineNumber":463,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":464,"author":{"gitId":"xiangjunn"},"content":"**Guarantees:** The displayed list of events is sorted lexicographically according to the specified field, if the given field is valid.","lastModifiedDate":"2021-10-01"},{"lineNumber":465,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":466,"author":{"gitId":"xiangjunn"},"content":"***MSS***","lastModifiedDate":"2021-10-01"},{"lineNumber":467,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":468,"author":{"gitId":"xiangjunn"},"content":"1. User decides on a field to sort by.","lastModifiedDate":"2021-09-30"},{"lineNumber":469,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":470,"author":{"gitId":"xiangjunn"},"content":"2. User inputs the specific field.","lastModifiedDate":"2021-10-01"},{"lineNumber":471,"author":{"gitId":"xiangjunn"},"content":"   ","lastModifiedDate":"2021-09-30"},{"lineNumber":472,"author":{"gitId":"xiangjunn"},"content":"3. SAS sorts the list of events by the specified field provided in step 2.","lastModifiedDate":"2021-10-01"},{"lineNumber":473,"author":{"gitId":"pcgiang"},"content":"   ","lastModifiedDate":"2021-09-28"},{"lineNumber":474,"author":{"gitId":"xiangjunn"},"content":"4. SAS displays the sorted list of events.","lastModifiedDate":"2021-10-01"},{"lineNumber":475,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":476,"author":{"gitId":"pcgiang"},"content":"    Use case ends","lastModifiedDate":"2021-09-28"},{"lineNumber":477,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":478,"author":{"gitId":"pcgiang"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":479,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":480,"author":{"gitId":"xiangjunn"},"content":"* 2a. SAS detects that the input is an invalid field. ","lastModifiedDate":"2021-10-01"},{"lineNumber":481,"author":{"gitId":"pcgiang"},"content":"    ","lastModifiedDate":"2021-09-28"},{"lineNumber":482,"author":{"gitId":"xiangjunn"},"content":"    * 2a1. SAS requests for a correct input.","lastModifiedDate":"2021-10-01"},{"lineNumber":483,"author":{"gitId":"pcgiang"},"content":"  ","lastModifiedDate":"2021-09-28"},{"lineNumber":484,"author":{"gitId":"xiangjunn"},"content":"    * 2a2. User enters a new input.","lastModifiedDate":"2021-10-01"},{"lineNumber":485,"author":{"gitId":"pcgiang"},"content":"      ","lastModifiedDate":"2021-09-28"},{"lineNumber":486,"author":{"gitId":"xiangjunn"},"content":"    Steps 2a1-2a2 are repeated until user enters a valid field.","lastModifiedDate":"2021-10-01"},{"lineNumber":487,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":488,"author":{"gitId":"xiangjunn"},"content":"    Use case resumes from step 3.","lastModifiedDate":"2021-10-01"},{"lineNumber":489,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":490,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":491,"author":{"gitId":"xiangjunn"},"content":"* 2b. SAS detects that the input contains more than one field.","lastModifiedDate":"2021-10-01"},{"lineNumber":492,"author":{"gitId":"pcgiang"},"content":"  ","lastModifiedDate":"2021-09-28"},{"lineNumber":493,"author":{"gitId":"xiangjunn"},"content":"    * 2b1. SAS sorts the list by the first field entered. ","lastModifiedDate":"2021-10-01"},{"lineNumber":494,"author":{"gitId":"pcgiang"},"content":"      ","lastModifiedDate":"2021-09-28"},{"lineNumber":495,"author":{"gitId":"xiangjunn"},"content":"    Use case resumes from step 4.","lastModifiedDate":"2021-10-01"},{"lineNumber":496,"author":{"gitId":"pcgiang"},"content":"    ","lastModifiedDate":"2021-09-28"},{"lineNumber":497,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":498,"author":{"gitId":"pcgiang"},"content":"* *a. User chooses not to sort the list.","lastModifiedDate":"2021-09-28"},{"lineNumber":499,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":500,"author":{"gitId":"pcgiang"},"content":"    Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"pcgiang"},"content":"2.  Should be able to hold up to 1000 contacts without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-09-28"},{"lineNumber":508,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"pcgiang"},"content":"4. Should not depend on Internet connection.","lastModifiedDate":"2021-09-28"},{"lineNumber":510,"author":{"gitId":"pcgiang"},"content":"5. Only one user should be able to use the system at one time.","lastModifiedDate":"2021-09-28"},{"lineNumber":511,"author":{"gitId":"pcgiang"},"content":"6. Should be usable by colorblind students","lastModifiedDate":"2021-09-28"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"pcgiang"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X.","lastModifiedDate":"2021-09-28"},{"lineNumber":518,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":519,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":520,"author":{"gitId":"xiangjunn"},"content":"* [Main Success Scenario](https://nus-cs2103-ay2122s1.github.io/website/schedule/week7/topics.html#requirements-specifying-requirements-use-cases-details) (MSS): Describes the most straightforward interaction for a given use case, which assumes that nothing goes wrong. ","lastModifiedDate":"2021-10-01"},{"lineNumber":521,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":522,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":523,"author":{"gitId":"xiangjunn"},"content":"* Command Line Interface (CLI): Text-based user interface.","lastModifiedDate":"2021-10-01"},{"lineNumber":524,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":525,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":526,"author":{"gitId":"xiangjunn"},"content":"* Graphical User Interface (GUI): Graphic-based user interface.","lastModifiedDate":"2021-10-01"},{"lineNumber":527,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":528,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":529,"author":{"gitId":"pcgiang"},"content":"* Interface: The place at which independent and often unrelated systems meet and act on or communicate with each other/ a way for the user to interact with the system.","lastModifiedDate":"2021-09-28"},{"lineNumber":530,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":531,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":532,"author":{"gitId":"pcgiang"},"content":"* Telegram handle: Username of a [Telegram](https://telegram.org/) user.","lastModifiedDate":"2021-09-28"},{"lineNumber":533,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":534,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":535,"author":{"gitId":"xiangjunn"},"content":"* Professor (Prof): A lecturer who teaches a module in NUS.","lastModifiedDate":"2021-10-01"},{"lineNumber":536,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":537,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":538,"author":{"gitId":"xiangjunn"},"content":"* Teaching Assistant (TA): A student tutor employed to teach small group lessons in NUS.","lastModifiedDate":"2021-10-01"},{"lineNumber":539,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":540,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":541,"author":{"gitId":"xiangjunn"},"content":"* Contact information: Name and email of the contact. Phone number, address, telegram handle, video conferencing meeting link, and tag(s) are optional.","lastModifiedDate":"2021-10-01"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":543,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"pcgiang":133,"xiangjunn":104,"-":357}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"SoConnect is a **desktop app for SoC students to managing contacts of professors and teaching assistants, ","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"as well as to keep track of noteworthy events, optimized for use via a Command Line Interface** (CLI) while still having ","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"xiangjunn"},"content":"the benefits of a Graphical User Interface (GUI). If you can type fast, SoConnect can get your contact management tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"xiangjunn"},"content":"done faster than traditional GUI apps.","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"2. Download the latest `soconnect.jar` from [here](https://github.com/se-edu/addressbook-level3/releases).","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your SoConnect app.","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"pcgiang"},"content":"   * **`elist`** : Lists all events.","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"pcgiang"},"content":"   * **`cadd`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the contact list.","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"pcgiang"},"content":"   * **`cdelete`**`3` : Deletes the 3rd contact shown in the contact list.","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"pcgiang"},"content":"   * **`eclear`** : Deletes all events.","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"pcgiang"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"janjanchen"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family`, etc.","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":68,"author":{"gitId":"pcgiang"},"content":"* Date and time must follow dd-MM-yyyy HH:mm format.","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"janjanchen"},"content":"## Managing Contacts","lastModifiedDate":"2021-09-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"janjanchen"},"content":"### Adding a person: `cadd`","lastModifiedDate":"2021-09-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"janjanchen"},"content":"Adds a person to the contact list.","lastModifiedDate":"2021-09-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"janjanchen"},"content":"Format: `cadd n/NAME e/EMAIL [p/PHONE_NUMBER] [a/ADDRESS] [th/TELEGRAM_HANDLE] [z/ZOOM] [t/TAG]…`","lastModifiedDate":"2021-09-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"janjanchen"},"content":"* `cadd n/Alex Doe e/e0123456@u.nus.edu a/COM1 #99-99 th/johnDoe99 t/Professor`","lastModifiedDate":"2021-09-23"},{"lineNumber":88,"author":{"gitId":"janjanchen"},"content":"* `cadd n/ Jon Cheng t/TA e/e7654321@u.nus.edu a/COM1-0201 p/87654321 t/Senior th/jonnyjohnny z/https://nus-sg.zoom.us/j/0123456789?pwd\u003dABCDEFGHIJKLMNOPDJFHISDFSDH`","lastModifiedDate":"2021-09-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"janjanchen"},"content":"### Listing all persons : `clist`","lastModifiedDate":"2021-09-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"janjanchen"},"content":"Shows a list of all persons in the contact list, with all of their details by default.","lastModifiedDate":"2021-09-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"janjanchen"},"content":"Format: `clist [e] [p] [a] [th] [z] [t]`","lastModifiedDate":"2021-09-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"janjanchen"},"content":"* Returned list will always include names of all persons in the contact list.","lastModifiedDate":"2021-09-23"},{"lineNumber":98,"author":{"gitId":"janjanchen"},"content":"* When no optional fields are provided, e.g `clist`, the list will show all available details of all persons in the contact list.","lastModifiedDate":"2021-09-23"},{"lineNumber":99,"author":{"gitId":"janjanchen"},"content":"* When optional fields are provided, the list will only show the names of all persons in the contact list and the corresponding fields specified by the user.","lastModifiedDate":"2021-09-23"},{"lineNumber":100,"author":{"gitId":"janjanchen"},"content":"* More than one optional field can be provided.","lastModifiedDate":"2021-09-23"},{"lineNumber":101,"author":{"gitId":"janjanchen"},"content":"* The order of the optional fields does not matter. e.g both `clist e p` and `clist p e` will return a list of only the names, email addresses and phone numbers of all persons in the contact list.","lastModifiedDate":"2021-09-23"},{"lineNumber":102,"author":{"gitId":"janjanchen"},"content":"* If the specified field has no value for certain persons in the contact list, it will not show anything for that corresponding field for that particular person.","lastModifiedDate":"2021-09-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"janjanchen"},"content":"Examples:","lastModifiedDate":"2021-09-23"},{"lineNumber":105,"author":{"gitId":"janjanchen"},"content":"* `clist` returns a list of all persons in the contact list with all the available details for each person.","lastModifiedDate":"2021-09-23"},{"lineNumber":106,"author":{"gitId":"janjanchen"},"content":"* `clist e p` returns a list of all persons in the contact list, showing only their names, email addresses and phone numbers (if available).","lastModifiedDate":"2021-09-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"janjanchen"},"content":"### Editing a person : `cedit`","lastModifiedDate":"2021-09-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"janjanchen"},"content":"Edits an existing person in the contact list.","lastModifiedDate":"2021-09-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"janjanchen"},"content":"Format: `cedit INDEX [n/NAME] [e/EMAIL] [p/PHONE] [a/ADDRESS] [th/TELEGRAM_HANDLE] [z/ZOOM] [dt/TAG_DELETED]… [t/TAG_ADDED]… `","lastModifiedDate":"2021-09-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"janjanchen"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …","lastModifiedDate":"2021-09-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"janjanchen"},"content":"* You can use `t/` to add a tag.","lastModifiedDate":"2021-09-23"},{"lineNumber":119,"author":{"gitId":"janjanchen"},"content":"* You can remove a specific tag by typing `dt/` with the tag.","lastModifiedDate":"2021-09-23"},{"lineNumber":120,"author":{"gitId":"janjanchen"},"content":"* You can remove all the person’s tags by typing `dt/*` without specifying any tags after it.","lastModifiedDate":"2021-09-23"},{"lineNumber":121,"author":{"gitId":"janjanchen"},"content":"* When editing tags, the tags to be deleted will be removed first, before new tags are added.","lastModifiedDate":"2021-09-23"},{"lineNumber":122,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"janjanchen"},"content":"* `clist` followed by `cedit 2 p/91234567 e/agentX@thehightable.com` edits the phone number and email address of the 2nd person of the contact list to be `91234567` and `agentX@thehightable.com` respectively.","lastModifiedDate":"2021-09-26"},{"lineNumber":126,"author":{"gitId":"janjanchen"},"content":"* `cfind Betsy` followed by `cedit 2 n/Betsy Crower dt/*` edits the name of the 2nd person from the results of the `cfind` command to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2021-09-26"},{"lineNumber":127,"author":{"gitId":"janjanchen"},"content":"* `cedit 3 dt/TA`  deletes the `TA` tag from the 3rd person.","lastModifiedDate":"2021-09-26"},{"lineNumber":128,"author":{"gitId":"janjanchen"},"content":"* `cedit 4 dt/*` deletes all tags from the 4th person.","lastModifiedDate":"2021-09-23"},{"lineNumber":129,"author":{"gitId":"janjanchen"},"content":"* `cedit 5 dt/classmate t/friend` first deletes the `classmate` tag, then adds `friend` tag from the 5th person.","lastModifiedDate":"2021-09-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"janjanchen"},"content":"### Locating persons by name: `cfind`","lastModifiedDate":"2021-09-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"janjanchen"},"content":"Format: `cfind KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-09-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"janjanchen"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`.","lastModifiedDate":"2021-09-29"},{"lineNumber":139,"author":{"gitId":"janjanchen"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`.","lastModifiedDate":"2021-09-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"janjanchen"},"content":"* Partial words can be matched e.g. `Han` will match `Hans`.","lastModifiedDate":"2021-09-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"janjanchen"},"content":"  e.g. `Hans Bo` will return `Hans Gruber` and `Bo Yang`.","lastModifiedDate":"2021-09-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":147,"author":{"gitId":"janjanchen"},"content":"* `cfind John` returns `john` and `Johnathon Doe`.","lastModifiedDate":"2021-09-29"},{"lineNumber":148,"author":{"gitId":"janjanchen"},"content":"* `cfind alex david` returns `Alex Yeoh` and `David Li`.","lastModifiedDate":"2021-09-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"xiangjunn"},"content":"### Deleting a person : `cdelete`","lastModifiedDate":"2021-09-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"xiangjunn"},"content":"Deletes the specified person from the contact list.","lastModifiedDate":"2021-09-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"xiangjunn"},"content":"Format: `cdelete INDEX1[-INDEX2]`","lastModifiedDate":"2021-09-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"xiangjunn"},"content":"- Deletes the person at the specified `INDEX1` or between the specified","lastModifiedDate":"2021-09-23"},{"lineNumber":157,"author":{"gitId":"xiangjunn"},"content":"  range from `INDEX1` to `INDEX2` inclusively.","lastModifiedDate":"2021-09-23"},{"lineNumber":158,"author":{"gitId":"xiangjunn"},"content":"- The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2021-09-23"},{"lineNumber":159,"author":{"gitId":"xiangjunn"},"content":"- The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-09-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"xiangjunn"},"content":"- `clist` followed by `cdelete 2` deletes the 2nd person from the contact list.","lastModifiedDate":"2021-09-23"},{"lineNumber":163,"author":{"gitId":"xiangjunn"},"content":"- `cfind Betsy` followed by `cdelete 1` deletes the 1st person from the results of the `cfind` command.","lastModifiedDate":"2021-09-23"},{"lineNumber":164,"author":{"gitId":"xiangjunn"},"content":"- `cdelete 3-5` deletes people with index between 3 and 5 inclusively from the contact list.","lastModifiedDate":"2021-09-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"xiangjunn"},"content":"### Clearing all persons : `cclear`","lastModifiedDate":"2021-09-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"xiangjunn"},"content":"Clears all entries of contacts from the contact list.","lastModifiedDate":"2021-09-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"xiangjunn"},"content":"Format: `cclear`","lastModifiedDate":"2021-09-23"},{"lineNumber":171,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":172,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":173,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":174,"author":{"gitId":"xiangjunn"},"content":"## Managing Events","lastModifiedDate":"2021-09-23"},{"lineNumber":175,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":176,"author":{"gitId":"xiangjunn"},"content":"### Adding an event: `eadd`","lastModifiedDate":"2021-09-23"},{"lineNumber":177,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":178,"author":{"gitId":"xiangjunn"},"content":"Adds an event to the event list.","lastModifiedDate":"2021-09-23"},{"lineNumber":179,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":180,"author":{"gitId":"xiangjunn"},"content":"Format: `eadd n/NAME at/START_TIME [end/END_TIME] [d/DESCRIPTION] [a/ADDRESS] [z/ZOOM] [t/TAG]…​`","lastModifiedDate":"2021-09-23"},{"lineNumber":181,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":182,"author":{"gitId":"xiangjunn"},"content":"💡 **Tip:** An event can have any number of tags (including 0)","lastModifiedDate":"2021-09-23"},{"lineNumber":183,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":184,"author":{"gitId":"xiangjunn"},"content":"Take note of the following time format:","lastModifiedDate":"2021-09-23"},{"lineNumber":185,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":186,"author":{"gitId":"xiangjunn"},"content":"- Start time should be of format “dd-MM-yyyy HH:mm” (date-month-year Hour:minutes in 24 hr format).","lastModifiedDate":"2021-09-23"},{"lineNumber":187,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":188,"author":{"gitId":"xiangjunn"},"content":"Examples:","lastModifiedDate":"2021-09-23"},{"lineNumber":189,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":190,"author":{"gitId":"xiangjunn"},"content":"- `eadd n/Summer Party at/12-12-2021 15:12 a/123, Clementi Rd, 1234665 t/fun`","lastModifiedDate":"2021-09-23"},{"lineNumber":191,"author":{"gitId":"xiangjunn"},"content":"- `eadd n/CS2103T Lecture at/10-09-2021 16:00 end/18:00","lastModifiedDate":"2021-09-23"},{"lineNumber":192,"author":{"gitId":"xiangjunn"},"content":"  z/https://nus-sg.zoom.us/j/0123456789?pwd\u003dABCDEFGHIJKLMNOPDJFHISDFSDHk t/lecture`","lastModifiedDate":"2021-09-23"},{"lineNumber":193,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":194,"author":{"gitId":"xiangjunn"},"content":"### Listing all events: `elist`","lastModifiedDate":"2021-09-23"},{"lineNumber":195,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":196,"author":{"gitId":"xiangjunn"},"content":"Shows a list of all events in the event list, with all of their details by default.","lastModifiedDate":"2021-09-23"},{"lineNumber":197,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":198,"author":{"gitId":"xiangjunn"},"content":"Format: `elist [at] [end] [d] [a] [z] [t]`","lastModifiedDate":"2021-09-23"},{"lineNumber":199,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":200,"author":{"gitId":"xiangjunn"},"content":"- Returned list will always include names of all events in the event list.","lastModifiedDate":"2021-09-23"},{"lineNumber":201,"author":{"gitId":"xiangjunn"},"content":"- When no optional fields are provided, e.g `elist` , the list will show all available details of all events","lastModifiedDate":"2021-09-23"},{"lineNumber":202,"author":{"gitId":"xiangjunn"},"content":"  in the event list.","lastModifiedDate":"2021-09-23"},{"lineNumber":203,"author":{"gitId":"xiangjunn"},"content":"- When optional fields are provided, the list will only show the names of all events in the event list and","lastModifiedDate":"2021-09-23"},{"lineNumber":204,"author":{"gitId":"xiangjunn"},"content":"  the corresponding fields specified by the user.","lastModifiedDate":"2021-09-23"},{"lineNumber":205,"author":{"gitId":"xiangjunn"},"content":"- More than one optional field can be provided.","lastModifiedDate":"2021-09-23"},{"lineNumber":206,"author":{"gitId":"xiangjunn"},"content":"- The order of the optional fields does not matter. e.g both `elist d at` and `elist at d` will return a list","lastModifiedDate":"2021-09-23"},{"lineNumber":207,"author":{"gitId":"xiangjunn"},"content":"  of only the names, descriptions and starting times in the event list.","lastModifiedDate":"2021-09-23"},{"lineNumber":208,"author":{"gitId":"xiangjunn"},"content":"- If the specified field has no value for certain events in the event list, it will not show anything for","lastModifiedDate":"2021-09-23"},{"lineNumber":209,"author":{"gitId":"xiangjunn"},"content":"  that corresponding field for that particular event.","lastModifiedDate":"2021-09-23"},{"lineNumber":210,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":211,"author":{"gitId":"xiangjunn"},"content":"Examples:","lastModifiedDate":"2021-09-23"},{"lineNumber":212,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":213,"author":{"gitId":"xiangjunn"},"content":"- `elist` returns a list of all events in the event list with all the available details for each event.","lastModifiedDate":"2021-09-23"},{"lineNumber":214,"author":{"gitId":"xiangjunn"},"content":"- `elist d at` returns a list of all events in the event list, showing only their names, starting times and descriptions (if available).","lastModifiedDate":"2021-09-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"Gordon25"},"content":"### Editing an event : `eedit`","lastModifiedDate":"2021-09-27"},{"lineNumber":217,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":218,"author":{"gitId":"Gordon25"},"content":"Edits an existing event in the event list.","lastModifiedDate":"2021-09-27"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"Gordon25"},"content":"Format: `eedit INDEX [n/NAME] [at/START_TIME] [end/END_TIME] [d/DESCRIPTION] [a/ADDRESS] [z/ZOOM] [dt/TAG_DELETED]…​ [t/TAG_ADDED]…​`","lastModifiedDate":"2021-09-27"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"Gordon25"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":224,"author":{"gitId":"Gordon25"},"content":"   ","lastModifiedDate":"2021-09-28"},{"lineNumber":225,"author":{"gitId":"Gordon25"},"content":":information_source: **Note:** Start time should be of format “dd-MM-yyyy HH:mm” (date-month-year Hour:minutes in 24 hr format).","lastModifiedDate":"2021-09-27"},{"lineNumber":226,"author":{"gitId":"Gordon25"},"content":"   ","lastModifiedDate":"2021-09-27"},{"lineNumber":227,"author":{"gitId":"Gordon25"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":228,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":229,"author":{"gitId":"Gordon25"},"content":"* `elist` followed by `eedit` 2 edits the 2nd event from the event list.","lastModifiedDate":"2021-09-27"},{"lineNumber":230,"author":{"gitId":"Gordon25"},"content":"* Edits the event at the specified `INDEX`. `INDEX` refers to the index number shown in the displayed event list. `INDEX` **must be a positive integer** eg 1, 2, 3, …​","lastModifiedDate":"2021-09-27"},{"lineNumber":231,"author":{"gitId":"Gordon25"},"content":"* **At least one** of the optional fields must be provided.","lastModifiedDate":"2021-09-27"},{"lineNumber":232,"author":{"gitId":"Gordon25"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2021-09-27"},{"lineNumber":233,"author":{"gitId":"Gordon25"},"content":"* use `t/` to add a tag.","lastModifiedDate":"2021-09-27"},{"lineNumber":234,"author":{"gitId":"Gordon25"},"content":"* use `dt/` to remove a tag.","lastModifiedDate":"2021-09-27"},{"lineNumber":235,"author":{"gitId":"Gordon25"},"content":"* use `dt/*` to remove **all** tags","lastModifiedDate":"2021-09-27"},{"lineNumber":236,"author":{"gitId":"Gordon25"},"content":"* When editing tags, the tags to be deleted will be removed first, before new tags are added","lastModifiedDate":"2021-09-27"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"Gordon25"},"content":"* `elist` followed by `eedit 2 n/CS2103T Exam dt/Easy_exams t/Hard_exams` changes the name and tag of the 2nd event on the event list to `CS2103T Exam` and `Hard_exams` respectively.","lastModifiedDate":"2021-09-27"},{"lineNumber":240,"author":{"gitId":"Gordon25"},"content":"* `efind Betsy` followed by `eedit 2 n/Betsy’s Wedding` edits the name of the 2nd event from the results of the `efind` command to be `Betsy’s Wedding`","lastModifiedDate":"2021-09-27"},{"lineNumber":241,"author":{"gitId":"Gordon25"},"content":"* `eedit 4 dt/*` deletes all tags from the 4th event.","lastModifiedDate":"2021-09-27"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"Gordon25"},"content":"### Locating persons by name : `efind`","lastModifiedDate":"2021-09-27"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"Gordon25"},"content":"Finds events which contain any of the given keywords.","lastModifiedDate":"2021-09-27"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"Gordon25"},"content":"Format: `efind KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-09-27"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"Gordon25"},"content":"* **Case-insensitive**. e.g `exams` will match `Exams`","lastModifiedDate":"2021-09-27"},{"lineNumber":250,"author":{"gitId":"Gordon25"},"content":"* Order of the keywords does not matter. e.g. `Exam Hard` will match `Hard Exam`","lastModifiedDate":"2021-09-27"},{"lineNumber":251,"author":{"gitId":"Gordon25"},"content":"* Only the **name** is searched.","lastModifiedDate":"2021-09-27"},{"lineNumber":252,"author":{"gitId":"Gordon25"},"content":"* Partial words can be matched e.g. `Exa` will match `CS2103T Exam` ","lastModifiedDate":"2021-09-27"},{"lineNumber":253,"author":{"gitId":"Gordon25"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search). e.g. `Exam Hard` will return `Hard Exam`, `CS1101S Exams`","lastModifiedDate":"2021-09-27"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-09-27"},{"lineNumber":256,"author":{"gitId":"Gordon25"},"content":"`efind ex` returns `exams` and `Examinations`","lastModifiedDate":"2021-09-27"},{"lineNumber":257,"author":{"gitId":"Gordon25"},"content":"`efind CS Exam` returns `CS2100 Exam`,  `CS2101` ","lastModifiedDate":"2021-09-27"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":259,"author":{"gitId":"Gordon25"},"content":"### Deleting a person : `edelete`","lastModifiedDate":"2021-09-27"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":261,"author":{"gitId":"Gordon25"},"content":"Deletes the specified event from the event list.","lastModifiedDate":"2021-09-27"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":263,"author":{"gitId":"Gordon25"},"content":"Format: `edelete INDEX1[-INDEX2]`","lastModifiedDate":"2021-09-27"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":265,"author":{"gitId":"Gordon25"},"content":"* Deletes the event at the specified `INDEX1` or between the specified range from `INDEX1` to `INDEX2` inclusive.","lastModifiedDate":"2021-09-27"},{"lineNumber":266,"author":{"gitId":"Gordon25"},"content":"* `INDEX` refers to the index number shown in the displayed event list.","lastModifiedDate":"2021-09-27"},{"lineNumber":267,"author":{"gitId":"Gordon25"},"content":"* `INDEX` **must be a positive integer**, eg 1, 2, 3, …​","lastModifiedDate":"2021-09-27"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-09-27"},{"lineNumber":270,"author":{"gitId":"Gordon25"},"content":"`elist` followed by `edelete 2` deletes the 2nd event from the event list.","lastModifiedDate":"2021-09-27"},{"lineNumber":271,"author":{"gitId":"Gordon25"},"content":"`efind Exam` followed by `edelete 1` deletes the 1st event from the results of the `efind` command.","lastModifiedDate":"2021-09-27"},{"lineNumber":272,"author":{"gitId":"Gordon25"},"content":"`edelete 3-5` deletes events with index between 3 and 5 inclusively from the event list.","lastModifiedDate":"2021-09-27"},{"lineNumber":273,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":274,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":275,"author":{"gitId":"Gordon25"},"content":"### Clearing all events: `eclear`","lastModifiedDate":"2021-09-27"},{"lineNumber":276,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":277,"author":{"gitId":"Gordon25"},"content":"Clears all entries of all events from the event list.","lastModifiedDate":"2021-09-27"},{"lineNumber":278,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":279,"author":{"gitId":"Gordon25"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2021-09-28"},{"lineNumber":280,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"chunweii"},"content":"## General","lastModifiedDate":"2021-09-22"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":284,"author":{"gitId":"chunweii"},"content":"### Viewing help : `help`","lastModifiedDate":"2021-09-22"},{"lineNumber":285,"author":{"gitId":"chunweii"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":286,"author":{"gitId":"chunweii"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2021-09-22"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":288,"author":{"gitId":"chunweii"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2021-09-22"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":290,"author":{"gitId":"chunweii"},"content":"Format: `help`","lastModifiedDate":"2021-09-22"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":292,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":295,"author":{"gitId":"Gordon25"},"content":"**Exit** | `exit`","lastModifiedDate":"2021-09-27"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"chunweii"},"content":"SoConnect data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-09-22"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":304,"author":{"gitId":"chunweii"},"content":"SoConnect data are saved as a JSON file `[JAR file location]/data/soconnect.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-09-22"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":306,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":307,"author":{"gitId":"chunweii"},"content":"If your changes to the data file makes its format invalid, SoConnect will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-09-22"},{"lineNumber":308,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":310,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"pcgiang"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous SoConnect home folder.","lastModifiedDate":"2021-09-27"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"pcgiang"},"content":"### Managing Contacts","lastModifiedDate":"2021-09-27"},{"lineNumber":322,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":323,"author":{"gitId":"pcgiang"},"content":"Action | Format, Examples","lastModifiedDate":"2021-09-26"},{"lineNumber":324,"author":{"gitId":"pcgiang"},"content":"--------|------------------","lastModifiedDate":"2021-09-26"},{"lineNumber":325,"author":{"gitId":"pcgiang"},"content":"**Add** | `cadd n/NAME e/EMAIL [p/PHONE_NUMBER] [a/ADDRESS] [th/TELEGRAM_HANDLE] [z/ZOOM] [t/TAG]…​` \u003cbr\u003e e.g., `cadd n/James Ho p/22224444 e/hohohojames@u.nus.edu a/123, Clementi Rd, 1234665 t/Professor`","lastModifiedDate":"2021-09-26"},{"lineNumber":326,"author":{"gitId":"pcgiang"},"content":"**Clear** | `cclear`","lastModifiedDate":"2021-09-26"},{"lineNumber":327,"author":{"gitId":"pcgiang"},"content":"**Delete** | `cdelete INDEX1[-INDEX2]`\u003cbr\u003e e.g., `cdelete 3` \u003cbr\u003e e.g., `cdelete 1-5`","lastModifiedDate":"2021-09-26"},{"lineNumber":328,"author":{"gitId":"pcgiang"},"content":"**Edit** | `cedit INDEX [n/NAME] [e/EMAIL] [p/PHONE] [a/ADDRESS] [th/TELEGRAM_HANDLE] [z/ZOOM] [dt/TAG_DELETED]…​ [t/TAG_ADDED]…​​`\u003cbr\u003e e.g.,`cedit 2 n/James Lee e/jameslee@u.nus.edu p/91234567 dt/OP1_projectmate t/CS2103T_projectmate t/roommate` \u003cbr\u003e e.g., `cedit 3 dt/*`","lastModifiedDate":"2021-09-26"},{"lineNumber":329,"author":{"gitId":"pcgiang"},"content":"**Find** | `cfind KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `cfind James Jake`","lastModifiedDate":"2021-09-26"},{"lineNumber":330,"author":{"gitId":"pcgiang"},"content":"**List** | `clist [e] [p] [a] [th] [z] [t]` \u003cbr\u003e e.g., `clist` \u003cbr\u003e e.g., `clist e p`","lastModifiedDate":"2021-09-26"},{"lineNumber":331,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":332,"author":{"gitId":"pcgiang"},"content":"### Managing Events","lastModifiedDate":"2021-09-27"},{"lineNumber":333,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":334,"author":{"gitId":"pcgiang"},"content":"Action | Format, Examples","lastModifiedDate":"2021-09-26"},{"lineNumber":335,"author":{"gitId":"pcgiang"},"content":"--------|------------------","lastModifiedDate":"2021-09-26"},{"lineNumber":336,"author":{"gitId":"pcgiang"},"content":"**Add** | `eadd n/NAME at/START_TIME [end/END_TIME] [d/DESCRIPTION] [a/ADDRESS] [z/ZOOM] [t/TAG]…​ ` \u003cbr\u003e e.g., `eadd n/Summer Party at/12-12-2021 15:12 a/123, Clementi Rd, 1234665 t/fun`","lastModifiedDate":"2021-09-26"},{"lineNumber":337,"author":{"gitId":"pcgiang"},"content":"**Clear** | `eclear`","lastModifiedDate":"2021-09-26"},{"lineNumber":338,"author":{"gitId":"pcgiang"},"content":"**Delete** | `edelete INDEX`\u003cbr\u003e e.g., `edelete 3` \u003cbr\u003e e.g., `edelete 1-5`","lastModifiedDate":"2021-09-26"},{"lineNumber":339,"author":{"gitId":"pcgiang"},"content":"**Edit** | `eedit INDEX [n/NAME] [at/START_TIME] [end/END_TIME] [d/DESCRIPTION] [a/ADDRESS] [z/ZOOM] [dt/TAG_DELETED]…​ [t/TAG_ADDED]…​`\u003cbr\u003e e.g.,`eedit 2 n/CS2103T Exam dt/Easy_exams t/Hard_exams` \u003cbr\u003e e.g., `eedit 3 dt/*`","lastModifiedDate":"2021-09-26"},{"lineNumber":340,"author":{"gitId":"pcgiang"},"content":"**Find** | `efind KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `efind CS2103T Exams`","lastModifiedDate":"2021-09-26"},{"lineNumber":341,"author":{"gitId":"pcgiang"},"content":"**List** | `elist [at] [end] [d] [a] [z] [t]` \u003cbr\u003e e.g., `elist` \u003cbr\u003e e.g., `elist at d`","lastModifiedDate":"2021-09-26"},{"lineNumber":342,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":343,"author":{"gitId":"Gordon25"},"content":"________________________________________________________________________________________________________________","lastModifiedDate":"2021-09-28"},{"lineNumber":344,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":345,"author":{"gitId":"pcgiang"},"content":"### General","lastModifiedDate":"2021-09-26"},{"lineNumber":346,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":347,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":351,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":352,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":353,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"janjanchen":41,"pcgiang":36,"chunweii":9,"Gordon25":58,"xiangjunn":58,"-":151}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"pcgiang"},"content":"    content: \"SoConnect\";","lastModifiedDate":"2021-09-27"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"pcgiang":1,"-":294}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"chunweii"},"content":"title: SoConnect","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"chunweii"},"content":"[![Java CI](https://github.com/AY2122S1-CS2103T-W15-3/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2122S1-CS2103T-W15-3/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-W15-3/tp/branch/master/graph/badge.svg?token\u003d40MOICZDNE)](https://codecov.io/gh/AY2122S1-CS2103T-W15-3/tp)","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"chunweii"},"content":"**SoConnect is a desktop application for managing your contacts and events.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"chunweii"},"content":"* If you are interested in using SoConnect, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"chunweii"},"content":"* If you are interested about developing SoConnect, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"chunweii":5,"-":15}},{"path":"docs/team/chunweii.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"chunweii"},"content":"title: Chun Wei\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-07-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"chunweii":1,"-":45}},{"path":"docs/team/gordon25.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Gordon25"},"content":"---","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"Gordon25"},"content":"layout: page","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"Gordon25"},"content":"title: Gordon\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"Gordon25"},"content":"---","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"Gordon25"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"Gordon25"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"Gordon25"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"Gordon25"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"Gordon25"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"Gordon25"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"Gordon25"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"Gordon25"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"Gordon25"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"Gordon25"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"Gordon25"},"content":"* **Project management**:","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"Gordon25"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"Gordon25"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"Gordon25"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"Gordon25"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"Gordon25"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"Gordon25"},"content":"    * User Guide:","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"Gordon25"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"Gordon25"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"Gordon25"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"Gordon25"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"Gordon25"},"content":"* **Community**:","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"Gordon25"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"Gordon25"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"Gordon25"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"Gordon25"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"Gordon25"},"content":"* **Tools**:","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"Gordon25"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"Gordon25"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"Gordon25"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"Gordon25"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"Gordon25"},"content":"© 2021 GitHub, Inc.","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"Gordon25"},"content":"Terms","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"Gordon25"},"content":"Privacy","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"Gordon25"},"content":"Security","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"Gordon25"},"content":"Status","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"Gordon25"},"content":"Docs","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"Gordon25"},"content":"Contact GitHub","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"Gordon25"},"content":"Pricing","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"Gordon25"},"content":"API","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"Gordon25"},"content":"Training","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"Gordon25"},"content":"Blog","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"Gordon25"},"content":"About","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"Gordon25":58}},{"path":"docs/team/janjanchen.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"janjanchen"},"content":"---","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"janjanchen"},"content":"layout: page","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"janjanchen"},"content":"title: Janice Chen\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"janjanchen"},"content":"---","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"janjanchen"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"janjanchen"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"janjanchen"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"janjanchen"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"janjanchen"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"janjanchen"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"janjanchen"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"janjanchen"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"janjanchen"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"janjanchen"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"janjanchen"},"content":"* **Project management**:","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"janjanchen"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"janjanchen"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"janjanchen"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"janjanchen"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"janjanchen"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"janjanchen"},"content":"    * User Guide:","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"janjanchen"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"janjanchen"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"janjanchen"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"janjanchen"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"janjanchen"},"content":"* **Community**:","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"janjanchen"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"janjanchen"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"janjanchen"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"janjanchen"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"janjanchen"},"content":"* **Tools**:","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"janjanchen"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"janjanchen"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"janjanchen"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"janjanchen":46}},{"path":"docs/team/pcgiang.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"---","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"layout: page","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"title: Giang\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"---","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"* **Project management**:","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"pcgiang"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"pcgiang"},"content":"    * User Guide:","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"pcgiang"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"pcgiang"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"pcgiang"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"pcgiang"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"pcgiang"},"content":"* **Community**:","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"pcgiang"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"pcgiang"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"pcgiang"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"pcgiang"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"pcgiang"},"content":"* **Tools**:","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"pcgiang"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"pcgiang"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"pcgiang"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"pcgiang":46}},{"path":"docs/team/xiangjunn.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"xiangjunn"},"content":"---","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"xiangjunn"},"content":"layout: page","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"xiangjunn"},"content":"title: Xiang Jun\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"xiangjunn"},"content":"---","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"xiangjunn"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"xiangjunn"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"xiangjunn"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"xiangjunn"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"xiangjunn"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"xiangjunn"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"xiangjunn"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"xiangjunn"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"xiangjunn"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"xiangjunn"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"xiangjunn"},"content":"* **Project management**:","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"xiangjunn"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"xiangjunn"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"xiangjunn"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"xiangjunn"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"xiangjunn"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"xiangjunn"},"content":"    * User Guide:","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"xiangjunn"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"xiangjunn"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"xiangjunn"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"xiangjunn"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"xiangjunn"},"content":"* **Community**:","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"xiangjunn"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"xiangjunn"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"xiangjunn"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"xiangjunn"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"xiangjunn"},"content":"* **Tools**:","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"xiangjunn"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"xiangjunn"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"xiangjunn"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"xiangjunn"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"xiangjunn":46}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"janjanchen"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"janjanchen"},"content":"import seedu.address.model.event.UniqueEventList;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":20,"author":{"gitId":"janjanchen"},"content":"    private final UniqueEventList events;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":31,"author":{"gitId":"janjanchen"},"content":"        events \u003d new UniqueEventList();","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"janjanchen"},"content":"     * Replaces the contents of the event list with {@code events}.","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"janjanchen"},"content":"     * {@code events} must not contain duplicate events.","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"janjanchen"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"janjanchen"},"content":"        this.events.setEvents(events);","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":69,"author":{"gitId":"janjanchen"},"content":"        setEvents(newData.getEventList());","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"janjanchen"},"content":"    //// event-level operations","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"janjanchen"},"content":"     * Returns true if an event with the same name as {@code event} exists in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"janjanchen"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"janjanchen"},"content":"        requireNonNull(event);","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"janjanchen"},"content":"        return events.contains(event);","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"janjanchen"},"content":"     * Adds an event to the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"janjanchen"},"content":"     * The event must not already exist in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"janjanchen"},"content":"    public void addEvent(Event e) {","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"janjanchen"},"content":"        events.add(e);","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"janjanchen"},"content":"     * Replaces the given event {@code target} in the list with {@code editedEvent}.","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"janjanchen"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"janjanchen"},"content":"     * The event name of {@code editedEvent} must not be the same as another existing event in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"janjanchen"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"janjanchen"},"content":"        requireNonNull(editedEvent);","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"janjanchen"},"content":"        events.setEvent(target, editedEvent);","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"janjanchen"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"janjanchen"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"janjanchen"},"content":"    public void removeEvent(Event key) {","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"janjanchen"},"content":"        events.remove(key);","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"janjanchen"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":152,"author":{"gitId":"janjanchen"},"content":"                + events.asUnmodifiableObservableList().size() + \" events\";","lastModifiedDate":"2021-10-07"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":161,"author":{"gitId":"janjanchen"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":162,"author":{"gitId":"janjanchen"},"content":"    public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":163,"author":{"gitId":"janjanchen"},"content":"        return events.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-07"},{"lineNumber":164,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":165,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"janjanchen"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons)","lastModifiedDate":"2021-10-07"},{"lineNumber":171,"author":{"gitId":"janjanchen"},"content":"                \u0026\u0026 events.equals(((AddressBook) other).events));","lastModifiedDate":"2021-10-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"janjanchen":60,"-":118}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"janjanchen"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"janjanchen"},"content":"    ObservableList\u003cEvent\u003e getEventList();","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"janjanchen":2,"-":17}},{"path":"src/main/java/seedu/address/model/event/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":" * Represents address of an event in the event list.","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"public class Address {","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"    /*","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"    public final String value;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"     * @param address A valid address.","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"    public Address(String address) {","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"        requireNonNull(address);","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"pcgiang"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"pcgiang"},"content":"        value \u003d address;","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"pcgiang"},"content":"     * Returns true if a given string is a valid address.","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"pcgiang"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"pcgiang"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"pcgiang"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"pcgiang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"pcgiang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"pcgiang"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"pcgiang"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"pcgiang":46}},{"path":"src/main/java/seedu/address/model/event/DateAndTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":" * Represents time of an event in the event list.","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":" * Guarantees: immutable;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"public class DateAndTime {","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"            \"Time format should be in  dd-MM-yyyy HH:mm format and start time should not be blank\";","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"     * @// TODO: 10/5/2021 add requirement for time","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"    public static final String VALIDATION_REGEX \u003d \".*\";","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"    public final LocalDateTime time;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"     * Constructs an {@code DateAndTime}","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"     * @param time A valid start DateAndTime","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"    public DateAndTime(String time) {","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"        this.time \u003d LocalDateTime.parse(time);","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"pcgiang"},"content":"    // TODO: 10/6/2021 add test case for invalid date and time","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"pcgiang"},"content":"     * Returns true if a given string is a valid DateAndTime.","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"pcgiang"},"content":"    public static boolean isValidDateTime(String test) {","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"pcgiang"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"pcgiang"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"pcgiang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"pcgiang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"pcgiang"},"content":"                || (other instanceof DateAndTime // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"pcgiang"},"content":"                \u0026\u0026 time.equals(((DateAndTime) other).time)); // state check","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"pcgiang":45}},{"path":"src/main/java/seedu/address/model/event/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":" * Represents the description of an event in the address book.","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"public class Description {","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"    public final String value;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"     * Constructs an {@code Description}.","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"     * @param remark A valid description.","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"    public Description(String remark) {","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"        requireNonNull(remark);","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"        value \u003d remark;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"                || (other instanceof Description // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"                \u0026\u0026 value.equals(((Description) other).value)); // state check","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"pcgiang":29}},{"path":"src/main/java/seedu/address/model/event/EndDateTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":" * Represents end time of an event in the event list.","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTime(String)}","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"public class EndDateTime extends DateAndTime {","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"     * Constructs an {@code DateAndTime}","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"     * @param time A valid DateAndTime","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"    public EndDateTime(String time) {","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"        super(time);","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"pcgiang":18}},{"path":"src/main/java/seedu/address/model/event/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"janjanchen"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"janjanchen"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"janjanchen"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"janjanchen"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"janjanchen"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"janjanchen"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"janjanchen"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"janjanchen"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"janjanchen"},"content":" * Represents an Event in SoConnect.","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"janjanchen"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"janjanchen"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"janjanchen"},"content":"public class Event {","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"janjanchen"},"content":"    //Compulsory fields","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"janjanchen"},"content":"    private final Name name;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"janjanchen"},"content":"    private final DateAndTime startDateAndTime;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"janjanchen"},"content":"    //Optional fields","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"janjanchen"},"content":"    private final DateAndTime endDateAndTime;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"janjanchen"},"content":"    private final Description description;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"janjanchen"},"content":"    private final Address address;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"janjanchen"},"content":"    private final ZoomLink zoomLink;","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"janjanchen"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"janjanchen"},"content":"     * All fields must be present and not null (currently).","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"janjanchen"},"content":"    public Event(Name name, DateAndTime startDateAndTime, DateAndTime endDateAndTime,","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"janjanchen"},"content":"                 Description description, Address address, ZoomLink zoomLink, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"janjanchen"},"content":"        requireAllNonNull(name, startDateAndTime, endDateAndTime, description, address, zoomLink, tags);","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"janjanchen"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"janjanchen"},"content":"        this.startDateAndTime \u003d startDateAndTime;","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"janjanchen"},"content":"        this.endDateAndTime \u003d endDateAndTime;","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"janjanchen"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"janjanchen"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"janjanchen"},"content":"        this.zoomLink \u003d zoomLink;","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"janjanchen"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"janjanchen"},"content":"    public Name getName() {","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"janjanchen"},"content":"        return name;","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"janjanchen"},"content":"    public DateAndTime getStartDateAndTime() {","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"janjanchen"},"content":"        return startDateAndTime;","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"janjanchen"},"content":"    public DateAndTime getEndDateAndTime() {","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"janjanchen"},"content":"        return endDateAndTime;","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"janjanchen"},"content":"    public Description getDescription() {","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"janjanchen"},"content":"        return description;","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"janjanchen"},"content":"    public Address getAddress() {","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"janjanchen"},"content":"        return address;","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"janjanchen"},"content":"    public ZoomLink getZoomLink() {","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"janjanchen"},"content":"        return zoomLink;","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"janjanchen"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"janjanchen"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"janjanchen"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"janjanchen"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"janjanchen"},"content":"     * Returns true if both events have the same name.","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"janjanchen"},"content":"     * This defines a weaker notion of equality between two events.","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"janjanchen"},"content":"    public boolean isSameEvent(Event otherEvent) {","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"janjanchen"},"content":"        if (otherEvent \u003d\u003d this) {","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"janjanchen"},"content":"            return true;","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"janjanchen"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"janjanchen"},"content":"        return otherEvent !\u003d null","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"janjanchen"},"content":"                \u0026\u0026 otherEvent.getName().equals(getName());","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"janjanchen"},"content":"     * Returns true if both events have the same details.","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"janjanchen"},"content":"     * This defines a stronger notion of equality between two events.","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"janjanchen"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"janjanchen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"janjanchen"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"janjanchen"},"content":"            return true;","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"janjanchen"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"janjanchen"},"content":"        if (!(other instanceof Event)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"janjanchen"},"content":"            return false;","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"janjanchen"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":103,"author":{"gitId":"janjanchen"},"content":"        Event otherEvent \u003d (Event) other;","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"janjanchen"},"content":"        return otherEvent.getName().equals(getName())","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"janjanchen"},"content":"                \u0026\u0026 otherEvent.getStartDateAndTime().equals(getStartDateAndTime())","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"janjanchen"},"content":"                \u0026\u0026 otherEvent.getEndDateAndTime().equals(getEndDateAndTime())","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"janjanchen"},"content":"                \u0026\u0026 otherEvent.getDescription().equals(getDescription())","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"janjanchen"},"content":"                \u0026\u0026 otherEvent.getAddress().equals(getAddress())","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"janjanchen"},"content":"                \u0026\u0026 otherEvent.getZoomLink().equals(getZoomLink())","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"janjanchen"},"content":"                \u0026\u0026 otherEvent.getTags().equals(getTags());","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":112,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":113,"author":{"gitId":"janjanchen"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"janjanchen"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"janjanchen"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-10-05"},{"lineNumber":116,"author":{"gitId":"janjanchen"},"content":"        return Objects.hash(name, startDateAndTime, endDateAndTime, description,","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"janjanchen"},"content":"                address, zoomLink, tags);","lastModifiedDate":"2021-10-06"},{"lineNumber":118,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":119,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":120,"author":{"gitId":"janjanchen"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":121,"author":{"gitId":"janjanchen"},"content":"    public String toString() {","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"janjanchen"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-05"},{"lineNumber":123,"author":{"gitId":"janjanchen"},"content":"        builder.append(getName())","lastModifiedDate":"2021-10-05"},{"lineNumber":124,"author":{"gitId":"janjanchen"},"content":"                .append(\"; Start: \")","lastModifiedDate":"2021-10-05"},{"lineNumber":125,"author":{"gitId":"janjanchen"},"content":"                .append(getStartDateAndTime())","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"janjanchen"},"content":"                .append(\"; End: \")","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"janjanchen"},"content":"                .append(getEndDateAndTime())","lastModifiedDate":"2021-10-05"},{"lineNumber":128,"author":{"gitId":"janjanchen"},"content":"                .append(\"; Description: \")","lastModifiedDate":"2021-10-05"},{"lineNumber":129,"author":{"gitId":"janjanchen"},"content":"                .append(getDescription())","lastModifiedDate":"2021-10-05"},{"lineNumber":130,"author":{"gitId":"janjanchen"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2021-10-05"},{"lineNumber":131,"author":{"gitId":"janjanchen"},"content":"                .append(getAddress())","lastModifiedDate":"2021-10-05"},{"lineNumber":132,"author":{"gitId":"janjanchen"},"content":"                .append(\"; ZoomLink: \")","lastModifiedDate":"2021-10-06"},{"lineNumber":133,"author":{"gitId":"janjanchen"},"content":"                .append(getZoomLink());","lastModifiedDate":"2021-10-06"},{"lineNumber":134,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":135,"author":{"gitId":"janjanchen"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"janjanchen"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":137,"author":{"gitId":"janjanchen"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2021-10-05"},{"lineNumber":138,"author":{"gitId":"janjanchen"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2021-10-05"},{"lineNumber":139,"author":{"gitId":"janjanchen"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":140,"author":{"gitId":"janjanchen"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-05"},{"lineNumber":141,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":142,"author":{"gitId":"janjanchen"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"janjanchen":142}},{"path":"src/main/java/seedu/address/model/event/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":" * Represents name of an event in the event list.","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":" * Guarantees: immutable;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"public class Name {","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Event names should not be blank\";","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"    /*","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"     * The first character of the event must not be a whitespace,","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"    public final String fullName;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"     * @param name A valid name.","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"    public Name(String name) {","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"pcgiang"},"content":"        fullName \u003d name;","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"pcgiang"},"content":"    // TODO: 10/6/2021 update test cases for isValidName()","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"pcgiang"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"pcgiang"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"pcgiang"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"pcgiang"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"pcgiang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"pcgiang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"pcgiang"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"pcgiang"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"pcgiang":46}},{"path":"src/main/java/seedu/address/model/event/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"janjanchen"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"janjanchen"},"content":"import java.util.List;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"janjanchen"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"janjanchen"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"janjanchen"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"janjanchen"},"content":" * Tests that a {@code Event}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"janjanchen"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"janjanchen"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cEvent\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"janjanchen"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"janjanchen"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"janjanchen"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"janjanchen"},"content":"    // to change event.getName().field","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"janjanchen"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"janjanchen"},"content":"    public boolean test(Event event) {","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"janjanchen"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"janjanchen"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(event.getName().toString(), keyword));","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"janjanchen"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"janjanchen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"janjanchen"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"janjanchen"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"janjanchen"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"janjanchen"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"janjanchen":31}},{"path":"src/main/java/seedu/address/model/event/StartDateTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":" * Represents start time of an event in the event list.","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTime(String)}","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"public class StartDateTime extends DateAndTime {","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"     * Constructs an {@code StartDateTime}","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"     * @param time A valid DateAndTime","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"    public StartDateTime(String time) {","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"        super(time);","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"pcgiang":17}},{"path":"src/main/java/seedu/address/model/event/UniqueEventList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"janjanchen"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"janjanchen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"janjanchen"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"janjanchen"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"janjanchen"},"content":"import java.util.List;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"janjanchen"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"janjanchen"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"janjanchen"},"content":"import seedu.address.model.event.exceptions.DuplicateEventException;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"janjanchen"},"content":"import seedu.address.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"janjanchen"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"janjanchen"},"content":" * A list of events that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"janjanchen"},"content":" * An event is considered unique by comparing using {@code Event#isSameEvent(Event)}. As such, adding and updating of","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"janjanchen"},"content":" * events uses Event#isSameEvent(Event) for equality so as to ensure that the event being added or updated is","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"janjanchen"},"content":" * unique in terms of event name in the UniqueEventList. However, the removal of an event uses Event#equals(Object) so","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"janjanchen"},"content":" * as to ensure that the event with exactly the same fields will be removed.","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"janjanchen"},"content":" *","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"janjanchen"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"janjanchen"},"content":" *","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"janjanchen"},"content":" * @see Event#isSameEvent(Event)","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"janjanchen"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"janjanchen"},"content":"public class UniqueEventList implements Iterable\u003cEvent\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"janjanchen"},"content":"    private final ObservableList\u003cEvent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"janjanchen"},"content":"    private final ObservableList\u003cEvent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"janjanchen"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"janjanchen"},"content":"     * Returns true if the list contains an equivalent event as the given argument.","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"janjanchen"},"content":"    public boolean contains(Event toCheck) {","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"janjanchen"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"janjanchen"},"content":"        return internalList.stream().anyMatch(toCheck::isSameEvent);","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"janjanchen"},"content":"     * Adds an event to the list.","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"janjanchen"},"content":"     * The event must not already exist in the list.","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"janjanchen"},"content":"    public void add(Event toAdd) {","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"janjanchen"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"janjanchen"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"janjanchen"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"janjanchen"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"janjanchen"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"janjanchen"},"content":"     * Replaces the event {@code target} in the list with {@code editedEvent}.","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"janjanchen"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"janjanchen"},"content":"     * The event name of {@code editedEvent} must not be the same as another existing event in the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"janjanchen"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"janjanchen"},"content":"        requireAllNonNull(target, editedEvent);","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"janjanchen"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"janjanchen"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"janjanchen"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"janjanchen"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"janjanchen"},"content":"        if (!target.isSameEvent(editedEvent) \u0026\u0026 contains(editedEvent)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"janjanchen"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"janjanchen"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"janjanchen"},"content":"        internalList.set(index, editedEvent);","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"janjanchen"},"content":"     * Removes the equivalent event from the list.","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"janjanchen"},"content":"     * The event must exist in the list.","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"janjanchen"},"content":"    public void remove(Event toRemove) {","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"janjanchen"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"janjanchen"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"janjanchen"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"janjanchen"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"janjanchen"},"content":"    public void setEvents(UniqueEventList replacement) {","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"janjanchen"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"janjanchen"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"janjanchen"},"content":"     * Replaces the contents of this list with {@code events}.","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"janjanchen"},"content":"     * {@code events} must not contain duplicate events.","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"janjanchen"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"janjanchen"},"content":"        requireAllNonNull(events);","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"pcgiang"},"content":"        if (!eventsAreUnique(events)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"janjanchen"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"janjanchen"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"janjanchen"},"content":"        internalList.setAll(events);","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"janjanchen"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":103,"author":{"gitId":"janjanchen"},"content":"    public ObservableList\u003cEvent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"janjanchen"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"janjanchen"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"janjanchen"},"content":"    public Iterator\u003cEvent\u003e iterator() {","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"janjanchen"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":112,"author":{"gitId":"janjanchen"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":113,"author":{"gitId":"janjanchen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"janjanchen"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"janjanchen"},"content":"                || (other instanceof UniqueEventList // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":116,"author":{"gitId":"janjanchen"},"content":"                \u0026\u0026 internalList.equals(((UniqueEventList) other).internalList));","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":119,"author":{"gitId":"janjanchen"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":120,"author":{"gitId":"janjanchen"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-05"},{"lineNumber":121,"author":{"gitId":"janjanchen"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":123,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":124,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":125,"author":{"gitId":"janjanchen"},"content":"     * Returns true if {@code events} contains only unique events.","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"janjanchen"},"content":"    private boolean eventsAreUnique(List\u003cEvent\u003e events) {","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"janjanchen"},"content":"        for (int i \u003d 0; i \u003c events.size() - 1; i++) {","lastModifiedDate":"2021-10-05"},{"lineNumber":129,"author":{"gitId":"janjanchen"},"content":"            for (int j \u003d i + 1; j \u003c events.size(); j++) {","lastModifiedDate":"2021-10-05"},{"lineNumber":130,"author":{"gitId":"janjanchen"},"content":"                if (events.get(i).isSameEvent(events.get(j))) {","lastModifiedDate":"2021-10-05"},{"lineNumber":131,"author":{"gitId":"janjanchen"},"content":"                    return false;","lastModifiedDate":"2021-10-05"},{"lineNumber":132,"author":{"gitId":"janjanchen"},"content":"                }","lastModifiedDate":"2021-10-05"},{"lineNumber":133,"author":{"gitId":"janjanchen"},"content":"            }","lastModifiedDate":"2021-10-05"},{"lineNumber":134,"author":{"gitId":"janjanchen"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":135,"author":{"gitId":"janjanchen"},"content":"        return true;","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":137,"author":{"gitId":"janjanchen"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"janjanchen":136,"pcgiang":1}},{"path":"src/main/java/seedu/address/model/event/ZoomLink.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":" * Represents zoom link of an event.","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":" * Guarantees: immutable}","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"public class ZoomLink {","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"    // TODO: 10/6/2021 add validation","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"    public static final String VALIDATION_REGEX \u003d \".*\";","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"    public final String value;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"     * Constructs a {@code ZoomLink}.","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"     * @param link A valid zoom link.","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"    public ZoomLink(String link) {","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"        requireNonNull(link);","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"        value \u003d link;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"    // TODO: 10/6/2021 add test cases for invalid zoom link","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"pcgiang"},"content":"     * Returns true if a given string is a valid zoom link.","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"pcgiang"},"content":"    public static boolean isValidZoomLink(String test) {","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"pcgiang"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"pcgiang"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"pcgiang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"pcgiang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"pcgiang"},"content":"                || (other instanceof ZoomLink // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"pcgiang"},"content":"                \u0026\u0026 value.equals(((ZoomLink) other).value)); // state check","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"pcgiang":41}},{"path":"src/main/java/seedu/address/model/event/exceptions/DuplicateEventException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"janjanchen"},"content":"package seedu.address.model.event.exceptions;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"janjanchen"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"janjanchen"},"content":" * Signals that the operation will result in duplicate Events (Events are considered duplicates if they have the same","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"janjanchen"},"content":" * details).","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"janjanchen"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"janjanchen"},"content":"public class DuplicateEventException extends RuntimeException {","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"janjanchen"},"content":"    public DuplicateEventException() {","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"janjanchen"},"content":"        super(\"Operation would result in duplicate events\");","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"janjanchen"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"janjanchen":11}},{"path":"src/main/java/seedu/address/model/event/exceptions/EventNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"janjanchen"},"content":"package seedu.address.model.event.exceptions;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"janjanchen"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"janjanchen"},"content":" * Signals that the operation is unable to find the specified event.","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"janjanchen"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"janjanchen"},"content":"public class EventNotFoundException extends RuntimeException {","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"janjanchen"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"janjanchen":7}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"janjanchen"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"janjanchen"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"janjanchen"},"content":"        public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"janjanchen"},"content":"            return null;","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"janjanchen"},"content":"            //TODO: to return events","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"janjanchen"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"janjanchen":7,"-":102}},{"path":"src/test/java/seedu/address/model/event/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"class AddressTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new seedu.address.model.event.Address(invalidAddress));","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"    void isValidAddress() {","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"        //null address","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"        // invalid addresses","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"        assertFalse(seedu.address.model.person.Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"        assertFalse(seedu.address.model.person.Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"pcgiang"},"content":"        // valid addresses","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"pcgiang"},"content":"        assertTrue(seedu.address.model.person.Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"pcgiang"},"content":"        assertTrue(seedu.address.model.person.Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"pcgiang"},"content":"        assertTrue(seedu.address.model.person.Address.isValidAddress(\"Leng Inc; 1234 Market St; \"","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"pcgiang"},"content":"                + \"San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"pcgiang":36}},{"path":"src/test/java/seedu/address/model/event/DateAndTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"class DateAndTimeTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DateAndTime(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"pcgiang":13}},{"path":"src/test/java/seedu/address/model/event/DescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"class DescriptionTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Description(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"    public void testEquals() {","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"        Description description \u003d new Description(\"description 1\");","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"        Description sameDescription \u003d new Description(\"description 1\");","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"        Description differentDescription \u003d new Description(\"description 2\");","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"        assertEquals(description, sameDescription);","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"        assertEquals(description, description);","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"        assertNotEquals(description, differentDescription);","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"pcgiang":25}},{"path":"src/test/java/seedu/address/model/event/EndDateTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"class EndDateTimeTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"    // TODO: 10/5/2021 implement test for EndDateTime","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"    public void dummyTest() {","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"pcgiang":14}},{"path":"src/test/java/seedu/address/model/event/EventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"janjanchen"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"janjanchen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"janjanchen"},"content":"class EventTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"janjanchen"},"content":"    void getName() {","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"janjanchen"},"content":"    void getStartDateAndTime() {","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"janjanchen"},"content":"    void getEndDateAndTime() {","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"janjanchen"},"content":"    void getDescription() {","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"janjanchen"},"content":"    void getAddress() {","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"janjanchen"},"content":"    void getZoom() {","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"janjanchen"},"content":"    void getTags() {","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"janjanchen"},"content":"    void isSameEvent() {","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"janjanchen"},"content":"    void testEquals() {","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"janjanchen"},"content":"    void testHashCode() {","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"janjanchen"},"content":"    void testToString() {","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"janjanchen"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"janjanchen":50}},{"path":"src/test/java/seedu/address/model/event/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"janjanchen"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"janjanchen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"janjanchen"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"janjanchen"},"content":"    public void equals() {","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"janjanchen"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"janjanchen"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"janjanchen"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"janjanchen":18}},{"path":"src/test/java/seedu/address/model/event/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"class NameTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new seedu.address.model.person.Name(invalidName));","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"    public void isValidName() {","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"        // null name","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"        assertThrows(NullPointerException.class, () -\u003e seedu.address.model.person.Name.isValidName(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"        // invalid name","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"pcgiang"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"pcgiang"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"pcgiang"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"pcgiang"},"content":"        // valid name","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"pcgiang"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"pcgiang"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"pcgiang"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"pcgiang"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"pcgiang"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"pcgiang":40}},{"path":"src/test/java/seedu/address/model/event/StartDateTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"class StartDateTimeTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"        assertThrows(NullPointerException.class, () -\u003e new StartDateTime(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"    // TODO: 10/5/2021 implement test for StartDateTime","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"    public void dummyTest() {","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"pcgiang":19}},{"path":"src/test/java/seedu/address/model/event/UniqueEventListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"janjanchen"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"janjanchen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"janjanchen"},"content":"class UniqueEventListTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"janjanchen"},"content":"    void contains() {","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"janjanchen"},"content":"    void add() {","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"janjanchen"},"content":"    void setEvent() {","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"janjanchen"},"content":"    void remove() {","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"janjanchen"},"content":"    void setEvents() {","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"janjanchen"},"content":"    void testSetEvents() {","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"janjanchen"},"content":"    void testEquals() {","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"janjanchen"},"content":"    void testHashCode() {","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"janjanchen"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"janjanchen":38}},{"path":"src/test/java/seedu/address/model/event/ZoomLinkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"class ZoomLinkTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ZoomLink(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"    public void testEquals() {","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"        ZoomLink link \u003d new ZoomLink(\"http://zoomlink.com\");","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"        ZoomLink sameLink \u003d new ZoomLink(\"http://zoomlink.com\");","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"        ZoomLink differentLink \u003d new ZoomLink(\"http://123.com\");","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"        assertEquals(link, sameLink);","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"        assertEquals(link, link);","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"        assertNotEquals(link, differentLink);","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"pcgiang":26}}]
