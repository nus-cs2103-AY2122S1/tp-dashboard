[{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"DonnaFin.io is a desktop address book application used by financial advisors to keep track of their client information and related tasks. This is a Java program with about 10 kloc with a JavaFX GUI. The \u0027.io\u0027 in our name is a reflection of our belief that you deserve a faster workflow for input and output. If you can type fast, you can use our CLI-like commands to manage and view your notes, upcoming meetings and todo lists much faster than your typical customer relationship manager apps.","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"1. Download the latest `addressbook.jar` from [here](https://github.com/se-edu/addressbook-level3/releases).","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your AddressBook.","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   * **`list`** : Lists all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   * **`add`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * **`delete`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   * **`clear`** : Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"bharathcs"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2021-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"Adds a person to the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"bharathcs"},"content":"### **View and edit fields and notes for a person : view**","lastModifiedDate":"2021-09-25"},{"lineNumber":114,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":115,"author":{"gitId":"bharathcs"},"content":"Access client information in a \u0027client view\u0027 mode where all data on the client is presented to you. Once in the page, you can see each field in detail and edit existing information.","lastModifiedDate":"2021-09-25"},{"lineNumber":116,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":117,"author":{"gitId":"bharathcs"},"content":"Format: view INDEX","lastModifiedDate":"2021-09-25"},{"lineNumber":118,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":119,"author":{"gitId":"bharathcs"},"content":"* Edits the person at the specified INDEX. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, ...​","lastModifiedDate":"2021-09-25"},{"lineNumber":120,"author":{"gitId":"bharathcs"},"content":"* The view screen will switch to the person and open the notepad. Cursor will be in the notes entry field, allowing the user to continue typing to fill in notes.","lastModifiedDate":"2021-09-25"},{"lineNumber":121,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":122,"author":{"gitId":"bharathcs"},"content":"Examples:","lastModifiedDate":"2021-09-25"},{"lineNumber":123,"author":{"gitId":"bharathcs"},"content":"* `view 1`","lastModifiedDate":"2021-09-25"},{"lineNumber":124,"author":{"gitId":"bharathcs"},"content":"* This will open a new view mode, where the clients data is present in field-value pairs as such:","lastModifiedDate":"2021-09-25"},{"lineNumber":125,"author":{"gitId":"bharathcs"},"content":"* ![Client View Mockup](./images/ClientViewMockUp.png)","lastModifiedDate":"2021-09-25"},{"lineNumber":126,"author":{"gitId":"bharathcs"},"content":"* Fields can be selected (selection shown with white focus area), and you can cycle through fields with a up/down arrows, or tab/shift-tab or mouse clicks.","lastModifiedDate":"2021-09-25"},{"lineNumber":127,"author":{"gitId":"bharathcs"},"content":"* Hit enter to edit the field","lastModifiedDate":"2021-09-25"},{"lineNumber":128,"author":{"gitId":"bharathcs"},"content":"* Hit escape to leave the client view and return to the main view","lastModifiedDate":"2021-09-25"},{"lineNumber":129,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"AddressBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"AddressBook data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-02-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-02-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"bharathcs"},"content":"**View** | `view INDEX` \u003cbr\u003e e.g.,`view 2`","lastModifiedDate":"2021-09-25"},{"lineNumber":208,"author":{"gitId":"-"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"bharathcs":20,"-":190}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":30,"author":{"gitId":"Bluntsord"},"content":"    private UiManager uiManager;","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"Bluntsord"},"content":"    public MainWindow(Stage primaryStage, UiManager uiManager) {","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":60,"author":{"gitId":"Bluntsord"},"content":"        this.uiManager \u003d uiManager;","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"Bluntsord"},"content":"        setWindowDefaultSize(uiManager.getGuiSettings());","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"Bluntsord"},"content":"        personListPanel \u003d new PersonListPanel(uiManager.getFilteredPersonList());","lastModifiedDate":"2021-09-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"Bluntsord"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(uiManager.getAddressBookFilePath());","lastModifiedDate":"2021-09-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"Bluntsord"},"content":"        uiManager.setGuiSettings(guiSettings);","lastModifiedDate":"2021-09-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"Bluntsord"},"content":"            CommandResult commandResult \u003d uiManager.execute(commandText);","lastModifiedDate":"2021-09-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Bluntsord":8,"-":187}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"Bluntsord"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"Bluntsord"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"Bluntsord"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"Bluntsord"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"Bluntsord"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"Bluntsord"},"content":"            mainWindow \u003d new MainWindow(primaryStage, this);","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":96,"author":{"gitId":"Bluntsord"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-09-23"},{"lineNumber":97,"author":{"gitId":"Bluntsord"},"content":"        return logic.getGuiSettings();","lastModifiedDate":"2021-09-23"},{"lineNumber":98,"author":{"gitId":"Bluntsord"},"content":"    };","lastModifiedDate":"2021-09-23"},{"lineNumber":99,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":100,"author":{"gitId":"Bluntsord"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-09-23"},{"lineNumber":101,"author":{"gitId":"Bluntsord"},"content":"        return logic.getFilteredPersonList();","lastModifiedDate":"2021-09-23"},{"lineNumber":102,"author":{"gitId":"Bluntsord"},"content":"    };","lastModifiedDate":"2021-09-23"},{"lineNumber":103,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":104,"author":{"gitId":"Bluntsord"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2021-09-23"},{"lineNumber":105,"author":{"gitId":"Bluntsord"},"content":"        return logic.getAddressBookFilePath();","lastModifiedDate":"2021-09-23"},{"lineNumber":106,"author":{"gitId":"Bluntsord"},"content":"    };","lastModifiedDate":"2021-09-23"},{"lineNumber":107,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":108,"author":{"gitId":"Bluntsord"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-09-23"},{"lineNumber":109,"author":{"gitId":"Bluntsord"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2021-09-23"},{"lineNumber":110,"author":{"gitId":"Bluntsord"},"content":"    };","lastModifiedDate":"2021-09-23"},{"lineNumber":111,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":112,"author":{"gitId":"Bluntsord"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2021-09-23"},{"lineNumber":113,"author":{"gitId":"Bluntsord"},"content":"        return logic.execute(commandText);","lastModifiedDate":"2021-09-23"},{"lineNumber":114,"author":{"gitId":"Bluntsord"},"content":"    };","lastModifiedDate":"2021-09-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Bluntsord":27,"-":88}},{"path":"src/test/java/seedu/address/ui/UiManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bluntsord"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"Bluntsord"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"Bluntsord"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"Bluntsord"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"Bluntsord"},"content":"import java.util.List;","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"Bluntsord"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"Bluntsord"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"Bluntsord"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"Bluntsord"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"Bluntsord"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"Bluntsord"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"Bluntsord"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"Bluntsord"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"Bluntsord"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"Bluntsord"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"Bluntsord"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"Bluntsord"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"Bluntsord"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"Bluntsord"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"Bluntsord"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"Bluntsord"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"Bluntsord"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"Bluntsord"},"content":"import seedu.address.testutil.Assert;","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"Bluntsord"},"content":"public class UiManagerTest {","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"Bluntsord"},"content":"    @TempDir","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"Bluntsord"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"Bluntsord"},"content":"    private UiManager uiManager;","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"Bluntsord"},"content":"    private Logic logic;","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"Bluntsord"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"Bluntsord"},"content":"    @BeforeEach","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"Bluntsord"},"content":"    public void setUp() {","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"Bluntsord"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"Bluntsord"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"Bluntsord"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"Bluntsord"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"Bluntsord"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"Bluntsord"},"content":"        uiManager \u003d new UiManager(logic);","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"Bluntsord"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"Bluntsord"},"content":"    public void testGetGuiSettings() {","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"Bluntsord"},"content":"        GuiSettings logicGuiSettings \u003d logic.getGuiSettings();","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"Bluntsord"},"content":"        GuiSettings uiManagerGuiSettings \u003d uiManager.getGuiSettings();","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"Bluntsord"},"content":"        assertEquals(logicGuiSettings, uiManagerGuiSettings);","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"Bluntsord"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"Bluntsord"},"content":"    public void testGetFilteredPersonList() {","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"Bluntsord"},"content":"        ObservableList\u003cPerson\u003e logicFilteredPersonList \u003d logic.getFilteredPersonList();","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"Bluntsord"},"content":"        ObservableList\u003cPerson\u003e uiManagerFilteredPersonList \u003d uiManager.getFilteredPersonList();","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":62,"author":{"gitId":"Bluntsord"},"content":"        assertEquals(logicFilteredPersonList, uiManagerFilteredPersonList);","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"Bluntsord"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"Bluntsord"},"content":"    public void testGetAddressBookFilePath() {","lastModifiedDate":"2021-09-23"},{"lineNumber":67,"author":{"gitId":"Bluntsord"},"content":"        Path logicFilePath \u003d logic.getAddressBookFilePath();","lastModifiedDate":"2021-09-23"},{"lineNumber":68,"author":{"gitId":"Bluntsord"},"content":"        Path uiManagerFilePath \u003d uiManager.getAddressBookFilePath();","lastModifiedDate":"2021-09-23"},{"lineNumber":69,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":70,"author":{"gitId":"Bluntsord"},"content":"        assertEquals(logicFilePath, uiManagerFilePath);","lastModifiedDate":"2021-09-23"},{"lineNumber":71,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":72,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":73,"author":{"gitId":"Bluntsord"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":74,"author":{"gitId":"Bluntsord"},"content":"    public void testExecuteSuccess() throws CommandException, ParseException {","lastModifiedDate":"2021-09-23"},{"lineNumber":75,"author":{"gitId":"Bluntsord"},"content":"        String listCommand \u003d \"list\";","lastModifiedDate":"2021-09-23"},{"lineNumber":76,"author":{"gitId":"Bluntsord"},"content":"        String addCommand \u003d \"add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01\";","lastModifiedDate":"2021-09-23"},{"lineNumber":77,"author":{"gitId":"Bluntsord"},"content":"        String deleteCommand \u003d \"delete 1\";","lastModifiedDate":"2021-09-23"},{"lineNumber":78,"author":{"gitId":"Bluntsord"},"content":"        String clearCommand \u003d \"clear\";","lastModifiedDate":"2021-09-23"},{"lineNumber":79,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":80,"author":{"gitId":"Bluntsord"},"content":"        List\u003cString\u003e commandList \u003d Arrays.asList(listCommand, addCommand, deleteCommand, clearCommand);","lastModifiedDate":"2021-09-23"},{"lineNumber":81,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":82,"author":{"gitId":"Bluntsord"},"content":"        for (String command: commandList) {","lastModifiedDate":"2021-09-23"},{"lineNumber":83,"author":{"gitId":"Bluntsord"},"content":"            CommandResult logicCommandResult \u003d null;","lastModifiedDate":"2021-09-23"},{"lineNumber":84,"author":{"gitId":"Bluntsord"},"content":"            CommandResult uiManagerCommandResult \u003d null;","lastModifiedDate":"2021-09-23"},{"lineNumber":85,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":86,"author":{"gitId":"Bluntsord"},"content":"            if (command.equals(addCommand)) {","lastModifiedDate":"2021-09-23"},{"lineNumber":87,"author":{"gitId":"Bluntsord"},"content":"                // We cant add the same person twice, so we delete the person first and add","lastModifiedDate":"2021-09-23"},{"lineNumber":88,"author":{"gitId":"Bluntsord"},"content":"                // him again to see if the result is the same","lastModifiedDate":"2021-09-23"},{"lineNumber":89,"author":{"gitId":"Bluntsord"},"content":"                logicCommandResult \u003d logic.execute(command);","lastModifiedDate":"2021-09-23"},{"lineNumber":90,"author":{"gitId":"Bluntsord"},"content":"                logic.execute(clearCommand);","lastModifiedDate":"2021-09-23"},{"lineNumber":91,"author":{"gitId":"Bluntsord"},"content":"                uiManagerCommandResult \u003d uiManager.execute(command);","lastModifiedDate":"2021-09-23"},{"lineNumber":92,"author":{"gitId":"Bluntsord"},"content":"                logic.execute(clearCommand);","lastModifiedDate":"2021-09-23"},{"lineNumber":93,"author":{"gitId":"Bluntsord"},"content":"            } else if (command.equals(deleteCommand)) {","lastModifiedDate":"2021-09-23"},{"lineNumber":94,"author":{"gitId":"Bluntsord"},"content":"                // We need something to delete, so we add the same person and delete him twice","lastModifiedDate":"2021-09-23"},{"lineNumber":95,"author":{"gitId":"Bluntsord"},"content":"                // to check if the execute delete command is the same","lastModifiedDate":"2021-09-23"},{"lineNumber":96,"author":{"gitId":"Bluntsord"},"content":"                logic.execute(addCommand);","lastModifiedDate":"2021-09-23"},{"lineNumber":97,"author":{"gitId":"Bluntsord"},"content":"                logicCommandResult \u003d logic.execute(command);","lastModifiedDate":"2021-09-23"},{"lineNumber":98,"author":{"gitId":"Bluntsord"},"content":"                logic.execute(addCommand);","lastModifiedDate":"2021-09-23"},{"lineNumber":99,"author":{"gitId":"Bluntsord"},"content":"                uiManagerCommandResult \u003d uiManager.execute(command);","lastModifiedDate":"2021-09-23"},{"lineNumber":100,"author":{"gitId":"Bluntsord"},"content":"            }","lastModifiedDate":"2021-09-23"},{"lineNumber":101,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":102,"author":{"gitId":"Bluntsord"},"content":"            assertEquals(logicCommandResult, uiManagerCommandResult);","lastModifiedDate":"2021-09-23"},{"lineNumber":103,"author":{"gitId":"Bluntsord"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":104,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":105,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":106,"author":{"gitId":"Bluntsord"},"content":"    /*","lastModifiedDate":"2021-09-23"},{"lineNumber":107,"author":{"gitId":"Bluntsord"},"content":"    Unclean way of testing for parse exception","lastModifiedDate":"2021-09-23"},{"lineNumber":108,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":109,"author":{"gitId":"Bluntsord"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":110,"author":{"gitId":"Bluntsord"},"content":"    public void testExecuteFailThrowsParseException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":111,"author":{"gitId":"Bluntsord"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2021-09-23"},{"lineNumber":112,"author":{"gitId":"Bluntsord"},"content":"        Throwable logicParseException \u003d null;","lastModifiedDate":"2021-09-23"},{"lineNumber":113,"author":{"gitId":"Bluntsord"},"content":"        try {","lastModifiedDate":"2021-09-23"},{"lineNumber":114,"author":{"gitId":"Bluntsord"},"content":"            logic.execute(invalidCommand);","lastModifiedDate":"2021-09-23"},{"lineNumber":115,"author":{"gitId":"Bluntsord"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-09-23"},{"lineNumber":116,"author":{"gitId":"Bluntsord"},"content":"            logicParseException \u003d pe;","lastModifiedDate":"2021-09-23"},{"lineNumber":117,"author":{"gitId":"Bluntsord"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":118,"author":{"gitId":"Bluntsord"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-23"},{"lineNumber":119,"author":{"gitId":"Bluntsord"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":120,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":121,"author":{"gitId":"Bluntsord"},"content":"        Throwable uiManagerParseException \u003d null;","lastModifiedDate":"2021-09-23"},{"lineNumber":122,"author":{"gitId":"Bluntsord"},"content":"        try {","lastModifiedDate":"2021-09-23"},{"lineNumber":123,"author":{"gitId":"Bluntsord"},"content":"            uiManager.execute(invalidCommand);","lastModifiedDate":"2021-09-23"},{"lineNumber":124,"author":{"gitId":"Bluntsord"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-09-23"},{"lineNumber":125,"author":{"gitId":"Bluntsord"},"content":"            uiManagerParseException \u003d pe;","lastModifiedDate":"2021-09-23"},{"lineNumber":126,"author":{"gitId":"Bluntsord"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":127,"author":{"gitId":"Bluntsord"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-23"},{"lineNumber":128,"author":{"gitId":"Bluntsord"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":129,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":130,"author":{"gitId":"Bluntsord"},"content":"        // the exceptions are not equal. Do not want to override the method so","lastModifiedDate":"2021-09-23"},{"lineNumber":131,"author":{"gitId":"Bluntsord"},"content":"        // I simply check if the messages are the same","lastModifiedDate":"2021-09-23"},{"lineNumber":132,"author":{"gitId":"Bluntsord"},"content":"        assertEquals(logicParseException.getMessage(), uiManagerParseException.getMessage());","lastModifiedDate":"2021-09-23"},{"lineNumber":133,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":134,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":135,"author":{"gitId":"Bluntsord"},"content":"    @Test void testExecuteFailThrowsCommandException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":136,"author":{"gitId":"Bluntsord"},"content":"        String invalidCommand \u003d \"delete 9\";","lastModifiedDate":"2021-09-23"},{"lineNumber":137,"author":{"gitId":"Bluntsord"},"content":"        Throwable logicCommandException \u003d null;","lastModifiedDate":"2021-09-23"},{"lineNumber":138,"author":{"gitId":"Bluntsord"},"content":"        try {","lastModifiedDate":"2021-09-23"},{"lineNumber":139,"author":{"gitId":"Bluntsord"},"content":"            logic.execute(invalidCommand);","lastModifiedDate":"2021-09-23"},{"lineNumber":140,"author":{"gitId":"Bluntsord"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2021-09-23"},{"lineNumber":141,"author":{"gitId":"Bluntsord"},"content":"            logicCommandException \u003d ce;","lastModifiedDate":"2021-09-23"},{"lineNumber":142,"author":{"gitId":"Bluntsord"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":143,"author":{"gitId":"Bluntsord"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-23"},{"lineNumber":144,"author":{"gitId":"Bluntsord"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":145,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":146,"author":{"gitId":"Bluntsord"},"content":"        Throwable uiManagerCommandException \u003d null;","lastModifiedDate":"2021-09-23"},{"lineNumber":147,"author":{"gitId":"Bluntsord"},"content":"        try {","lastModifiedDate":"2021-09-23"},{"lineNumber":148,"author":{"gitId":"Bluntsord"},"content":"            uiManager.execute(invalidCommand);","lastModifiedDate":"2021-09-23"},{"lineNumber":149,"author":{"gitId":"Bluntsord"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2021-09-23"},{"lineNumber":150,"author":{"gitId":"Bluntsord"},"content":"            uiManagerCommandException \u003d ce;","lastModifiedDate":"2021-09-23"},{"lineNumber":151,"author":{"gitId":"Bluntsord"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":152,"author":{"gitId":"Bluntsord"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-23"},{"lineNumber":153,"author":{"gitId":"Bluntsord"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":154,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":155,"author":{"gitId":"Bluntsord"},"content":"        assertEquals(logicCommandException.getMessage(), uiManagerCommandException.getMessage());","lastModifiedDate":"2021-09-23"},{"lineNumber":156,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":157,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":158,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":159,"author":{"gitId":"Bluntsord"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":160,"author":{"gitId":"Bluntsord"},"content":"    public void testSetGuiSettings() {","lastModifiedDate":"2021-09-23"},{"lineNumber":161,"author":{"gitId":"Bluntsord"},"content":"        // Should be the same if i call from logic or UiManager since I tested this previously already","lastModifiedDate":"2021-09-23"},{"lineNumber":162,"author":{"gitId":"Bluntsord"},"content":"        GuiSettings currentGuiSettings \u003d logic.getGuiSettings();","lastModifiedDate":"2021-09-23"},{"lineNumber":163,"author":{"gitId":"Bluntsord"},"content":"        GuiSettings newGuiSettings \u003d new GuiSettings();","lastModifiedDate":"2021-09-23"},{"lineNumber":164,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":165,"author":{"gitId":"Bluntsord"},"content":"        GuiSettings logicGuiSettingsAfterSet;","lastModifiedDate":"2021-09-23"},{"lineNumber":166,"author":{"gitId":"Bluntsord"},"content":"        GuiSettings uiManagerGuiSettingsAfterSet;","lastModifiedDate":"2021-09-23"},{"lineNumber":167,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":168,"author":{"gitId":"Bluntsord"},"content":"        logic.setGuiSettings(newGuiSettings);","lastModifiedDate":"2021-09-23"},{"lineNumber":169,"author":{"gitId":"Bluntsord"},"content":"        logicGuiSettingsAfterSet \u003d logic.getGuiSettings();","lastModifiedDate":"2021-09-23"},{"lineNumber":170,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":171,"author":{"gitId":"Bluntsord"},"content":"        uiManager.setGuiSettings(newGuiSettings);","lastModifiedDate":"2021-09-23"},{"lineNumber":172,"author":{"gitId":"Bluntsord"},"content":"        uiManagerGuiSettingsAfterSet \u003d logic.getGuiSettings();","lastModifiedDate":"2021-09-23"},{"lineNumber":173,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":174,"author":{"gitId":"Bluntsord"},"content":"        assertEquals(logicGuiSettingsAfterSet, uiManagerGuiSettingsAfterSet);","lastModifiedDate":"2021-09-23"},{"lineNumber":175,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":176,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":177,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":178,"author":{"gitId":"Bluntsord"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2021-09-23"},{"lineNumber":179,"author":{"gitId":"Bluntsord"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2021-09-23"},{"lineNumber":180,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":181,"author":{"gitId":"Bluntsord"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2021-09-23"},{"lineNumber":182,"author":{"gitId":"Bluntsord"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2021-09-23"},{"lineNumber":183,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":184,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":185,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":186,"author":{"gitId":"Bluntsord"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2021-09-23"},{"lineNumber":187,"author":{"gitId":"Bluntsord"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2021-09-23"},{"lineNumber":188,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":189,"author":{"gitId":"Bluntsord"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2021-09-23"},{"lineNumber":190,"author":{"gitId":"Bluntsord"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2021-09-23"},{"lineNumber":191,"author":{"gitId":"Bluntsord"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-09-23"},{"lineNumber":192,"author":{"gitId":"Bluntsord"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2021-09-23"},{"lineNumber":193,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":194,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":195,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":196,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":197,"author":{"gitId":"Bluntsord"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2021-09-23"},{"lineNumber":198,"author":{"gitId":"Bluntsord"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":199,"author":{"gitId":"Bluntsord"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":200,"author":{"gitId":"Bluntsord"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":201,"author":{"gitId":"Bluntsord"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2021-09-23"},{"lineNumber":202,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":203,"author":{"gitId":"Bluntsord"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2021-09-23"},{"lineNumber":204,"author":{"gitId":"Bluntsord"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2021-09-23"},{"lineNumber":205,"author":{"gitId":"Bluntsord"},"content":"        Assert.assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2021-09-23"},{"lineNumber":206,"author":{"gitId":"Bluntsord"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2021-09-23"},{"lineNumber":207,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":208,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":209,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":210,"author":{"gitId":"Bluntsord"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":211,"author":{"gitId":"Bluntsord"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2021-09-23"},{"lineNumber":212,"author":{"gitId":"Bluntsord"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":213,"author":{"gitId":"Bluntsord"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":214,"author":{"gitId":"Bluntsord"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":215,"author":{"gitId":"Bluntsord"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2021-09-23"},{"lineNumber":216,"author":{"gitId":"Bluntsord"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":217,"author":{"gitId":"Bluntsord"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2021-09-23"},{"lineNumber":218,"author":{"gitId":"Bluntsord"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2021-09-23"},{"lineNumber":219,"author":{"gitId":"Bluntsord"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2021-09-23"},{"lineNumber":220,"author":{"gitId":"Bluntsord"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2021-09-23"},{"lineNumber":221,"author":{"gitId":"Bluntsord"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2021-09-23"},{"lineNumber":222,"author":{"gitId":"Bluntsord"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":223,"author":{"gitId":"Bluntsord"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":224,"author":{"gitId":"Bluntsord"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"Bluntsord":224}}]
